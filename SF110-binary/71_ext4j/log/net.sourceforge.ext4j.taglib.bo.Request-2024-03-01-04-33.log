* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: net.sourceforge.ext4j.taglib.bo.Request
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/71_ext4j/evosuite-files/evosuite.properties
* Connecting to master process on port 15956
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class net.sourceforge.ext4j.taglib.bo.Request
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 527
* Using seed 1709267599848
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 170 / 527
[Progress:>                             1%] [Cov:=============================>     83%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    87%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:===============================>   89%][Progress:=>                            6%] [Cov:===============================>   89%][Progress:=>                            6%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   90%][Progress:==>                           8%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:===>                          13%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         16%] [Cov:===============================>   90%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       21%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       22%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:======>                       23%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      24%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      25%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:=======>                      26%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     27%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     28%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:========>                     29%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    30%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    31%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    32%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:=========>                    33%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   34%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   35%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:==========>                   36%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  37%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:===========>                  39%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 40%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 41%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:============>                 43%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                44%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][MASTER] 04:34:10.309 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class javax.servlet.http.HttpServletRequestWrapper canUseFunctionalMocks=false, canBeMocked: true
[Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%]
* Search finished after 102s and 1188 generations, 364797 statements, best individual has fitness: 39.0
* Generated before the refinement 62 tests with total length 176
statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: toBaseURL()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request baseURL = (Request)request.toBaseURL()
test data is: Request request = new Request();
request.toBaseURL();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setUrl("https://www.example.com");
        request.setMethod(GET);
        request.setHeaders(new HashMap<String, String>() {
            {
                put("Content-Type", "application/json");
            }
        });
        request.setBody(new byte[]{ 1, 2, 3 });
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setUrl("https://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setUrl("https://www.example.com") target is: request method is: setUrl(java.lang.String)
statement is: request.setMethod(GET), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setMethod(GET) target is: request method is: setMethod()
statement is: request.setHeaders(new HashMap<String, String>() {
    {
        put("Content-Type", "application/json");
    }
}), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setHeaders(new HashMap<String, String>() {
    {
        put("Content-Type", "application/json");
    }
}) target is: request method is: setHeaders(DummyClass$1)
statement is: request.setBody(new byte[]{ 1, 2, 3 }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setBody(new byte[]{ 1, 2, 3 }) target is: request method is: setBody(byte[])
TestCase is: Request request = new Request();

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setBaseURL = (Request)request.setBaseURL("")
statement is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request clone = (Request)request.clone()
statement is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setHashValue = request.setHashValue("v2#&R[")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = request.equals(arg0)
test data is: Request request = new Request();
request.setBaseURL("");
Request clone = (Request)request.clone();
Request setHashValue = request.setHashValue("v2#&R[");
setHashValue.equals(clone);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setBaseURL("https://www.example.com/api");
        Request clone = ((Request) (request.clone()));
        Request setHashValue = request.setHashValue("v2#&R[");
        String hashValue = "v2#&R[";
        assertEquals(hashValue, setHashValue.getHashValue());
        assertTrue(setHashValue.equals(clone));
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setBaseURL("https://www.example.com/api"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setBaseURL("https://www.example.com/api") target is: request method is: setBaseURL(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: Request clone = ((Request) (request.clone())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Request) (request.clone())) target is: request method is: clone()
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: Request setHashValue = request.setHashValue("v2#&R["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setHashValue("v2#&R[") target is: request method is: setHashValue(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request;
statement is: String hashValue = "v2#&R[", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(hashValue, setHashValue.getHashValue()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(hashValue, setHashValue.getHashValue()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertTrue(setHashValue.equals(clone)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(setHashValue.equals(clone)) target is:  method is: assertTrue(<unknown>)
* this is vulnerable: String string = "v2#&R["
TestCase is: Request request = new Request();
String string = "https://www.example.com/api";
request.setBaseURL(string);
request.clone();
String string = "v2#&R[";
request.setHashValue(string);
String string = "v2#&R[";

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: isWebRequest()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean webRequest = request.isWebRequest()
test data is: Request request = new Request();
request.isWebRequest();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setMethod(GET);
        request.setUrl("https://www.example.com");
        request.setHeaders(Collections.singletonMap("Authorization", "Bearer my_token"));
        request.setBody("{\"name\":\"John Doe\", \"age\":30}");
        request.setContentType("application/json");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setMethod(GET), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setMethod(GET) target is: request method is: setMethod()
statement is: request.setUrl("https://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setUrl("https://www.example.com") target is: request method is: setUrl(java.lang.String)
statement is: request.setHeaders(Collections.singletonMap("Authorization", "Bearer my_token")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setHeaders(Collections.singletonMap("Authorization", "Bearer my_token")) target is: request method is: setHeaders()
statement is: request.setBody("{\"name\":\"John Doe\", \"age\":30}"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setBody("{\"name\":\"John Doe\", \"age\":30}") target is: request method is: setBody(java.lang.String)
statement is: request.setContentType("application/json"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setContentType("application/json") target is: request method is: setContentType(java.lang.String)
TestCase is: Request request = new Request();

statement is: mock(interface javax.servlet.http.HttpServletRequest) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface javax.servlet.http.HttpServletRequest
statement code is: HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((StringBuffer) null).when(httpServletRequest).getRequestURL()
statement is: javax.servlet.http.HttpServletRequestWrapper(Ljavax/servlet/http/HttpServletRequest;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.servlet.http.HttpServletRequestWrapper
statement code is: HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(arg0)
statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(arg0)
test data is: HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((StringBuffer) null).when(httpServletRequest).getRequestURL();
HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest);
Request request = new Request(httpServletRequestWrapper);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Given
        HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
        doReturn("https://www.example.com").when(httpServletRequest).getScheme();
        doReturn("www.example.com").when(httpServletRequest).getServerName();
        doReturn(443).when(httpServletRequest).getServerPort();
        doReturn("/path/to/resource").when(httpServletRequest).getRequestURI();
        doReturn("?param=value").when(httpServletRequest).getQueryString();
        HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest);
        Request request = new Request(httpServletRequestWrapper);
        // When
        String requestUrl = request.getRequestUrl();
        // Then
        assertEquals("https://www.example.com/path/to/resource?param=value", requestUrl);
    }
}
statement is: // Given
HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(HttpServletRequest.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: HttpServletRequest argument is: HttpServletRequest.class
Matched Method is: mock(interface javax.servlet.http.HttpServletRequest)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn("https://www.example.com").when(httpServletRequest).getScheme(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn("https://www.example.com").when(httpServletRequest).getScheme() target is: doReturn("https://www.example.com").when(httpServletRequest) method is: getScheme()
statement is: doReturn("www.example.com").when(httpServletRequest).getServerName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn("www.example.com").when(httpServletRequest).getServerName() target is: doReturn("www.example.com").when(httpServletRequest) method is: getServerName()
statement is: doReturn(443).when(httpServletRequest).getServerPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(443).when(httpServletRequest).getServerPort() target is: doReturn(443).when(httpServletRequest) method is: getServerPort()
statement is: doReturn("/path/to/resource").when(httpServletRequest).getRequestURI(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn("/path/to/resource").when(httpServletRequest).getRequestURI() target is: doReturn("/path/to/resource").when(httpServletRequest) method is: getRequestURI()
statement is: doReturn("?param=value").when(httpServletRequest).getQueryString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn("?param=value").when(httpServletRequest).getQueryString() target is: doReturn("?param=value").when(httpServletRequest) method is: getQueryString()
statement is: HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Request request = new Request(httpServletRequestWrapper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // When
String requestUrl = request.getRequestUrl(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getRequestUrl() target is: request method is: getRequestUrl()
statement is: // Then
assertEquals("https://www.example.com/path/to/resource?param=value", requestUrl), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Then
assertEquals("https://www.example.com/path/to/resource?param=value", requestUrl) target is:  method is: assertEquals(java.lang.String,java.lang.String)
TestCase is: StringBuffer stringBuffer = null;
HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
doReturn(stringBuffer).when(httpServletRequest).getRequestURL();
HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest);
Request request = new Request(httpServletRequestWrapper);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(false)
statement is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam("file:/U(pH_swT", "%3F")
statement is: cleanEmptyParams()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request cleanEmptyParams = (Request)request.cleanEmptyParams()
test data is: Request request = new Request(false);
request.setParam("file:/U(pH_swT", "%3F");
request.cleanEmptyParams();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request(true);
        request.setParam("file:/U(pH_swT", "?");
        request.cleanEmptyParams();
    }
}
statement is: Request request = new Request(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setParam("file:/U(pH_swT", "?"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setParam("file:/U(pH_swT", "?") target is: request method is: setParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.cleanEmptyParams(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.cleanEmptyParams() target is: request method is: cleanEmptyParams()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: cleanEmptyParams()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: boolean _boolean = true;
Request request = new Request(_boolean);
String string = "file:/U(pH_swT";
String string = "?";
((Request) _boolean).setParam(string, string);
((Request) _boolean).cleanEmptyParams();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("f\"e:tHur\"itg\b!@#")
statement is: net.sourceforge.ext4j.taglib.bo.RequestParam(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam requestParam = new RequestParam("f\"e:tHur\"itg\b!@#")
statement is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam(arg0)
statement is: cleanEmptyParams()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request cleanEmptyParams = (Request)request.cleanEmptyParams()
test data is: Request request = new Request("f\"e:tHur\"itg\b!@#");
RequestParam requestParam = new RequestParam("f\"e:tHur\"itg\b!@#");
request.setParam(requestParam);
request.cleanEmptyParams();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("first_name=Jane&last_name=Doe&age=30");
        RequestParam requestParam = new RequestParam("first_name=Jane&last_name=Doe&age=30");
        request.setParam(requestParam);
        request.cleanEmptyParams();
    }
}
statement is: Request request = new Request("first_name=Jane&last_name=Doe&age=30"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RequestParam requestParam = new RequestParam("first_name=Jane&last_name=Doe&age=30"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setParam(requestParam), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setParam(requestParam) target is: request method is: setParam(RequestParam)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.cleanEmptyParams(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.cleanEmptyParams() target is: request method is: cleanEmptyParams()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: cleanEmptyParams()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: String string = "first_name=Jane&last_name=Doe&age=30";
Request request = new Request(string);
String string = "first_name=Jane&last_name=Doe&age=30";
RequestParam requestParam = new RequestParam(string);
((Request) string).setParam(requestParam);
((Request) string).cleanEmptyParams();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("xdienJkrL??")
statement is: parse(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: request.parse("xdienJkrL??")
statement is: cleanEmptyParams()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request cleanEmptyParams = (Request)request.cleanEmptyParams()
test data is: Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
request.cleanEmptyParams();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("xdienJkrL??");
        request.parse("{ \"param1\": \"value1\", \"param2\": \"value2\" }");
        request.cleanEmptyParams();
    }
}
statement is: Request request = new Request("xdienJkrL??"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.parse("{ \"param1\": \"value1\", \"param2\": \"value2\" }"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.parse("{ \"param1\": \"value1\", \"param2\": \"value2\" }") target is: request method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: parse(Ljava/lang/String;)V
statement is: request.cleanEmptyParams(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.cleanEmptyParams() target is: request method is: cleanEmptyParams()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: cleanEmptyParams()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: String string = "xdienJkrL??";
Request request = new Request(string);
String string = "{ \"param1\": \"value1\", \"param2\": \"value2\" }";
((Request) string).parse(string);
((Request) string).cleanEmptyParams();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("uBx<>!VW#")
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("uBx<>!VW#", (String) null)
statement is: cleanEmptyParams()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request cleanEmptyParams = (Request)request.cleanEmptyParams()
test data is: Request request = new Request("uBx<>!VW#");
request.addParam("uBx<>!VW#", (String) null);
request.cleanEmptyParams();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("uBx<>!VW#");
        request.addParam("uBx<>!VW#", "hello world");
        request.cleanEmptyParams();
    }
}
statement is: Request request = new Request("uBx<>!VW#"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("uBx<>!VW#", "hello world"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("uBx<>!VW#", "hello world") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.cleanEmptyParams(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.cleanEmptyParams() target is: request method is: cleanEmptyParams()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: cleanEmptyParams()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: String string = "uBx<>!VW#";
Request request = new Request(string);
String string = "uBx<>!VW#";
String string = "hello world";
((Request) string).addParam(string, string);
((Request) string).cleanEmptyParams();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(false)
statement is: getParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/RequestParam; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam param = request.getParam((String) null)
test data is: Request request = new Request(false);
request.getParam((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("GET");
        request.getParam("name");
    }
}
statement is: Request request = new Request("GET"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.getParam("name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getParam("name") target is: request method is: getParam(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: getParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/RequestParam;
TestCase is: String string = "GET";
Request request = new Request((boolean) string);
String string = "name";
((Request) string).getParam(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request")
statement is: getValue(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int value = request.getValue("3k^rs}os^", (-2781))
test data is: Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("3k^rs}os^", (-2781));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: Request request = new Request();
String string = "";
String string = "net.sourceforge.ext4j.taglib.bo.Request";
request.addParam(string, string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request")
statement is: getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String value = request.getValue("", "")
test data is: Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.addParam("username", "johndoe");
        request.addParam("password", "secret");
        request.getValue("status", "200");
        request.send();
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("username", "johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("username", "johndoe") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.addParam("password", "secret"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("password", "secret") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getValue("status", "200"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getValue("status", "200") target is: request method is: getValue(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: request.send(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.send() target is: request method is: send()
TestCase is: Request request = new Request();
String string = "username";
String string = "johndoe";
request.addParam(string, string);
String string = "password";
String string = "secret";
request.addParam(string, string);
String string = "status";
String string = "200";
request.getValue(string, string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("4bk)r(")
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("file:/H`kSvyD5:j>|", "?")
statement is: net.sourceforge.ext4j.taglib.bo.CurrentURLBO$RootRequest(Lnet/sourceforge/ext4j/taglib/bo/IRequest;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.CurrentURLBO$RootRequest
statement code is: CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(arg0)
statement is: getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String value = currentURLBO_RootRequest.getValue("d4q", "?")
test data is: Request request = new Request("4bk)r(");
request.addParam("file:/H`kSvyD5:j>|", "?");
CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
currentURLBO_RootRequest.getValue("d4q", "?");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("4bk)r(");
        request.addParam("file:/H`kSvyD5:j>|", "http://www.example.com");
        CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
        currentURLBO_RootRequest.getValue("d4q", "https://www.example.com/index.html");
    }
}
statement is: Request request = new Request("4bk)r("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("file:/H`kSvyD5:j>|", "http://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("file:/H`kSvyD5:j>|", "http://www.example.com") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: currentURLBO_RootRequest.getValue("d4q", "https://www.example.com/index.html"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: currentURLBO_RootRequest.getValue("d4q", "https://www.example.com/index.html") target is: currentURLBO_RootRequest method is: getValue(java.lang.String,java.lang.String)
TestCase is: String string = "4bk)r(";
Request request = new Request(string);
String string = "file:/H`kSvyD5:j>|";
String string = "http://www.example.com";
((Request) string).addParam(string, string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: net.sourceforge.ext4j.taglib.bo.RequestParam(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam requestParam = new RequestParam("U(pH_s")
statement is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam(arg0)
statement is: getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String value = request.getValue("U(pH_s", "U(pH_s")
test data is: Request request = new Request();
RequestParam requestParam = new RequestParam("U(pH_s");
request.setParam(requestParam);
request.getValue("U(pH_s", "U(pH_s");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        RequestParam requestParam = new RequestParam("U(pH_s");
        request.setParam(requestParam);
        request.getValue("U(pH_s", "U(pH_s");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RequestParam requestParam = new RequestParam("U(pH_s"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setParam(requestParam), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setParam(requestParam) target is: request method is: setParam(RequestParam)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getValue("U(pH_s", "U(pH_s"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getValue("U(pH_s", "U(pH_s") target is: request method is: getValue(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
TestCase is: Request request = new Request();
String string = "U(pH_s";
RequestParam requestParam = new RequestParam(string);
request.setParam(requestParam);
String string = "U(pH_s";
String string = "U(pH_s";
request.getValue(string, string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request")
statement is: getValue(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int value = request.getValue("", 1307)
test data is: Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("", 1307);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.addParam("user_id", 1234);
        request.addParam("username", "Jane Smith");
        request.addParam("age", 25);
        request.getValue("address", "987 Elm St, Anytown USA 12345");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("user_id", 1234), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("user_id", 1234) target is: request method is: addParam(java.lang.String,int)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.addParam("username", "Jane Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("username", "Jane Smith") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.addParam("age", 25), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("age", 25) target is: request method is: addParam(java.lang.String,int)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getValue("address", "987 Elm St, Anytown USA 12345"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getValue("address", "987 Elm St, Anytown USA 12345") target is: request method is: getValue(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getValue(Ljava/lang/String;I)I
TestCase is: Request request = new Request();
String string = "user_id";
int _int = 1234;
request.addParam(string, (String) _int);
String string = "username";
String string = "Jane Smith";
request.addParam(string, string);
String string = "age";
int _int = 25;
request.addParam(string, (String) _int);
String string = "address";
String string = "987 Elm St, Anytown USA 12345";
request.getValue(string, (int) string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("mTQYU`b_")
statement is: net.sourceforge.ext4j.taglib.bo.RequestParam(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam requestParam = new RequestParam("mTQYU`b_")
statement is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam(arg0)
statement is: getValue(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int value = request.getValue("mTQYU`b_", (-890))
test data is: Request request = new Request("mTQYU`b_");
RequestParam requestParam = new RequestParam("mTQYU`b_");
request.setParam(requestParam);
request.getValue("mTQYU`b_", (-890));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("request_id");
        RequestParam requestParam = new RequestParam("param_name");
        request.setParam(requestParam);
        request.getValue("param_name", 123456789);
    }
}
statement is: Request request = new Request("request_id"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RequestParam requestParam = new RequestParam("param_name"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setParam(requestParam), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setParam(requestParam) target is: request method is: setParam(RequestParam)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getValue("param_name", 123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getValue("param_name", 123456789) target is: request method is: getValue(java.lang.String,int)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: getValue(Ljava/lang/String;I)I
TestCase is: String string = "request_id";
Request request = new Request(string);
String string = "param_name";
RequestParam requestParam = new RequestParam(string);
((Request) string).setParam(requestParam);
String string = "param_name";
int _int = 123456789;
((Request) string).getValue(string, _int);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: removeParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request removeParam = (Request)request.removeParam("Uw5fU)b%4T'AjVb+#")
test data is: Request request = new Request();
request.removeParam("Uw5fU)b%4T'AjVb+#");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.removeParam("username");
        // This test case assumes that the "password" parameter is required, but it is not present in the request parameters.
        request.removeParam("password");
        // This test case assumes that the "firstName" parameter is optional, but it is present in the request parameters with an empty value.
        request.addParam("firstName", "");
        // This test case assumes that the "lastName" parameter is optional, but it is present in the request parameters with a non-empty value.
        request.addParam("lastName", "Smith");
        // This test case assumes that the "age" parameter is required, but it is not present in the request parameters.
        request.removeParam("age");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.removeParam("username"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.removeParam("username") target is: request method is: removeParam(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: removeParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: // This test case assumes that the "password" parameter is required, but it is not present in the request parameters.
request.removeParam("password"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // This test case assumes that the "password" parameter is required, but it is not present in the request parameters.
request.removeParam("password") target is: request method is: removeParam(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: removeParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: // This test case assumes that the "firstName" parameter is optional, but it is present in the request parameters with an empty value.
request.addParam("firstName", ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // This test case assumes that the "firstName" parameter is optional, but it is present in the request parameters with an empty value.
request.addParam("firstName", "") target is: request method is: addParam(java.lang.String,java.lang.String)
statement is: // This test case assumes that the "lastName" parameter is optional, but it is present in the request parameters with a non-empty value.
request.addParam("lastName", "Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // This test case assumes that the "lastName" parameter is optional, but it is present in the request parameters with a non-empty value.
request.addParam("lastName", "Smith") target is: request method is: addParam(java.lang.String,java.lang.String)
statement is: // This test case assumes that the "age" parameter is required, but it is not present in the request parameters.
request.removeParam("age"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // This test case assumes that the "age" parameter is required, but it is not present in the request parameters.
request.removeParam("age") target is: request method is: removeParam(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: removeParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: Request request = new Request();
String string = "username";
request.removeParam(string);
String string = "password";
request.removeParam(string);
String string = "age";
request.removeParam(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("4bk)r(")
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("file:/H`kSvyD5:j>|", "?")
statement is: removeParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request removeParam = (Request)request.removeParam("+Mt=g^W Kb'f=0UN\"")
test data is: Request request = new Request("4bk)r(");
request.addParam("file:/H`kSvyD5:j>|", "?");
request.removeParam("+Mt=g^W Kb'f=0UN\"");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("/api/documents/123456789");
        request.addParam("name", "John Doe");
        request.removeParam("age");
    }
}
statement is: Request request = new Request("/api/documents/123456789"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("name", "John Doe") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.removeParam("age"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.removeParam("age") target is: request method is: removeParam(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: removeParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: String string = "/api/documents/123456789";
Request request = new Request(string);
String string = "name";
String string = "John Doe";
((Request) string).addParam(string, string);
String string = "age";
((Request) string).removeParam(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("_<sy}m", "_<sy}m")
statement is: removeParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request removeParam = (Request)request.removeParam("_<sy}m")
test data is: Request request = new Request();
request.addParam("_<sy}m", "_<sy}m");
request.removeParam("_<sy}m");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.addParam("name", "John Doe");
        request.removeParam("name");
        assertEquals(0, request.getParams().size());
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("name", "John Doe") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.removeParam("name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.removeParam("name") target is: request method is: removeParam(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: removeParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: assertEquals(0, request.getParams().size()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(0, request.getParams().size()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: Request request = new Request();
String string = "name";
String string = "John Doe";
request.addParam(string, string);
String string = "name";
request.removeParam(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("")
statement is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam((RequestParam) null)
test data is: Request request = new Request("");
request.setParam((RequestParam) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("GET /users?page=1&size=20 HTTP/1.1");
        request.setParam(new RequestParam("username", "johndoe"));
        request.setParam(new RequestParam("role", "admin"));
    }
}
statement is: Request request = new Request("GET /users?page=1&size=20 HTTP/1.1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setParam(new RequestParam("username", "johndoe")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setParam(new RequestParam("username", "johndoe")) target is: request method is: setParam(RequestParam)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: request.setParam(new RequestParam("role", "admin")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setParam(new RequestParam("role", "admin")) target is: request method is: setParam(RequestParam)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "GET /users?page=1&size=20 HTTP/1.1";
Request request = new Request(string);
RequestParam requestParam = null;
((Request) string).setParam(requestParam);
RequestParam requestParam = null;
((Request) string).setParam(requestParam);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setHashValue = request.setHashValue("3k^rs}os^")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = request.hashCode()
test data is: Request request = new Request();
request.setHashValue("3k^rs}os^");
request.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setHashValue("d09207b290d5ca61308a49eae7a7fe0d");
        request.hashCode();
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setHashValue("d09207b290d5ca61308a49eae7a7fe0d"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setHashValue("d09207b290d5ca61308a49eae7a7fe0d") target is: request method is: setHashValue(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request;
statement is: request.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.hashCode() target is: request method is: hashCode()
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: hashCode()I
TestCase is: Request request = new Request();
String string = "d09207b290d5ca61308a49eae7a7fe0d";
request.setHashValue(string);
request.hashCode();

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = request.equals((Object) null)
test data is: Request request = new Request();
request.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setId(123456789);
        request.setName("John Doe");
        request.setEmail("john.doe@example.com");
        request.setPhoneNumber("+1234567890");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setId(123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setId(123456789) target is: request method is: setId(int)
statement is: request.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setName("John Doe") target is: request method is: setName(java.lang.String)
statement is: request.setEmail("john.doe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setEmail("john.doe@example.com") target is: request method is: setEmail(java.lang.String)
statement is: request.setPhoneNumber("+1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setPhoneNumber("+1234567890") target is: request method is: setPhoneNumber(java.lang.String)
TestCase is: Request request = new Request();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(false)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: Request request = new Request(false);
request.equals(request);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request1 = new Request(false);
        request1.setId("ABC123");
        request1.setName("John Doe");
        request1.setEmail("johndoe@email.com");
        request1.setAge(25);
        request1.setAddress("123 Main St.");
        request1.setPhoneNumber("555-1234");
        Request request2 = new Request(true);
        request2.setId("XYZ789");
        request2.setName("Jane Smith");
        request2.setEmail("janesmith@email.com");
        request2.setAge(30);
        request2.setAddress("456 Elm St.");
        request2.setPhoneNumber("555-9876");
    }
}
statement is: Request request1 = new Request(false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request1.setId("ABC123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.setId("ABC123") target is: request1 method is: setId(java.lang.String)
statement is: request1.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.setName("John Doe") target is: request1 method is: setName(java.lang.String)
statement is: request1.setEmail("johndoe@email.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.setEmail("johndoe@email.com") target is: request1 method is: setEmail(java.lang.String)
statement is: request1.setAge(25), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.setAge(25) target is: request1 method is: setAge(int)
statement is: request1.setAddress("123 Main St."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.setAddress("123 Main St.") target is: request1 method is: setAddress(java.lang.String)
statement is: request1.setPhoneNumber("555-1234"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.setPhoneNumber("555-1234") target is: request1 method is: setPhoneNumber(java.lang.String)
statement is: Request request2 = new Request(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request2.setId("XYZ789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.setId("XYZ789") target is: request2 method is: setId(java.lang.String)
statement is: request2.setName("Jane Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.setName("Jane Smith") target is: request2 method is: setName(java.lang.String)
statement is: request2.setEmail("janesmith@email.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.setEmail("janesmith@email.com") target is: request2 method is: setEmail(java.lang.String)
statement is: request2.setAge(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.setAge(30) target is: request2 method is: setAge(int)
statement is: request2.setAddress("456 Elm St."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.setAddress("456 Elm St.") target is: request2 method is: setAddress(java.lang.String)
statement is: request2.setPhoneNumber("555-9876"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.setPhoneNumber("555-9876") target is: request2 method is: setPhoneNumber(java.lang.String)
TestCase is: boolean _boolean = false;
Request request = new Request(_boolean);
boolean _boolean = true;
Request request = new Request(_boolean);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("??L( 9}||(7", true)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = request.equals(arg0)
test data is: Request request = new Request();
Request request = new Request("??L( 9}||(7", true);
request.equals(request);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Request request1 = new Request("John Doe", false);
        Request request2 = new Request("Jane Doe", true);
        request1.equals(request2);
    }
}
statement is: // Improved test data
Request request1 = new Request("John Doe", false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Request request2 = new Request("Jane Doe", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request1.equals(request2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.equals(request2) target is: request1 method is: equals(Request)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;Z)V callee: VariableReference: Statement 1, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 5
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "John Doe";
boolean _boolean = false;
Request request = new Request(string, _boolean);
String string = "Jane Doe";
boolean _boolean = true;
Request request = new Request(string, _boolean);
((Request) _boolean).equals(request);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(false)
statement is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request clone = (Request)request.clone()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = request.equals(arg0)
test data is: Request request = new Request(false);
Request clone = (Request)request.clone();
request.equals(clone);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request(false, 1234567890, "John Doe", 'M', 18.5);
        Request clone = ((Request) (request.clone()));
        request.equals(clone);
    }
}
statement is: Request request = new Request(false, 1234567890, "John Doe", 'M', 18.5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Request clone = ((Request) (request.clone())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Request) (request.clone())) target is: request method is: clone()
statement is: request.equals(clone), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.equals(clone) target is: request method is: equals(Request)
statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(":f]h!EObjC")
statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("Q;CMYSjf_1LJWuk`D3y")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = request.equals(arg0)
test data is: Request request = new Request(":f]h!EObjC");
Request request = new Request("Q;CMYSjf_1LJWuk`D3y");
request.equals(request);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("https://www.example.com/products/12345");
        Request request = new Request("https://www.example.com/products/67890");
        request.equals(request);
    }
}
statement is: Request request = new Request("https://www.example.com/products/12345"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Request request = new Request("https://www.example.com/products/67890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.equals(request), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.equals(request) target is: request method is: equals(Request)
TestCase is: String string = "https://www.example.com/products/12345";
Request request = new Request(string);
String string = "https://www.example.com/products/67890";
Request request = new Request(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("]U dos not exist.")
statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("]U dos not exist.")
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("]U dos not exist.", "]U dos not exist.")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = request.equals(arg0)
test data is: Request request = new Request("]U dos not exist.");
Request request = new Request("]U dos not exist.");
request.addParam("]U dos not exist.", "]U dos not exist.");
request.equals(request);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("This is a test request with a more descriptive string value");
        Request request = new Request("This is another test request with a different, but still meaningful string value");
        request.addParam("param1", "value1");
        request.addParam("param2", "value2");
        request.equals(request);
    }
}
statement is: Request request = new Request("This is a test request with a more descriptive string value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Request request = new Request("This is another test request with a different, but still meaningful string value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("param1", "value1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("param1", "value1") target is: request method is: addParam(java.lang.String,java.lang.String)
statement is: request.addParam("param2", "value2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("param2", "value2") target is: request method is: addParam(java.lang.String,java.lang.String)
statement is: request.equals(request), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.equals(request) target is: request method is: equals(Request)
TestCase is: String string = "This is a test request with a more descriptive string value";
Request request = new Request(string);
String string = "This is another test request with a different, but still meaningful string value";
Request request = new Request(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("")
statement is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam("", "S?2xu`.hO!X~C64fE=t")
statement is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request clone = (Request)request.clone()
statement is: toBaseURL()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request baseURL = (Request)request.toBaseURL()
statement is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = request.equals(arg0)
test data is: Request request = new Request("");
request.setParam("", "S?2xu`.hO!X~C64fE=t");
Request clone = (Request)request.clone();
Request baseURL = (Request)request.toBaseURL();
baseURL.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt");
request.equals(clone);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("https://www.example.com/path?query=value");
        request.setParam("id", "abcdefghijklmnopqrstuvwxyz");
        Request clone = ((Request) (request.clone()));
        Request baseURL = ((Request) (request.toBaseURL()));
        baseURL.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt");
        request.equals(clone);
    }
}
statement is: Request request = new Request("https://www.example.com/path?query=value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setParam("id", "abcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setParam("id", "abcdefghijklmnopqrstuvwxyz") target is: request method is: setParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: Request clone = ((Request) (request.clone())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Request) (request.clone())) target is: request method is: clone()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: Request baseURL = ((Request) (request.toBaseURL())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Request) (request.toBaseURL())) target is: request method is: toBaseURL()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: toBaseURL()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: baseURL.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: baseURL.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt") target is: baseURL method is: setParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
source statement: toBaseURL()Lnet/sourceforge/ext4j/taglib/bo/IRequest; callee: VariableReference: Statement 3, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 6
Matched Method is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.equals(clone), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.equals(clone) target is: request method is: equals(Request)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "https://www.example.com/path?query=value";
Request request = new Request(string);
String string = "id";
String string = "abcdefghijklmnopqrstuvwxyz";
((Request) string).setParam(string, string);
Request clone = (Request)((Request) string).clone();
((Request) string).toBaseURL();
String string = "%1D3F";
String string = "?=S%3F2xu`.hO!X~C64fE%3Dt";
((Request) string).setParam(string, string);
string.equals(clone);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: parse(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: request.parse("net.sourceforge.ext4j.taglib.bo.Request")
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request")
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("", "ob;-.")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "ob;-.");
request.equals(request);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.parse("net.sourceforge.ext4j.taglib.bo.Request");
        request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
        request.addParam("", "ob;-.");
        request.equals(request);
        // Improved test data:
        Request request = new Request();
        request.parse("net.sourceforge.ext4j.taglib.bo.Request");
        request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
        request.addParam("", "ob;-.");
        request.equals(request);
        // This test data is more descriptive and representative of the situation being tested. The primitive values are changed to more illustrative examples, such as using the integers 1 and 2 instead of 0 and 1, and using the strings "hello" and "world" instead of "net.sourceforge.ext4j.taglib.bo.Request". }}
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.parse("net.sourceforge.ext4j.taglib.bo.Request"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.parse("net.sourceforge.ext4j.taglib.bo.Request") target is: request method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: parse(Ljava/lang/String;)V
statement is: request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.addParam("", "ob;-."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("", "ob;-.") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.equals(request), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.equals(request) target is: request method is: equals(Request)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: // Improved test data:
Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.parse("net.sourceforge.ext4j.taglib.bo.Request"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.parse("net.sourceforge.ext4j.taglib.bo.Request") target is: request method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 10
Matched Method is: parse(Ljava/lang/String;)V
statement is: request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 10
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 10
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.addParam("", "ob;-."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("", "ob;-.") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 10
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 10
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.equals(request), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.equals(request) target is: request method is: equals(Request)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 10
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: // This test data is more descriptive and representative of the situation being tested. The primitive values are changed to more illustrative examples, such as using the integers 1 and 2 instead of 0 and 1, and using the strings "hello" and "world" instead of "net.sourceforge.ext4j.taglib.bo.Request". }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: Request request = new Request();
String string = "net.sourceforge.ext4j.taglib.bo.Request";
request.parse(string);
String string = "";
String string = "net.sourceforge.ext4j.taglib.bo.Request";
request.addParam(string, string);
String string = "";
String string = "ob;-.";
request.addParam(string, string);
request.equals(request);
Request request = new Request();
String string = "net.sourceforge.ext4j.taglib.bo.Request";
request.parse(string);
String string = "";
String string = "net.sourceforge.ext4j.taglib.bo.Request";
request.addParam(string, string);
String string = "";
String string = "ob;-.";
request.addParam(string, string);
request.equals(request);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: parse(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: request.parse("net.sourceforge.ext4j.taglib.bo.Request")
statement is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setHashValue = request.setHashValue("3k^rs}os^")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.setHashValue("3k^rs}os^");
request.equals(request);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request1 = new Request();
        request1.parse("net.sourceforge.ext4j.taglib.bo.Request");
        request1.setHashValue("3k^rs}os^");
        Request request2 = new Request();
        request2.parse("net.sourceforge.ext4j.taglib.bo.Request");
        request2.setHashValue("3k^rs}os^");
        assertTrue(request1.equals(request2));
    }
}
statement is: Request request1 = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request1.parse("net.sourceforge.ext4j.taglib.bo.Request"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.parse("net.sourceforge.ext4j.taglib.bo.Request") target is: request1 method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: parse(Ljava/lang/String;)V
statement is: request1.setHashValue("3k^rs}os^"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.setHashValue("3k^rs}os^") target is: request1 method is: setHashValue(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request;
statement is: Request request2 = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request2.parse("net.sourceforge.ext4j.taglib.bo.Request"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.parse("net.sourceforge.ext4j.taglib.bo.Request") target is: request2 method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 5
Matched Method is: parse(Ljava/lang/String;)V
statement is: request2.setHashValue("3k^rs}os^"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.setHashValue("3k^rs}os^") target is: request2 method is: setHashValue(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 5
Matched Method is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request;
statement is: assertTrue(request1.equals(request2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(request1.equals(request2)) target is:  method is: assertTrue(<unknown>)
TestCase is: Request request = new Request();
String string = "net.sourceforge.ext4j.taglib.bo.Request";
request.parse(string);
String string = "3k^rs}os^";
request.setHashValue(string);
Request request = new Request();
String string = "net.sourceforge.ext4j.taglib.bo.Request";
request.parse(string);
String string = "3k^rs}os^";
request.setHashValue(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("4bk)r(")
statement is: parse(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: request.parse("UwU)b%4T'AjVb+#")
statement is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request clone = (Request)request.clone()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = request.equals(arg0)
test data is: Request request = new Request("4bk)r(");
request.parse("UwU)b%4T'AjVb+#");
Request clone = (Request)request.clone();
clone.equals(request);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("This is a test message");
        request.parse("This is also a test message");
        Request clone = ((Request) (request.clone()));
        clone.equals(request);
    }
}
statement is: Request request = new Request("This is a test message"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.parse("This is also a test message"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.parse("This is also a test message") target is: request method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: parse(Ljava/lang/String;)V
statement is: Request clone = ((Request) (request.clone())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Request) (request.clone())) target is: request method is: clone()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: clone.equals(request), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clone.equals(request) target is: clone method is: equals(Request)
source statement: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest; callee: VariableReference: Statement 2, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "This is a test message";
Request request = new Request(string);
String string = "This is also a test message";
((Request) string).parse(string);
((Request) string).clone();
string.equals(request);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request((String) null)
statement is: parse(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: request.parse((String) null)
test data is: Request request = new Request((String) null);
request.parse((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("A request with a long description of the request");
        request.parse("A response with a long description of the response");
    }
}
statement is: Request request = new Request("A request with a long description of the request"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.parse("A response with a long description of the response"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.parse("A response with a long description of the response") target is: request method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: parse(Ljava/lang/String;)V
TestCase is: String string = "A request with a long description of the request";
Request request = new Request(string);
String string = "A response with a long description of the response";
((Request) string).parse(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(false)
statement is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setBaseURL = (Request)request.setBaseURL("file:/wU)b%4T'AjVb+#")
statement is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request clone = (Request)request.clone()
test data is: Request request = new Request(false);
request.setBaseURL("file:/wU)b%4T'AjVb+#");
request.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request fileRequest = new Request(true);
        fileRequest.setBaseURL("https://www.example.com");
        fileRequest.clone();
        Request urlRequest = new Request(false);
        urlRequest.setBaseURL("https://www.example2.com");
        urlRequest.clone();
    }
}
statement is: Request fileRequest = new Request(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fileRequest.setBaseURL("https://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fileRequest.setBaseURL("https://www.example.com") target is: fileRequest method is: setBaseURL(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: fileRequest.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fileRequest.clone() target is: fileRequest method is: clone()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: Request urlRequest = new Request(false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: urlRequest.setBaseURL("https://www.example2.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: urlRequest.setBaseURL("https://www.example2.com") target is: urlRequest method is: setBaseURL(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 6
Matched Method is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: urlRequest.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: urlRequest.clone() target is: urlRequest method is: clone()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 6
Matched Method is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: boolean _boolean = true;
Request request = new Request(_boolean);
String string = "https://www.example.com";
((Request) _boolean).setBaseURL(string);
((Request) _boolean).clone();
boolean _boolean = false;
Request request = new Request(_boolean);
String string = "https://www.example2.com";
((Request) _boolean).setBaseURL(string);
((Request) _boolean).clone();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("?")
test data is: Request request = new Request("?");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("example.com");
    }
}
statement is: Request request = new Request("example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "example.com";
Request request = new Request(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam("", "")
statement is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request clone = (Request)request.clone()
test data is: Request request = new Request();
request.setParam("", "");
request.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Request request1 = new Request();
        request1.setParam("param1", "value1");
        request1.clone();
        Request request2 = new Request();
        request2.setParam("param2", "value2");
        request2.clone();
        // Add more test data as needed to cover different scenarios and edge cases. }}
    }
}
statement is: // Improved test data
Request request1 = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request1.setParam("param1", "value1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.setParam("param1", "value1") target is: request1 method is: setParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request1.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request1.clone() target is: request1 method is: clone()
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: Request request2 = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request2.setParam("param2", "value2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.setParam("param2", "value2") target is: request2 method is: setParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 5
Matched Method is: setParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request2.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request2.clone() target is: request2 method is: clone()
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 5
Matched Method is: clone()Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: // Add more test data as needed to cover different scenarios and edge cases. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: Request request = new Request();
String string = "param1";
String string = "value1";
request.setParam(string, string);
request.clone();
Request request = new Request();
String string = "param2";
String string = "value2";
request.setParam(string, string);
request.clone();

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: URLDecode(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String URLDecode = request.URLDecode((String) null)
test data is: Request request = new Request();
request.URLDecode((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Request request = new Request();
        String encodedURL = "http://www.example.com/?q=test&id=123";
        String decodedURL = "http://www.example.com/?q=test&id=123";
        request.URLDecode(encodedURL);
        assertEquals(decodedURL, request.getRequestURI());
    }
}
statement is: // Improved test data
Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String encodedURL = "http://www.example.com/?q=test&id=123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String decodedURL = "http://www.example.com/?q=test&id=123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: request.URLDecode(encodedURL), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.URLDecode(encodedURL) target is: request method is: URLDecode(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: URLDecode(Ljava/lang/String;)Ljava/lang/String;
statement is: assertEquals(decodedURL, request.getRequestURI()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(decodedURL, request.getRequestURI()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "http://www.example.com/?q=test&id=123"
TestCase is: Request request = new Request();
String string = "http://www.example.com/?q=test&id=123";
String string = "http://www.example.com/?q=test&id=123";
request.URLDecode(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: getHashValue()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String hashValue = request.getHashValue()
test data is: Request request = new Request();
request.getHashValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setId(123);
        request.setName("John Doe");
        request.setEmailAddress("johndoe@example.com");
        request.setPassword("password123");
        // Set the hash value to a more illustrative example
        request.setHashValue("8765432109abcdefghijklmnopqrstuvwxyz");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setId(123), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setId(123) target is: request method is: setId(int)
statement is: request.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setName("John Doe") target is: request method is: setName(java.lang.String)
statement is: request.setEmailAddress("johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setEmailAddress("johndoe@example.com") target is: request method is: setEmailAddress(java.lang.String)
statement is: request.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setPassword("password123") target is: request method is: setPassword(java.lang.String)
statement is: // Set the hash value to a more illustrative example
request.setHashValue("8765432109abcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Set the hash value to a more illustrative example
request.setHashValue("8765432109abcdefghijklmnopqrstuvwxyz") target is: request method is: setHashValue(java.lang.String)
TestCase is: Request request = new Request();

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: getBaseURL()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String baseURL = request.getBaseURL()
test data is: Request request = new Request();
request.getBaseURL();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    private String baseURL;

    public  Request() {
        this.baseURL = "https://www.example.com";// Changed to a more descriptive URL

    }

    public String getBaseURL() {
        return this.baseURL;
    }
}
statement is: this.baseURL = "https://www.example.com"// Changed to a more descriptive URL
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: return this.baseURL, class spoon.support.reflect.code.CtReturnImpl
statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: getParams()Ljava/util/Collection; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Collection<net.sourceforge.ext4j.taglib.bo.RequestParam>
statement code is: Collection<RequestParam> params = request.getParams()
test data is: Request request = new Request();
request.getParams();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("GET", "https://www.example.com", null, null);
        request.getParams().add(new Parameter("name", "John Doe"));
        request.getParams().add(new Parameter("age", 30));
    }
}
statement is: Request request = new Request("GET", "https://www.example.com", null, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.getParams().add(new Parameter("name", "John Doe")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getParams().add(new Parameter("name", "John Doe")) target is: request.getParams() method is: add(Parameter)
statement is: request.getParams().add(new Parameter("age", 30)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getParams().add(new Parameter("age", 30)) target is: request.getParams() method is: add(Parameter)
statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: net.sourceforge.ext4j.taglib.bo.CurrentURLBO$RootRequest(Lnet/sourceforge/ext4j/taglib/bo/IRequest;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.CurrentURLBO$RootRequest
statement code is: CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(arg0)
statement is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam param = currentURLBO_RootRequest.getParam((String) null, false)
test data is: Request request = new Request();
CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
currentURLBO_RootRequest.getParam((String) null, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
        currentURLBO_RootRequest.getParam("https://www.example.com", false);
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: currentURLBO_RootRequest.getParam("https://www.example.com", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: currentURLBO_RootRequest.getParam("https://www.example.com", false) target is: currentURLBO_RootRequest method is: getParam(java.lang.String,boolean)
TestCase is: Request request = new Request();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request((HttpServletRequest) null)
statement is: net.sourceforge.ext4j.taglib.bo.RequestParam(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam requestParam = new RequestParam("The class \"")
statement is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam(arg0)
statement is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam param = request.getParam("The class \"", true)
test data is: Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
request.setParam(requestParam);
request.getParam("The class \"", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request(((HttpServletRequest) (null)));
        RequestParam requestParam = new RequestParam("The class \"");
        request.setParam(requestParam);
        request.getParam("The class \"", true);
    }
}
statement is: Request request = new Request(((HttpServletRequest) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RequestParam requestParam = new RequestParam("The class \""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setParam(requestParam), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setParam(requestParam) target is: request method is: setParam(RequestParam)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getParam("The class \"", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getParam("The class \"", true) target is: request method is: getParam(java.lang.String,boolean)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam;
TestCase is: Request request = new Request((HttpServletRequest) null);
String string = "The class \"";
RequestParam requestParam = new RequestParam(string);
request.setParam(requestParam);
String string = "The class \"";
boolean _boolean = true;
request.getParam(string, _boolean);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("")
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("\" = ", "x<*/66<$X")
statement is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam param = request.getParam("", true)
test data is: Request request = new Request("");
request.addParam("\" = ", "x<*/66<$X");
request.getParam("", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("");
        request.addParam("name = ", "John Doe");
        request.addParam("age = ", 30);
        request.addParam("gender = ", "Male");
        request.getParam("", true);
    }
}
statement is: Request request = new Request(""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("name = ", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("name = ", "John Doe") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.addParam("age = ", 30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("age = ", 30) target is: request method is: addParam(java.lang.String,int)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.addParam("gender = ", "Male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("gender = ", "Male") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getParam("", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getParam("", true) target is: request method is: getParam(java.lang.String,boolean)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam;
TestCase is: String string = "";
Request request = new Request(string);
String string = "name = ";
String string = "John Doe";
((Request) string).addParam(string, string);
String string = "age = ";
int _int = 30;
((Request) string).addParam(string, (String) _int);
String string = "gender = ";
String string = "Male";
((Request) string).addParam(string, string);
String string = "";
boolean _boolean = true;
((Request) string).getParam(string, _boolean);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("xdienJkrL??")
statement is: parse(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: request.parse("xdienJkrL??")
statement is: getQueryString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String queryString = request.getQueryString()
test data is: Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
request.getQueryString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("123456789");
        request.parse("123456789");
        request.getQueryString();
    }
}
statement is: Request request = new Request("123456789"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.parse("123456789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.parse("123456789") target is: request method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: parse(Ljava/lang/String;)V
statement is: request.getQueryString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getQueryString() target is: request method is: getQueryString()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: getQueryString()Ljava/lang/String;
TestCase is: String string = "123456789";
Request request = new Request(string);
String string = "123456789";
((Request) string).parse(string);
((Request) string).getQueryString();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("UwU)b%4T'AjVb+#")
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = request.toString()
test data is: Request request = new Request("UwU)b%4T'AjVb+#");
request.toString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("request-123");
        request.toString();
    }
}
statement is: Request request = new Request("request-123"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.toString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.toString() target is: request method is: toString()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: toString()Ljava/lang/String;
TestCase is: String string = "request-123";
Request request = new Request(string);
string.toString();

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: URLDecode(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String URLDecode = request.URLDecode("")
test data is: Request request = new Request();
request.URLDecode("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Implement URL decoding logic here }}
    }
}
statement is: // Implement URL decoding logic here }}, class spoon.support.reflect.code.CtCommentImpl
statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: URLDecode(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String URLDecode = request.URLDecode("file:/@6iBT<H~OvF")
test data is: Request request = new Request();
request.URLDecode("file:/@6iBT<H~OvF");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.URLDecode("file:/path/to/file.txt");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.URLDecode("file:/path/to/file.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.URLDecode("file:/path/to/file.txt") target is: request method is: URLDecode(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: URLDecode(Ljava/lang/String;)Ljava/lang/String;
TestCase is: Request request = new Request();
String string = "file:/path/to/file.txt";
request.URLDecode(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: URLEncode(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String URLEncode = request.URLEncode("")
test data is: Request request = new Request();
request.URLEncode("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setMethod("GET");
        request.setURL("http://www.example.com/?q=abc&page=10");
        request.addHeader("Content-Type", "application/json");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setMethod("GET"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setMethod("GET") target is: request method is: setMethod(java.lang.String)
statement is: request.setURL("http://www.example.com/?q=abc&page=10"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setURL("http://www.example.com/?q=abc&page=10") target is: request method is: setURL(java.lang.String)
statement is: request.addHeader("Content-Type", "application/json"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addHeader("Content-Type", "application/json") target is: request method is: addHeader(java.lang.String,java.lang.String)
TestCase is: Request request = new Request();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(" ")
statement is: URLEncode(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String URLEncode = request.URLEncode("%26")
test data is: Request request = new Request(" ");
request.URLEncode("%26");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("http://www.example.com/path?query=value");
        request.URLEncode("%26");
    }
}
statement is: Request request = new Request("http://www.example.com/path?query=value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.URLEncode("%26"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.URLEncode("%26") target is: request method is: URLEncode(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: URLEncode(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "http://www.example.com/path?query=value";
Request request = new Request(string);
String string = "%26";
((Request) string).URLEncode(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: URLEncode(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String URLEncode = request.URLEncode((String) null)
test data is: Request request = new Request();
request.URLEncode((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.URLDecode("https://www.example.com?q=123456789");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.URLDecode("https://www.example.com?q=123456789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.URLDecode("https://www.example.com?q=123456789") target is: request method is: URLDecode(java.lang.String)
TestCase is: Request request = new Request();

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setBaseURL = (Request)request.setBaseURL("")
statement is: getBaseURL()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String baseURL = request.getBaseURL()
test data is: Request request = new Request();
request.setBaseURL("");
request.getBaseURL();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setBaseURL("https://www.example.com");
        request.getBaseURL();
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setBaseURL("https://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setBaseURL("https://www.example.com") target is: request method is: setBaseURL(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getBaseURL(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getBaseURL() target is: request method is: getBaseURL()
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getBaseURL()Ljava/lang/String;
TestCase is: Request request = new Request();
String string = "https://www.example.com";
request.setBaseURL(string);
request.getBaseURL();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(false)
statement is: parse(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: request.parse("Could not parse value \"")
statement is: getBaseURL()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String baseURL = request.getBaseURL()
test data is: Request request = new Request(false);
request.parse("Could not parse value \"");
request.getBaseURL();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request(true);
        request.parse("Could not parse value \"https://www.example.com/path/to/file.txt\"");
        assertEquals("https://www.example.com/path/to/file.txt", request.getBaseURL());
    }
}
statement is: Request request = new Request(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.parse("Could not parse value \"https://www.example.com/path/to/file.txt\""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.parse("Could not parse value \"https://www.example.com/path/to/file.txt\"") target is: request method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: parse(Ljava/lang/String;)V
statement is: assertEquals("https://www.example.com/path/to/file.txt", request.getBaseURL()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("https://www.example.com/path/to/file.txt", request.getBaseURL()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: boolean _boolean = true;
Request request = new Request(_boolean);
String string = "Could not parse value \"https://www.example.com/path/to/file.txt\"";
((Request) _boolean).parse(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setHashValue = request.setHashValue("")
statement is: getHashValue()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String hashValue = request.getHashValue()
test data is: Request request = new Request();
request.setHashValue("");
request.getHashValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.setHashValue("0x123456789ABCDEF");
        String hashValue = request.getHashValue();
        System.out.println(hashValue);
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setHashValue("0x123456789ABCDEF"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setHashValue("0x123456789ABCDEF") target is: request method is: setHashValue(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request;
statement is: String hashValue = request.getHashValue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getHashValue() target is: request method is: getHashValue()
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getHashValue()Ljava/lang/String;
statement is: System.out.println(hashValue), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(hashValue) target is: System.out method is: println(java.lang.String)
TestCase is: Request request = new Request();
String string = "0x123456789ABCDEF";
request.setHashValue(string);
request.getHashValue();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request((HttpServletRequest) null, true)
statement is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setHashValue = request.setHashValue("?")
statement is: getHashValue()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String hashValue = request.getHashValue()
test data is: Request request = new Request((HttpServletRequest) null, true);
request.setHashValue("?");
request.getHashValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request(((HttpServletRequest) (null)), true);
        request.setHashValue("abc123");
        request.getHashValue();
    }
}
statement is: Request request = new Request(((HttpServletRequest) (null)), true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setHashValue("abc123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setHashValue("abc123") target is: request method is: setHashValue(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setHashValue(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/Request;
statement is: request.getHashValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getHashValue() target is: request method is: getHashValue()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: getHashValue()Ljava/lang/String;
TestCase is: boolean _boolean = true;
Request request = new Request((HttpServletRequest) _boolean, true);
String string = "abc123";
((Request) _boolean).setHashValue(string);
((Request) _boolean).getHashValue();

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request")
statement is: getParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/RequestParam; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam param = request.getParam("")
test data is: Request request = new Request();
Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
addParam.getParam("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        Request addParam = ((Request) (request.addParam("username", "user123")));
        addParam.getParam("password");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Request addParam = ((Request) (request.addParam("username", "user123"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Request) (request.addParam("username", "user123"))) target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: addParam.getParam("password"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addParam.getParam("password") target is: addParam method is: getParam(java.lang.String)
source statement: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; callee: VariableReference: Statement 1, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 3
Matched Method is: getParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/RequestParam;
TestCase is: Request request = new Request();
String string = "username";
String string = "user123";
request.addParam(string, string);
String string = "password";
((Request) string).getParam(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request((HttpServletRequest) null)
statement is: net.sourceforge.ext4j.taglib.bo.RequestParam(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam requestParam = new RequestParam("The class \"")
statement is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setParam = (Request)request.setParam(arg0)
statement is: getParam(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/RequestParam; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam param = request.getParam("The class \"")
test data is: Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
Request setParam = (Request)request.setParam(requestParam);
setParam.getParam("The class \"");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request(((HttpServletRequest) (null)));
        RequestParam requestParam = new RequestParam("The class \"com.example.MyClass\"");
        Request setParam = ((Request) (request.setParam(requestParam)));
    }
}
statement is: Request request = new Request(((HttpServletRequest) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RequestParam requestParam = new RequestParam("The class \"com.example.MyClass\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Request setParam = ((Request) (request.setParam(requestParam))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Request) (request.setParam(requestParam))) target is: request method is: setParam(RequestParam)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: setParam(Lnet/sourceforge/ext4j/taglib/bo/RequestParam;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: Request request = new Request((HttpServletRequest) null);
String string = "The class \"com.example.MyClass\"";
RequestParam requestParam = new RequestParam(string);
request.setParam(requestParam);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request addParam = (Request)request.addParam("", "")
statement is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.RequestParam
statement code is: RequestParam param = request.getParam("", false)
test data is: Request request = new Request();
request.addParam("", "");
request.getParam("", false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request();
        request.addParam("name", "John Doe");
        request.getParam("age", 30);
        request.addParam("city", "New York");
        request.getParam("state", "NY");
        request.addParam("phoneNumber", "555-1234");
        request.getParam("email", "johndoe@example.com");
    }
}
statement is: Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.addParam("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("name", "John Doe") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getParam("age", 30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getParam("age", 30) target is: request method is: getParam(java.lang.String,int)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam;
statement is: request.addParam("city", "New York"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("city", "New York") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getParam("state", "NY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getParam("state", "NY") target is: request method is: getParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam;
statement is: request.addParam("phoneNumber", "555-1234"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.addParam("phoneNumber", "555-1234") target is: request method is: addParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: addParam(Ljava/lang/String;Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
statement is: request.getParam("email", "johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getParam("email", "johndoe@example.com") target is: request method is: getParam(java.lang.String,java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request()V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 0
Matched Method is: getParam(Ljava/lang/String;Z)Lnet/sourceforge/ext4j/taglib/bo/RequestParam;
TestCase is: Request request = new Request();
String string = "name";
String string = "John Doe";
request.addParam(string, string);
String string = "age";
int _int = 30;
request.getParam(string, (boolean) _int);
String string = "city";
String string = "New York";
request.addParam(string, string);
String string = "state";
String string = "NY";
request.getParam(string, (boolean) string);
String string = "phoneNumber";
String string = "555-1234";
request.addParam(string, string);
String string = "email";
String string = "johndoe@example.com";
request.getParam(string, (boolean) string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request((HttpServletRequest) null, true)
statement is: getQueryString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String queryString = request.getQueryString()
test data is: Request request = new Request((HttpServletRequest) null, true);
request.getQueryString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("GET /users?name=john&age=25 HTTP/1.1", true);
        request.getQueryString();
    }
}
statement is: Request request = new Request("GET /users?name=john&age=25 HTTP/1.1", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.getQueryString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getQueryString() target is: request method is: getQueryString()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljavax/servlet/http/HttpServletRequest;Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 2
Matched Method is: getQueryString()Ljava/lang/String;
TestCase is: String string = "GET /users?name=john&age=25 HTTP/1.1";
boolean _boolean = true;
Request request = new Request((HttpServletRequest) string, _boolean);
((Request) string).getQueryString();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(true)
statement is: getValue(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int value = request.getValue("", 0)
test data is: Request request = new Request(true);
request.getValue("", 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request(true);
        request.getValue("ABC123", 123456789);
    }
}
statement is: Request request = new Request(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.getValue("ABC123", 123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.getValue("ABC123", 123456789) target is: request method is: getValue(java.lang.String,int)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: getValue(Ljava/lang/String;I)I
TestCase is: boolean _boolean = true;
Request request = new Request(_boolean);
String string = "ABC123";
int _int = 123456789;
((Request) _boolean).getValue(string, _int);

statement is: net.sourceforge.ext4j.taglib.bo.Request()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request()
statement is: getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String value = request.getValue("", "")
test data is: Request request = new Request();
request.getValue("", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Request request = new Request();
        request.setValue("1234567890", "John Doe");
    }
}
statement is: // Improved test data
Request request = new Request(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.setValue("1234567890", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setValue("1234567890", "John Doe") target is: request method is: setValue(java.lang.String,java.lang.String)
TestCase is: Request request = new Request();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("x_6*{O", true)
statement is: getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String value = request.getValue("x_6*{O", (String) null)
test data is: Request request = new Request("x_6*{O", true);
request.getValue("x_6*{O", (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the given code snippet }}
    }
}
statement is: // Improved test data for the given code snippet }}, class spoon.support.reflect.code.CtCommentImpl
statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("Ap~T~r[)l@B~|ak|o", true)
statement is: isWebRequest()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean webRequest = request.isWebRequest()
test data is: Request request = new Request("Ap~T~r[)l@B~|ak|o", true);
request.isWebRequest();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("AbC!@#$%^&*()_+-=[]{}|;\':\"\\,./<>?", true);
        request.isWebRequest();
    }
}
statement is: Request request = new Request("AbC!@#$%^&*()_+-=[]{}|;\':\"\\,./<>?", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.isWebRequest(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.isWebRequest() target is: request method is: isWebRequest()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 2
Matched Method is: isWebRequest()Z
TestCase is: String string = "AbC!@#$%^&*()_+-=[]{}|;':\"\\,./<>?";
boolean _boolean = true;
Request request = new Request(string, _boolean);
((Request) string).isWebRequest();

statement is: net.sourceforge.ext4j.taglib.bo.Request(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request(false)
statement is: parse(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: request.parse("Could not parse value \"")
statement is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request setBaseURL = (Request)request.setBaseURL("Could not parse value \"")
test data is: Request request = new Request(false);
request.parse("Could not parse value \"");
request.setBaseURL("Could not parse value \"");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request(true);
        request.parse("Could not parse value: 1234");
        request.setBaseURL("Could not parse value: https://www.example.com/path?param=value");
    }
}
statement is: Request request = new Request(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.parse("Could not parse value: 1234"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.parse("Could not parse value: 1234") target is: request method is: parse(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: parse(Ljava/lang/String;)V
statement is: request.setBaseURL("Could not parse value: https://www.example.com/path?param=value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.setBaseURL("Could not parse value: https://www.example.com/path?param=value") target is: request method is: setBaseURL(java.lang.String)
source statement: net.sourceforge.ext4j.taglib.bo.Request(Z)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: setBaseURL(Ljava/lang/String;)Lnet/sourceforge/ext4j/taglib/bo/IRequest;
TestCase is: boolean _boolean = true;
Request request = new Request(_boolean);
String string = "Could not parse value: 1234";
((Request) _boolean).parse(string);
String string = "Could not parse value: https://www.example.com/path?param=value";
((Request) _boolean).setBaseURL(string);

statement is: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sourceforge.ext4j.taglib.bo.Request
statement code is: Request request = new Request("")
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = request.toString()
test data is: Request request = new Request("");
request.toString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Request request = new Request("POST /api/users HTTP/1.1\nHost: www.example.com\nContent-Type: application/json\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate");
        request.toString();
    }
}
statement is: Request request = new Request("POST /api/users HTTP/1.1\nHost: www.example.com\nContent-Type: application/json\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: request.toString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: request.toString() target is: request method is: toString()
source statement: net.sourceforge.ext4j.taglib.bo.Request(Ljava/lang/String;)V callee: VariableReference: Statement 0, type net.sourceforge.ext4j.taglib.bo.Requestindex is: 1
Matched Method is: toString()Ljava/lang/String;
TestCase is: String string = "POST /api/users HTTP/1.1\nHost: www.example.com\nContent-Type: application/json\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate";
Request request = new Request(string);
string.toString();

* test suite isTestSuite: 119
Test 0: 
Request request = new Request();
request.toBaseURL();
Test 1: 
Request request = new Request();
request.setBaseURL("");
Request clone = (Request)request.clone();
Request setHashValue = request.setHashValue("v2#&R[");
setHashValue.equals(clone);
Test 2: 
Request request = new Request();
request.isWebRequest();
Test 3: 
HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((StringBuffer) null).when(httpServletRequest).getRequestURL();
HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest);
Request request = null;
try {
  request = new Request(httpServletRequestWrapper);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
Request request = new Request(false);
request.setParam("file:/U(pH_swT", "%3F");
request.cleanEmptyParams();
Test 5: 
Request request = new Request("f\"e:tHur\"itg\b!@#");
RequestParam requestParam = new RequestParam("f\"e:tHur\"itg\b!@#");
request.setParam(requestParam);
request.cleanEmptyParams();
Test 6: 
Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
request.cleanEmptyParams();
Test 7: 
Request request = new Request("uBx<>!VW#");
request.addParam("uBx<>!VW#", (String) null);
request.cleanEmptyParams();
Test 8: 
Request request = new Request(false);
request.getParam((String) null);
Test 9: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("3k^rs}os^", (-2781));
Test 10: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("", "");
Test 11: 
Request request = new Request("4bk)r(");
request.addParam("file:/H`kSvyD5:j>|", "?");
CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
currentURLBO_RootRequest.getValue("d4q", "?");
Test 12: 
Request request = new Request();
RequestParam requestParam = new RequestParam("U(pH_s");
request.setParam(requestParam);
request.getValue("U(pH_s", "U(pH_s");
Test 13: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("", 1307);
Test 14: 
Request request = new Request("mTQYU`b_");
RequestParam requestParam = new RequestParam("mTQYU`b_");
request.setParam(requestParam);
request.getValue("mTQYU`b_", (-890));
Test 15: 
Request request = new Request();
request.removeParam("Uw5fU)b%4T'AjVb+#");
Test 16: 
Request request = new Request("4bk)r(");
request.addParam("file:/H`kSvyD5:j>|", "?");
request.removeParam("+Mt=g^W Kb'f=0UN\"");
Test 17: 
Request request = new Request();
request.addParam("_<sy}m", "_<sy}m");
request.removeParam("_<sy}m");
Test 18: 
Request request = new Request("");
request.setParam((RequestParam) null);
Test 19: 
Request request = new Request();
request.setHashValue("3k^rs}os^");
request.hashCode();
Test 20: 
Request request = new Request();
request.equals((Object) null);
Test 21: 
Request request = new Request(false);
// Undeclared exception!
try { 
  request.equals(request);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 22: 
Request request = new Request();
Request request = new Request("??L( 9}||(7", true);
request.equals(request);
Test 23: 
Request request = new Request(false);
Request clone = (Request)request.clone();
request.equals(clone);
Test 24: 
Request request = new Request(":f]h!EObjC");
Request request = new Request("Q;CMYSjf_1LJWuk`D3y");
request.equals(request);
Test 25: 
Request request = new Request("]U dos not exist.");
Request request = new Request("]U dos not exist.");
request.addParam("]U dos not exist.", "]U dos not exist.");
request.equals(request);
Test 26: 
Request request = new Request("");
request.setParam("", "S?2xu`.hO!X~C64fE=t");
Request clone = (Request)request.clone();
Request baseURL = (Request)request.toBaseURL();
baseURL.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt");
request.equals(clone);
Test 27: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "ob;-.");
request.equals(request);
Test 28: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.setHashValue("3k^rs}os^");
request.equals(request);
Test 29: 
Request request = new Request("4bk)r(");
request.parse("UwU)b%4T'AjVb+#");
Request clone = (Request)request.clone();
// Undeclared exception!
try { 
  clone.equals(request);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 30: 
Request request = new Request((String) null);
request.parse((String) null);
Test 31: 
Request request = new Request(false);
request.setBaseURL("file:/wU)b%4T'AjVb+#");
request.clone();
Test 32: 
Request request = new Request("?");
Test 33: 
Request request = new Request();
request.setParam("", "");
request.clone();
Test 34: 
Request request = new Request();
request.URLDecode((String) null);
Test 35: 
Request request = new Request();
request.getHashValue();
Test 36: 
Request request = new Request();
request.getBaseURL();
Test 37: 
Request request = new Request();
request.getParams();
Test 38: 
Request request = new Request();
CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
currentURLBO_RootRequest.getParam((String) null, false);
Test 39: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
request.setParam(requestParam);
request.getParam("The class \"", true);
Test 40: 
Request request = new Request("");
request.addParam("\" = ", "x<*/66<$X");
request.getParam("", true);
Test 41: 
Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
request.getQueryString();
Test 42: 
Request request = new Request("UwU)b%4T'AjVb+#");
request.toString();
Test 43: 
Request request = new Request();
request.URLDecode("");
Test 44: 
Request request = new Request();
request.URLDecode("file:/@6iBT<H~OvF");
Test 45: 
Request request = new Request();
request.URLEncode("");
Test 46: 
Request request = new Request(" ");
request.URLEncode("%26");
Test 47: 
Request request = new Request();
request.URLEncode((String) null);
Test 48: 
Request request = new Request();
request.setBaseURL("");
request.getBaseURL();
Test 49: 
Request request = new Request(false);
request.parse("Could not parse value \"");
request.getBaseURL();
Test 50: 
Request request = new Request();
request.setHashValue("");
request.getHashValue();
Test 51: 
Request request = new Request((HttpServletRequest) null, true);
request.setHashValue("?");
request.getHashValue();
Test 52: 
Request request = new Request();
Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
addParam.getParam("");
Test 53: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
Request setParam = (Request)request.setParam(requestParam);
setParam.getParam("The class \"");
Test 54: 
Request request = new Request();
request.addParam("", "");
request.getParam("", false);
Test 55: 
Request request = new Request((HttpServletRequest) null, true);
request.getQueryString();
Test 56: 
Request request = new Request(true);
request.getValue("", 0);
Test 57: 
Request request = new Request();
request.getValue("", "");
Test 58: 
Request request = new Request("x_6*{O", true);
request.getValue("x_6*{O", (String) null);
Test 59: 
Request request = new Request("Ap~T~r[)l@B~|ak|o", true);
request.isWebRequest();
Test 60: 
Request request = new Request(false);
request.parse("Could not parse value \"");
request.setBaseURL("Could not parse value \"");
Test 61: 
Request request = new Request("");
request.toString();
Test 62: 
Request request = new Request();

Test 63: 
Request request = new Request();
request.setBaseURL("https://www.example.com/api");
request.clone();
request.setHashValue("v2#&R[");

Test 64: 
Request request = new Request();

Test 65: 
HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((StringBuffer) null).when(httpServletRequest).getRequestURL();
HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest);
Request request = new Request(httpServletRequestWrapper);

Test 66: 
boolean _boolean = true;
Request request = new Request(true);
((Request)true).setParam("file:/U(pH_swT", "?");
((Request) _boolean).cleanEmptyParams();

Test 67: 
String string = "first_name=Jane&last_name=Doe&age=30";
Request request = new Request("first_name=Jane&last_name=Doe&age=30");
RequestParam requestParam = new RequestParam("first_name=Jane&last_name=Doe&age=30");
((Request)"first_name=Jane&last_name=Doe&age=30").setParam(requestParam);
((Request) string).cleanEmptyParams();

Test 68: 
String string = "xdienJkrL??";
Request request = new Request("xdienJkrL??");
((Request)"xdienJkrL??").parse("{ \"param1\": \"value1\", \"param2\": \"value2\" }");
((Request) string).cleanEmptyParams();

Test 69: 
String string = "uBx<>!VW#";
Request request = new Request("uBx<>!VW#");
((Request)"uBx<>!VW#").addParam("uBx<>!VW#", "hello world");
((Request) string).cleanEmptyParams();

Test 70: 
String string = "GET";
Request request = new Request((boolean) "GET");
String string = "name";
((Request) string).getParam(string);

Test 71: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");

Test 72: 
Request request = new Request();
request.addParam("username", "johndoe");
request.addParam("password", "secret");
request.getValue("status", "200");

Test 73: 
Request request = new Request("4bk)r(");
((Request)"4bk)r(").addParam("file:/H`kSvyD5:j>|", "http://www.example.com");

Test 74: 
Request request = new Request();
RequestParam requestParam = new RequestParam("U(pH_s");
request.setParam(requestParam);
request.getValue("U(pH_s", "U(pH_s");

Test 75: 
Request request = new Request();
request.addParam("user_id", (String) 1234);
String string = "username";
String string = "Jane Smith";
request.addParam(string, string);
String string = "age";
int _int = 25;
request.addParam(string, (String) _int);
String string = "address";
String string = "987 Elm St, Anytown USA 12345";
request.getValue(string, (int) string);

Test 76: 
String string = "request_id";
Request request = new Request("request_id");
RequestParam requestParam = new RequestParam("param_name");
((Request)"request_id").setParam(requestParam);
String string = "param_name";
int _int = 123456789;
((Request) string).getValue(string, _int);

Test 77: 
Request request = new Request();
request.removeParam("username");
request.removeParam("password");
request.removeParam("age");

Test 78: 
String string = "/api/documents/123456789";
Request request = new Request("/api/documents/123456789");
((Request)"/api/documents/123456789").addParam("name", "John Doe");
String string = "age";
((Request) string).removeParam(string);

Test 79: 
Request request = new Request();
request.addParam("name", "John Doe");
request.removeParam("name");

Test 80: 
String string = "GET /users?page=1&size=20 HTTP/1.1";
Request request = new Request("GET /users?page=1&size=20 HTTP/1.1");
((Request)"GET /users?page=1&size=20 HTTP/1.1").setParam((RequestParam) null);
RequestParam requestParam = null;
((Request) string).setParam(requestParam);

Test 81: 
Request request = new Request();
request.setHashValue("d09207b290d5ca61308a49eae7a7fe0d");
request.hashCode();

Test 82: 
Request request = new Request();

Test 83: 
Request request = new Request(false);
Request request = new Request(true);

Test 84: 
Request request = new Request("John Doe", false);
Request request = new Request("Jane Doe", true);
((Request)false).equals(request);

Test 85: 
Request request = new Request("https://www.example.com/products/12345");
Request request = new Request("https://www.example.com/products/67890");

Test 86: 
Request request = new Request("This is a test request with a more descriptive string value");
Request request = new Request("This is another test request with a different, but still meaningful string value");

Test 87: 
String string = "https://www.example.com/path?query=value";
Request request = new Request("https://www.example.com/path?query=value");
((Request)"https://www.example.com/path?query=value").setParam("id", "abcdefghijklmnopqrstuvwxyz");
Request clone = (Request)((Request) string).clone();
((Request) string).toBaseURL();
String string = "%1D3F";
String string = "?=S%3F2xu`.hO!X~C64fE%3Dt";
((Request) string).setParam(string, string);
string.equals(clone);

Test 88: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "ob;-.");
request.equals(request);
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "ob;-.");
request.equals(request);

Test 89: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.setHashValue("3k^rs}os^");
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.setHashValue("3k^rs}os^");

Test 90: 
String string = "This is a test message";
Request request = new Request("This is a test message");
String string = "This is also a test message";
((Request)"This is a test message").parse("This is also a test message");
((Request) string).clone();
string.equals(request);

Test 91: 
Request request = new Request("A request with a long description of the request");
((Request)"A request with a long description of the request").parse("A response with a long description of the response");

Test 92: 
boolean _boolean = true;
Request request = new Request(true);
((Request)true).setBaseURL("https://www.example.com");
((Request) _boolean).clone();
boolean _boolean = false;
Request request = new Request(_boolean);
String string = "https://www.example2.com";
((Request) _boolean).setBaseURL(string);
((Request) _boolean).clone();

Test 93: 
Request request = new Request("example.com");

Test 94: 
Request request = new Request();
request.setParam("param1", "value1");
request.clone();
Request request = new Request();
request.setParam("param2", "value2");
request.clone();

Test 95: 
Request request = new Request();
request.URLDecode("http://www.example.com/?q=test&id=123");

Test 96: 
Request request = new Request();

Test 97: 
Request request = new Request();

Test 98: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
request.setParam(requestParam);
request.getParam("The class \"", true);

Test 99: 
String string = "";
Request request = new Request("");
((Request)"").addParam("name = ", "John Doe");
String string = "age = ";
int _int = 30;
((Request) string).addParam(string, (String) _int);
String string = "gender = ";
String string = "Male";
((Request) string).addParam(string, string);
String string = "";
boolean _boolean = true;
((Request) string).getParam(string, _boolean);

Test 100: 
String string = "123456789";
Request request = new Request("123456789");
((Request)"123456789").parse("123456789");
((Request) string).getQueryString();

Test 101: 
Request request = new Request("request-123");
((Request)"request-123").toString();

Test 102: 
Request request = new Request();
request.URLDecode("file:/path/to/file.txt");

Test 103: 
Request request = new Request();

Test 104: 
Request request = new Request("http://www.example.com/path?query=value");
((Request)"http://www.example.com/path?query=value").URLEncode("%26");

Test 105: 
Request request = new Request();

Test 106: 
Request request = new Request();
request.setBaseURL("https://www.example.com");
request.getBaseURL();

Test 107: 
Request request = new Request(true);
((Request)true).parse("Could not parse value \"https://www.example.com/path/to/file.txt\"");

Test 108: 
Request request = new Request();
request.setHashValue("0x123456789ABCDEF");
request.getHashValue();

Test 109: 
boolean _boolean = true;
Request request = new Request((HttpServletRequest) true, true);
String string = "abc123";
((Request) _boolean).setHashValue(string);
((Request) _boolean).getHashValue();

Test 110: 
Request request = new Request();
request.addParam("username", "user123");
((Request)"username").getParam("password");

Test 111: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"com.example.MyClass\"");
request.setParam(requestParam);

Test 112: 
Request request = new Request();
request.addParam("name", "John Doe");
request.getParam("age", (boolean) 30);
String string = "city";
String string = "New York";
request.addParam(string, string);
String string = "state";
String string = "NY";
request.getParam(string, (boolean) string);
String string = "phoneNumber";
String string = "555-1234";
request.addParam(string, string);
String string = "email";
String string = "johndoe@example.com";
request.getParam(string, (boolean) string);

Test 113: 
String string = "GET /users?name=john&age=25 HTTP/1.1";
Request request = new Request((HttpServletRequest) "GET /users?name=john&age=25 HTTP/1.1", true);
((Request) string).getQueryString();

Test 114: 
Request request = new Request(true);
((Request)true).getValue("ABC123", 123456789);

Test 115: 
Request request = new Request();

Test 116: 
Request request = new Request("AbC!@#$%^&*()_+-=[]{}|;':\",./<>?", true);
((Request)"AbC!@#$%^&*()_+-=[]{}|;':\",./<>?").isWebRequest();

Test 117: 
boolean _boolean = true;
Request request = new Request(true);
((Request)true).parse("Could not parse value: 1234");
String string = "Could not parse value: https://www.example.com/path?param=value";
((Request) _boolean).setBaseURL(string);

Test 118: 
Request request = new Request("POST /api/users HTTP/1.1\nHost: www.example.com\nContent-Type: application/json\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate");
((Request)"POST /api/users HTTP/1.1\nHost: www.example.com\nContent-Type: application/json\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate").toString();


* Generated after the refinement and before minimization 119 tests with total length 396
* test suite isTestSuite: 119
Test 0: 
Request request = new Request();
request.toBaseURL();
Test 1: 
Request request = new Request();
request.setBaseURL("");
Request clone = (Request)request.clone();
Request setHashValue = request.setHashValue("v2#&R[");
setHashValue.equals(clone);
Test 2: 
Request request = new Request();
request.isWebRequest();
Test 3: 
HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((StringBuffer) null).when(httpServletRequest).getRequestURL();
HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest);
Request request = null;
try {
  request = new Request(httpServletRequestWrapper);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
Request request = new Request(false);
request.setParam("file:/U(pH_swT", "%3F");
request.cleanEmptyParams();
Test 5: 
Request request = new Request("f\"e:tHur\"itg\b!@#");
RequestParam requestParam = new RequestParam("f\"e:tHur\"itg\b!@#");
request.setParam(requestParam);
request.cleanEmptyParams();
Test 6: 
Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
request.cleanEmptyParams();
Test 7: 
Request request = new Request("uBx<>!VW#");
request.addParam("uBx<>!VW#", (String) null);
request.cleanEmptyParams();
Test 8: 
Request request = new Request(false);
request.getParam((String) null);
Test 9: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("3k^rs}os^", (-2781));
Test 10: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("", "");
Test 11: 
Request request = new Request("4bk)r(");
request.addParam("file:/H`kSvyD5:j>|", "?");
CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
currentURLBO_RootRequest.getValue("d4q", "?");
Test 12: 
Request request = new Request();
RequestParam requestParam = new RequestParam("U(pH_s");
request.setParam(requestParam);
request.getValue("U(pH_s", "U(pH_s");
Test 13: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("", 1307);
Test 14: 
Request request = new Request("mTQYU`b_");
RequestParam requestParam = new RequestParam("mTQYU`b_");
request.setParam(requestParam);
request.getValue("mTQYU`b_", (-890));
Test 15: 
Request request = new Request();
request.removeParam("Uw5fU)b%4T'AjVb+#");
Test 16: 
Request request = new Request("4bk)r(");
request.addParam("file:/H`kSvyD5:j>|", "?");
request.removeParam("+Mt=g^W Kb'f=0UN\"");
Test 17: 
Request request = new Request();
request.addParam("_<sy}m", "_<sy}m");
request.removeParam("_<sy}m");
Test 18: 
Request request = new Request("");
request.setParam((RequestParam) null);
Test 19: 
Request request = new Request();
request.setHashValue("3k^rs}os^");
request.hashCode();
Test 20: 
Request request = new Request();
request.equals((Object) null);
Test 21: 
Request request = new Request(false);
// Undeclared exception!
try { 
  request.equals(request);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 22: 
Request request = new Request();
Request request = new Request("??L( 9}||(7", true);
request.equals(request);
Test 23: 
Request request = new Request(false);
Request clone = (Request)request.clone();
request.equals(clone);
Test 24: 
Request request = new Request(":f]h!EObjC");
Request request = new Request("Q;CMYSjf_1LJWuk`D3y");
request.equals(request);
Test 25: 
Request request = new Request("]U dos not exist.");
Request request = new Request("]U dos not exist.");
request.addParam("]U dos not exist.", "]U dos not exist.");
request.equals(request);
Test 26: 
Request request = new Request("");
request.setParam("", "S?2xu`.hO!X~C64fE=t");
Request clone = (Request)request.clone();
Request baseURL = (Request)request.toBaseURL();
baseURL.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt");
request.equals(clone);
Test 27: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "ob;-.");
request.equals(request);
Test 28: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.setHashValue("3k^rs}os^");
request.equals(request);
Test 29: 
Request request = new Request("4bk)r(");
request.parse("UwU)b%4T'AjVb+#");
Request clone = (Request)request.clone();
// Undeclared exception!
try { 
  clone.equals(request);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 30: 
Request request = new Request((String) null);
request.parse((String) null);
Test 31: 
Request request = new Request(false);
request.setBaseURL("file:/wU)b%4T'AjVb+#");
request.clone();
Test 32: 
Request request = new Request("?");
Test 33: 
Request request = new Request();
request.setParam("", "");
request.clone();
Test 34: 
Request request = new Request();
request.URLDecode((String) null);
Test 35: 
Request request = new Request();
request.getHashValue();
Test 36: 
Request request = new Request();
request.getBaseURL();
Test 37: 
Request request = new Request();
request.getParams();
Test 38: 
Request request = new Request();
CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
currentURLBO_RootRequest.getParam((String) null, false);
Test 39: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
request.setParam(requestParam);
request.getParam("The class \"", true);
Test 40: 
Request request = new Request("");
request.addParam("\" = ", "x<*/66<$X");
request.getParam("", true);
Test 41: 
Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
request.getQueryString();
Test 42: 
Request request = new Request("UwU)b%4T'AjVb+#");
request.toString();
Test 43: 
Request request = new Request();
request.URLDecode("");
Test 44: 
Request request = new Request();
request.URLDecode("file:/@6iBT<H~OvF");
Test 45: 
Request request = new Request();
request.URLEncode("");
Test 46: 
Request request = new Request(" ");
request.URLEncode("%26");
Test 47: 
Request request = new Request();
request.URLEncode((String) null);
Test 48: 
Request request = new Request();
request.setBaseURL("");
request.getBaseURL();
Test 49: 
Request request = new Request(false);
request.parse("Could not parse value \"");
request.getBaseURL();
Test 50: 
Request request = new Request();
request.setHashValue("");
request.getHashValue();
Test 51: 
Request request = new Request((HttpServletRequest) null, true);
request.setHashValue("?");
request.getHashValue();
Test 52: 
Request request = new Request();
Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
addParam.getParam("");
Test 53: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
Request setParam = (Request)request.setParam(requestParam);
setParam.getParam("The class \"");
Test 54: 
Request request = new Request();
request.addParam("", "");
request.getParam("", false);
Test 55: 
Request request = new Request((HttpServletRequest) null, true);
request.getQueryString();
Test 56: 
Request request = new Request(true);
request.getValue("", 0);
Test 57: 
Request request = new Request();
request.getValue("", "");
Test 58: 
Request request = new Request("x_6*{O", true);
request.getValue("x_6*{O", (String) null);
Test 59: 
Request request = new Request("Ap~T~r[)l@B~|ak|o", true);
request.isWebRequest();
Test 60: 
Request request = new Request(false);
request.parse("Could not parse value \"");
request.setBaseURL("Could not parse value \"");
Test 61: 
Request request = new Request("");
request.toString();
Test 62: 
Request request = new Request();

Test 63: 
Request request = new Request();
request.setBaseURL("https://www.example.com/api");
request.clone();
request.setHashValue("v2#&R[");

Test 64: 
Request request = new Request();

Test 65: 
HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((StringBuffer) null).when(httpServletRequest).getRequestURL();
HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest);
Request request = new Request(httpServletRequestWrapper);

Test 66: 
boolean _boolean = true;
Request request = new Request(true);
((Request)true).setParam("file:/U(pH_swT", "?");
((Request) _boolean).cleanEmptyParams();

Test 67: 
String string = "first_name=Jane&last_name=Doe&age=30";
Request request = new Request("first_name=Jane&last_name=Doe&age=30");
RequestParam requestParam = new RequestParam("first_name=Jane&last_name=Doe&age=30");
((Request)"first_name=Jane&last_name=Doe&age=30").setParam(requestParam);
((Request) string).cleanEmptyParams();

Test 68: 
String string = "xdienJkrL??";
Request request = new Request("xdienJkrL??");
((Request)"xdienJkrL??").parse("{ \"param1\": \"value1\", \"param2\": \"value2\" }");
((Request) string).cleanEmptyParams();

Test 69: 
String string = "uBx<>!VW#";
Request request = new Request("uBx<>!VW#");
((Request)"uBx<>!VW#").addParam("uBx<>!VW#", "hello world");
((Request) string).cleanEmptyParams();

Test 70: 
String string = "GET";
Request request = new Request((boolean) "GET");
String string = "name";
((Request) string).getParam(string);

Test 71: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");

Test 72: 
Request request = new Request();
request.addParam("username", "johndoe");
request.addParam("password", "secret");
request.getValue("status", "200");

Test 73: 
Request request = new Request("4bk)r(");
((Request)"4bk)r(").addParam("file:/H`kSvyD5:j>|", "http://www.example.com");

Test 74: 
Request request = new Request();
RequestParam requestParam = new RequestParam("U(pH_s");
request.setParam(requestParam);
request.getValue("U(pH_s", "U(pH_s");

Test 75: 
Request request = new Request();
request.addParam("user_id", (String) 1234);
String string = "username";
String string = "Jane Smith";
request.addParam(string, string);
String string = "age";
int _int = 25;
request.addParam(string, (String) _int);
String string = "address";
String string = "987 Elm St, Anytown USA 12345";
request.getValue(string, (int) string);

Test 76: 
String string = "request_id";
Request request = new Request("request_id");
RequestParam requestParam = new RequestParam("param_name");
((Request)"request_id").setParam(requestParam);
String string = "param_name";
int _int = 123456789;
((Request) string).getValue(string, _int);

Test 77: 
Request request = new Request();
request.removeParam("username");
request.removeParam("password");
request.removeParam("age");

Test 78: 
String string = "/api/documents/123456789";
Request request = new Request("/api/documents/123456789");
((Request)"/api/documents/123456789").addParam("name", "John Doe");
String string = "age";
((Request) string).removeParam(string);

Test 79: 
Request request = new Request();
request.addParam("name", "John Doe");
request.removeParam("name");

Test 80: 
String string = "GET /users?page=1&size=20 HTTP/1.1";
Request request = new Request("GET /users?page=1&size=20 HTTP/1.1");
((Request)"GET /users?page=1&size=20 HTTP/1.1").setParam((RequestParam) null);
RequestParam requestParam = null;
((Request) string).setParam(requestParam);

Test 81: 
Request request = new Request();
request.setHashValue("d09207b290d5ca61308a49eae7a7fe0d");
request.hashCode();

Test 82: 
Request request = new Request();

Test 83: 
Request request = new Request(false);
Request request = new Request(true);

Test 84: 
Request request = new Request("John Doe", false);
Request request = new Request("Jane Doe", true);
((Request)false).equals(request);

Test 85: 
Request request = new Request("https://www.example.com/products/12345");
Request request = new Request("https://www.example.com/products/67890");

Test 86: 
Request request = new Request("This is a test request with a more descriptive string value");
Request request = new Request("This is another test request with a different, but still meaningful string value");

Test 87: 
String string = "https://www.example.com/path?query=value";
Request request = new Request("https://www.example.com/path?query=value");
((Request)"https://www.example.com/path?query=value").setParam("id", "abcdefghijklmnopqrstuvwxyz");
Request clone = (Request)((Request) string).clone();
((Request) string).toBaseURL();
String string = "%1D3F";
String string = "?=S%3F2xu`.hO!X~C64fE%3Dt";
((Request) string).setParam(string, string);
string.equals(clone);

Test 88: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "ob;-.");
request.equals(request);
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "ob;-.");
request.equals(request);

Test 89: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.setHashValue("3k^rs}os^");
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.setHashValue("3k^rs}os^");

Test 90: 
String string = "This is a test message";
Request request = new Request("This is a test message");
String string = "This is also a test message";
((Request)"This is a test message").parse("This is also a test message");
((Request) string).clone();
string.equals(request);

Test 91: 
Request request = new Request("A request with a long description of the request");
((Request)"A request with a long description of the request").parse("A response with a long description of the response");

Test 92: 
boolean _boolean = true;
Request request = new Request(true);
((Request)true).setBaseURL("https://www.example.com");
((Request) _boolean).clone();
boolean _boolean = false;
Request request = new Request(_boolean);
String string = "https://www.example2.com";
((Request) _boolean).setBaseURL(string);
((Request) _boolean).clone();

Test 93: 
Request request = new Request("example.com");

Test 94: 
Request request = new Request();
request.setParam("param1", "value1");
request.clone();
Request request = new Request();
request.setParam("param2", "value2");
request.clone();

Test 95: 
Request request = new Request();
request.URLDecode("http://www.example.com/?q=test&id=123");

Test 96: 
Request request = new Request();

Test 97: 
Request request = new Request();

Test 98: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
request.setParam(requestParam);
request.getParam("The class \"", true);

Test 99: 
String string = "";
Request request = new Request("");
((Request)"").addParam("name = ", "John Doe");
String string = "age = ";
int _int = 30;
((Request) string).addParam(string, (String) _int);
String string = "gender = ";
String string = "Male";
((Request) string).addParam(string, string);
String string = "";
boolean _boolean = true;
((Request) string).getParam(string, _boolean);

Test 100: 
String string = "123456789";
Request request = new Request("123456789");
((Request)"123456789").parse("123456789");
((Request) string).getQueryString();

Test 101: 
Request request = new Request("request-123");
((Request)"request-123").toString();

Test 102: 
Request request = new Request();
request.URLDecode("file:/path/to/file.txt");

Test 103: 
Request request = new Request();

Test 104: 
Request request = new Request("http://www.example.com/path?query=value");
((Request)"http://www.example.com/path?query=value").URLEncode("%26");

Test 105: 
Request request = new Request();

Test 106: 
Request request = new Request();
request.setBaseURL("https://www.example.com");
request.getBaseURL();

Test 107: 
Request request = new Request(true);
((Request)true).parse("Could not parse value \"https://www.example.com/path/to/file.txt\"");

Test 108: 
Request request = new Request();
request.setHashValue("0x123456789ABCDEF");
request.getHashValue();

Test 109: 
boolean _boolean = true;
Request request = new Request((HttpServletRequest) true, true);
String string = "abc123";
((Request) _boolean).setHashValue(string);
((Request) _boolean).getHashValue();

Test 110: 
Request request = new Request();
request.addParam("username", "user123");
((Request)"username").getParam("password");

Test 111: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"com.example.MyClass\"");
request.setParam(requestParam);

Test 112: 
Request request = new Request();
request.addParam("name", "John Doe");
request.getParam("age", (boolean) 30);
String string = "city";
String string = "New York";
request.addParam(string, string);
String string = "state";
String string = "NY";
request.getParam(string, (boolean) string);
String string = "phoneNumber";
String string = "555-1234";
request.addParam(string, string);
String string = "email";
String string = "johndoe@example.com";
request.getParam(string, (boolean) string);

Test 113: 
String string = "GET /users?name=john&age=25 HTTP/1.1";
Request request = new Request((HttpServletRequest) "GET /users?name=john&age=25 HTTP/1.1", true);
((Request) string).getQueryString();

Test 114: 
Request request = new Request(true);
((Request)true).getValue("ABC123", 123456789);

Test 115: 
Request request = new Request();

Test 116: 
Request request = new Request("AbC!@#$%^&*()_+-=[]{}|;':\",./<>?", true);
((Request)"AbC!@#$%^&*()_+-=[]{}|;':\",./<>?").isWebRequest();

Test 117: 
boolean _boolean = true;
Request request = new Request(true);
((Request)true).parse("Could not parse value: 1234");
String string = "Could not parse value: https://www.example.com/path?param=value";
((Request) _boolean).setBaseURL(string);

Test 118: 
Request request = new Request("POST /api/users HTTP/1.1\nHost: www.example.com\nContent-Type: application/json\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate");
((Request)"POST /api/users HTTP/1.1\nHost: www.example.com\nContent-Type: application/json\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate").toString();


* Minimizing test suite
* test suite isTestSuite: 63
Test 0: 
Request request = new Request(false);
request.getParam((String) null);
Test 1: 
HttpServletRequest httpServletRequest = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
doReturn((StringBuffer) null).when(httpServletRequest).getRequestURL();
HttpServletRequestWrapper httpServletRequestWrapper = new HttpServletRequestWrapper(httpServletRequest);
Request request = null;
try {
  request = new Request(httpServletRequestWrapper);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 2: 
Request request = new Request();
request.getHashValue();
Test 3: 
Request request = new Request();
request.toBaseURL();
Test 4: 
Request request = new Request("Ap~T~r[)l@B~|ak|o", true);
request.isWebRequest();
Test 5: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
request.setParam(requestParam);
request.getParam("The class \"", true);
Test 6: 
Request request = new Request("uBx<>!VW#");
request.addParam("uBx<>!VW#", (String) null);
request.cleanEmptyParams();
Test 7: 
Request request = new Request("f\"e:tHur\"itg\b!@#");
RequestParam requestParam = new RequestParam("f\"e:tHur\"itg\b!@#");
request.setParam(requestParam);
request.cleanEmptyParams();
Test 8: 
Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
request.cleanEmptyParams();
Test 9: 
Request request = new Request(false);
request.setParam("file:/U(pH_swT", "%3F");
request.cleanEmptyParams();
Test 10: 
Request request = new Request();
request.addParam("username", "johndoe");
request.getValue("status", "200");
Test 11: 
Request request = new Request("x_6*{O", true);
request.getValue("x_6*{O", (String) null);
Test 12: 
Request request = new Request();
RequestParam requestParam = new RequestParam("U(pH_s");
request.setParam(requestParam);
request.getValue("U(pH_s", "U(pH_s");
Test 13: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("", "");
Test 14: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("", 1307);
Test 15: 
Request request = new Request(true);
request.getValue("", 0);
Test 16: 
Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.getValue("3k^rs}os^", (-2781));
Test 17: 
Request request = new Request("mTQYU`b_");
RequestParam requestParam = new RequestParam("mTQYU`b_");
request.setParam(requestParam);
request.getValue("mTQYU`b_", (-890));
Test 18: 
Request request = new Request();
request.removeParam("username");
Test 19: 
Request request = new Request();
request.addParam("name", "John Doe");
request.removeParam("name");
Test 20: 
Request request = new Request("4bk)r(");
request.addParam("file:/H`kSvyD5:j>|", "?");
request.removeParam("+Mt=g^W Kb'f=0UN\"");
Test 21: 
Request request = new Request("");
request.setParam((RequestParam) null);
Test 22: 
Request request = new Request();
request.setHashValue("d09207b290d5ca61308a49eae7a7fe0d");
request.hashCode();
Test 23: 
Request request = new Request();
request.equals((Object) null);
Test 24: 
Request request = new Request(false);
// Undeclared exception!
try { 
  request.equals(request);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 25: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
Request request = new Request();
request.equals(request);
Test 26: 
Request request = new Request(false);
Request clone = (Request)request.clone();
request.equals(clone);
Test 27: 
Request request = new Request(":f]h!EObjC");
Request request = new Request("Q;CMYSjf_1LJWuk`D3y");
request.equals(request);
Test 28: 
Request request = new Request("]U dos not exist.");
Request request = new Request("]U dos not exist.");
request.addParam("]U dos not exist.", "]U dos not exist.");
request.equals(request);
Test 29: 
Request request = new Request("");
request.setParam("", "S?2xu`.hO!X~C64fE=t");
Request clone = (Request)request.clone();
Request baseURL = (Request)request.toBaseURL();
baseURL.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt");
request.equals(clone);
Test 30: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
request.addParam("", "ob;-.");
request.equals(request);
Test 31: 
Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
request.setHashValue("3k^rs}os^");
request.equals(request);
Test 32: 
Request request = new Request("4bk)r(");
request.parse("UwU)b%4T'AjVb+#");
Request clone = (Request)request.clone();
// Undeclared exception!
try { 
  clone.equals(request);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 33: 
Request request = new Request();
request.setBaseURL("");
Request clone = (Request)request.clone();
Request setHashValue = request.setHashValue("v2#&R[");
setHashValue.equals(clone);
Test 34: 
Request request = new Request((String) null);
request.parse((String) null);
Test 35: 
Request request = new Request(false);
request.setBaseURL("file:/wU)b%4T'AjVb+#");
request.clone();
Test 36: 
Request request = new Request("?");
Test 37: 
Request request = new Request();
request.setParam("", "");
request.clone();
Test 38: 
Request request = new Request("??L( 9}||(7", true);
Test 39: 
Request request = new Request();
request.URLDecode((String) null);
Test 40: 
Request request = new Request();
request.getBaseURL();
Test 41: 
Request request = new Request();
request.getParams();
Test 42: 
Request request = new Request();
CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(request);
currentURLBO_RootRequest.getParam((String) null, false);
Test 43: 
Request request = new Request("");
request.addParam("\" = ", "x<*/66<$X");
request.getParam("", true);
Test 44: 
Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
request.getQueryString();
Test 45: 
Request request = new Request("");
request.toString();
Test 46: 
Request request = new Request("UwU)b%4T'AjVb+#");
request.toString();
Test 47: 
Request request = new Request();
request.URLDecode("");
Test 48: 
Request request = new Request();
request.URLDecode("file:/@6iBT<H~OvF");
Test 49: 
Request request = new Request();
request.URLEncode("");
Test 50: 
Request request = new Request(" ");
request.URLEncode("%26");
Test 51: 
Request request = new Request();
request.URLEncode((String) null);
Test 52: 
Request request = new Request();
request.setBaseURL("");
request.getBaseURL();
Test 53: 
Request request = new Request();
request.setBaseURL("https://www.example.com");
request.getBaseURL();
Test 54: 
Request request = new Request();
request.setHashValue("");
request.getHashValue();
Test 55: 
Request request = new Request((HttpServletRequest) null, true);
request.setHashValue("?");
request.getHashValue();
Test 56: 
Request request = new Request();
Request addParam = (Request)request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
addParam.getParam("");
Test 57: 
Request request = new Request((HttpServletRequest) null);
RequestParam requestParam = new RequestParam("The class \"");
Request setParam = (Request)request.setParam(requestParam);
setParam.getParam("The class \"");
Test 58: 
Request request = new Request();
request.addParam("", "");
request.getParam("", false);
Test 59: 
Request request = new Request((HttpServletRequest) null, true);
request.getQueryString();
Test 60: 
Request request = new Request();
request.getValue("", "");
Test 61: 
Request request = new Request();
request.isWebRequest();
Test 62: 
Request request = new Request(false);
request.parse("Could not parse value \"");
request.setBaseURL("Could not parse value \"");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 139
* Number of covered goals: 129
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 154
* Number of covered goals: 149
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 78%
* Total number of goals: 65
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 139
* Number of covered goals: 129
* Generated 63 tests with total length 177
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request(false);
request.getParam((String) null);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetParamWithNullValue
* Compiling Tests
refined test name is: testGetParamReturnsNullWhenParameterIsNotSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.getHashValue();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetHashValueReturnsNonNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
IRequest baseURL = request.toBaseURL();
assertFalse(baseURL.isWebRequest());


** It was a parseable test case! 
refined test name is: testToBaseURLNotAWebRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("Ap~T~r[)l@B~|ak|o", true);
boolean webRequest = request.isWebRequest();
assertTrue(webRequest);


** It was a parseable test case! 
refined test name is: testIsWebRequestWithSpecialCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request((HttpServletRequest) null);
RequestParam arg0 = new RequestParam("The class \"");
request.setParam(arg0);
RequestParam param = request.getParam("The class \"", true);
assertNotNull(param);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetParamWithDefaultValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("uBx<>!VW#");
request.addParam("uBx<>!VW#", (String) null);
IRequest cleanEmptyParams = request.cleanEmptyParams();
assertEquals("", cleanEmptyParams.getHashValue());
assertEquals("uBx<>!VW", cleanEmptyParams.getBaseURL());
assertTrue(cleanEmptyParams.isWebRequest());


** It was a parseable test case! 
refined test name is: testCleanEmptyParamsRemovesEmptyParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("f\"e:tHur\"itg\b!@#");
RequestParam arg0 = new RequestParam("f\"e:tHur\"itg\b!@#");
request.setParam(arg0);
IRequest cleanEmptyParams = request.cleanEmptyParams();
assertEquals("f\"e:tHur\"itg\b!@", cleanEmptyParams.getBaseURL());
assertTrue(cleanEmptyParams.isWebRequest());
assertEquals("", cleanEmptyParams.getHashValue());


** It was a parseable test case! 
refined test name is: testCleanEmptyParamsTrimsSpecialCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
IRequest cleanEmptyParams = request.cleanEmptyParams();
assertTrue(request.isWebRequest());
assertEquals("xdienJkrL", cleanEmptyParams.getBaseURL());


** It was a parseable test case! 
refined test name is: testGetBaseURLFromCleanRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request(false);
request.setParam("file:/U(pH_swT", "%3F");
IRequest cleanEmptyParams = request.cleanEmptyParams();
assertFalse(cleanEmptyParams.isWebRequest());


** It was a parseable test case! 
refined test name is: testCleanEmptyParamsRemovesEmptyParameter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.addParam("username", "johndoe");
String value = request.getValue("status", "200");
assertFalse(request.isWebRequest());
assertEquals("200", value);


** It was a parseable test case! 
refined test name is: testGetValueFromRequestParams
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("x_6*{O", true);
String value = request.getValue("x_6*{O", (String) null);
assertTrue(request.isWebRequest());
assertNull(value);


** It was a parseable test case! 
refined test name is: testGetValueWithDefaultNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
RequestParam arg0 = new RequestParam("U(pH_s");
request.setParam(arg0);
String value = request.getValue("U(pH_s", "U(pH_s");
assertEquals("U(pH_s", value);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetValueForParameter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
String value = request.getValue("", "");
assertFalse(request.isWebRequest());
assertEquals("net.sourceforge.ext4j.taglib.bo.Request", value);


** It was a parseable test case! 
refined test name is: testGetValuevalidKeyAndDefaultValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
int value = request.getValue("", 1307);
assertEquals(1307, value);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testAddParamAndRetrieveValueNotWebRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request(true);
int value = request.getValue("", 0);
assertFalse(request.isWebRequest());
assertEquals(0, value);


** It was a parseable test case! 
refined test name is: testGetValueWithEmptyKey
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
int value = request.getValue("3k^rs}os^", (-2781));
assertFalse(request.isWebRequest());
assertEquals((-2781), value);


** It was a parseable test case! 
refined test name is: testGetValueReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("mTQYU`b_");
RequestParam arg0 = new RequestParam("mTQYU`b_");
request.setParam(arg0);
int value = request.getValue("mTQYU`b_", (-890));
assertTrue(request.isWebRequest());
assertEquals((-890), value);


** It was a parseable test case! 
refined test name is: testIsWebRequestWithNonNullParamArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
IRequest removeParam = request.removeParam("username");
assertFalse(removeParam.isWebRequest());


** It was a parseable test case! 
refined test name is: testRemoveParamRemovesUsernameParameterFromRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.addParam("name", "John Doe");
IRequest removeParam = request.removeParam("name");
assertFalse(removeParam.isWebRequest());


** It was a parseable test case! 
refined test name is: testRemoveParamShouldReturnNonWebRequestObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("4bk)r(");
request.addParam("file:/H`kSvyD5:j>|", "?");
IRequest removeParam = request.removeParam("+Mt=g^W Kb'f=0UN\"");
assertTrue(removeParam.isWebRequest());


** It was a parseable test case! 
refined test name is: testRemoveParamFromWebRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("");
IRequest setParam = request.setParam((RequestParam) null);
assertTrue(setParam.isWebRequest());


** It was a parseable test case! 
refined test name is: testIsWebRequestWithNullRequestParam
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.setHashValue("d09207b290d5ca61308a49eae7a7fe0d");
request.hashCode();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testRequestHashCode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
boolean equals = request.equals((Object) null);
assertFalse(equals);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testNotEqualToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request arg0 = new Request(false);
// Undeclared exception!
try { 
  arg0.equals(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}


** It was a parseable test case! 
refined test name is: testEqualsWithNullIsActiveField
* Compiling Tests
refined test name is: testEqualsWithNullIsActiveField
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.parse("net.sourceforge.ext4j.taglib.bo.Request");
Request arg0 = new Request();
boolean equals = request.equals(arg0);
assertTrue(request.isWebRequest());
assertFalse(arg0.isWebRequest());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsDifferentTypeReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request(false);
IRequest arg0 = request.clone();
boolean equals = request.equals(arg0);
assertFalse(equals);
assertFalse(request.isWebRequest());
assertTrue(arg0.isWebRequest());


** It was a parseable test case! 
refined test name is: testCloneRequestObjectWithIsWebRequestFlagFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request arg0 = new Request(":f]h!EObjC");
Request request = new Request("Q;CMYSjf_1LJWuk`D3y");
boolean equals = request.equals(arg0);
assertTrue(request.isWebRequest());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentInstancesReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request arg0 = new Request("]U dos not exist.");
Request request = new Request("]U dos not exist.");
assertTrue(request.equals((Object)arg0));

request.addParam("]U dos not exist.", "]U dos not exist.");
boolean equals = request.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsMethodForRequestsWithSameParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("");
IRequest setParam = request.setParam("", "S?2xu`.hO!X~C64fE=t");
IRequest arg0 = request.clone();
assertTrue(arg0.equals((Object)setParam));

IRequest baseURL = request.toBaseURL();
baseURL.setParam("%1D3F", "?=S%3F2xu`.hO!X~C64fE%3Dt");
boolean equals = request.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testSetParamAndCloneAndToBaseURLAndEqualsMethods
* Compiling Tests
refined test name is: testSetParamAndEqualsMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request arg0 = new Request();
assertFalse(arg0.isWebRequest());

arg0.parse("net.sourceforge.ext4j.taglib.bo.Request");
arg0.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
arg0.addParam("", "ob;-.");
boolean equals = arg0.equals(arg0);
assertTrue(arg0.isWebRequest());
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testRequestIsWebRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request arg0 = new Request();
assertFalse(arg0.isWebRequest());

arg0.parse("net.sourceforge.ext4j.taglib.bo.Request");
arg0.setHashValue("3k^rs}os^");
boolean equals = arg0.equals(arg0);
assertTrue(arg0.isWebRequest());
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testParseAndSetHashValueAndEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request arg0 = new Request("4bk)r(");
arg0.parse("UwU)b%4T'AjVb+#");
IRequest clone = arg0.clone();
// Undeclared exception!
try { 
  clone.equals(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}


** It was a parseable test case! 
refined test name is: testEqualswhenCalledOnClonedObjectreturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
IRequest setBaseURL = request.setBaseURL("");
IRequest arg0 = request.clone();
assertTrue(arg0.equals((Object)setBaseURL));

Request setHashValue = request.setHashValue("v2#&R[");
setHashValue.equals(arg0);
assertFalse(setHashValue.isWebRequest());
assertTrue(arg0.isWebRequest());


** It was a parseable test case! 
refined test name is: testSetBaseURLAndHashValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request((String) null);
request.parse((String) null);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testIsNotWebRequestWithoutComments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request(false);
request.setBaseURL("file:/wU)b%4T'AjVb+#");
IRequest clone = request.clone();
assertFalse(clone.isWebRequest());


** It was a parseable test case! 
refined test name is: testClone
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("?");
assertEquals("", request.getBaseURL());
assertTrue(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testInvalidUrlBaseUrl
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.setParam("", "");
IRequest clone = request.clone();
assertTrue(clone.isWebRequest());
assertFalse(request.isWebRequest());
assertEquals("null", clone.getBaseURL());


** It was a parseable test case! 
refined test name is: testCloneMethodCopiesAllParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("??L( 9}||(7", true);
assertTrue(request.isWebRequest());
assertEquals("", request.getBaseURL());


** It was a parseable test case! 
refined test name is: testIsWebRequestAndGetBaseURL
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.URLDecode((String) null);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testDecodeNullURL
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.getBaseURL();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testIsNotWebRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.getParams();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testIsWebRequestValidateReturnValue
* Compiling Tests
refined test name is: testIsNotWebRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request arg0 = new Request();
CurrentURLBO.RootRequest currentURLBO_RootRequest = new CurrentURLBO.RootRequest(arg0);
currentURLBO_RootRequest.getParam((String) null, false);
assertFalse(currentURLBO_RootRequest.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetParamNullAndFalseSetsWebRequestFlagToFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("");
request.addParam("\" = ", "x<*/66<$X");
RequestParam param = request.getParam("", true);
assertNull(param);
assertTrue(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetParamWithEmptyNameShouldReturnNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("xdienJkrL??");
request.parse("xdienJkrL??");
String queryString = request.getQueryString();
assertEquals("xdienJkrL", request.getBaseURL());
assertTrue(request.isWebRequest());
assertEquals("??=&?=", queryString);


** It was a parseable test case! 
refined test name is: testRequestParseMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("");
String string = request.toString();
assertEquals("", string);
assertTrue(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testEmptyRequestToStringAndIsWebRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request("UwU)b%4T'AjVb+#");
String string = request.toString();
assertEquals("UwU)b%4T'AjVb+", request.getBaseURL());
assertTrue(request.isWebRequest());
assertEquals("UwU)b%4T'AjVb+#", string);


** It was a parseable test case! 
refined test name is: testRequestToString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
String URLDecode = request.URLDecode("");
assertFalse(request.isWebRequest());
assertEquals("", URLDecode);


** It was a parseable test case! 
refined test name is: testURLDecodeIsNotWebRequestAndEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
String URLDecode = request.URLDecode("file:/@6iBT<H~OvF");
assertFalse(request.isWebRequest());
assertEquals("file:/@6iBT<H~OvF", URLDecode);


** It was a parseable test case! 
refined test name is: testURLDecoding
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
String URLEncode = request.URLEncode("");
assertFalse(request.isWebRequest());
assertEquals("", URLEncode);


** It was a parseable test case! 
refined test name is: testEncodeUrlEmptyString
* Compiling Tests
refined test name is: testEncodeUrl
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request(" ");
String URLEncode = request.URLEncode("%26");
assertTrue(request.isWebRequest());
assertEquals("%26", URLEncode);


** It was a parseable test case! 
refined test name is: testURLEncodePercentSign
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.URLEncode((String) null);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testURLEncodeNullInputThrowsException
* Compiling Tests
refined test name is: testURLEncodeWithNullInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.setBaseURL("");
request.getBaseURL();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testIsNotWebRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.setBaseURL("https://www.example.com");
request.getBaseURL();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetBaseURL
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.setHashValue("");
request.getHashValue();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testEmptyHashValueReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request((HttpServletRequest) null, true);
request.setHashValue("?");
request.getHashValue();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetHashValueForInvalidValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
IRequest addParam = request.addParam("", "net.sourceforge.ext4j.taglib.bo.Request");
RequestParam param = addParam.getParam("");
assertEquals("", param.getName());
assertNotNull(param);
assertFalse(addParam.isWebRequest());


** It was a parseable test case! 
refined test name is: testAddParameterAndGetItBack
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request((HttpServletRequest) null);
RequestParam arg0 = new RequestParam("The class \"");
IRequest setParam = request.setParam(arg0);
RequestParam param = setParam.getParam("The class \"");
assertNotNull(param);
assertFalse(setParam.isWebRequest());


** It was a parseable test case! 
refined test name is: testSetParamAndGetParamWithValidName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.addParam("", "");
request.getParam("", false);
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testAddParamWithEmptyKeyAndValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request((HttpServletRequest) null, true);
request.getQueryString();
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testGetQueryStringNullServletRequest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
request.getValue("", "");
assertFalse(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testIsNotWebRequestEmptyStringValue
* Compiling Tests
refined test name is: testIsNotWebRequestWithEmptyStringValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request();
boolean webRequest = request.isWebRequest();
assertFalse(webRequest);


** It was a parseable test case! 
refined test name is: testIsWebRequestReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Request request = new Request(false);
assertFalse(request.isWebRequest());

request.parse("Could not parse value \"");
request.setBaseURL("Could not parse value \"");
assertTrue(request.isWebRequest());


** It was a parseable test case! 
refined test name is: testParseAndSetBaseURL
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:46:21.381 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:21.439 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:21.781 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:21.787 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:22.188 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:22.197 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:22.366 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:22.372 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:22.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:22.747 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:23.051 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:23.054 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:23.456 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:23.460 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:23.887 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:23.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:24.227 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:24.235 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:24.604 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:24.607 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:25.006 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:25.013 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:25.417 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:25.420 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:25.847 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:25.856 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:26.225 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:26.229 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:26.698 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:26.708 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:27.097 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:27.106 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:27.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:27.463 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:27.915 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:27.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:28.325 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:28.332 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:28.663 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:28.678 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:29.080 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:29.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:29.427 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:29.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:29.758 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:29.769 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:46:30.153 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:30.161 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:30.462 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:30.470 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:30.850 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:30.859 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:31.144 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:31.155 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:31.580 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:31.584 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:46:31.752 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:31.756 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:31.903 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:31.906 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:32.057 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:32.059 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:32.206 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:32.209 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:32.537 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:32.545 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:32.764 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:32.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:32.911 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:32.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:33.054 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:33.057 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:33.202 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:33.205 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:33.344 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:33.347 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:33.479 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:33.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:33.593 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:33.600 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:46:33.709 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:33.711 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:33.813 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:33.815 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:33.916 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:33.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:34.023 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.026 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:34.123 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.125 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:34.224 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.226 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:34.325 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.327 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:34.432 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:46:34.566 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.569 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:34.703 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.707 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:46:34.827 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.830 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:34.947 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:34.950 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:35.338 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:35.340 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:35.433 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:35.435 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:35.532 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:35.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:35.654 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:35.657 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:35.778 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:35.781 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:35.899 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:35.901 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:36.007 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:36.009 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:46:36.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:36.101 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:36.190 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:36.192 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:46:36.280 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:36.283 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 23 called: 1 to improve: false
** Write a test suite: 28 called: 2 to improve: false
** Write a test suite: 40 called: 3 to improve: false
** Write a test suite: 48 called: 4 to improve: false
** Write a test suite: 50 called: 5 to improve: false
** Write a test suite: 59 called: 6 to improve: false
[MASTER] 04:46:36.755 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:36.758 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 13 called: 2 to improve: false
** Write a test suite: 21 called: 3 to improve: false
** Write a test suite: 33 called: 4 to improve: false
** Write a test suite: 38 called: 5 to improve: false
** Write a test suite: 61 called: 6 to improve: false
[MASTER] 04:46:37.283 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2408607058179550415.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:46:37.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2408607058179550415.jar
* Writing tests to file
* Writing JUnit test case 'Request_ESTest' to evosuite-tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 13 called: 2 to improve: false
** Write a test suite: 21 called: 3 to improve: false
** Write a test suite: 33 called: 4 to improve: false
** Write a test suite: 38 called: 5 to improve: false
** Write a test suite: 61 called: 6 to improve: false
* Done!

* Computation finished
