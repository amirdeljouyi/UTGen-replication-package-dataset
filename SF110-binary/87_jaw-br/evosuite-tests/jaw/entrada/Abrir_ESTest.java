/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 14 16:31:44 GMT 2024
 */

package jaw.entrada;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import jaw.entrada.Abrir;
import jaw.gui.ProcessarEntidadesTabela;
import jaw.gui.ProcessarEntidadesTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Abrir_ESTest extends Abrir_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFailsToCreateAbrirTaking2ArgumentsThrowsNullPointerException() throws Throwable  {
      // Given: An instance of ProcessarEntidadesTree is created
      ProcessarEntidadesTree processarEntidadesTree = new ProcessarEntidadesTree();
      
      // When: The Abrir method is called with a null value for the first argument
      Abrir abrir = null;
      try {
      // Expecting an exception to be thrown when calling the Abrir method with a null value for the first argument
      abrir = new Abrir(processarEntidadesTree, 788);
      fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      // Verify that the expected exception is thrown
      verifyException("jaw.entrada.Abrir", e);}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFailsToCreateAbrirTaking2ArgumentsThrowsHeadlessException0() throws Throwable  {
      // Given: a ProcessarEntidadesTree instance and a file path "C:UsersUserDocuments\teste.txt"
      ProcessarEntidadesTree arg0 = new ProcessarEntidadesTree();
      String filePath = "C:UsersUserDocuments\\teste.txt";
      
      // When: attempting to open the file with the Abrir class
      Abrir abrir = null;
      try {
      abrir = new Abrir(arg0, filePath);
      } catch (HeadlessException e) {
      // Then: an exception is thrown because the method is not available on a headless system
      verifyException("java.awt.GraphicsEnvironment", e);}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFailsToCreateAbrirTaking2ArgumentsThrowsHeadlessException1() throws Throwable  {
      ProcessarEntidadesTabela arg0 = new ProcessarEntidadesTabela();
      Abrir abrir;
      try {
      // given: attempt to open a file with the name "b%Ur.ja~Xe.jaw"
      abrir = new Abrir(arg0, "b%Ur.ja~Xe.jaw");
      
      // when: an exception is thrown because this file does not exist
      fail("Expecting exception: HeadlessException");
      } catch(HeadlessException e) {
      // then: the expected exception (HeadlessException) is thrown
      verifyException("java.awt.GraphicsEnvironment", e);}
  }
}
