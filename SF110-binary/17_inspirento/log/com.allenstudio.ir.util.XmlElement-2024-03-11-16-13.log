* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.allenstudio.ir.util.XmlElement
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/17_inspirento/evosuite-files/evosuite.properties
* Connecting to master process on port 14697
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:14:00.582 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:14:00.584 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:14:00.587 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:14:00.607 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:14:00.614 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:14:00.615 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class com.allenstudio.ir.util.XmlElement
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 490
* Using seed 1710173638656
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 260 / 490
[Progress:=>                            4%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:=============================>     83%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     84%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    87%][Progress:======>                       20%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%]
* Search finished after 107s and 119 generations, 32279 statements, best individual has fitness: 55.0
* Generated before the refinement 66 tests with total length 183
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
xmlElement.addSubElement(clone);
xmlElement.equals(clone);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("Root", "root");
        XmlElement clone = ((XmlElement) (xmlElement.clone()));
        xmlElement.addSubElement(clone);
        xmlElement.equals(clone);
        // Test data for the equals method
        String[] subElements = new String[]{ "<subElement1></subElement1>", "<subElement2></subElement2>" };
        String[] otherSubElements = new String[]{ "<otherSubElement1></otherSubElement1>", "<otherSubElement2></otherSubElement2>" };
        // Test data for the addSubElement method
        String[] attributes = new String[]{ "attribute1=\"value1\"", "attribute2=\"value2\"" };
        String[] otherAttributes = new String[]{ "otherAttribute1=\"value1\"", "otherAttribute2=\"value2\"" };
        // Test data for the getName and getValue methods
        String name = "Root";
        String value = "root";
    }
}
statement is: XmlElement xmlElement = new XmlElement("Root", "root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement clone = ((XmlElement) (xmlElement.clone())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((XmlElement) (xmlElement.clone())) target is: xmlElement method is: clone()
statement is: xmlElement.addSubElement(clone), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(clone) target is: xmlElement method is: addSubElement(XmlElement)
statement is: xmlElement.equals(clone), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals(clone) target is: xmlElement method is: equals(XmlElement)
statement is: // Test data for the equals method
String[] subElements = new String[]{ "<subElement1></subElement1>", "<subElement2></subElement2>" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] otherSubElements = new String[]{ "<otherSubElement1></otherSubElement1>", "<otherSubElement2></otherSubElement2>" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: // Test data for the addSubElement method
String[] attributes = new String[]{ "attribute1=\"value1\"", "attribute2=\"value2\"" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] otherAttributes = new String[]{ "otherAttribute1=\"value1\"", "otherAttribute2=\"value2\"" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: // Test data for the getName and getValue methods
String name = "Root", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String value = "root", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "Root"
* this is vulnerable: String string = "root"
TestCase is: String string = "Root";
String string = "root";

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int count = xmlElement.count()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int count1 = 50;
        String name1 = "John Smith";
        boolean isAdmin1 = true;
        XmlElement xmlElement1 = new XmlElement();
        xmlElement1.count(count1);
        xmlElement1.name(name1);
        xmlElement1.isAdmin(isAdmin1);
        int count2 = 20;
        String name2 = "Jane Doe";
        boolean isAdmin2 = false;
        XmlElement xmlElement2 = new XmlElement();
        xmlElement2.count(count2);
        xmlElement2.name(name2);
        xmlElement2.isAdmin(isAdmin2);
        int count3 = 100;
        String name3 = "Jim Brown";
        boolean isAdmin3 = true;
        XmlElement xmlElement3 = new XmlElement();
        xmlElement3.count(count3);
        xmlElement3.name(name3);
        xmlElement3.isAdmin(isAdmin3);
        // Original test data
        int count = 3;
        String name = "Jane Doe";
        String email = "janedoe@email.com";
        boolean isAdmin = false;
        XmlElement xmlElement = new XmlElement();
        xmlElement.count(count);
        xmlElement.name(name);
        xmlElement.isAdmin(isAdmin);
    }
}
statement is: // Improved test data
int count1 = 50, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name1 = "John Smith", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isAdmin1 = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: XmlElement xmlElement1 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.count(count1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.count(count1) target is: xmlElement1 method is: count(int)
statement is: xmlElement1.name(name1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.name(name1) target is: xmlElement1 method is: name(java.lang.String)
statement is: xmlElement1.isAdmin(isAdmin1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.isAdmin(isAdmin1) target is: xmlElement1 method is: isAdmin(boolean)
statement is: int count2 = 20, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name2 = "Jane Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isAdmin2 = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: XmlElement xmlElement2 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.count(count2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.count(count2) target is: xmlElement2 method is: count(int)
statement is: xmlElement2.name(name2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.name(name2) target is: xmlElement2 method is: name(java.lang.String)
statement is: xmlElement2.isAdmin(isAdmin2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.isAdmin(isAdmin2) target is: xmlElement2 method is: isAdmin(boolean)
statement is: int count3 = 100, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name3 = "Jim Brown", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isAdmin3 = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: XmlElement xmlElement3 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement3.count(count3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.count(count3) target is: xmlElement3 method is: count(int)
statement is: xmlElement3.name(name3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.name(name3) target is: xmlElement3 method is: name(java.lang.String)
statement is: xmlElement3.isAdmin(isAdmin3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.isAdmin(isAdmin3) target is: xmlElement3 method is: isAdmin(boolean)
statement is: // Original test data
int count = 3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "Jane Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String email = "janedoe@email.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isAdmin = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.count(count), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.count(count) target is: xmlElement method is: count(int)
statement is: xmlElement.name(name), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.name(name) target is: xmlElement method is: name(java.lang.String)
statement is: xmlElement.isAdmin(isAdmin), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.isAdmin(isAdmin) target is: xmlElement method is: isAdmin(boolean)
* this is vulnerable: int _int = 50
* this is vulnerable: String string = "John Smith"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: int _int = 20
* this is vulnerable: String string = "Jane Doe"
* this is vulnerable: boolean _boolean = false
* this is vulnerable: int _int = 100
* this is vulnerable: String string = "Jim Brown"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: int _int = 3
* this is vulnerable: String string = "Jane Doe"
* this is vulnerable: String string = "janedoe@email.com"
* this is vulnerable: boolean _boolean = false
TestCase is: int _int = 50;
String string = "John Smith";
boolean _boolean = true;
XmlElement xmlElement = new XmlElement();
int _int = 20;
String string = "Jane Doe";
boolean _boolean = false;
XmlElement xmlElement = new XmlElement();
int _int = 100;
String string = "Jim Brown";
boolean _boolean = true;
XmlElement xmlElement = new XmlElement();
int _int = 3;
String string = "Jane Doe";
String string = "janedoe@email.com";
boolean _boolean = false;
XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttribute(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("VUm W+1y?U|Z")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("VUm W+1y?U|Z");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getAttribute("lastName");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("lastName"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("lastName") target is: xmlElement method is: getAttribute(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;)Ljava/lang/String;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "lastName";
xmlElement.getAttribute(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttributeNames()Ljava/util/Enumeration; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Enumeration<E>
statement code is: Enumeration attributeNames = xmlElement.getAttributeNames()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setAttribute("name", "John Doe");
        xmlElement.setAttribute("age", 30);
        xmlElement.setAttribute("city", "New York");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setAttribute("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("name", "John Doe") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.setAttribute("age", 30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("age", 30) target is: xmlElement method is: setAttribute(java.lang.String,int)
statement is: xmlElement.setAttribute("city", "New York"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("city", "New York") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeAllElements()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeAllElements()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.removeAllElements();
        // Add some example elements to the XML element
        xmlElement.addChild("element1");
        xmlElement.addChild("element2");
        xmlElement.addChild("element3");
        // Remove some of the added elements
        xmlElement.removeChild("element2");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.removeAllElements(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeAllElements() target is: xmlElement method is: removeAllElements()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeAllElements()V
statement is: // Add some example elements to the XML element
xmlElement.addChild("element1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add some example elements to the XML element
xmlElement.addChild("element1") target is: xmlElement method is: addChild(java.lang.String)
statement is: xmlElement.addChild("element2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild("element2") target is: xmlElement method is: addChild(java.lang.String)
statement is: xmlElement.addChild("element3"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild("element3") target is: xmlElement method is: addChild(java.lang.String)
statement is: // Remove some of the added elements
xmlElement.removeChild("element2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Remove some of the added elements
xmlElement.removeChild("element2") target is: xmlElement method is: removeChild(java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement();
        xmlElement1.setText("This is a test element with two attributes");
        xmlElement1.setName("test-element");
        Map<String, String> attributes1 = new HashMap<>();
        attributes1.put("attribute1", "value1");
        attributes1.put("attribute2", "value2");
        xmlElement1.setAttributes(attributes1);
        XmlElement xmlElement2 = new XmlElement();
        xmlElement2.setText("This is a test element with three child elements");
        xmlElement2.setName("test-element");
        Map<String, String> attributes2 = new HashMap<>();
        attributes2.put("attribute1", "value1");
        attributes2.put("attribute2", "value2");
        XmlElement xmlChildElement1 = new XmlElement();
        xmlChildElement1.setText("This is a child element");
        xmlChildElement1.setName("child-element");
        Map<String, String> childAttributes1 = new HashMap<>();
        childAttributes1.put("attribute3", "value3");
        childAttributes1.put("attribute4", "value4");
        xmlChildElement1.setAttributes(childAttributes1);
        XmlElement xmlChildElement2 = new XmlElement();
        xmlChildElement2.setText("This is another child element");
        xmlChildElement2.setName("child-element");
        Map<String, String> childAttributes2 = new HashMap<>();
        childAttributes2.put("attribute5", "value5");
        childAttributes2.put("attribute6", "value6");
        xmlChildElement2.setAttributes(childAttributes2);
        List<XmlElement> childElements = Arrays.asList(xmlChildElement1, xmlChildElement2);
        xmlElement2.setChildren(childElements);
    }
}
statement is: XmlElement xmlElement1 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.setText("This is a test element with two attributes"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setText("This is a test element with two attributes") target is: xmlElement1 method is: setText(java.lang.String)
statement is: xmlElement1.setName("test-element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setName("test-element") target is: xmlElement1 method is: setName(java.lang.String)
statement is: Map<String, String> attributes1 = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributes1.put("attribute1", "value1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes1.put("attribute1", "value1") target is: attributes1 method is: put(java.lang.String,java.lang.String)
statement is: attributes1.put("attribute2", "value2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes1.put("attribute2", "value2") target is: attributes1 method is: put(java.lang.String,java.lang.String)
statement is: xmlElement1.setAttributes(attributes1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setAttributes(attributes1) target is: xmlElement1 method is: setAttributes(Map)
statement is: XmlElement xmlElement2 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.setText("This is a test element with three child elements"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setText("This is a test element with three child elements") target is: xmlElement2 method is: setText(java.lang.String)
statement is: xmlElement2.setName("test-element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setName("test-element") target is: xmlElement2 method is: setName(java.lang.String)
statement is: Map<String, String> attributes2 = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributes2.put("attribute1", "value1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes2.put("attribute1", "value1") target is: attributes2 method is: put(java.lang.String,java.lang.String)
statement is: attributes2.put("attribute2", "value2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes2.put("attribute2", "value2") target is: attributes2 method is: put(java.lang.String,java.lang.String)
statement is: XmlElement xmlChildElement1 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlChildElement1.setText("This is a child element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlChildElement1.setText("This is a child element") target is: xmlChildElement1 method is: setText(java.lang.String)
statement is: xmlChildElement1.setName("child-element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlChildElement1.setName("child-element") target is: xmlChildElement1 method is: setName(java.lang.String)
statement is: Map<String, String> childAttributes1 = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: childAttributes1.put("attribute3", "value3"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: childAttributes1.put("attribute3", "value3") target is: childAttributes1 method is: put(java.lang.String,java.lang.String)
statement is: childAttributes1.put("attribute4", "value4"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: childAttributes1.put("attribute4", "value4") target is: childAttributes1 method is: put(java.lang.String,java.lang.String)
statement is: xmlChildElement1.setAttributes(childAttributes1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlChildElement1.setAttributes(childAttributes1) target is: xmlChildElement1 method is: setAttributes(Map)
statement is: XmlElement xmlChildElement2 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlChildElement2.setText("This is another child element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlChildElement2.setText("This is another child element") target is: xmlChildElement2 method is: setText(java.lang.String)
statement is: xmlChildElement2.setName("child-element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlChildElement2.setName("child-element") target is: xmlChildElement2 method is: setName(java.lang.String)
statement is: Map<String, String> childAttributes2 = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: childAttributes2.put("attribute5", "value5"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: childAttributes2.put("attribute5", "value5") target is: childAttributes2 method is: put(java.lang.String,java.lang.String)
statement is: childAttributes2.put("attribute6", "value6"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: childAttributes2.put("attribute6", "value6") target is: childAttributes2 method is: put(java.lang.String,java.lang.String)
statement is: xmlChildElement2.setAttributes(childAttributes2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlChildElement2.setAttributes(childAttributes2) target is: xmlChildElement2 method is: setAttributes(Map)
statement is: List<XmlElement> childElements = Arrays.asList(xmlChildElement1, xmlChildElement2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList(xmlChildElement1, xmlChildElement2) target is: Arrays method is: asList(XmlElement,XmlElement)
statement is: xmlElement2.setChildren(childElements), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setChildren(childElements) target is: xmlElement2 method is: setChildren(List)
TestCase is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: notifyObservers()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.notifyObservers()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.notifyObservers("This is a test message");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.notifyObservers("This is a test message"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.notifyObservers("This is a test message") target is: xmlElement method is: notifyObservers(java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null)
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
test data is: XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
xmlElement.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("kB`", ((Hashtable<String, String>) (null)));
        xmlElement.clone();
        // Improved test data:
        XmlElement xmlElement = new XmlElement("kB`", new Hashtable<String, String>());
        xmlElement.clone();
    }
}
statement is: XmlElement xmlElement = new XmlElement("kB`", ((Hashtable<String, String>) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.clone() target is: xmlElement method is: clone()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: clone()Ljava/lang/Object;
statement is: // Improved test data:
XmlElement xmlElement = new XmlElement("kB`", new Hashtable<String, String>()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.clone() target is: xmlElement method is: clone()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: clone()Ljava/lang/Object;
TestCase is: String string = "kB`";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
((XmlElement) string).clone();
String string = "kB`";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
((XmlElement) string).clone();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root");
        XmlElement addSubElement = xmlElement.addSubElement("child1");
        assertEquals(addSubElement.getParent(), xmlElement);
        xmlElement.setAttribute("attr", "value");
        addSubElement.setAttribute("attr", "value");
    }
}
statement is: XmlElement xmlElement = new XmlElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("child1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("child1") target is: xmlElement method is: addSubElement(java.lang.String)
statement is: assertEquals(addSubElement.getParent(), xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(addSubElement.getParent(), xmlElement) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: xmlElement.setAttribute("attr", "value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("attr", "value") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: addSubElement.setAttribute("attr", "value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.setAttribute("attr", "value") target is: addSubElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: append(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.append(arg0)
statement is: getElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.append(xmlElement);
xmlElement.getElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.append("This is a test string with a length of 20 characters");
        xmlElement.getElement(0);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.append("This is a test string with a length of 20 characters"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.append("This is a test string with a length of 20 characters") target is: xmlElement method is: append(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: append(Lcom/allenstudio/ir/util/XmlElement;)V
statement is: xmlElement.getElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement(0) target is: xmlElement method is: getElement(int)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "This is a test string with a length of 20 characters";
xmlElement.append((XmlElement) string);
int _int = 0;
xmlElement.getElement(_int);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setName(" = '")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.setName(" = '");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setName("Book");
        xmlElement.setAttribute("id", "12345");
        xmlElement.setTextContent("The Great Gatsby");
        XmlElement anotherXmlElement = new XmlElement();
        anotherXmlElement.setName("Book");
        anotherXmlElement.setAttribute("id", "98765");
        anotherXmlElement.setTextContent("To Kill a Mockingbird");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setName("Book"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("Book") target is: xmlElement method is: setName(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: xmlElement.setAttribute("id", "12345"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("id", "12345") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.setTextContent("The Great Gatsby"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setTextContent("The Great Gatsby") target is: xmlElement method is: setTextContent(java.lang.String)
statement is: XmlElement anotherXmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: anotherXmlElement.setName("Book"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: anotherXmlElement.setName("Book") target is: anotherXmlElement method is: setName(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: anotherXmlElement.setAttribute("id", "98765"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: anotherXmlElement.setAttribute("id", "98765") target is: anotherXmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: anotherXmlElement.setTextContent("To Kill a Mockingbird"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: anotherXmlElement.setTextContent("To Kill a Mockingbird") target is: anotherXmlElement method is: setTextContent(java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "Book";
xmlElement.setName(string);
XmlElement xmlElement = new XmlElement();
String string = "Book";
xmlElement.setName(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute((String) null, (String) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addAttribute("id", "1234567890");
        xmlElement.addAttribute("name", "John Doe");
        xmlElement.addAttribute("age", "30");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("id", "1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("id", "1234567890") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("name", "John Doe") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("age", "30") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "id";
String string = "1234567890";
xmlElement.addAttribute(string, string);
String string = "name";
String string = "John Doe";
xmlElement.addAttribute(string, string);
String string = "age";
String string = "30";
xmlElement.addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement((String) null)
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute((String) null, ";/")
test data is: XmlElement xmlElement = new XmlElement((String) null);
xmlElement.addAttribute((String) null, ";/");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("John Doe");
        xmlElement.addAttribute("age", "35");
    }
}
statement is: XmlElement xmlElement = new XmlElement("John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("age", "35"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("age", "35") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
TestCase is: String string = "John Doe";
XmlElement xmlElement = new XmlElement(string);
String string = "age";
String string = "35";
((XmlElement) string).addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("!>", "")
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = hashtable.put("!>", "Cas]Jl+at(")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("!>", "!>")
test data is: XmlElement xmlElement = new XmlElement("!>", "");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("!>", "Cas]Jl+at(");
xmlElement.getAttribute("!>", "!>");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("!>", "");
        Hashtable<String, String> attributes = xmlElement.getAttributes();
        attributes.put("!>", "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(");
        xmlElement.getAttribute("!>", "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(");
    }
}
statement is: XmlElement xmlElement = new XmlElement("!>", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> attributes = xmlElement.getAttributes(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttributes()Ljava/util/Hashtable;
statement is: attributes.put("!>", "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at("), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes.put("!>", "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(") target is: attributes method is: put(java.lang.String,java.lang.String)
source statement: getAttributes()Ljava/util/Hashtable; callee: VariableReference: Statement 1, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 3
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: xmlElement.getAttribute("!>", "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at("), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("!>", "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "!>";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getAttributes();
String string = "!>";
String string = "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(";
((Hashtable) string).put(string, string);
String string = "!>";
String string = "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(";
((XmlElement) string).getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = arg0.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.removeElement("my-element");
        // Expected result: The element "my-element" should be removed from the XML document. }}
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.removeElement("my-element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement("my-element") target is: xmlElement method is: removeElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: // Expected result: The element "my-element" should be removed from the XML document. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "my-element";
xmlElement.removeElement((XmlElement) string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("")
statement is: removeFromParent()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeFromParent()
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.removeFromParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("sub-element-1");
        addSubElement.removeFromParent();
        // Removing a sub-element from its parent element }}
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("sub-element-1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("sub-element-1") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.removeFromParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.removeFromParent() target is: addSubElement method is: removeFromParent()
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: removeFromParent()V
statement is: // Removing a sub-element from its parent element }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "sub-element-1";
xmlElement.addSubElement(string);
((XmlElement) string).removeFromParent();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("-")
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = arg0.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-");
xmlElement.removeElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("banana");
        xmlElement.removeElement(xmlElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("banana"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("banana") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.removeElement(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(xmlElement) target is: xmlElement method is: removeElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "banana";
xmlElement.addSubElement(string);
xmlElement.removeElement(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(".we")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".we");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getElement("header");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getElement("header"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("header") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "header";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("J21(", "J21(")
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("7viId=AxnI4!KH-g")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("J21(", "J21(");
xmlElement.getElement("7viId=AxnI4!KH-g");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("J21(9", "J21(9");
        xmlElement.getElement("7viId=AxnI4!KH-g");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("J21(9", "J21(9"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("J21(9", "J21(9") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement("7viId=AxnI4!KH-g"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("7viId=AxnI4!KH-g") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "J21(9";
String string = "J21(9";
xmlElement.addSubElement(string, string);
String string = "7viId=AxnI4!KH-g";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("&BT:ts^zDe4a?=.bv}")
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("&BT:ts^zDe4a?=.bv}")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("&BT:ts^zDe4a?=.bv}");
xmlElement.getElement("&BT:ts^zDe4a?=.bv}");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("employee-data");
        xmlElement.getElement("employee-data");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("employee-data"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("employee-data") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement("employee-data"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("employee-data") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "employee-data";
xmlElement.addSubElement(string);
String string = "employee-data";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(".")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("Root");
        xmlElement.addSubElement("Child1");
        xmlElement.addSubElement("Child2");
        // Testing the addition of a sub-element to an existing element
        xmlElement.addSubElement("Grandchild1", "Child1");
        // Testing the removal of a sub-element from an existing element
        xmlElement.removeSubElement("Grandchild1", "Child1");
        // Testing the addition and removal of multiple sub-elements to/from an existing element
        xmlElement.addSubElements(new String[]{ "Grandchild2", "Grandchild3" }, "Child1");
        xmlElement.removeSubElements(new String[]{ "Grandchild2", "Grandchild3" }, "Child1");
        // Testing the removal of all sub-elements from an existing element
        xmlElement.clearSubElements("Child1");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("Root"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Root") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("Child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Child1") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("Child2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Child2") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: // Testing the addition of a sub-element to an existing element
xmlElement.addSubElement("Grandchild1", "Child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing the addition of a sub-element to an existing element
xmlElement.addSubElement("Grandchild1", "Child1") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
statement is: // Testing the removal of a sub-element from an existing element
xmlElement.removeSubElement("Grandchild1", "Child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing the removal of a sub-element from an existing element
xmlElement.removeSubElement("Grandchild1", "Child1") target is: xmlElement method is: removeSubElement(java.lang.String,java.lang.String)
statement is: // Testing the addition and removal of multiple sub-elements to/from an existing element
xmlElement.addSubElements(new String[]{ "Grandchild2", "Grandchild3" }, "Child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing the addition and removal of multiple sub-elements to/from an existing element
xmlElement.addSubElements(new String[]{ "Grandchild2", "Grandchild3" }, "Child1") target is: xmlElement method is: addSubElements(java.lang.String[],java.lang.String)
statement is: xmlElement.removeSubElements(new String[]{ "Grandchild2", "Grandchild3" }, "Child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeSubElements(new String[]{ "Grandchild2", "Grandchild3" }, "Child1") target is: xmlElement method is: removeSubElements(java.lang.String[],java.lang.String)
statement is: // Testing the removal of all sub-elements from an existing element
xmlElement.clearSubElements("Child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing the removal of all sub-elements from an existing element
xmlElement.clearSubElements("Child1") target is: xmlElement method is: clearSubElements(java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "Root";
xmlElement.addSubElement(string);
String string = "Child1";
xmlElement.addSubElement(string);
String string = "Child2";
xmlElement.addSubElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("IX!.9w5\"A9k G3|J")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("IX!.9w5\"A9k G3|J")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("I'm a sub-element!");
        xmlElement.addSubElement("So am I!");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("I'm a sub-element!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("I'm a sub-element!") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("So am I!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("So am I!") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "I'm a sub-element!";
xmlElement.addSubElement(string);
String string = "So am I!";
xmlElement.addSubElement(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("g59NAsW")
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "g59NAsW")
test data is: XmlElement xmlElement = new XmlElement("g59NAsW");
XmlElement.printNode(xmlElement, "g59NAsW");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root");
        XmlElement.printNode(xmlElement, "root");
    }
}
statement is: XmlElement xmlElement = new XmlElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement.printNode(xmlElement, "root"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement, "root") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
TestCase is: String string = "root";
XmlElement xmlElement = new XmlElement(string);
String string = "root";
XmlElement.printNode(xmlElement, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("rr&?`yFK?]\"{EX1%DZq", "rr&?`yFK?]\"{EX1%DZq")
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "rr&?`yFK?]\"{EX1%DZq")
test data is: XmlElement xmlElement = new XmlElement("rr&?`yFK?]\"{EX1%DZq", "rr&?`yFK?]\"{EX1%DZq");
XmlElement.printNode(xmlElement, "rr&?`yFK?]\"{EX1%DZq");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("Person", "John Doe");
        XmlElement.printNode(xmlElement, "John Doe");
    }
}
statement is: XmlElement xmlElement = new XmlElement("Person", "John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement.printNode(xmlElement, "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement, "John Doe") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
TestCase is: String string = "Person";
String string = "John Doe";
XmlElement xmlElement = new XmlElement(string, string);
String string = "John Doe";
XmlElement.printNode(xmlElement, string);

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = hashtable.put("{wzY^", "J21(")
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("{wzY^", arg1)
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "{wzY^")
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("{wzY^", "J21(");
XmlElement xmlElement = new XmlElement("{wzY^", hashtable);
XmlElement.printNode(xmlElement, "{wzY^");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        hashtable.put("id", "J21");
        XmlElement xmlElement = new XmlElement("name", hashtable);
        XmlElement.printNode(xmlElement, "name");
    }
}
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("id", "J21"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("id", "J21") target is: hashtable method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 0
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement = new XmlElement("name", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement.printNode(xmlElement, "name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement, "name") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "id";
String string = "J21";
hashtable.put(string, string);
String string = "name";
XmlElement xmlElement = new XmlElement(string, hashtable);
String string = "name";
XmlElement.printNode(xmlElement, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("@gvH9NAsW", "@gvH9NAsW")
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("@gvH9NAsW", "@gvH9NAsW");
XmlElement.printNode(xmlElement, "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("user_id", "123456789");
        xmlElement.addSubElement("name", "John Doe");
        xmlElement.addSubElement("age", "30");
        xmlElement.addSubElement("country", "USA");
        XmlElement.printNode(xmlElement, "");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("user_id", "123456789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("user_id", "123456789") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("name", "John Doe") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("age", "30") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("country", "USA"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("country", "USA") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: XmlElement.printNode(xmlElement, ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement, "") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "user_id";
String string = "123456789";
xmlElement.addSubElement(string, string);
String string = "name";
String string = "John Doe";
xmlElement.addSubElement(string, string);
String string = "age";
String string = "30";
xmlElement.addSubElement(string, string);
String string = "country";
String string = "USA";
xmlElement.addSubElement(string, string);
String string = "";
XmlElement.printNode(xmlElement, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@c7622e99 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.List<com.allenstudio.ir.util.XmlElement>
statement code is: xmlElement.subElements = null
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.subElements = Collections.singletonList(new XmlSubElement("child-1", "value"));
        xmlElement.clone();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.subElements = Collections.singletonList(new XmlSubElement("child-1", "value")), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.clone() target is: xmlElement method is: clone()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: clone()Ljava/lang/Object;
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.clone();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(arg0)
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
test data is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before:
        int primitiveInt = 10;
        double primitiveDouble = 20.5;
        String stringValue = "hello";
        char charValue = 'a';
        // After:
        int primitiveInt = 5;// Changed to a more descriptive value

        double primitiveDouble = 3.14;// Changed to a more descriptive value

        String stringValue = "goodbye";// Changed to a more descriptive string

        char charValue = 'z';// Changed to a more descriptive character }}

    }
}
statement is: // Before:
int primitiveInt = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double primitiveDouble = 20.5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "hello", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // After:
int primitiveInt = 5// Changed to a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double primitiveDouble = 3.14// Changed to a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "goodbye"// Changed to a more descriptive string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'z'// Changed to a more descriptive character }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 20.5
* this is vulnerable: String string = "hello"
* this is vulnerable: char _char = 'a'
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "goodbye"
* this is vulnerable: char _char = 'z'
TestCase is: int _int = 10;
double _double = 20.5;
String string = "hello";
char _char = 'a';
int _int = 5;
double _double = 3.14;
String string = "goodbye";
char _char = 'z';

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement("name", "value");
        xmlElement1.equals(xmlElement1);// true

        XmlElement xmlElement2 = new XmlElement("name", "value");
        xmlElement2.equals(xmlElement1);// false }}

    }
}
statement is: XmlElement xmlElement1 = new XmlElement("name", "value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.equals(xmlElement1)// true
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.equals(xmlElement1)// true
 target is: xmlElement1 method is: equals(XmlElement)
statement is: XmlElement xmlElement2 = new XmlElement("name", "value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.equals(xmlElement1)// false }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.equals(xmlElement1)// false }}
 target is: xmlElement2 method is: equals(XmlElement)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement(" = '")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement(" = '");
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement();
        xmlElement1.setName("name1");
        xmlElement1.setValue("value1");
        XmlElement xmlElement2 = new XmlElement();
        xmlElement2.setName("name2");
        xmlElement2.setValue("value2");
        XmlElement xmlElement3 = new XmlElement();
        xmlElement3.setName("name3");
        xmlElement3.setValue("value3");
        assertTrue(xmlElement1.equals(xmlElement2));
        assertFalse(xmlElement1.equals(xmlElement3));
    }
}
statement is: XmlElement xmlElement1 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.setName("name1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setName("name1") target is: xmlElement1 method is: setName(java.lang.String)
statement is: xmlElement1.setValue("value1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setValue("value1") target is: xmlElement1 method is: setValue(java.lang.String)
statement is: XmlElement xmlElement2 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.setName("name2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setName("name2") target is: xmlElement2 method is: setName(java.lang.String)
statement is: xmlElement2.setValue("value2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setValue("value2") target is: xmlElement2 method is: setValue(java.lang.String)
statement is: XmlElement xmlElement3 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement3.setName("name3"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.setName("name3") target is: xmlElement3 method is: setName(java.lang.String)
statement is: xmlElement3.setValue("value3"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.setValue("value3") target is: xmlElement3 method is: setValue(java.lang.String)
statement is: assertTrue(xmlElement1.equals(xmlElement2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(xmlElement1.equals(xmlElement2)) target is:  method is: assertTrue(<unknown>)
statement is: assertFalse(xmlElement1.equals(xmlElement3)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(xmlElement1.equals(xmlElement3)) target is:  method is: assertFalse(<unknown>)
TestCase is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(" = '", "com.allenstudio.ir.util.XmlElement")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(" = '", "com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("customer_name", "customer_namespace");
        assertTrue(addSubElement.equals(xmlElement));
        assertTrue(addSubElement.isChildOf(xmlElement));
        assertEquals("customer_name", addSubElement.getName());
        assertEquals("customer_namespace", addSubElement.getNamespace());
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("customer_name", "customer_namespace"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("customer_name", "customer_namespace") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: assertTrue(addSubElement.equals(xmlElement)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(addSubElement.equals(xmlElement)) target is:  method is: assertTrue(<unknown>)
statement is: assertTrue(addSubElement.isChildOf(xmlElement)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(addSubElement.isChildOf(xmlElement)) target is:  method is: assertTrue(<unknown>)
statement is: assertEquals("customer_name", addSubElement.getName()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("customer_name", addSubElement.getName()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals("customer_namespace", addSubElement.getNamespace()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("customer_namespace", addSubElement.getNamespace()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "customer_name";
String string = "customer_namespace";
xmlElement.addSubElement(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals((Object) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement("name", "value");
        xmlElement1.equals(new XmlElement("name", "value"));
        XmlElement xmlElement2 = new XmlElement("name", "value");
        xmlElement2.equals(new XmlElement("name2", "value2"));
    }
}
statement is: XmlElement xmlElement1 = new XmlElement("name", "value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.equals(new XmlElement("name", "value")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.equals(new XmlElement("name", "value")) target is: xmlElement1 method is: equals(XmlElement)
statement is: XmlElement xmlElement2 = new XmlElement("name", "value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.equals(new XmlElement("name2", "value2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.equals(new XmlElement("name2", "value2")) target is: xmlElement2 method is: equals(XmlElement)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
Object object = new Object();
xmlElement.equals(object);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        String object = "John Doe";
        xmlElement.equals(object);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String object = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: xmlElement.equals(object), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals(object) target is: xmlElement method is: equals(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "John Doe";
xmlElement.equals(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("")
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null)
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute("2k&56<bX53.>y5j(0H", "'")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
xmlElement.addAttribute("2k&56<bX53.>y5j(0H", "'");
xmlElement.equals(addSubElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root");
        XmlElement addSubElement = xmlElement.addSubElement("subelementName", "subelementValue");
        xmlElement.addAttribute("attributeName", "attributeValue");
        xmlElement.equals(addSubElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("subelementName", "subelementValue"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("subelementName", "subelementValue") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addAttribute("attributeName", "attributeValue"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("attributeName", "attributeValue") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.equals(addSubElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals(addSubElement) target is: xmlElement method is: equals(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "root";
XmlElement xmlElement = new XmlElement(string);
String string = "subelementName";
String string = "subelementValue";
XmlElement addSubElement = ((XmlElement) string).addSubElement(string, string);
String string = "attributeName";
String string = "attributeValue";
((XmlElement) string).addAttribute(string, string);
string.equals(addSubElement);

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", arg1)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        hashtable.put("key1", "value1");
        hashtable.put("key2", "value2");
        XmlElement xmlElement = new XmlElement("root", hashtable);
        XmlElement xmlElement1 = new XmlElement("root", hashtable);
        xmlElement1.equals(xmlElement);
    }
}
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("key1", "value1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("key1", "value1") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("key2", "value2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("key2", "value2") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: XmlElement xmlElement = new XmlElement("root", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement xmlElement1 = new XmlElement("root", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.equals(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.equals(xmlElement) target is: xmlElement1 method is: equals(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "root";
XmlElement xmlElement = new XmlElement(string, hashtable);
String string = "root";
XmlElement xmlElement = new XmlElement(string, hashtable);
string.equals(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@16e6962 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: xmlElement.attributes = null
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XmlElement xmlElement = new XmlElement();
        xmlElement.attributes = "some_string";
        xmlElement.hashCode();
    }
}
statement is: // Improved test data
XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.attributes = "some_string", class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: hashCode()I
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement(";/")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement(";/");
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement("myFirstChildElement");
        xmlElement1.hashCode();
        XmlElement xmlElement2 = new XmlElement("mySecondChildElement");
        xmlElement2.hashCode();
    }
}
statement is: XmlElement xmlElement1 = new XmlElement("myFirstChildElement"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.hashCode() target is: xmlElement1 method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: hashCode()I
statement is: XmlElement xmlElement2 = new XmlElement("mySecondChildElement"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.hashCode() target is: xmlElement2 method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: hashCode()I
TestCase is: String string = "myFirstChildElement";
XmlElement xmlElement = new XmlElement(string);
string.hashCode();
String string = "mySecondChildElement";
XmlElement xmlElement = new XmlElement(string);
string.hashCode();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@9b832b3e type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.List<com.allenstudio.ir.util.XmlElement>
statement code is: xmlElement.subElements = null
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.subElements = Arrays.asList(new SubElement("child1"), new SubElement("child2"));
        xmlElement.hashCode();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.subElements = Arrays.asList(new SubElement("child1"), new SubElement("child2")), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: hashCode()I
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: setAttributes(Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setAttributes(arg0)
test data is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        // Improved test data
        hashtable.put("id", "12345");
        hashtable.put("name", "John Doe");
        hashtable.put("age", "30");
        xmlElement.setAttributes(hashtable);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
hashtable.put("id", "12345"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
hashtable.put("id", "12345") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("name", "John Doe") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("age", "30") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: xmlElement.setAttributes(hashtable), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttributes(hashtable) target is: xmlElement method is: setAttributes(Hashtable)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: setAttributes(Ljava/util/Hashtable;)V
TestCase is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", arg1)
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        hashtable.put("id", "123456789");
        hashtable.put("name", "Jane Doe");
        hashtable.put("age", "35");
        XmlElement xmlElement = new XmlElement("user", hashtable);
        String data = xmlElement.getData();
    }
}
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("id", "123456789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("id", "123456789") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("name", "Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("name", "Jane Doe") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("age", "35"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("age", "35") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: XmlElement xmlElement = new XmlElement("user", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String data = xmlElement.getData(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getData() target is: xmlElement method is: getData()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getData()Ljava/lang/String;
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "user";
XmlElement xmlElement = new XmlElement(string, hashtable);
((XmlElement) string).getData();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement(";/")
statement is: getElements()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List elements = xmlElement.getElements()
test data is: XmlElement xmlElement = new XmlElement(";/");
xmlElement.getElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for testing the method "getElements" in class "XmlElement"
        String xmlString1 = "<root><child>text</child></root>";
        String xmlString2 = "<root><child1>text1</child1><child2>text2</child2></root>";
        String xmlString3 = "<root><child attr='value'>text<child>";
        String xmlString4 = "<root><child>text</child><child>text</child></root>";
        String xmlString5 = "<root><child>text</child><child1>text1</child1></root>";
        int intValue1 = 1;
        int intValue2 = 2;
        double doubleValue1 = 3.14;
        double doubleValue2 = 6.28;
        char charValue1 = 'a';
        char charValue2 = 'z';
        String stringValue1 = "abc";
        String stringValue2 = "xyz";
    }
}
statement is: // Improved test data for testing the method "getElements" in class "XmlElement"
String xmlString1 = "<root><child>text</child></root>", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String xmlString2 = "<root><child1>text1</child1><child2>text2</child2></root>", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String xmlString3 = "<root><child attr='value'>text<child>", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String xmlString4 = "<root><child>text</child><child>text</child></root>", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String xmlString5 = "<root><child>text</child><child1>text1</child1></root>", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int intValue1 = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int intValue2 = 2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue1 = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue2 = 6.28, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue1 = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue2 = 'z', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue1 = "abc", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue2 = "xyz", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "<root><child>text</child></root>"
* this is vulnerable: String string = "<root><child1>text1</child1><child2>text2</child2></root>"
* this is vulnerable: String string = "<root><child attr='value'>text<child>"
* this is vulnerable: String string = "<root><child>text</child><child>text</child></root>"
* this is vulnerable: String string = "<root><child>text</child><child1>text1</child1></root>"
* this is vulnerable: int _int = 1
* this is vulnerable: int _int = 2
* this is vulnerable: double _double = 3.14
* this is vulnerable: double _double = 6.28
* this is vulnerable: char _char = 'a'
* this is vulnerable: char _char = 'z'
* this is vulnerable: String string = "abc"
* this is vulnerable: String string = "xyz"
TestCase is: String string = "<root><child>text</child></root>";
String string = "<root><child1>text1</child1><child2>text2</child2></root>";
String string = "<root><child attr='value'>text<child>";
String string = "<root><child>text</child><child>text</child></root>";
String string = "<root><child>text</child><child1>text1</child1></root>";
int _int = 1;
int _int = 2;
double _double = 3.14;
double _double = 6.28;
char _char = 'a';
char _char = 'z';
String string = "abc";
String string = "xyz";

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "")
statement is: setData(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setData("com.allenstudio.ir.util.XmlElement")
test data is: XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
xmlElement.setData("com.allenstudio.ir.util.XmlElement");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
        xmlElement.setData("com.allenstudio.ir.util.XmlElement");
        // Improved test data:
        XmlElement xmlElement2 = new XmlElement("Some_unique_id", "Some_text_value");
        xmlElement2.setData("com.allenstudio.ir.util.XmlElement");
    }
}
statement is: XmlElement xmlElement = new XmlElement("hSxE%E'1ni", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setData("com.allenstudio.ir.util.XmlElement"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setData("com.allenstudio.ir.util.XmlElement") target is: xmlElement method is: setData(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: setData(Ljava/lang/String;)V
statement is: // Improved test data:
XmlElement xmlElement2 = new XmlElement("Some_unique_id", "Some_text_value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.setData("com.allenstudio.ir.util.XmlElement"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setData("com.allenstudio.ir.util.XmlElement") target is: xmlElement2 method is: setData(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 7
Matched Method is: setData(Ljava/lang/String;)V
TestCase is: String string = "hSxE%E'1ni";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
String string = "com.allenstudio.ir.util.XmlElement";
((XmlElement) string).setData(string);
String string = "Some_unique_id";
String string = "Some_text_value";
XmlElement xmlElement = new XmlElement(string, string);
String string = "com.allenstudio.ir.util.XmlElement";
((XmlElement) string).setData(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement(";/")
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: XmlElement xmlElement = new XmlElement(";/");
xmlElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("<person id='123'>");
        xmlElement.getName();
    }
}
statement is: XmlElement xmlElement = new XmlElement("<person id='123'>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getName() target is: xmlElement method is: getName()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getName()Ljava/lang/String;
TestCase is: String string = "<person id='123'>";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).getName();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@")
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@");
xmlElement.removeElement(addSubElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@");
        xmlElement.removeElement(addSubElement);
    }
}
statement is: // Improved test data
XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("772~En;?NQh3$ba@") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.removeElement(addSubElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(addSubElement) target is: xmlElement method is: removeElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "772~En;?NQh3$ba@";
XmlElement addSubElement = xmlElement.addSubElement(string);
xmlElement.removeElement(addSubElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeFromParent()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeFromParent()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String xmlDocument = "<root><child>Text</child></root>";
        XmlElement xmlElement = new XmlElement(xmlDocument);
        xmlElement.removeFromParent();
    }
}
statement is: String xmlDocument = "<root><child>Text</child></root>", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: XmlElement xmlElement = new XmlElement(xmlDocument), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.removeFromParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeFromParent() target is: xmlElement method is: removeFromParent()
* this is vulnerable: String string = "<root><child>Text</child></root>"
TestCase is: String string = "<root><child>Text</child></root>";

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("-G)?G@#N", "-G)?G@#N")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("", "s")
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String addAttribute = (String)xmlElement.addAttribute("", "s")
test data is: XmlElement xmlElement = new XmlElement("-G)?G@#N", "-G)?G@#N");
xmlElement.getAttribute("", "s");
xmlElement.addAttribute("", "s");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("EmployeeID", "Value");
        xmlElement.getAttribute("DepartmentID", "Sales");
        xmlElement.addAttribute("Address", "123 Main St, Anytown, USA 12345");
    }
}
statement is: XmlElement xmlElement = new XmlElement("EmployeeID", "Value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("DepartmentID", "Sales"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("DepartmentID", "Sales") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.addAttribute("Address", "123 Main St, Anytown, USA 12345"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("Address", "123 Main St, Anytown, USA 12345") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
TestCase is: String string = "EmployeeID";
String string = "Value";
XmlElement xmlElement = new XmlElement(string, string);
String string = "DepartmentID";
String string = "Sales";
((XmlElement) string).getAttribute(string, string);
String string = "Address";
String string = "123 Main St, Anytown, USA 12345";
((XmlElement) string).addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
        xmlElement.addObserver(observer);
        xmlElement.addSubElement(new XmlElement("child", "value"));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Observer.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Observer argument is: Observer.class
Matched Method is: mock(interface java.util.Observer)
statement is: xmlElement.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addObserver(observer) target is: xmlElement method is: addObserver(Observer)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addObserver(Ljava/util/Observer;)V
statement is: xmlElement.addSubElement(new XmlElement("child", "value")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(new XmlElement("child", "value")) target is: xmlElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
XmlElement xmlElement = null;
xmlElement.addSubElement(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO")
statement is: count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int count = xmlElement.count()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("1234567890", "1234567890");
        xmlElement.count();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("1234567890", "1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("1234567890", "1234567890") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.count() target is: xmlElement method is: count()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: count()I
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "1234567890";
String string = "1234567890";
xmlElement.addSubElement(string, string);
xmlElement.count();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("#'B5,J)_%oV", "8V")
statement is: getAttribute(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("#'B5,J)_%oV")
test data is: XmlElement xmlElement = new XmlElement("");
xmlElement.getAttribute("#'B5,J)_%oV", "8V");
xmlElement.getAttribute("#'B5,J)_%oV");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("");
        xmlElement.getAttribute("background-color", "#FF0000");
        xmlElement.getAttribute("font-size", "24px");
    }
}
statement is: XmlElement xmlElement = new XmlElement(""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("background-color", "#FF0000"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("background-color", "#FF0000") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.getAttribute("font-size", "24px"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("font-size", "24px") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "";
XmlElement xmlElement = new XmlElement(string);
String string = "background-color";
String string = "#FF0000";
((XmlElement) string).getAttribute(string, string);
String string = "font-size";
String string = "24px";
((XmlElement) string).getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("", "")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getAttribute("id", "John Doe");
        xmlElement.getAttribute("age", "30");
        xmlElement.getAttribute("gender", "male");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("id", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("id", "John Doe") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.getAttribute("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("age", "30") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.getAttribute("gender", "male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("gender", "male") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "id";
String string = "John Doe";
xmlElement.getAttribute(string, string);
String string = "age";
String string = "30";
xmlElement.getAttribute(string, string);
String string = "gender";
String string = "male";
xmlElement.getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("ZY}(<s@T }q", (String) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("ZY}(<s@T }q", (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getAttribute("age", ((String) (null)));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("age", ((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("age", ((String) (null))) target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "age";
String string = null;
xmlElement.getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("Zut@a2-2(J.X}")
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute("E0ls:6n~25<)]", "Zut@a2-2(J.X}")
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
test data is: XmlElement xmlElement = new XmlElement("Zut@a2-2(J.X}");
xmlElement.addAttribute("E0ls:6n~25<)]", "Zut@a2-2(J.X}");
xmlElement.getAttributes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("customer");
        xmlElement.addAttribute("id", "123456789");
        xmlElement.addAttribute("name", "John Doe");
        xmlElement.getAttributes();
    }
}
statement is: XmlElement xmlElement = new XmlElement("customer"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("id", "123456789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("id", "123456789") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("name", "John Doe") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.getAttributes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getAttributes()Ljava/util/Hashtable;
TestCase is: String string = "customer";
XmlElement xmlElement = new XmlElement(string);
String string = "id";
String string = "123456789";
((XmlElement) string).addAttribute(string, string);
String string = "name";
String string = "John Doe";
((XmlElement) string).addAttribute(string, string);
((XmlElement) string).getAttributes();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null)
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
test data is: XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.getAttributes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("", ((Hashtable<String, String>) (null)));
        xmlElement.getAttributes();
    }
}
statement is: XmlElement xmlElement = new XmlElement("", ((Hashtable<String, String>) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttributes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getAttributes()Ljava/util/Hashtable;
TestCase is: String string = "";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
((XmlElement) string).getAttributes();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "")
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: XmlElement xmlElement = new XmlElement("", "");
xmlElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root", "Root element");
        xmlElement.getData();
    }
}
statement is: XmlElement xmlElement = new XmlElement("root", "Root element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getData() target is: xmlElement method is: getData()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getData()Ljava/lang/String;
TestCase is: String string = "root";
String string = "Root element";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getData();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@620a4608 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: xmlElement.data = "com.allenstudio.ir.util.XmlElement"
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.data = "com.allenstudio.ir.util.XmlElement";
xmlElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.data = "{\"Name\":\"John\", \"Age\": 25, \"Occupation\": \"Engineer\"}";
        xmlElement.getData();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.data = "{\"Name\":\"John\", \"Age\": 25, \"Occupation\": \"Engineer\"}", class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.getData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getData() target is: xmlElement method is: getData()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getData()Ljava/lang/String;
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.getData();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO")
statement is: getElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.getElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("b2~&<|]tnO", "b2~&<|]tnO");
        xmlElement.getElement(0);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("b2~&<|]tnO", "b2~&<|]tnO"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("b2~&<|]tnO", "b2~&<|]tnO") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement(0) target is: xmlElement method is: getElement(int)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "b2~&<|]tnO";
String string = "b2~&<|]tnO";
xmlElement.addSubElement(string, string);
int _int = 0;
xmlElement.getElement(_int);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("-")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("-")
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("-")
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
addSubElement.addSubElement("-");
xmlElement.getElement("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("book");
        addSubElement.addSubElement("author");
        xmlElement.getElement("title");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("book"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("book") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.addSubElement("author"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addSubElement("author") target is: addSubElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement("title"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("title") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "book";
xmlElement.addSubElement(string);
String string = "author";
xmlElement.addSubElement(string);
String string = "title";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("-")
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("-")
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("sub_element1");
        xmlElement.addSubElement("sub_element2");
        xmlElement.getElement("sub_element1");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("sub_element1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("sub_element1") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("sub_element2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("sub_element2") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement("sub_element1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("sub_element1") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "sub_element1";
xmlElement.addSubElement(string);
String string = "sub_element2";
xmlElement.addSubElement(string);
String string = "sub_element1";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "")
statement is: addElement(Lcom/allenstudio/ir/util/XmlElement;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addElement = arg0.addElement(arg0)
statement is: getElements()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List elements = xmlElement.getElements()
test data is: XmlElement xmlElement = new XmlElement("", "");
xmlElement.addElement(xmlElement);
xmlElement.getElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("Root Element", "This is a root element with a complex structure.");
        xmlElement.addElement(new XmlElement("Child 1", "This is the first child element with a list of sub-elements:"));
        xmlElement.getElements().get(0).addElement(new XmlElement("Sub-element 1", "This is the first sub-element."));
        xmlElement.getElements().get(0).addElement(new XmlElement("Sub-element 2", "This is the second sub-element."));
        xmlElement.getElements().get(0).getElements();
    }
}
statement is: XmlElement xmlElement = new XmlElement("Root Element", "This is a root element with a complex structure."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addElement(new XmlElement("Child 1", "This is the first child element with a list of sub-elements:")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addElement(new XmlElement("Child 1", "This is the first child element with a list of sub-elements:")) target is: xmlElement method is: addElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addElement(Lcom/allenstudio/ir/util/XmlElement;)Z
statement is: xmlElement.getElements().get(0).addElement(new XmlElement("Sub-element 1", "This is the first sub-element.")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElements().get(0).addElement(new XmlElement("Sub-element 1", "This is the first sub-element.")) target is: xmlElement.getElements().get(0) method is: addElement(XmlElement)
statement is: xmlElement.getElements().get(0).addElement(new XmlElement("Sub-element 2", "This is the second sub-element.")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElements().get(0).addElement(new XmlElement("Sub-element 2", "This is the second sub-element.")) target is: xmlElement.getElements().get(0) method is: addElement(XmlElement)
statement is: xmlElement.getElements().get(0).getElements(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElements().get(0).getElements() target is: xmlElement.getElements().get(0) method is: getElements()
TestCase is: String string = "Root Element";
String string = "This is a root element with a complex structure.";
XmlElement xmlElement = new XmlElement(string, string);
String string = "Child 1";
String string = "This is the first child element with a list of sub-elements:";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).addElement(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "x]#*q(")
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: XmlElement xmlElement = new XmlElement("", "x]#*q(");
xmlElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet above
        XmlElement xmlElement = new XmlElement("my_element", "This is a sample element");
        xmlElement.getName();
    }
}
statement is: // Improved test data for the code snippet above
XmlElement xmlElement = new XmlElement("my_element", "This is a sample element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getName() target is: xmlElement method is: getName()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getName()Ljava/lang/String;
TestCase is: String string = "my_element";
String string = "This is a sample element";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getName();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("")
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null)
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
addSubElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root");
        XmlElement addSubElement = xmlElement.addSubElement("subelement1", "value1");
        addSubElement.getName();
        XmlElement addSubElement2 = xmlElement.addSubElement("subelement2", 2);
        addSubElement2.getValue();
        XmlElement addSubElement3 = xmlElement.addSubElement("subelement3", true);
        addSubElement3.isEnabled();
    }
}
statement is: XmlElement xmlElement = new XmlElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("subelement1", "value1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("subelement1", "value1") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.getName() target is: addSubElement method is: getName()
source statement: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: getName()Ljava/lang/String;
statement is: XmlElement addSubElement2 = xmlElement.addSubElement("subelement2", 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("subelement2", 2) target is: xmlElement method is: addSubElement(java.lang.String,int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement2.getValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement2.getValue() target is: addSubElement2 method is: getValue()
statement is: XmlElement addSubElement3 = xmlElement.addSubElement("subelement3", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("subelement3", true) target is: xmlElement method is: addSubElement(java.lang.String,boolean)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement3.isEnabled(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement3.isEnabled() target is: addSubElement3 method is: isEnabled()
TestCase is: String string = "root";
XmlElement xmlElement = new XmlElement(string);
String string = "subelement1";
String string = "value1";
((XmlElement) string).addSubElement(string, string);
xmlElement.getName();
String string = "subelement2";
int _int = 2;
((XmlElement) string).addSubElement(string, (String) _int);
String string = "subelement3";
boolean _boolean = true;
((XmlElement) string).addSubElement(string, (String) _boolean);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(")
statement is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.setParent(arg0)
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
xmlElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("elementName");
        xmlElement.setParent(new XmlElement("parent"));
        xmlElement.getParent();
    }
}
statement is: XmlElement xmlElement = new XmlElement("elementName"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setParent(new XmlElement("parent")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setParent(new XmlElement("parent")) target is: xmlElement method is: setParent(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V
statement is: xmlElement.getParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getParent() target is: xmlElement method is: getParent()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getParent()Lcom/allenstudio/ir/util/XmlElement;
TestCase is: String string = "elementName";
XmlElement xmlElement = new XmlElement(string);
String string = "parent";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).setParent(xmlElement);
((XmlElement) string).getParent();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(")
statement is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.setParent(arg0)
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("childElement");
        xmlElement.setParent(new XmlElement("parentElement"));
        Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
        xmlElement.addObserver(observer);
        assertEquals(xmlElement.getParent(), new XmlElement("parentElement"));
        XmlElement xmlElement2 = new XmlElement("childElement2");
        xmlElement2.setParent(new XmlElement("parentElement2"));
        xmlElement2.addObserver(observer);
        assertEquals(xmlElement2.getParent(), new XmlElement("parentElement2"));
        XmlElement xmlElement3 = new XmlElement("childElement3");
        xmlElement3.setParent(null);
        assertNull(xmlElement3.getParent());
    }
}
statement is: XmlElement xmlElement = new XmlElement("childElement"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setParent(new XmlElement("parentElement")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setParent(new XmlElement("parentElement")) target is: xmlElement method is: setParent(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V
statement is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Observer.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Observer argument is: Observer.class
Matched Method is: mock(interface java.util.Observer)
statement is: xmlElement.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addObserver(observer) target is: xmlElement method is: addObserver(Observer)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addObserver(Ljava/util/Observer;)V
statement is: assertEquals(xmlElement.getParent(), new XmlElement("parentElement")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xmlElement.getParent(), new XmlElement("parentElement")) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: XmlElement xmlElement2 = new XmlElement("childElement2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.setParent(new XmlElement("parentElement2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setParent(new XmlElement("parentElement2")) target is: xmlElement2 method is: setParent(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 8
Matched Method is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V
statement is: xmlElement2.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.addObserver(observer) target is: xmlElement2 method is: addObserver(Observer)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 8
Matched Method is: addObserver(Ljava/util/Observer;)V
statement is: assertEquals(xmlElement2.getParent(), new XmlElement("parentElement2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xmlElement2.getParent(), new XmlElement("parentElement2")) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: XmlElement xmlElement3 = new XmlElement("childElement3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement3.setParent(null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.setParent(null) target is: xmlElement3 method is: setParent(<unknown>)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 14
Matched Method is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertNull(xmlElement3.getParent()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertNull(xmlElement3.getParent()) target is:  method is: assertNull(<unknown>)
TestCase is: String string = "childElement";
XmlElement xmlElement = new XmlElement(string);
String string = "parentElement";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable) string).addObserver(observer);
String string = "childElement2";
XmlElement xmlElement = new XmlElement(string);
String string = "parentElement2";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).setParent(xmlElement);
((Observable) string).addObserver(observer);
String string = "childElement3";
XmlElement xmlElement = new XmlElement(string);
XmlElement xmlElement = null;
((XmlElement) string).setParent(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
statement is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xmlElement.addSubElement(new XmlElement("child1"));
        xmlElement.addSubElement(new XmlElement("child2"));
        xmlElement.removeElement(1);
    }
}
statement is: xmlElement.addSubElement(new XmlElement("child1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(new XmlElement("child1")) target is: xmlElement method is: addSubElement(XmlElement)
statement is: xmlElement.addSubElement(new XmlElement("child2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(new XmlElement("child2")) target is: xmlElement method is: addSubElement(XmlElement)
statement is: xmlElement.removeElement(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(1) target is: xmlElement method is: removeElement(int)
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("+MmG_v", "+MmG_v")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("+MmG_v")
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(":4zyje%\"%HwPe8{p\"", "")
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement("+MmG_v", "+MmG_v");
XmlElement addSubElement = xmlElement.addSubElement("+MmG_v");
addSubElement.addSubElement(":4zyje%\"%HwPe8{p\"", "");
xmlElement.removeElement(addSubElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("person", "John Doe");
        XmlElement addSubElement = xmlElement.addSubElement("age", "30");
        addSubElement.addSubElement("height", "185 cm");
        xmlElement.removeElement(addSubElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement("person", "John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("age", "30"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("age", "30") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
statement is: addSubElement.addSubElement("height", "185 cm"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addSubElement("height", "185 cm") target is: addSubElement method is: addSubElement(java.lang.String,java.lang.String)
statement is: xmlElement.removeElement(addSubElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(addSubElement) target is: xmlElement method is: removeElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "person";
String string = "John Doe";
XmlElement xmlElement = new XmlElement(string, string);
XmlElement xmlElement = null;
((XmlElement) string).removeElement(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: insertElement(Lcom/allenstudio/ir/util/XmlElement;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.insertElement(arg0, 0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before:
        XmlElement xmlElement = new XmlElement("MyXmlElement");
        xmlElement.insertElement(xmlElement, "MyChildElement", 0);
        // After:
        XmlElement xmlElement = new XmlElement("MyXmlElement");
        xmlElement.insertElement(xmlElement, "MyNewChildElement", 1);
    }
}
statement is: // Before:
XmlElement xmlElement = new XmlElement("MyXmlElement"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.insertElement(xmlElement, "MyChildElement", 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.insertElement(xmlElement, "MyChildElement", 0) target is: xmlElement method is: insertElement(XmlElement,java.lang.String,int)
statement is: // After:
XmlElement xmlElement = new XmlElement("MyXmlElement"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.insertElement(xmlElement, "MyNewChildElement", 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.insertElement(xmlElement, "MyNewChildElement", 1) target is: xmlElement method is: insertElement(XmlElement,java.lang.String,int)
* test suite isTestSuite: 127
Test 0: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
xmlElement.addSubElement(clone);
xmlElement.equals(clone);
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("VUm W+1y?U|Z");
Test 3: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 7: 
XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
xmlElement.clone();
Test 8: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.append(xmlElement);
xmlElement.getElement(0);
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName(" = '");
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 12: 
XmlElement xmlElement = new XmlElement((String) null);
xmlElement.addAttribute((String) null, ";/");
Test 13: 
XmlElement xmlElement = new XmlElement("!>", "");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("!>", "Cas]Jl+at(");
xmlElement.getAttribute("!>", "!>");
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.removeFromParent();
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-");
xmlElement.removeElement(xmlElement);
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".we");
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("J21(", "J21(");
xmlElement.getElement("7viId=AxnI4!KH-g");
Test 19: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("&BT:ts^zDe4a?=.bv}");
xmlElement.getElement("&BT:ts^zDe4a?=.bv}");
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".");
Test 21: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
Test 22: 
XmlElement xmlElement = new XmlElement("g59NAsW");
XmlElement.printNode(xmlElement, "g59NAsW");
Test 23: 
XmlElement xmlElement = new XmlElement("rr&?`yFK?]\"{EX1%DZq", "rr&?`yFK?]\"{EX1%DZq");
XmlElement.printNode(xmlElement, "rr&?`yFK?]\"{EX1%DZq");
Test 24: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("{wzY^", "J21(");
XmlElement xmlElement = new XmlElement("{wzY^", hashtable);
XmlElement.printNode(xmlElement, "{wzY^");
Test 25: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("@gvH9NAsW", "@gvH9NAsW");
XmlElement.printNode(xmlElement, "");
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 27: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.clone();
Test 28: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement(" = '");
xmlElement.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(" = '", "com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);
Test 31: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 32: 
XmlElement xmlElement = new XmlElement();
Object object = new Object();
xmlElement.equals(object);
Test 33: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
xmlElement.addAttribute("2k&56<bX53.>y5j(0H", "'");
xmlElement.equals(addSubElement);
Test 34: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 35: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();
Test 36: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.hashCode();
Test 37: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 38: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);
Test 39: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getData();
Test 40: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getElements();
Test 41: 
XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 42: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getName();
Test 43: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@");
xmlElement.removeElement(addSubElement);
Test 44: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 45: 
XmlElement xmlElement = new XmlElement("-G)?G@#N", "-G)?G@#N");
xmlElement.getAttribute("", "s");
xmlElement.addAttribute("", "s");
Test 46: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 47: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.count();
Test 48: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getAttribute("#'B5,J)_%oV", "8V");
xmlElement.getAttribute("#'B5,J)_%oV");
Test 49: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("", "");
Test 50: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("ZY}(<s@T }q", (String) null);
Test 51: 
XmlElement xmlElement = new XmlElement("Zut@a2-2(J.X}");
xmlElement.addAttribute("E0ls:6n~25<)]", "Zut@a2-2(J.X}");
xmlElement.getAttributes();
Test 52: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 53: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.getData();
Test 54: 
XmlElement xmlElement = new XmlElement();
xmlElement.data = "com.allenstudio.ir.util.XmlElement";
xmlElement.getData();
Test 55: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.getElement(0);
Test 56: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
addSubElement.addSubElement("-");
xmlElement.getElement("-");
Test 57: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("-");
Test 58: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addElement(xmlElement);
xmlElement.getElements();
Test 59: 
XmlElement xmlElement = new XmlElement("", "x]#*q(");
xmlElement.getName();
Test 60: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
addSubElement.getName();
Test 61: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 62: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.getParent();
Test 63: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeElement(0);
Test 64: 
XmlElement xmlElement = new XmlElement("+MmG_v", "+MmG_v");
XmlElement addSubElement = xmlElement.addSubElement("+MmG_v");
addSubElement.addSubElement(":4zyje%\"%HwPe8{p\"", "");
xmlElement.removeElement(addSubElement);
Test 65: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);
Test 66: 

Test 67: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

Test 68: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("lastName");

Test 69: 
XmlElement xmlElement = new XmlElement();

Test 70: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();

Test 71: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

Test 72: 
XmlElement xmlElement = new XmlElement();

Test 73: 
String string = "kB`";
XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
((XmlElement)"kB`").clone();
String string = "kB`";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
((XmlElement) string).clone();

Test 74: 
XmlElement xmlElement = new XmlElement();
xmlElement.append((XmlElement) "This is a test string with a length of 20 characters");
int _int = 0;
xmlElement.getElement(_int);

Test 75: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("Book");
XmlElement xmlElement = new XmlElement();
xmlElement.setName("Book");

Test 76: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234567890");
xmlElement.addAttribute("name", "John Doe");
xmlElement.addAttribute("age", "30");

Test 77: 
XmlElement xmlElement = new XmlElement("John Doe");
((XmlElement)"John Doe").addAttribute("age", "35");

Test 78: 
String string = "!>";
String string = "";
XmlElement xmlElement = new XmlElement("!>", "");
((XmlElement)"!>").getAttributes();
String string = "!>";
String string = "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(";
((Hashtable) string).put(string, string);
String string = "!>";
String string = "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(";
((XmlElement) string).getAttribute(string, string);

Test 79: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement((XmlElement) "my-element");

Test 80: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("sub-element-1");
((XmlElement)"sub-element-1").removeFromParent();

Test 81: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("banana");
xmlElement.removeElement(xmlElement);

Test 82: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement("header");

Test 83: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("J21(9", "J21(9");
xmlElement.getElement("7viId=AxnI4!KH-g");

Test 84: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("employee-data");
xmlElement.getElement("employee-data");

Test 85: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("Root");
xmlElement.addSubElement("Child1");
xmlElement.addSubElement("Child2");

Test 86: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("I'm a sub-element!");
xmlElement.addSubElement("So am I!");

Test 87: 
XmlElement xmlElement = new XmlElement("root");
XmlElement.printNode(xmlElement, "root");

Test 88: 
XmlElement xmlElement = new XmlElement("Person", "John Doe");
XmlElement.printNode(xmlElement, "John Doe");

Test 89: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "J21");
XmlElement xmlElement = new XmlElement("name", hashtable);
XmlElement.printNode(xmlElement, "name");

Test 90: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("user_id", "123456789");
xmlElement.addSubElement("name", "John Doe");
xmlElement.addSubElement("age", "30");
xmlElement.addSubElement("country", "USA");
XmlElement.printNode(xmlElement, "");

Test 91: 
XmlElement xmlElement = new XmlElement();
xmlElement.clone();

Test 92: 

Test 93: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

Test 94: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("customer_name", "customer_namespace");

Test 95: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("John Doe");

Test 96: 
String string = "root";
XmlElement xmlElement = new XmlElement("root");
XmlElement addSubElement = ((XmlElement)"root").addSubElement("subelementName", "subelementValue");
String string = "attributeName";
String string = "attributeValue";
((XmlElement) string).addAttribute(string, string);
string.equals(addSubElement);

Test 97: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("root", hashtable);
XmlElement xmlElement = new XmlElement("root", hashtable);
((XmlElement)"root").equals(xmlElement);

Test 98: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 99: 
String string = "myFirstChildElement";
XmlElement xmlElement = new XmlElement("myFirstChildElement");
((XmlElement)"myFirstChildElement").hashCode();
String string = "mySecondChildElement";
XmlElement xmlElement = new XmlElement(string);
string.hashCode();

Test 100: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 101: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);

Test 102: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("user", hashtable);
((XmlElement)"user").getData();

Test 103: 

Test 104: 
String string = "hSxE%E'1ni";
XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
((XmlElement)"hSxE%E'1ni").setData("com.allenstudio.ir.util.XmlElement");
String string = "Some_unique_id";
String string = "Some_text_value";
XmlElement xmlElement = new XmlElement(string, string);
String string = "com.allenstudio.ir.util.XmlElement";
((XmlElement) string).setData(string);

Test 105: 
XmlElement xmlElement = new XmlElement("<person id='123'>");
((XmlElement)"<person id='123'>").getName();

Test 106: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@");
xmlElement.removeElement(addSubElement);

Test 107: 

Test 108: 
String string = "EmployeeID";
XmlElement xmlElement = new XmlElement("EmployeeID", "Value");
((XmlElement)"EmployeeID").getAttribute("DepartmentID", "Sales");
String string = "Address";
String string = "123 Main St, Anytown, USA 12345";
((XmlElement) string).addAttribute(string, string);

Test 109: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement((XmlElement) null);

Test 110: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("1234567890", "1234567890");
xmlElement.count();

Test 111: 
String string = "";
XmlElement xmlElement = new XmlElement("");
((XmlElement)"").getAttribute("background-color", "#FF0000");
String string = "font-size";
String string = "24px";
((XmlElement) string).getAttribute(string, string);

Test 112: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("id", "John Doe");
xmlElement.getAttribute("age", "30");
xmlElement.getAttribute("gender", "male");

Test 113: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("age", (String) null);

Test 114: 
String string = "customer";
XmlElement xmlElement = new XmlElement("customer");
((XmlElement)"customer").addAttribute("id", "123456789");
String string = "name";
String string = "John Doe";
((XmlElement) string).addAttribute(string, string);
((XmlElement) string).getAttributes();

Test 115: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
((XmlElement)"").getAttributes();

Test 116: 
XmlElement xmlElement = new XmlElement("root", "Root element");
((XmlElement)"root").getData();

Test 117: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();

Test 118: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("b2~&<|]tnO", "b2~&<|]tnO");
xmlElement.getElement(0);

Test 119: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("book");
xmlElement.addSubElement("author");
xmlElement.getElement("title");

Test 120: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("sub_element1");
xmlElement.addSubElement("sub_element2");
xmlElement.getElement("sub_element1");

Test 121: 
XmlElement xmlElement = new XmlElement("Root Element", "This is a root element with a complex structure.");
XmlElement xmlElement = new XmlElement("Child 1", "This is the first child element with a list of sub-elements:");
((XmlElement)"Root Element").addElement(xmlElement);

Test 122: 
XmlElement xmlElement = new XmlElement("my_element", "This is a sample element");
((XmlElement)"my_element").getName();

Test 123: 
String string = "root";
XmlElement xmlElement = new XmlElement("root");
((XmlElement)"root").addSubElement("subelement1", "value1");
xmlElement.getName();
String string = "subelement2";
int _int = 2;
((XmlElement) string).addSubElement(string, (String) _int);
String string = "subelement3";
boolean _boolean = true;
((XmlElement) string).addSubElement(string, (String) _boolean);

Test 124: 
String string = "elementName";
XmlElement xmlElement = new XmlElement("elementName");
XmlElement xmlElement = new XmlElement("parent");
((XmlElement)"elementName").setParent(xmlElement);
((XmlElement) string).getParent();

Test 125: 
String string = "childElement";
XmlElement xmlElement = new XmlElement("childElement");
XmlElement xmlElement = new XmlElement("parentElement");
((XmlElement)"childElement").setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable) string).addObserver(observer);
String string = "childElement2";
XmlElement xmlElement = new XmlElement(string);
String string = "parentElement2";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).setParent(xmlElement);
((Observable) string).addObserver(observer);
String string = "childElement3";
XmlElement xmlElement = new XmlElement(string);
XmlElement xmlElement = null;
((XmlElement) string).setParent(xmlElement);

Test 126: 
XmlElement xmlElement = new XmlElement("person", "John Doe");
((XmlElement)"person").removeElement((XmlElement) null);


* Generated after the refinement and before minimization 127 tests with total length 400
* test suite isTestSuite: 127
Test 0: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
xmlElement.addSubElement(clone);
xmlElement.equals(clone);
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("VUm W+1y?U|Z");
Test 3: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 7: 
XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
xmlElement.clone();
Test 8: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.append(xmlElement);
xmlElement.getElement(0);
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName(" = '");
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 12: 
XmlElement xmlElement = new XmlElement((String) null);
xmlElement.addAttribute((String) null, ";/");
Test 13: 
XmlElement xmlElement = new XmlElement("!>", "");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("!>", "Cas]Jl+at(");
xmlElement.getAttribute("!>", "!>");
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.removeFromParent();
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-");
xmlElement.removeElement(xmlElement);
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".we");
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("J21(", "J21(");
xmlElement.getElement("7viId=AxnI4!KH-g");
Test 19: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("&BT:ts^zDe4a?=.bv}");
xmlElement.getElement("&BT:ts^zDe4a?=.bv}");
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".");
Test 21: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
Test 22: 
XmlElement xmlElement = new XmlElement("g59NAsW");
XmlElement.printNode(xmlElement, "g59NAsW");
Test 23: 
XmlElement xmlElement = new XmlElement("rr&?`yFK?]\"{EX1%DZq", "rr&?`yFK?]\"{EX1%DZq");
XmlElement.printNode(xmlElement, "rr&?`yFK?]\"{EX1%DZq");
Test 24: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("{wzY^", "J21(");
XmlElement xmlElement = new XmlElement("{wzY^", hashtable);
XmlElement.printNode(xmlElement, "{wzY^");
Test 25: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("@gvH9NAsW", "@gvH9NAsW");
XmlElement.printNode(xmlElement, "");
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 27: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.clone();
Test 28: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement(" = '");
xmlElement.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(" = '", "com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);
Test 31: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 32: 
XmlElement xmlElement = new XmlElement();
Object object = new Object();
xmlElement.equals(object);
Test 33: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
xmlElement.addAttribute("2k&56<bX53.>y5j(0H", "'");
xmlElement.equals(addSubElement);
Test 34: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 35: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();
Test 36: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.hashCode();
Test 37: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 38: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);
Test 39: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getData();
Test 40: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getElements();
Test 41: 
XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 42: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getName();
Test 43: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@");
xmlElement.removeElement(addSubElement);
Test 44: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 45: 
XmlElement xmlElement = new XmlElement("-G)?G@#N", "-G)?G@#N");
xmlElement.getAttribute("", "s");
xmlElement.addAttribute("", "s");
Test 46: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 47: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.count();
Test 48: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getAttribute("#'B5,J)_%oV", "8V");
xmlElement.getAttribute("#'B5,J)_%oV");
Test 49: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("", "");
Test 50: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("ZY}(<s@T }q", (String) null);
Test 51: 
XmlElement xmlElement = new XmlElement("Zut@a2-2(J.X}");
xmlElement.addAttribute("E0ls:6n~25<)]", "Zut@a2-2(J.X}");
xmlElement.getAttributes();
Test 52: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 53: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.getData();
Test 54: 
XmlElement xmlElement = new XmlElement();
xmlElement.data = "com.allenstudio.ir.util.XmlElement";
xmlElement.getData();
Test 55: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.getElement(0);
Test 56: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
addSubElement.addSubElement("-");
xmlElement.getElement("-");
Test 57: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("-");
Test 58: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addElement(xmlElement);
xmlElement.getElements();
Test 59: 
XmlElement xmlElement = new XmlElement("", "x]#*q(");
xmlElement.getName();
Test 60: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
addSubElement.getName();
Test 61: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 62: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.getParent();
Test 63: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeElement(0);
Test 64: 
XmlElement xmlElement = new XmlElement("+MmG_v", "+MmG_v");
XmlElement addSubElement = xmlElement.addSubElement("+MmG_v");
addSubElement.addSubElement(":4zyje%\"%HwPe8{p\"", "");
xmlElement.removeElement(addSubElement);
Test 65: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);
Test 66: 

Test 67: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

Test 68: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("lastName");

Test 69: 
XmlElement xmlElement = new XmlElement();

Test 70: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();

Test 71: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

Test 72: 
XmlElement xmlElement = new XmlElement();

Test 73: 
String string = "kB`";
XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
((XmlElement)"kB`").clone();
String string = "kB`";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
((XmlElement) string).clone();

Test 74: 
XmlElement xmlElement = new XmlElement();
xmlElement.append((XmlElement) "This is a test string with a length of 20 characters");
int _int = 0;
xmlElement.getElement(_int);

Test 75: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("Book");
XmlElement xmlElement = new XmlElement();
xmlElement.setName("Book");

Test 76: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234567890");
xmlElement.addAttribute("name", "John Doe");
xmlElement.addAttribute("age", "30");

Test 77: 
XmlElement xmlElement = new XmlElement("John Doe");
((XmlElement)"John Doe").addAttribute("age", "35");

Test 78: 
String string = "!>";
String string = "";
XmlElement xmlElement = new XmlElement("!>", "");
((XmlElement)"!>").getAttributes();
String string = "!>";
String string = "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(";
((Hashtable) string).put(string, string);
String string = "!>";
String string = "CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(CasJl+at(";
((XmlElement) string).getAttribute(string, string);

Test 79: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement((XmlElement) "my-element");

Test 80: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("sub-element-1");
((XmlElement)"sub-element-1").removeFromParent();

Test 81: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("banana");
xmlElement.removeElement(xmlElement);

Test 82: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement("header");

Test 83: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("J21(9", "J21(9");
xmlElement.getElement("7viId=AxnI4!KH-g");

Test 84: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("employee-data");
xmlElement.getElement("employee-data");

Test 85: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("Root");
xmlElement.addSubElement("Child1");
xmlElement.addSubElement("Child2");

Test 86: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("I'm a sub-element!");
xmlElement.addSubElement("So am I!");

Test 87: 
XmlElement xmlElement = new XmlElement("root");
XmlElement.printNode(xmlElement, "root");

Test 88: 
XmlElement xmlElement = new XmlElement("Person", "John Doe");
XmlElement.printNode(xmlElement, "John Doe");

Test 89: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "J21");
XmlElement xmlElement = new XmlElement("name", hashtable);
XmlElement.printNode(xmlElement, "name");

Test 90: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("user_id", "123456789");
xmlElement.addSubElement("name", "John Doe");
xmlElement.addSubElement("age", "30");
xmlElement.addSubElement("country", "USA");
XmlElement.printNode(xmlElement, "");

Test 91: 
XmlElement xmlElement = new XmlElement();
xmlElement.clone();

Test 92: 

Test 93: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

Test 94: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("customer_name", "customer_namespace");

Test 95: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("John Doe");

Test 96: 
String string = "root";
XmlElement xmlElement = new XmlElement("root");
XmlElement addSubElement = ((XmlElement)"root").addSubElement("subelementName", "subelementValue");
String string = "attributeName";
String string = "attributeValue";
((XmlElement) string).addAttribute(string, string);
string.equals(addSubElement);

Test 97: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("root", hashtable);
XmlElement xmlElement = new XmlElement("root", hashtable);
((XmlElement)"root").equals(xmlElement);

Test 98: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 99: 
String string = "myFirstChildElement";
XmlElement xmlElement = new XmlElement("myFirstChildElement");
((XmlElement)"myFirstChildElement").hashCode();
String string = "mySecondChildElement";
XmlElement xmlElement = new XmlElement(string);
string.hashCode();

Test 100: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 101: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);

Test 102: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("user", hashtable);
((XmlElement)"user").getData();

Test 103: 

Test 104: 
String string = "hSxE%E'1ni";
XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
((XmlElement)"hSxE%E'1ni").setData("com.allenstudio.ir.util.XmlElement");
String string = "Some_unique_id";
String string = "Some_text_value";
XmlElement xmlElement = new XmlElement(string, string);
String string = "com.allenstudio.ir.util.XmlElement";
((XmlElement) string).setData(string);

Test 105: 
XmlElement xmlElement = new XmlElement("<person id='123'>");
((XmlElement)"<person id='123'>").getName();

Test 106: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@");
xmlElement.removeElement(addSubElement);

Test 107: 

Test 108: 
String string = "EmployeeID";
XmlElement xmlElement = new XmlElement("EmployeeID", "Value");
((XmlElement)"EmployeeID").getAttribute("DepartmentID", "Sales");
String string = "Address";
String string = "123 Main St, Anytown, USA 12345";
((XmlElement) string).addAttribute(string, string);

Test 109: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement((XmlElement) null);

Test 110: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("1234567890", "1234567890");
xmlElement.count();

Test 111: 
String string = "";
XmlElement xmlElement = new XmlElement("");
((XmlElement)"").getAttribute("background-color", "#FF0000");
String string = "font-size";
String string = "24px";
((XmlElement) string).getAttribute(string, string);

Test 112: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("id", "John Doe");
xmlElement.getAttribute("age", "30");
xmlElement.getAttribute("gender", "male");

Test 113: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("age", (String) null);

Test 114: 
String string = "customer";
XmlElement xmlElement = new XmlElement("customer");
((XmlElement)"customer").addAttribute("id", "123456789");
String string = "name";
String string = "John Doe";
((XmlElement) string).addAttribute(string, string);
((XmlElement) string).getAttributes();

Test 115: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
((XmlElement)"").getAttributes();

Test 116: 
XmlElement xmlElement = new XmlElement("root", "Root element");
((XmlElement)"root").getData();

Test 117: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();

Test 118: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("b2~&<|]tnO", "b2~&<|]tnO");
xmlElement.getElement(0);

Test 119: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("book");
xmlElement.addSubElement("author");
xmlElement.getElement("title");

Test 120: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("sub_element1");
xmlElement.addSubElement("sub_element2");
xmlElement.getElement("sub_element1");

Test 121: 
XmlElement xmlElement = new XmlElement("Root Element", "This is a root element with a complex structure.");
XmlElement xmlElement = new XmlElement("Child 1", "This is the first child element with a list of sub-elements:");
((XmlElement)"Root Element").addElement(xmlElement);

Test 122: 
XmlElement xmlElement = new XmlElement("my_element", "This is a sample element");
((XmlElement)"my_element").getName();

Test 123: 
String string = "root";
XmlElement xmlElement = new XmlElement("root");
((XmlElement)"root").addSubElement("subelement1", "value1");
xmlElement.getName();
String string = "subelement2";
int _int = 2;
((XmlElement) string).addSubElement(string, (String) _int);
String string = "subelement3";
boolean _boolean = true;
((XmlElement) string).addSubElement(string, (String) _boolean);

Test 124: 
String string = "elementName";
XmlElement xmlElement = new XmlElement("elementName");
XmlElement xmlElement = new XmlElement("parent");
((XmlElement)"elementName").setParent(xmlElement);
((XmlElement) string).getParent();

Test 125: 
String string = "childElement";
XmlElement xmlElement = new XmlElement("childElement");
XmlElement xmlElement = new XmlElement("parentElement");
((XmlElement)"childElement").setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable) string).addObserver(observer);
String string = "childElement2";
XmlElement xmlElement = new XmlElement(string);
String string = "parentElement2";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).setParent(xmlElement);
((Observable) string).addObserver(observer);
String string = "childElement3";
XmlElement xmlElement = new XmlElement(string);
XmlElement xmlElement = null;
((XmlElement) string).setParent(xmlElement);

Test 126: 
XmlElement xmlElement = new XmlElement("person", "John Doe");
((XmlElement)"person").removeElement((XmlElement) null);


* Minimizing test suite
* test suite isTestSuite: 64
Test 0: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
xmlElement.addSubElement(clone);
xmlElement.equals(clone);
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("age", (String) null);
Test 3: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 5: 
XmlElement xmlElement = new XmlElement("Person", "John Doe");
XmlElement.printNode(xmlElement, "John Doe");
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("user_id", "123456789");
XmlElement.printNode(xmlElement, "");
Test 7: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 8: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.append(xmlElement);
xmlElement.getElement(0);
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("Book");
Test 12: 
XmlElement xmlElement = new XmlElement((String) null);
xmlElement.addAttribute((String) null, ";/");
Test 13: 
XmlElement xmlElement = new XmlElement("!>", "");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("!>", "Cas]Jl+at(");
xmlElement.getAttribute("!>", "!>");
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("banana");
xmlElement.removeElement(xmlElement);
Test 16: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.removeFromParent();
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".we");
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("J21(9", "J21(9");
xmlElement.getElement("7viId=AxnI4!KH-g");
Test 19: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("&BT:ts^zDe4a?=.bv}");
xmlElement.getElement("&BT:ts^zDe4a?=.bv}");
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".");
Test 21: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
Test 22: 
XmlElement xmlElement = new XmlElement("root");
XmlElement.printNode(xmlElement, "root");
Test 23: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "J21");
XmlElement xmlElement = new XmlElement("name", hashtable);
XmlElement.printNode(xmlElement, "name");
Test 24: 
XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
xmlElement.clone();
Test 25: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 26: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.clone();
Test 27: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 28: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement(" = '");
xmlElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(" = '", "com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 31: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("John Doe");
Test 32: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
xmlElement.addAttribute("2k&56<bX53.>y5j(0H", "'");
xmlElement.equals(addSubElement);
Test 33: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 34: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();
Test 35: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.hashCode();
Test 36: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 37: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addElement(xmlElement);
xmlElement.getElements();
Test 38: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("lastName");
Test 39: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);
Test 40: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.getData();
Test 41: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getElements();
Test 42: 
XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 43: 
XmlElement xmlElement = new XmlElement("", "x]#*q(");
xmlElement.getName();
Test 44: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 45: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 46: 
XmlElement xmlElement = new XmlElement("-G)?G@#N", "-G)?G@#N");
xmlElement.getAttribute("", "s");
xmlElement.addAttribute("", "s");
Test 47: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 48: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 49: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.count();
Test 50: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getAttribute("#'B5,J)_%oV", "8V");
xmlElement.getAttribute("#'B5,J)_%oV");
Test 51: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("", "");
Test 52: 
XmlElement xmlElement = new XmlElement("Zut@a2-2(J.X}");
xmlElement.addAttribute("E0ls:6n~25<)]", "Zut@a2-2(J.X}");
xmlElement.getAttributes();
Test 53: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 54: 
XmlElement xmlElement = new XmlElement();
xmlElement.data = "com.allenstudio.ir.util.XmlElement";
xmlElement.getData();
Test 55: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 56: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.getElement(0);
Test 57: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
addSubElement.addSubElement("-");
xmlElement.getElement("-");
Test 58: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("-");
Test 59: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getName();
Test 60: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
addSubElement.getName();
Test 61: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.getParent();
Test 62: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeElement(0);
Test 63: 
XmlElement xmlElement = new XmlElement("+MmG_v", "+MmG_v");
XmlElement addSubElement = xmlElement.addSubElement("+MmG_v");
addSubElement.addSubElement(":4zyje%\"%HwPe8{p\"", "");
xmlElement.removeElement(addSubElement);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 95
* Number of covered goals: 95
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 156
* Number of covered goals: 154
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 109
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 95
* Number of covered goals: 87
* Generated 64 tests with total length 175
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 61%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement arg0 = (XmlElement)xmlElement.clone();
assertNotNull(arg0);
assertTrue(arg0.equals((Object)xmlElement));

xmlElement.addSubElement(arg0);
boolean equals = xmlElement.equals(arg0);
assertFalse(equals);
assertFalse(arg0.equals((Object)xmlElement));


** It was a parseable test case! 
refined test name is: testXmlElementCloneAndEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
int count = xmlElement.count();
assertEquals(0, count);


** It was a parseable test case! 
refined test name is: testCountEmptyXmlElementReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String attribute = xmlElement.getAttribute("age", (String) null);
assertNull(attribute);


** It was a parseable test case! 
refined test name is: testGetAttributeNonExistentAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Enumeration attributeNames = xmlElement.getAttributeNames();
assertNotNull(attributeNames);


** It was a parseable test case! 
refined test name is: testGetAttributeNamesReturnsNonNullEnumeration
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
assertFalse(xmlElement.hasChanged());


** It was a parseable test case! 
refined test name is: testRemoveAllElementsNoElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("Person", "John Doe");
XmlElement.printNode(arg0, "John Doe");
assertEquals("John Doe", arg0.getData());
assertEquals("Person", arg0.getName());


** It was a parseable test case! 
refined test name is: testPrintNodeShouldMatchExpectedOutput
* Compiling Tests
refined test name is: testPrintNodeShouldOutputCorrectNameAndData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement addSubElement = arg0.addSubElement("user_id", "123456789");
assertEquals("123456789", addSubElement.getData());
assertEquals("user_id", addSubElement.getName());
assertNotNull(addSubElement);

XmlElement.printNode(arg0, "");
assertNotSame(arg0, addSubElement);


** It was a parseable test case! 
refined test name is: testAddSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement parent = xmlElement.getParent();
assertNull(parent);


** It was a parseable test case! 
refined test name is: testGetParentReturnsNullWhenElementIsNewlyCreated
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
assertEquals(0, xmlElement.count());


** It was a parseable test case! 
refined test name is: testNotifyObserversCountIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.insertElement(arg0, 0);
assertEquals(1, arg0.count());


** It was a parseable test case! 
refined test name is: testInsertElementIncrementsCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.append(arg0);
XmlElement element = arg0.getElement(0);
assertSame(arg0, element);


** It was a parseable test case! 
refined test name is: testAppendToParent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.setName("Book");
assertEquals(0, xmlElement.count());


** It was a parseable test case! 
refined test name is: testCountOfEmptyXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement((String) null);
Object addAttribute = xmlElement.addAttribute((String) null, ";/");
assertNull(addAttribute);


** It was a parseable test case! 
refined test name is: testAddAttributeNullName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("!>", "");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("!>", "Cas]Jl+at(");
String attribute = xmlElement.getAttribute("!>", "!>");
assertEquals("", xmlElement.getData());
assertEquals("Cas]Jl+at(", attribute);


** It was a parseable test case! 
refined test name is: testGetAttributeWithValidAttributeNameAndValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement removeElement = arg0.removeElement(arg0);
assertNull(removeElement);


** It was a parseable test case! 
refined test name is: testRemoveElementRemovesElementFromXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.addSubElement("banana");
arg0.removeElement(arg0);
assertEquals(1, arg0.count());


** It was a parseable test case! 
refined test name is: testRemoveElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
assertEquals(1, xmlElement.count());

addSubElement.removeFromParent();
assertEquals(0, xmlElement.count());


** It was a parseable test case! 
refined test name is: testRemoveSubElementFromParent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement element = xmlElement.getElement(".we");
assertNull(element);


** It was a parseable test case! 
refined test name is: testGetElementWithInvalidName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("J21(9", "J21(9");
assertEquals("J21(9", addSubElement.getData());
assertNotNull(addSubElement);

XmlElement element = xmlElement.getElement("7viId=AxnI4!KH-g");
assertNull(element);
assertNotSame(xmlElement, addSubElement);


** It was a parseable test case! 
refined test name is: testAddSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("&BT:ts^zDe4a?=.bv}");
xmlElement.getElement("&BT:ts^zDe4a?=.bv}");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddSubElementShouldIncreaseChildCountByOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testCountSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testCountTwoSubElementsReturnsOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("root");
XmlElement.printNode(arg0, "root");
assertEquals("root", arg0.getName());
assertEquals("", arg0.getData());


** It was a parseable test case! 
refined test name is: testPrintNodeWithRootPrefix
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Hashtable<String, String> arg1 = new Hashtable<String, String>();
arg1.put("id", "J21");
XmlElement arg0 = new XmlElement("name", arg1);
XmlElement.printNode(arg0, "name");
assertEquals(0, arg0.count());


** It was a parseable test case! 
refined test name is: testPrintNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
Object clone = xmlElement.clone();
assertNotSame(clone, xmlElement);


** It was a parseable test case! 
refined test name is: testCloneMethodReturnsCopyOfXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
Object clone = xmlElement.clone();
assertNotSame(clone, xmlElement);


** It was a parseable test case! 
refined test name is: testCloneXmlElement
* Compiling Tests
refined test name is: testCloneDeepCopyOfXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement arg0 = new XmlElement();
xmlElement.addSubElement(arg0);
xmlElement.clone();
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testCloneWithSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
boolean equals = arg0.equals(arg0);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsForSameObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement arg0 = new XmlElement(" = '");
boolean equals = xmlElement.equals(arg0);
assertFalse(arg0.equals((Object)xmlElement));
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testXmlElementEqualsAndHashCode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement addSubElement = arg0.addSubElement(" = '", "com.allenstudio.ir.util.XmlElement");
assertNotNull(addSubElement);

boolean equals = addSubElement.equals(arg0);
assertEquals("com.allenstudio.ir.util.XmlElement", addSubElement.getData());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testGetSubElementWithSameNameAndDifferentNamespace
* Compiling Tests
refined test name is: testGetSubElementAndCompare
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
boolean equals = xmlElement.equals((Object) null);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithNullArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
boolean equals = xmlElement.equals("John Doe");
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testXmlElementEqualsNonMatchingStringReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("");
XmlElement arg0 = xmlElement.addSubElement((String) null, (String) null);
xmlElement.addAttribute("2k&56<bX53.>y5j(0H", "'");
boolean equals = xmlElement.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithNullArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Hashtable<String, String> arg1 = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", arg1);
XmlElement arg0 = new XmlElement();
boolean equals = xmlElement.equals(arg0);
assertFalse(arg0.equals((Object)xmlElement));
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsDifferentValuesReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeForIdenticalXmlElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement(";/");
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeForEmptyTag
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testGetSubElementsSizeReturnsZeroForNewXmlElement
* Compiling Tests
refined test name is: testXmlElementHasNoSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("", "");
arg0.addElement(arg0);
List elements = arg0.getElements();
assertFalse(elements.isEmpty());


** It was a parseable test case! 
refined test name is: testAddElementShouldNotHaveEmptyElementsList
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String attribute = xmlElement.getAttribute("lastName");
assertNull(attribute);


** It was a parseable test case! 
refined test name is: testGetNonExistentAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> arg0 = new Hashtable<String, String>();
xmlElement.setAttributes(arg0);
assertNull(xmlElement.getName());


** It was a parseable test case! 
refined test name is: testSetAttributesToHashtable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("", "");
String data = xmlElement.getData();
assertEquals("", data);


** It was a parseable test case! 
refined test name is: testGetDataFromXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement(";/");
List elements = xmlElement.getElements();
assertTrue(elements.isEmpty());


** It was a parseable test case! 
refined test name is: testGetElementsOnEmptyElementShouldReturnEmptyList
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
assertEquals("", xmlElement.getData());

xmlElement.setData("com.allenstudio.ir.util.XmlElement");
assertEquals("com.allenstudio.ir.util.XmlElement", xmlElement.getData());


** It was a parseable test case! 
refined test name is: testSetDataUpdatesElementData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("", "x]#*q(");
String name = xmlElement.getName();
assertNotNull(name);
assertEquals("", name);
assertEquals("x]#*q(", xmlElement.getData());


** It was a parseable test case! 
refined test name is: testGetNameAndGetDataMethods
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Object addAttribute = xmlElement.addAttribute((String) null, (String) null);
assertNull(addAttribute);


** It was a parseable test case! 
refined test name is: testAddAttributeInvalidArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
assertNull(xmlElement.getName());


** It was a parseable test case! 
refined test name is: testRemoveFromParentsetsNameToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("-G)?G@#N", "-G)?G@#N");
String attribute = xmlElement.getAttribute("", "s");
assertNotNull(attribute);

Object addAttribute = xmlElement.addAttribute("", "s");
assertEquals("s", addAttribute);


** It was a parseable test case! 
refined test name is: testGetAndAddAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement addSubElement = arg0.addSubElement(arg0);
XmlElement parent = addSubElement.getParent();
assertSame(parent, arg0);


** It was a parseable test case! 
refined test name is: testAddSubElementShouldSetParentToArg0
* Compiling Tests
refined test name is: testAddSubElementReturnsCorrectParent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
assertEquals("-?b2~&<|]tnO", addSubElement.getData());

xmlElement.count();
assertNotSame(xmlElement, addSubElement);


** It was a parseable test case! 
refined test name is: testAddSubElementAndCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("");
xmlElement.getAttribute("#'B5,J)_%oV", "8V");
String attribute = xmlElement.getAttribute("#'B5,J)_%oV");
assertEquals("8V", attribute);
assertNotNull(attribute);


** It was a parseable test case! 
refined test name is: testGetAttributeFromXmlElementWithValidAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String attribute = xmlElement.getAttribute("", "");
assertEquals("", attribute);


** It was a parseable test case! 
refined test name is: testGetAttributeWithEmptyKeyAndDefaultValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("Zut@a2-2(J.X}");
xmlElement.addAttribute("E0ls:6n~25<)]", "Zut@a2-2(J.X}");
Hashtable<String, String> attributes = xmlElement.getAttributes();
assertFalse(attributes.isEmpty());


** It was a parseable test case! 
refined test name is: testRetrieveAttributesFromXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
Hashtable<String, String> attributes = xmlElement.getAttributes();
assertNull(attributes);


** It was a parseable test case! 
refined test name is: testGetAttributesReturnsNullWhenNoAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.data = "com.allenstudio.ir.util.XmlElement";
String data = xmlElement.getData();
assertEquals("com.allenstudio.ir.util.XmlElement", data);


** It was a parseable test case! 
refined test name is: testGetData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String data = xmlElement.getData();
assertNull(data);


** It was a parseable test case! 
refined test name is: testGetDataReturnsNullWhenElementIsEmpty
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
XmlElement element = xmlElement.getElement(0);
assertEquals("-?b2~&<|]tnO", element.getData());
assertSame(element, addSubElement);


** It was a parseable test case! 
refined test name is: testAddSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
addSubElement.addSubElement("-");
xmlElement.getElement("-");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testCountSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
Observer arg0 = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(arg0);
xmlElement.getElement("-");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testElementCountIncreasesWhenObserverAdded
* Compiling Tests
refined test name is: testAddObserverToSubElementIncreasesElementCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement(";/");
String name = xmlElement.getName();
assertEquals(";/", name);


** It was a parseable test case! 
refined test name is: testGetNameWithValidXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
String name = addSubElement.getName();
assertNull(name);
assertNotSame(xmlElement, addSubElement);


** It was a parseable test case! 
refined test name is: testAddSubElementWithNullNameAndValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.addSubElement(arg0);
XmlElement removeElement = arg0.removeElement(0);
assertEquals(0, removeElement.count());


** It was a parseable test case! 
refined test name is: testRemoveFirstSubelement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("+MmG_v", "+MmG_v");
XmlElement arg0 = xmlElement.addSubElement("+MmG_v");
arg0.addSubElement(":4zyje%\"%HwPe8{p\"", "");
xmlElement.removeElement(arg0);
assertEquals(1, arg0.count());
assertEquals(0, xmlElement.count());


** It was a parseable test case! 
refined test name is: testRemoveElementWithSubElements
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.544 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.586 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.586 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.611 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.612 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.636 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.637 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.664 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.665 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:33.693 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.694 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.721 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.722 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.763 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.764 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.798 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.799 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.840 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.841 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.868 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.896 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.897 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.934 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.935 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
[MASTER] 16:37:33.966 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.967 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:33.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:33.994 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.021 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.022 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.063 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.064 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.091 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.092 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.120 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.121 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
[MASTER] 16:37:34.151 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.153 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.180 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.181 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.209 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.210 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.237 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.268 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.269 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.301 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:34.330 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.331 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.360 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.361 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.393 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.426 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.426 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:34.460 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.461 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.493 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 16:37:34.493 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
* Compiling Tests
[MASTER] 16:37:34.527 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.561 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.562 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
[MASTER] 16:37:34.596 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.596 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.628 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.628 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
[MASTER] 16:37:34.666 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.667 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:34.700 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.701 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.735 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.736 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.767 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.768 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.801 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.804 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.837 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.838 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.870 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.871 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.904 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.904 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:34.936 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.936 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 16:37:34.967 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.968 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
* Compiling Tests
[MASTER] 16:37:34.999 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:34.999 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.031 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.031 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:35.066 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.066 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.104 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.141 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.175 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.175 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.215 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.216 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.249 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.282 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.282 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.318 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.319 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.354 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.354 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.389 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.390 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:35.431 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.502 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.502 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.541 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.542 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:37:35.580 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:35.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 5 called: 0 to improve: false
** Write a test suite: 25 called: 1 to improve: false
** Write a test suite: 29 called: 2 to improve: false
** Write a test suite: 36 called: 3 to improve: false
** Write a test suite: 47 called: 4 to improve: false
** Write a test suite: 57 called: 5 to improve: false
[MASTER] 16:37:37.318 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:37.319 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 14 called: 1 to improve: false
** Write a test suite: 25 called: 2 to improve: false
** Write a test suite: 32 called: 3 to improve: false
** Write a test suite: 36 called: 4 to improve: false
** Write a test suite: 56 called: 5 to improve: false
[MASTER] 16:37:39.067 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:39.067 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
[MASTER] 16:37:40.507 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 66
Test 0: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
xmlElement.addSubElement(clone);
xmlElement.equals(clone);
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("VUm W+1y?U|Z");
Test 3: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 7: 
XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
xmlElement.clone();
Test 8: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.append(xmlElement);
xmlElement.getElement(0);
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName(" = '");
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 12: 
XmlElement xmlElement = new XmlElement((String) null);
xmlElement.addAttribute((String) null, ";/");
Test 13: 
XmlElement xmlElement = new XmlElement("!>", "");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("!>", "Cas]Jl+at(");
xmlElement.getAttribute("!>", "!>");
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.removeFromParent();
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-");
xmlElement.removeElement(xmlElement);
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".we");
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("J21(", "J21(");
xmlElement.getElement("7viId=AxnI4!KH-g");
Test 19: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("&BT:ts^zDe4a?=.bv}");
xmlElement.getElement("&BT:ts^zDe4a?=.bv}");
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".");
Test 21: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
Test 22: 
XmlElement xmlElement = new XmlElement("g59NAsW");
XmlElement.printNode(xmlElement, "g59NAsW");
Test 23: 
XmlElement xmlElement = new XmlElement("rr&?`yFK?]\"{EX1%DZq", "rr&?`yFK?]\"{EX1%DZq");
XmlElement.printNode(xmlElement, "rr&?`yFK?]\"{EX1%DZq");
Test 24: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("{wzY^", "J21(");
XmlElement xmlElement = new XmlElement("{wzY^", hashtable);
XmlElement.printNode(xmlElement, "{wzY^");
Test 25: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("@gvH9NAsW", "@gvH9NAsW");
XmlElement.printNode(xmlElement, "");
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 27: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.clone();
Test 28: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement(" = '");
xmlElement.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(" = '", "com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);
Test 31: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 32: 
XmlElement xmlElement = new XmlElement();
Object object = new Object();
xmlElement.equals(object);
Test 33: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
xmlElement.addAttribute("2k&56<bX53.>y5j(0H", "'");
xmlElement.equals(addSubElement);
Test 34: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 35: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();
Test 36: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.hashCode();
Test 37: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 38: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);
Test 39: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getData();
Test 40: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getElements();
Test 41: 
XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 42: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getName();
Test 43: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@");
xmlElement.removeElement(addSubElement);
Test 44: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 45: 
XmlElement xmlElement = new XmlElement("-G)?G@#N", "-G)?G@#N");
xmlElement.getAttribute("", "s");
xmlElement.addAttribute("", "s");
Test 46: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 47: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.count();
Test 48: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getAttribute("#'B5,J)_%oV", "8V");
xmlElement.getAttribute("#'B5,J)_%oV");
Test 49: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("", "");
Test 50: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("ZY}(<s@T }q", (String) null);
Test 51: 
XmlElement xmlElement = new XmlElement("Zut@a2-2(J.X}");
xmlElement.addAttribute("E0ls:6n~25<)]", "Zut@a2-2(J.X}");
xmlElement.getAttributes();
Test 52: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 53: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.getData();
Test 54: 
XmlElement xmlElement = new XmlElement();
xmlElement.data = "com.allenstudio.ir.util.XmlElement";
xmlElement.getData();
Test 55: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.getElement(0);
Test 56: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
addSubElement.addSubElement("-");
xmlElement.getElement("-");
Test 57: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("-");
Test 58: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addElement(xmlElement);
xmlElement.getElements();
Test 59: 
XmlElement xmlElement = new XmlElement("", "x]#*q(");
xmlElement.getName();
Test 60: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
addSubElement.getName();
Test 61: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 62: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.getParent();
Test 63: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeElement(0);
Test 64: 
XmlElement xmlElement = new XmlElement("+MmG_v", "+MmG_v");
XmlElement addSubElement = xmlElement.addSubElement("+MmG_v");
addSubElement.addSubElement(":4zyje%\"%HwPe8{p\"", "");
xmlElement.removeElement(addSubElement);
Test 65: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);

* Minimizing test suite
* test suite isTestSuite: 67
Test 0: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("", "");
Test 3: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.setAttributes(hashtable);
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 6: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.getData();
Test 7: 
XmlElement xmlElement = new XmlElement("hSxE%E'1ni", "");
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 8: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getElements();
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".");
Test 11: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
xmlElement.addAttribute("2k&56<bX53.>y5j(0H", "'");
xmlElement.equals(addSubElement);
Test 12: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 13: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);
Test 14: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 15: 
XmlElement xmlElement = new XmlElement();
xmlElement.append(xmlElement);
xmlElement.getElement(0);
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName(" = '");
Test 17: 
XmlElement xmlElement = new XmlElement("", "x]#*q(");
xmlElement.getName();
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 19: 
XmlElement xmlElement = new XmlElement((String) null);
xmlElement.addAttribute((String) null, ";/");
Test 20: 
XmlElement xmlElement = new XmlElement("!>", "");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("!>", "Cas]Jl+at(");
xmlElement.getAttribute("!>", "!>");
Test 21: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 22: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.removeFromParent();
Test 23: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-");
xmlElement.removeElement(xmlElement);
Test 24: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("&BT:ts^zDe4a?=.bv}");
xmlElement.getElement("&BT:ts^zDe4a?=.bv}");
Test 25: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".we");
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement("&BT:ts^zDe4a?=.bv}");
Test 27: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("J21(", "J21(");
xmlElement.getElement("7viId=AxnI4!KH-g");
Test 28: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
xmlElement.addSubElement("IX!.9w5\"A9k G3|J");
Test 29: 
XmlElement xmlElement = new XmlElement("g59NAsW");
XmlElement.printNode(xmlElement, "g59NAsW");
Test 30: 
XmlElement xmlElement = new XmlElement("rr&?`yFK?]\"{EX1%DZq", "rr&?`yFK?]\"{EX1%DZq");
XmlElement.printNode(xmlElement, "rr&?`yFK?]\"{EX1%DZq");
Test 31: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("{wzY^", "J21(");
XmlElement xmlElement = new XmlElement("{wzY^", hashtable);
XmlElement.printNode(xmlElement, "{wzY^");
Test 32: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("@gvH9NAsW", "@gvH9NAsW");
XmlElement.printNode(xmlElement, "");
Test 33: 
XmlElement xmlElement = new XmlElement("kB`", (Hashtable<String, String>) null);
xmlElement.clone();
Test 34: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
xmlElement.addSubElement(clone);
xmlElement.equals(clone);
Test 35: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 36: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.clone();
Test 37: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 38: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement(" = '");
xmlElement.equals(xmlElement);
Test 39: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement(" = '", "com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);
Test 40: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 41: 
XmlElement xmlElement = new XmlElement();
Object object = new Object();
xmlElement.equals(object);
Test 42: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 43: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();
Test 44: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.hashCode();
Test 45: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 46: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addElement(xmlElement);
xmlElement.getElements();
Test 47: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("VUm W+1y?U|Z");
Test 48: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 49: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("772~En;?NQh3$ba@");
xmlElement.removeElement(addSubElement);
Test 50: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 51: 
XmlElement xmlElement = new XmlElement("-G)?G@#N", "-G)?G@#N");
xmlElement.getAttribute("", "s");
xmlElement.addAttribute("", "s");
Test 52: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 53: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.count();
Test 54: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getAttribute("#'B5,J)_%oV", "8V");
xmlElement.getAttribute("#'B5,J)_%oV");
Test 55: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("ZY}(<s@T }q", (String) null);
Test 56: 
XmlElement xmlElement = new XmlElement("Zut@a2-2(J.X}");
xmlElement.addAttribute("E0ls:6n~25<)]", "Zut@a2-2(J.X}");
xmlElement.getAttributes();
Test 57: 
XmlElement xmlElement = new XmlElement();
xmlElement.data = "com.allenstudio.ir.util.XmlElement";
xmlElement.getData();
Test 58: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getData();
Test 59: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("-?b2~&<|]tnO", "-?b2~&<|]tnO");
xmlElement.getElement(0);
Test 60: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
addSubElement.addSubElement("-");
xmlElement.getElement("-");
Test 61: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("-");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("-");
Test 62: 
XmlElement xmlElement = new XmlElement(";/");
xmlElement.getName();
Test 63: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement((String) null, (String) null);
addSubElement.getName();
Test 64: 
XmlElement xmlElement = new XmlElement("bL](eIs0Hvww2@\"3(");
xmlElement.setParent(xmlElement);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.getParent();
Test 65: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeElement(0);
Test 66: 
XmlElement xmlElement = new XmlElement("+MmG_v", "+MmG_v");
XmlElement addSubElement = xmlElement.addSubElement("+MmG_v");
addSubElement.addSubElement(":4zyje%\"%HwPe8{p\"", "");
xmlElement.removeElement(addSubElement);

[MASTER] 16:37:50.065 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 95
* Number of covered goals: 95
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 156
* Number of covered goals: 154
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 59%
* Total number of goals: 109
* Number of covered goals: 64
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 95
* Number of covered goals: 87
* Generated 67 tests with total length 185
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 16:37:50.201 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 60%
* Compiling and checking tests
[MASTER] 16:37:53.963 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.388 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.435 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.435 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.481 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.526 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.527 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.574 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.621 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.819 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.820 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.854 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.855 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.884 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.885 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.913 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.951 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.952 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:56.980 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:56.981 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.009 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.039 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.040 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.069 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.070 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.100 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.101 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.132 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.133 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.165 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.166 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.197 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.229 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.262 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.294 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.327 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.328 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.397 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.398 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.429 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.430 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.462 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.463 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.497 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.498 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.531 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.564 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.565 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.598 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.599 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.633 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.668 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.702 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.703 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.737 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.738 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.772 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.773 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.807 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.808 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.843 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.843 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.880 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.881 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.918 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.956 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.957 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:57.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:57.995 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.034 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.035 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.072 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.073 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.113 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.114 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.151 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.152 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.191 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.192 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.230 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.231 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.271 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.316 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.317 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.360 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.361 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.404 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.404 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.448 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.491 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.492 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.534 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.576 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.577 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.618 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.657 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.658 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.698 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.699 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.751 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.793 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.794 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.835 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.837 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.878 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.879 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:37:58.925 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:37:58.926 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
[MASTER] 16:38:00.061 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:38:00.062 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
[MASTER] 16:38:01.292 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8970164981165743288.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:38:01.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8970164981165743288.jar
* Writing tests to file
[MASTER] 16:38:01.295 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'XmlElement_ESTest' to evosuite-tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 14 called: 1 to improve: false
** Write a test suite: 25 called: 2 to improve: false
** Write a test suite: 32 called: 3 to improve: false
** Write a test suite: 36 called: 4 to improve: false
** Write a test suite: 56 called: 5 to improve: false
* Writing JUnit test case 'XmlElement_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
* Done!

* Computation finished
