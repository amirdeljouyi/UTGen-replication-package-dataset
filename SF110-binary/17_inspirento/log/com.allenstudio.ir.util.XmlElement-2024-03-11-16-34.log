* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.allenstudio.ir.util.XmlElement
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/17_inspirento/evosuite-files/evosuite.properties
* Connecting to master process on port 5018
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:34:36.526 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:34:36.528 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:34:36.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:34:36.555 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:34:36.561 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:34:36.562 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class com.allenstudio.ir.util.XmlElement
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 490
* Using seed 1710174874404
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 260 / 490
[Progress:>                             1%] [Cov:=======================>           68%][Progress:>                             2%] [Cov:========================>          71%][Progress:>                             3%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:===========================>       79%][Progress:=>                            5%] [Cov:=============================>     83%][Progress:=>                            5%] [Cov:=============================>     83%][Progress:=>                            5%] [Cov:=============================>     83%][Progress:=>                            5%] [Cov:=============================>     83%][Progress:=>                            5%] [Cov:=============================>     83%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    87%][Progress:===>                          11%] [Cov:==============================>    87%][Progress:===>                          11%] [Cov:==============================>    87%][Progress:===>                          11%] [Cov:==============================>    87%][Progress:===>                          11%] [Cov:==============================>    87%][Progress:===>                          11%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                46%] [Cov:===============================>   90%][Progress:==============>               47%] [Cov:===============================>   90%][Progress:==============>               48%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              51%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              52%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             54%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:================>             55%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            57%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           60%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:==================>           62%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          64%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:===================>          65%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     83%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:=========================>    85%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   87%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:===========================>  91%] [Cov:===============================>   90%][Progress:===========================>  92%] [Cov:===============================>   90%][Progress:===========================>  92%] [Cov:===============================>   90%][Progress:===========================>  92%] [Cov:===============================>   90%][Progress:===========================>  92%] [Cov:===============================>   90%][Progress:===========================>  93%] [Cov:===============================>   90%][Progress:===========================>  93%] [Cov:===============================>   90%][Progress:===========================>  93%] [Cov:===============================>   90%][Progress:===========================>  93%] [Cov:===============================>   90%][Progress:============================> 94%] [Cov:===============================>   90%][Progress:============================> 94%] [Cov:===============================>   90%][Progress:============================> 94%] [Cov:===============================>   90%][Progress:============================> 94%] [Cov:===============================>   90%][Progress:============================> 94%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:============================> 96%] [Cov:===============================>   90%][Progress:=============================>97%] [Cov:===============================>   90%][Progress:=============================>97%] [Cov:===============================>   90%][Progress:=============================>97%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:=============================>99%] [Cov:===============================>   90%][Progress:=============================>99%] [Cov:===============================>   90%][Progress:=============================>99%] [Cov:===============================>   90%][Progress:=============================>99%] [Cov:===============================>   90%][Progress:==============================100%] [Cov:===============================>   90%]
* Search finished after 205s and 552 generations, 111567 statements, best individual has fitness: 51.0
* Generated before the refinement 64 tests with total length 184
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null)
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
test data is: XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
xmlElement.getAttributes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", ((Hashtable<String, String>) (null)));
        xmlElement.getAttributes();
    }
}
statement is: // Improved test data
XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", ((Hashtable<String, String>) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttributes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getAttributes()Ljava/util/Hashtable;
TestCase is: String string = "Z8liwAh%k'BQ('6r";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
((XmlElement) string).getAttributes();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int count = xmlElement.count()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the XmlElement class
        XmlElement xmlElement = new XmlElement("root", "http://www.example.com");
        xmlElement.addChild(new XmlElement("child1"));
        xmlElement.addChild(new XmlElement("child2"));
        // Use a more descriptive value for the namespace
        xmlElement.setNamespace("http://www.example.com");
        // Use a more descriptive value for the element name
        xmlElement.setName("root");
    }
}
statement is: // Improved test data for the XmlElement class
XmlElement xmlElement = new XmlElement("root", "http://www.example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addChild(new XmlElement("child1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(new XmlElement("child1")) target is: xmlElement method is: addChild(XmlElement)
statement is: xmlElement.addChild(new XmlElement("child2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(new XmlElement("child2")) target is: xmlElement method is: addChild(XmlElement)
statement is: // Use a more descriptive value for the namespace
xmlElement.setNamespace("http://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Use a more descriptive value for the namespace
xmlElement.setNamespace("http://www.example.com") target is: xmlElement method is: setNamespace(java.lang.String)
statement is: // Use a more descriptive value for the element name
xmlElement.setName("root"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Use a more descriptive value for the element name
xmlElement.setName("root") target is: xmlElement method is: setName(java.lang.String)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttributeNames()Ljava/util/Enumeration; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Enumeration<E>
statement code is: Enumeration attributeNames = xmlElement.getAttributeNames()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setAttribute("id", 123);
        xmlElement.setAttribute("name", "John Doe");
        xmlElement.getAttributeNames();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setAttribute("id", 123), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("id", 123) target is: xmlElement method is: setAttribute(java.lang.String,int)
statement is: xmlElement.setAttribute("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("name", "John Doe") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.getAttributeNames(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributeNames() target is: xmlElement method is: getAttributeNames()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttributeNames()Ljava/util/Enumeration;
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeAllElements()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeAllElements()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addElement("child4");
        xmlElement.addElement("child5");
        xmlElement.addElement("child6");
        xmlElement.removeAllElements(Arrays.asList("child4", "child5", "child6"));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addElement("child4"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addElement("child4") target is: xmlElement method is: addElement(java.lang.String)
statement is: xmlElement.addElement("child5"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addElement("child5") target is: xmlElement method is: addElement(java.lang.String)
statement is: xmlElement.addElement("child6"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addElement("child6") target is: xmlElement method is: addElement(java.lang.String)
statement is: xmlElement.removeAllElements(Arrays.asList("child4", "child5", "child6")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeAllElements(Arrays.asList("child4", "child5", "child6")) target is: xmlElement method is: removeAllElements()
TestCase is: XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("Z\"", "Z\"")
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "Z\"")
test data is: XmlElement xmlElement = new XmlElement("Z\"", "Z\"");
XmlElement.printNode(xmlElement, "Z\"");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("user", "John Doe");
        XmlElement.printNode(xmlElement, "user");
    }
}
statement is: XmlElement xmlElement = new XmlElement("user", "John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement.printNode(xmlElement, "user"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement, "user") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
TestCase is: String string = "user";
String string = "John Doe";
XmlElement xmlElement = new XmlElement(string, string);
String string = "user";
XmlElement.printNode(xmlElement, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XmlElement xmlElement = new XmlElement("parent");
        xmlElement.setChild(new XmlElement("child"));
        assertEquals(xmlElement.getParent(), "parent");
        assertEquals(xmlElement.getChild().getName(), "child");
    }
}
statement is: // Improved test data
XmlElement xmlElement = new XmlElement("parent"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setChild(new XmlElement("child")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setChild(new XmlElement("child")) target is: xmlElement method is: setChild(XmlElement)
statement is: assertEquals(xmlElement.getParent(), "parent"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xmlElement.getParent(), "parent") target is:  method is: assertEquals(<unknown>,java.lang.String)
statement is: assertEquals(xmlElement.getChild().getName(), "child"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xmlElement.getChild().getName(), "child") target is:  method is: assertEquals(<unknown>,java.lang.String)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(".VFo5:M$=S^\"OJ`")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".VFo5:M$=S^\"OJ`");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("This is a sample string.");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("This is a sample string."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("This is a sample string.") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "This is a sample string.";
xmlElement.addSubElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: notifyObservers()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.notifyObservers()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("Test");
        xmlElement.setValue(123);
        xmlElement.setDescription("This is a test element.");
        xmlElement.addObserver(new Observer() {
            @Override
            public void update(Observable observable, Object o) {
                System.out.println("The value of the element has changed to " + ((XmlElement) (observable)).getValue());
            }
        });
        xmlElement.notifyObservers();
    }
}
statement is: XmlElement xmlElement = new XmlElement("Test"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setValue(123), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setValue(123) target is: xmlElement method is: setValue(int)
statement is: xmlElement.setDescription("This is a test element."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setDescription("This is a test element.") target is: xmlElement method is: setDescription(java.lang.String)
statement is: xmlElement.addObserver(new Observer() {
    @Override
    public void update(Observable observable, Object o) {
        System.out.println("The value of the element has changed to " + ((XmlElement) (observable)).getValue());
    }
}), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addObserver(new Observer() {
    @Override
    public void update(Observable observable, Object o) {
        System.out.println("The value of the element has changed to " + ((XmlElement) (observable)).getValue());
    }
}) target is: xmlElement method is: addObserver(DummyClass$1)
statement is: xmlElement.notifyObservers(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.notifyObservers() target is: xmlElement method is: notifyObservers()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("q", "")
statement is: insertElement(Lcom/allenstudio/ir/util/XmlElement;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.insertElement(arg0, 0)
test data is: XmlElement xmlElement = new XmlElement("q", "");
xmlElement.insertElement(xmlElement, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("q", "");
        xmlElement.insertElement(xmlElement, 0);
        // Improved test data
        XmlElement xmlElement1 = new XmlElement("q", "");
        xmlElement1.setValue("New value");
        xmlElement1.addAttribute("key", "value");
        XmlElement xmlElement2 = new XmlElement("q", "");
        xmlElement2.insertElement(xmlElement2, 0);
        xmlElement2.setValue("Another value");
        xmlElement2.addAttribute("anotherKey", "anotherValue");
    }
}
statement is: XmlElement xmlElement = new XmlElement("q", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.insertElement(xmlElement, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.insertElement(xmlElement, 0) target is: xmlElement method is: insertElement(XmlElement,int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: insertElement(Lcom/allenstudio/ir/util/XmlElement;I)V
statement is: // Improved test data
XmlElement xmlElement1 = new XmlElement("q", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.setValue("New value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setValue("New value") target is: xmlElement1 method is: setValue(java.lang.String)
statement is: xmlElement1.addAttribute("key", "value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.addAttribute("key", "value") target is: xmlElement1 method is: addAttribute(java.lang.String,java.lang.String)
statement is: XmlElement xmlElement2 = new XmlElement("q", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.insertElement(xmlElement2, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.insertElement(xmlElement2, 0) target is: xmlElement2 method is: insertElement(XmlElement,int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 10
Matched Method is: insertElement(Lcom/allenstudio/ir/util/XmlElement;I)V
statement is: xmlElement2.setValue("Another value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setValue("Another value") target is: xmlElement2 method is: setValue(java.lang.String)
statement is: xmlElement2.addAttribute("anotherKey", "anotherValue"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.addAttribute("anotherKey", "anotherValue") target is: xmlElement2 method is: addAttribute(java.lang.String,java.lang.String)
TestCase is: String string = "q";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
int _int = 0;
((XmlElement) string).insertElement(xmlElement, _int);
String string = "q";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
String string = "q";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
int _int = 0;
((XmlElement) string).insertElement(xmlElement, _int);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
statement is: removeFromParent()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeFromParent()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeFromParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("child-1");
        xmlElement.removeFromParent();
        XmlElement xmlElement2 = new XmlElement();
        xmlElement2.addSubElement("child-2");
        xmlElement2.removeFromParent();
        XmlElement xmlElement3 = new XmlElement();
        xmlElement3.addSubElement("child-1");
        xmlElement3.removeFromParent();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("child-1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("child-1") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.removeFromParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeFromParent() target is: xmlElement method is: removeFromParent()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeFromParent()V
statement is: XmlElement xmlElement2 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.addSubElement("child-2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.addSubElement("child-2") target is: xmlElement2 method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement2.removeFromParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.removeFromParent() target is: xmlElement2 method is: removeFromParent()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: removeFromParent()V
statement is: XmlElement xmlElement3 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement3.addSubElement("child-1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.addSubElement("child-1") target is: xmlElement3 method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 8
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement3.removeFromParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.removeFromParent() target is: xmlElement3 method is: removeFromParent()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 8
Matched Method is: removeFromParent()V
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "child-1";
xmlElement.addSubElement((XmlElement) string);
xmlElement.removeFromParent();
XmlElement xmlElement = new XmlElement();
String string = "child-2";
xmlElement.addSubElement((XmlElement) string);
xmlElement.removeFromParent();
XmlElement xmlElement = new XmlElement();
String string = "child-1";
xmlElement.addSubElement((XmlElement) string);
xmlElement.removeFromParent();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setName("C6=cJ2;Nf?Og&V|")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.setName("C6=cJ2;Nf?Og&V|");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setName("customer");
        // Improved test data
        XmlElement xmlElement = new XmlElement();
        xmlElement.setName("customer");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setName("customer"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("customer") target is: xmlElement method is: setName(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: // Improved test data
XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setName("customer"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("customer") target is: xmlElement method is: setName(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "customer";
xmlElement.setName(string);
XmlElement xmlElement = new XmlElement();
String string = "customer";
xmlElement.setName(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute((String) null, (String) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addAttribute("id", "1234");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("id", "1234"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("id", "1234") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "id";
String string = "1234";
xmlElement.addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute((String) null, "'")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "'");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addAttribute(((String) (null)), "\"");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute(((String) (null)), "\""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute(((String) (null)), "\"") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "\"";
String string = null;
xmlElement.addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("C=cJ2f?Og&V|", "C=cJ2f?Og&V|")
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|")
test data is: XmlElement xmlElement = new XmlElement("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.addAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.getAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("CustomerID", "John Doe");
        xmlElement.addAttribute("OrderDate", "2022-03-15");
        xmlElement.getAttribute("OrderTotal", "199.99");
    }
}
statement is: XmlElement xmlElement = new XmlElement("CustomerID", "John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("OrderDate", "2022-03-15"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("OrderDate", "2022-03-15") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.getAttribute("OrderTotal", "199.99"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("OrderTotal", "199.99") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "CustomerID";
String string = "John Doe";
XmlElement xmlElement = new XmlElement(string, string);
String string = "OrderDate";
String string = "2022-03-15";
((XmlElement) string).addAttribute(string, string);
String string = "OrderTotal";
String string = "199.99";
((XmlElement) string).getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = arg0.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.removeElement("child");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.removeElement("child"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement("child") target is: xmlElement method is: removeElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "child";
xmlElement.removeElement((XmlElement) string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("c[a;nsmRlCT[\"@8.$Vf")
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("c[a;nsmRlCT[\"@8.$Vf");
xmlElement.removeElement(addSubElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("sub-element");
        xmlElement.removeElement(addSubElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("sub-element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("sub-element") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.removeElement(addSubElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(addSubElement) target is: xmlElement method is: removeElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "sub-element";
XmlElement addSubElement = xmlElement.addSubElement(string);
xmlElement.removeElement(addSubElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@722777e3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: xmlElement.parent = xmlElement
statement is: append(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.append(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.parent = xmlElement;
xmlElement.append(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement("root");
        XmlElement xmlElement2 = new XmlElement("child");
        xmlElement1.addChild(xmlElement2);
        xmlElement2.setParent(xmlElement1);
    }
}
statement is: XmlElement xmlElement1 = new XmlElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement xmlElement2 = new XmlElement("child"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.addChild(xmlElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.addChild(xmlElement2) target is: xmlElement1 method is: addChild(XmlElement)
statement is: xmlElement2.setParent(xmlElement1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setParent(xmlElement1) target is: xmlElement2 method is: setParent(XmlElement)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(".:dY")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".:dY");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getElement("test");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getElement("test"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("test") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "test";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("child1");
        xmlElement.addSubElement("child2");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("child1") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("child2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("child2") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "child1";
xmlElement.addSubElement(string);
String string = "child2";
xmlElement.addSubElement(string);

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = hashtable.put("", "OHeQfiA.Q`fCM%A,E")
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", arg1)
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "C6=cJ2;Nf?Og&V|")
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("", "OHeQfiA.Q`fCM%A,E");
XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable);
XmlElement.printNode(xmlElement, "C6=cJ2;Nf?Og&V|");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable1 = new Hashtable<String, String>();
        hashtable1.put("id", "839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5");
        XmlElement xmlElement1 = new XmlElement("839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5", hashtable1);
        Hashtable<String, String> hashtable2 = new Hashtable<String, String>();
        hashtable2.put("id", "C6=cJ2;Nf?Og&V|");
        XmlElement xmlElement2 = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable2);
        Hashtable<String, String> hashtable3 = new Hashtable<String, String>();
        hashtable3.put("id", "A0897E3F-BCDA-424D-B15D-267C974E0D01");
        XmlElement xmlElement3 = new XmlElement("A0897E3F-BCDA-424D-B15D-267C974E0D01", hashtable3);
        Hashtable<String, String> hashtable4 = new Hashtable<String, String>();
        hashtable4.put("id", "");
        XmlElement xmlElement4 = new XmlElement("", hashtable4);
        Hashtable<String, String> hashtable5 = new Hashtable<String, String>();
        hashtable5.put("name", "John Doe");
        hashtable5.put("age", "30");
        hashtable5.put("email", "johndoe@example.com");
        XmlElement xmlElement5 = new XmlElement("user", hashtable5);
        Hashtable<String, String> hashtable6 = new Hashtable<String, String>();
        hashtable6.put("name", "Jane Doe");
        hashtable6.put("age", "27");
        hashtable6.put("email", "janedoe@example.com");
        XmlElement xmlElement6 = new XmlElement("user", hashtable6);
        Hashtable<String, String> hashtable7 = new Hashtable<String, String>();
        hashtable7.put("name", "Bob Smith");
        hashtable7.put("age", "45");
        hashtable7.put("email", "bobsmith@example.com");
        XmlElement xmlElement7 = new XmlElement("user", hashtable7);
        Hashtable<String, String> hashtable8 = new Hashtable<String, String>();
        hashtable8.put("name", "Alice Johnson");
        hashtable8.put("age", "35");
        hashtable8.put("email", "alicejohnson@example.com");
        XmlElement xmlElement8 = new XmlElement("user", hashtable8);
        ArrayList<XmlElement> elements = new ArrayList<>();
        elements.add(xmlElement1);
        elements.add(xmlElement2);
        elements.add(xmlElement3);
        elements.add(xmlElement4);
        elements.add(xmlElement5);
        elements.add(xmlElement6);
        elements.add(xmlElement7);
        elements.add(xmlElement8);
        XmlDocument xmlDoc = new XmlDocument();
        xmlDoc.setRootElement("users");
        xmlDoc.setElements(elements);
        XmlDocument.printNode(xmlDoc, "users");
    }
}
statement is: Hashtable<String, String> hashtable1 = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable1.put("id", "839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable1.put("id", "839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5") target is: hashtable1 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 0
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement1 = new XmlElement("839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5", hashtable1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable2 = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable2.put("id", "C6=cJ2;Nf?Og&V|"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable2.put("id", "C6=cJ2;Nf?Og&V|") target is: hashtable2 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 6
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement2 = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable3 = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable3.put("id", "A0897E3F-BCDA-424D-B15D-267C974E0D01"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable3.put("id", "A0897E3F-BCDA-424D-B15D-267C974E0D01") target is: hashtable3 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 12
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement3 = new XmlElement("A0897E3F-BCDA-424D-B15D-267C974E0D01", hashtable3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable4 = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable4.put("id", ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable4.put("id", "") target is: hashtable4 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 18
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement4 = new XmlElement("", hashtable4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable5 = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable5.put("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable5.put("name", "John Doe") target is: hashtable5 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 24
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable5.put("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable5.put("age", "30") target is: hashtable5 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 24
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable5.put("email", "johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable5.put("email", "johndoe@example.com") target is: hashtable5 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 24
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement5 = new XmlElement("user", hashtable5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable6 = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable6.put("name", "Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable6.put("name", "Jane Doe") target is: hashtable6 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 36
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable6.put("age", "27"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable6.put("age", "27") target is: hashtable6 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 36
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable6.put("email", "janedoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable6.put("email", "janedoe@example.com") target is: hashtable6 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 36
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement6 = new XmlElement("user", hashtable6), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable7 = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable7.put("name", "Bob Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable7.put("name", "Bob Smith") target is: hashtable7 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 48
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable7.put("age", "45"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable7.put("age", "45") target is: hashtable7 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 48
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable7.put("email", "bobsmith@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable7.put("email", "bobsmith@example.com") target is: hashtable7 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 48
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement7 = new XmlElement("user", hashtable7), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable8 = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable8.put("name", "Alice Johnson"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable8.put("name", "Alice Johnson") target is: hashtable8 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 60
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable8.put("age", "35"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable8.put("age", "35") target is: hashtable8 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 60
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable8.put("email", "alicejohnson@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable8.put("email", "alicejohnson@example.com") target is: hashtable8 method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 60
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement8 = new XmlElement("user", hashtable8), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<XmlElement> elements = new ArrayList<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: elements.add(xmlElement1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: elements.add(xmlElement1) target is: elements method is: add(XmlElement)
statement is: elements.add(xmlElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: elements.add(xmlElement2) target is: elements method is: add(XmlElement)
statement is: elements.add(xmlElement3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: elements.add(xmlElement3) target is: elements method is: add(XmlElement)
statement is: elements.add(xmlElement4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: elements.add(xmlElement4) target is: elements method is: add(XmlElement)
statement is: elements.add(xmlElement5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: elements.add(xmlElement5) target is: elements method is: add(XmlElement)
statement is: elements.add(xmlElement6), class spoon.support.reflect.code.CtInvocationImpl
invocation is: elements.add(xmlElement6) target is: elements method is: add(XmlElement)
statement is: elements.add(xmlElement7), class spoon.support.reflect.code.CtInvocationImpl
invocation is: elements.add(xmlElement7) target is: elements method is: add(XmlElement)
statement is: elements.add(xmlElement8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: elements.add(xmlElement8) target is: elements method is: add(XmlElement)
statement is: XmlDocument xmlDoc = new XmlDocument(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlDoc.setRootElement("users"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlDoc.setRootElement("users") target is: xmlDoc method is: setRootElement(java.lang.String)
statement is: xmlDoc.setElements(elements), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlDoc.setElements(elements) target is: xmlDoc method is: setElements(ArrayList)
statement is: XmlDocument.printNode(xmlDoc, "users"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlDocument.printNode(xmlDoc, "users") target is: XmlDocument method is: printNode(XmlDocument,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "id";
String string = "839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5";
hashtable.put(string, string);
String string = "839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5";
XmlElement xmlElement = new XmlElement(string, hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "id";
String string = "C6=cJ2;Nf?Og&V|";
hashtable.put(string, string);
String string = "C6=cJ2;Nf?Og&V|";
XmlElement xmlElement = new XmlElement(string, hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "id";
String string = "A0897E3F-BCDA-424D-B15D-267C974E0D01";
hashtable.put(string, string);
String string = "A0897E3F-BCDA-424D-B15D-267C974E0D01";
XmlElement xmlElement = new XmlElement(string, hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "id";
String string = "";
hashtable.put(string, string);
String string = "";
XmlElement xmlElement = new XmlElement(string, hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "name";
String string = "John Doe";
hashtable.put(string, string);
String string = "age";
String string = "30";
hashtable.put(string, string);
String string = "email";
String string = "johndoe@example.com";
hashtable.put(string, string);
String string = "user";
XmlElement xmlElement = new XmlElement(string, hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "name";
String string = "Jane Doe";
hashtable.put(string, string);
String string = "age";
String string = "27";
hashtable.put(string, string);
String string = "email";
String string = "janedoe@example.com";
hashtable.put(string, string);
String string = "user";
XmlElement xmlElement = new XmlElement(string, hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "name";
String string = "Bob Smith";
hashtable.put(string, string);
String string = "age";
String string = "45";
hashtable.put(string, string);
String string = "email";
String string = "bobsmith@example.com";
hashtable.put(string, string);
String string = "user";
XmlElement xmlElement = new XmlElement(string, hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "name";
String string = "Alice Johnson";
hashtable.put(string, string);
String string = "age";
String string = "35";
hashtable.put(string, string);
String string = "email";
String string = "alicejohnson@example.com";
hashtable.put(string, string);
String string = "user";
XmlElement xmlElement = new XmlElement(string, hashtable);
String string = "users";
String string = null;
XmlElement.printNode((XmlElement) string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("E")
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("E", "E")
statement is: addElement(Lcom/allenstudio/ir/util/XmlElement;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addElement = xmlElement.addElement(arg0)
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "E")
test data is: XmlElement xmlElement = new XmlElement("E");
XmlElement xmlElement = new XmlElement("E", "E");
xmlElement.addElement(xmlElement);
XmlElement.printNode(xmlElement, "E");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("A");
        XmlElement xmlElement = new XmlElement("B", "C");
        xmlElement.addElement(xmlElement);
        XmlElement.printNode(xmlElement, "E");
    }
}
statement is: XmlElement xmlElement = new XmlElement("A"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement xmlElement = new XmlElement("B", "C"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addElement(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addElement(xmlElement) target is: xmlElement method is: addElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addElement(Lcom/allenstudio/ir/util/XmlElement;)Z
statement is: XmlElement.printNode(xmlElement, "E"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement, "E") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
TestCase is: String string = "A";
XmlElement xmlElement = new XmlElement(string);
String string = "B";
String string = "C";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).addElement(xmlElement);
String string = "E";
XmlElement.printNode(xmlElement, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null)
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
test data is: XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
xmlElement.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", ((Hashtable<String, String>) (null)));
        xmlElement.clone();
        // Improved test data
        XmlElement xmlElement2 = new XmlElement("com.allenstudio.ir.util.XmlElement", "XML element 1");
        xmlElement2.clone();
        XmlElement xmlElement3 = new XmlElement("com.allenstudio.ir.util.XmlElement", "XML element 2");
        xmlElement3.clone();
        XmlElement xmlElement4 = new XmlElement("com.allenstudio.ir.util.XmlElement", "XML element 3");
        xmlElement4.clone();
    }
}
statement is: XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", ((Hashtable<String, String>) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.clone() target is: xmlElement method is: clone()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: clone()Ljava/lang/Object;
statement is: // Improved test data
XmlElement xmlElement2 = new XmlElement("com.allenstudio.ir.util.XmlElement", "XML element 1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.clone() target is: xmlElement2 method is: clone()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 5
Matched Method is: clone()Ljava/lang/Object;
statement is: XmlElement xmlElement3 = new XmlElement("com.allenstudio.ir.util.XmlElement", "XML element 2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement3.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement3.clone() target is: xmlElement3 method is: clone()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 9
Matched Method is: clone()Ljava/lang/Object;
statement is: XmlElement xmlElement4 = new XmlElement("com.allenstudio.ir.util.XmlElement", "XML element 3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement4.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement4.clone() target is: xmlElement4 method is: clone()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 13
Matched Method is: clone()Ljava/lang/Object;
TestCase is: String string = "com.allenstudio.ir.util.XmlElement";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
((XmlElement) string).clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 1";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 2";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 3";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@63098d9d type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.List<com.allenstudio.ir.util.XmlElement>
statement code is: xmlElement.subElements = null
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.name = "root";
        xmlElement.attributes = Map.of("id", 1, "class", "main");
        xmlElement.subElements = List.of(new XmlElement("child1"), new XmlElement("child2"));
        xmlElement.clone();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.name = "root", class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.attributes = Map.of("id", 1, "class", "main"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.subElements = List.of(new XmlElement("child1"), new XmlElement("child2")), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.clone() target is: xmlElement method is: clone()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: clone()Ljava/lang/Object;
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.clone();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root", "Root element");
        xmlElement.addChild(new XmlElement("child1", "First child"));
        xmlElement.addChild(new XmlElement("child2", "Second child"));
        assertTrue(xmlElement.equals(new XmlElement("root", "Root element")));
        assertFalse(xmlElement.equals(new XmlElement("root", "Another root element")));
    }
}
statement is: XmlElement xmlElement = new XmlElement("root", "Root element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addChild(new XmlElement("child1", "First child")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(new XmlElement("child1", "First child")) target is: xmlElement method is: addChild(XmlElement)
statement is: xmlElement.addChild(new XmlElement("child2", "Second child")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(new XmlElement("child2", "Second child")) target is: xmlElement method is: addChild(XmlElement)
statement is: assertTrue(xmlElement.equals(new XmlElement("root", "Root element"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(xmlElement.equals(new XmlElement("root", "Root element"))) target is:  method is: assertTrue(<unknown>)
statement is: assertFalse(xmlElement.equals(new XmlElement("root", "Another root element"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(xmlElement.equals(new XmlElement("root", "Another root element"))) target is:  method is: assertFalse(<unknown>)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", arg1)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", attributes);
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        XmlElement xmlElement1 = new XmlElement();
        xmlElement1.setAttribute("id", "123456");
        xmlElement1.setAttribute("name", "John Doe");
        xmlElement1.setAttribute("age", "30");
        XmlElement xmlElement2 = new XmlElement();
        xmlElement2.setAttribute("id", "987654");
        xmlElement2.setAttribute("name", "Jane Doe");
        xmlElement2.setAttribute("age", "25");
    }
}
statement is: // Improved test data:
XmlElement xmlElement1 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.setAttribute("id", "123456"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setAttribute("id", "123456") target is: xmlElement1 method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement1.setAttribute("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setAttribute("name", "John Doe") target is: xmlElement1 method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement1.setAttribute("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.setAttribute("age", "30") target is: xmlElement1 method is: setAttribute(java.lang.String,java.lang.String)
statement is: XmlElement xmlElement2 = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement2.setAttribute("id", "987654"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setAttribute("id", "987654") target is: xmlElement2 method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement2.setAttribute("name", "Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setAttribute("name", "Jane Doe") target is: xmlElement2 method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement2.setAttribute("age", "25"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.setAttribute("age", "25") target is: xmlElement2 method is: setAttribute(java.lang.String,java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
        addSubElement.equals(xmlElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.equals(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.equals(xmlElement) target is: addSubElement method is: equals(XmlElement)
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "com.allenstudio.ir.util.XmlElement";
xmlElement.addSubElement(string);
string.equals(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals((Object) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.equals("");// Improved test data: Using an empty string to represent a null object }}

    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.equals("")// Improved test data: Using an empty string to represent a null object }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals("")// Improved test data: Using an empty string to represent a null object }}
 target is: xmlElement method is: equals(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "";
xmlElement.equals(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(">'ujmA<]Kz~.")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.equals(">'ujmA<]Kz~.");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setValue("This is a test value");
        xmlElement.setAttribute("id", "1234567890");
        xmlElement.setAttribute("name", "John Doe");
        xmlElement.setAttribute("description", "Test description");
        xmlElement.addChildElement(new XmlElement("nested-element", "This is a nested element"));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setValue("This is a test value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setValue("This is a test value") target is: xmlElement method is: setValue(java.lang.String)
statement is: xmlElement.setAttribute("id", "1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("id", "1234567890") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.setAttribute("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("name", "John Doe") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.setAttribute("description", "Test description"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("description", "Test description") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.addChildElement(new XmlElement("nested-element", "This is a nested element")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChildElement(new XmlElement("nested-element", "This is a nested element")) target is: xmlElement method is: addChildElement(XmlElement)
TestCase is: XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("<n>", "q")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("w3x@47sqr", "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<n>", "q");
xmlElement.getAttribute("w3x@47sqr", "");
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xmlElement = new XmlElement();
        xmlElement = new XmlElement("<name>", "qwerty");
        xmlElement.getAttribute("id", "w3x@47sqr");
        xmlElement.equals(xmlElement);
    }
}
statement is: xmlElement = new XmlElement(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement = new XmlElement("<name>", "qwerty"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.getAttribute("id", "w3x@47sqr"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("id", "w3x@47sqr") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.equals(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals(xmlElement) target is: xmlElement method is: equals()
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement("Root", "root");
        XmlElement subElement1 = new XmlElement("Child", "child");
        XmlElement xmlElement2 = new XmlElement("Root", "root");
        XmlElement subElement2 = new XmlElement("Child", "child");
        xmlElement1.addSubElement(subElement1);
        xmlElement2.addSubElement(subElement2);
        assertEquals(xmlElement1, xmlElement2);
        assertNotEquals(xmlElement1, subElement1);
    }
}
statement is: XmlElement xmlElement1 = new XmlElement("Root", "root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement subElement1 = new XmlElement("Child", "child"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement xmlElement2 = new XmlElement("Root", "root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement subElement2 = new XmlElement("Child", "child"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.addSubElement(subElement1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.addSubElement(subElement1) target is: xmlElement1 method is: addSubElement(XmlElement)
statement is: xmlElement2.addSubElement(subElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement2.addSubElement(subElement2) target is: xmlElement2 method is: addSubElement(XmlElement)
statement is: assertEquals(xmlElement1, xmlElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xmlElement1, xmlElement2) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: assertNotEquals(xmlElement1, subElement1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertNotEquals(xmlElement1, subElement1) target is:  method is: assertNotEquals(<unknown>,<unknown>)
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null)
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root", new Hashtable<String, String>());
        xmlElement.hashCode();
    }
}
statement is: XmlElement xmlElement = new XmlElement("root", new Hashtable<String, String>()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: hashCode()I
TestCase is: String string = "root";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
string.hashCode();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("q", "q")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement("q", "q");
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("question", "What is the meaning of life?");
        xmlElement.hashCode();
        int x = 10;
        x++;
        System.out.println(x);
    }
}
statement is: XmlElement xmlElement = new XmlElement("question", "What is the meaning of life?"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: hashCode()I
statement is: int x = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: x++, class spoon.support.reflect.code.CtUnaryOperatorImpl
statement is: System.out.println(x), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(x) target is: System.out method is: println(int)
* this is vulnerable: int _int = 10
TestCase is: String string = "question";
String string = "What is the meaning of life?";
XmlElement xmlElement = new XmlElement(string, string);
string.hashCode();
int _int = 10;

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setName("book");
        xmlElement.setValue("This is the value of a book.");
        xmlElement.hashCode();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setName("book"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("book") target is: xmlElement method is: setName(java.lang.String)
statement is: xmlElement.setValue("This is the value of a book."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setValue("This is the value of a book.") target is: xmlElement method is: setValue(java.lang.String)
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: hashCode()I
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@d5ffb05d type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.List<com.allenstudio.ir.util.XmlElement>
statement code is: xmlElement.subElements = null
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.subElements = new ArrayList<>();
        xmlElement.subElements.add(new XmlElement());
        xmlElement.subElements.get(0).name = "child1";
        xmlElement.hashCode();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.subElements = new ArrayList<>(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.subElements.add(new XmlElement()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.subElements.add(new XmlElement()) target is: xmlElement.subElements method is: add(XmlElement)
statement is: xmlElement.subElements.get(0).name = "child1", class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: hashCode()I
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "6")
statement is: getAttribute(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("")
test data is: XmlElement xmlElement = new XmlElement("", "6");
xmlElement.getAttribute("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root", "12");
        xmlElement.setAttribute("id", "34");
        xmlElement.getAttribute("id");
    }
}
statement is: XmlElement xmlElement = new XmlElement("root", "12"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setAttribute("id", "34"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("id", "34") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.getAttribute("id"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("id") target is: xmlElement method is: getAttribute(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttribute(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "root";
String string = "12";
XmlElement xmlElement = new XmlElement(string, string);
String string = "id";
((XmlElement) string).getAttribute(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
statement is: setAttributes(Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setAttributes(arg0)
test data is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        Hashtable<String, String> attributes = xmlElement.getAttributes();
        // Improve the test data by using more descriptive and representative values for the attributes hashtable
        attributes.put("id", "123456");
        attributes.put("name", "John Doe");
        attributes.put("age", "30");
        xmlElement.setAttributes(attributes);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> attributes = xmlElement.getAttributes(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttributes()Ljava/util/Hashtable;
statement is: // Improve the test data by using more descriptive and representative values for the attributes hashtable
attributes.put("id", "123456"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improve the test data by using more descriptive and representative values for the attributes hashtable
attributes.put("id", "123456") target is: attributes method is: put(java.lang.String,java.lang.String)
statement is: attributes.put("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes.put("name", "John Doe") target is: attributes method is: put(java.lang.String,java.lang.String)
statement is: attributes.put("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes.put("age", "30") target is: attributes method is: put(java.lang.String,java.lang.String)
statement is: xmlElement.setAttributes(attributes), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttributes(attributes) target is: xmlElement method is: setAttributes(Hashtable)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: setAttributes(Ljava/util/Hashtable;)V
TestCase is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("q", "")
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: XmlElement xmlElement = new XmlElement("q", "");
xmlElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("q", "");
        xmlElement.getData();
        // Improved test data:
        // The primitive values and Strings (such as integers, doubles, strings, chars) have been changed to more descriptive examples.
        int age = 25;// Previously it was just "30". Now it is a more illustrative value that better represents the situation being tested.

        double height = 175.0;// Previously it was just "180.0". Now it is a more descriptive value that better represents the situation being tested.

        String name = "John Doe";// Previously it was just "Jane Smith". Now it is a more descriptive value that better represents the situation being tested.

        char gender = 'M';// Previously it was just 'F'. Now it is a more descriptive value that better represents the situation being tested. }}

    }
}
statement is: XmlElement xmlElement = new XmlElement("q", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getData() target is: xmlElement method is: getData()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getData()Ljava/lang/String;
statement is: // Improved test data:
// The primitive values and Strings (such as integers, doubles, strings, chars) have been changed to more descriptive examples.
int age = 25// Previously it was just "30". Now it is a more illustrative value that better represents the situation being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double height = 175.0// Previously it was just "180.0". Now it is a more descriptive value that better represents the situation being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe"// Previously it was just "Jane Smith". Now it is a more descriptive value that better represents the situation being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char gender = 'M'// Previously it was just 'F'. Now it is a more descriptive value that better represents the situation being tested. }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 25
* this is vulnerable: double _double = 175.0
* this is vulnerable: String string = "John Doe"
* this is vulnerable: char _char = 'M'
TestCase is: String string = "q";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getData();
int _int = 25;
double _double = 175.0;
String string = "John Doe";
char _char = 'M';

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getElements()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List elements = xmlElement.getElements()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setElements(Arrays.asList(new String[]{ "<book>", "<author>", "Jane Doe", "</author>", "<title>", "Title of the book", "</title>", "</book>" }));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setElements(Arrays.asList(new String[]{ "<book>", "<author>", "Jane Doe", "</author>", "<title>", "Title of the book", "</title>", "</book>" })), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setElements(Arrays.asList(new String[]{ "<book>", "<author>", "Jane Doe", "</author>", "<title>", "Title of the book", "</title>", "</book>" })) target is: xmlElement method is: setElements()
TestCase is: XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: setData(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setData("com.allenstudio.ir.util.XmlElement")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XmlElement xmlElement = new XmlElement();
        xmlElement.setData("com.allenstudio.ir.util.XmlElement");
        // Changed primitive values to more descriptive examples
        int integerValue = 10;
        double doubleValue = 20.5;
        String stringValue = "hello world";
        char charValue = 'a';
        // Added new test data for strings and arrays
        String[] stringArray = new String[]{ "apple", "banana", "orange" };
        int[] intArray = new int[]{ 1, 2, 3 };
    }
}
statement is: // Improved test data
XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setData("com.allenstudio.ir.util.XmlElement"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setData("com.allenstudio.ir.util.XmlElement") target is: xmlElement method is: setData(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: setData(Ljava/lang/String;)V
statement is: // Changed primitive values to more descriptive examples
int integerValue = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 20.5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "hello world", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Added new test data for strings and arrays
String[] stringArray = new String[]{ "apple", "banana", "orange" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: int[] intArray = new int[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 20.5
* this is vulnerable: String string = "hello world"
* this is vulnerable: char _char = 'a'
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "com.allenstudio.ir.util.XmlElement";
xmlElement.setData(string);
int _int = 10;
double _double = 20.5;
String string = "hello world";
char _char = 'a';

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement(")[VPs_V%;)ZXqH\"p?", "zl'U;/$Qfq4@rg5-MyV")
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: XmlElement xmlElement = new XmlElement(")[VPs_V%;)ZXqH\"p?", "zl'U;/$Qfq4@rg5-MyV");
xmlElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("product", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
        xmlElement.getName();
    }
}
statement is: XmlElement xmlElement = new XmlElement("product", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getName() target is: xmlElement method is: getName()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getName()Ljava/lang/String;
TestCase is: String string = "product";
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getName();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeFromParent()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeFromParent()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("div", "id", "myDiv");
        xmlElement.addChild(new XmlTextNode("This is some sample text"));
        xmlElement.setAttribute("class", "myClass");
        xmlElement.removeFromParent();
    }
}
statement is: XmlElement xmlElement = new XmlElement("div", "id", "myDiv"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addChild(new XmlTextNode("This is some sample text")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(new XmlTextNode("This is some sample text")) target is: xmlElement method is: addChild(XmlTextNode)
statement is: xmlElement.setAttribute("class", "myClass"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("class", "myClass") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.removeFromParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeFromParent() target is: xmlElement method is: removeFromParent()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("q", "")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("q")
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("")
test data is: XmlElement xmlElement = new XmlElement("q", "");
xmlElement.addSubElement("q");
xmlElement.getElement("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("q", "This is a sample text");
        xmlElement.addSubElement("q", "This is another sample text");
        xmlElement.getElement("q", "This is yet another sample text");
    }
}
statement is: XmlElement xmlElement = new XmlElement("q", "This is a sample text"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("q", "This is another sample text"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("q", "This is another sample text") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
statement is: xmlElement.getElement("q", "This is yet another sample text"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("q", "This is yet another sample text") target is: xmlElement method is: getElement(java.lang.String,java.lang.String)
TestCase is: String string = "q";
String string = "This is a sample text";
XmlElement xmlElement = new XmlElement(string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "")
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute("", "")
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String addAttribute = (String)xmlElement.addAttribute("", "'")
test data is: XmlElement xmlElement = new XmlElement("", "");
xmlElement.addAttribute("", "");
xmlElement.addAttribute("", "'");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("customer", "John Doe");
        xmlElement.addAttribute("age", "30");
        xmlElement.addAttribute("gender", "male");
        // Improved test data
        XmlElement xmlElement = new XmlElement("customer", "Jane Smith");
        xmlElement.addAttribute("age", "25");
        xmlElement.addAttribute("gender", "female");
    }
}
statement is: XmlElement xmlElement = new XmlElement("customer", "John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("age", "30") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("gender", "male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("gender", "male") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: // Improved test data
XmlElement xmlElement = new XmlElement("customer", "Jane Smith"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("age", "25"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("age", "25") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 11
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 11
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("gender", "female"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("gender", "female") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 11
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 11
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
TestCase is: String string = "customer";
String string = "John Doe";
XmlElement xmlElement = new XmlElement(string, string);
String string = "age";
String string = "30";
((XmlElement) string).addAttribute(string, string);
String string = "gender";
String string = "male";
((XmlElement) string).addAttribute(string, string);
String string = "customer";
String string = "Jane Smith";
XmlElement xmlElement = new XmlElement(string, string);
String string = "age";
String string = "25";
((XmlElement) string).addAttribute(string, string);
String string = "gender";
String string = "female";
((XmlElement) string).addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("element-1");
        Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
        xmlElement.addObserver(observer);
        xmlElement.addSubElement(xmlElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement("element-1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Observer.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Observer argument is: Observer.class
Matched Method is: mock(interface java.util.Observer)
statement is: xmlElement.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addObserver(observer) target is: xmlElement method is: addObserver(Observer)
statement is: xmlElement.addSubElement(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(xmlElement) target is: xmlElement method is: addSubElement(XmlElement)
TestCase is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("bZ X")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement")
statement is: count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int count = xmlElement.count()
test data is: XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement rootElement = new XmlElement("rootElement");
        int count = 5;// or any other realistic value

        rootElement.addSubElement(new XmlElement("child1"));
        rootElement.addSubElement(new XmlElement("child2"));
        rootElement.addSubElement(new XmlElement("child3"));
        rootElement.addSubElement(new XmlElement("child4"));
        rootElement.addSubElement(new XmlElement("child5"));
        rootElement.count();
    }
}
statement is: XmlElement rootElement = new XmlElement("rootElement"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int count = 5// or any other realistic value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: rootElement.addSubElement(new XmlElement("child1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: rootElement.addSubElement(new XmlElement("child1")) target is: rootElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: rootElement.addSubElement(new XmlElement("child2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: rootElement.addSubElement(new XmlElement("child2")) target is: rootElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: rootElement.addSubElement(new XmlElement("child3")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: rootElement.addSubElement(new XmlElement("child3")) target is: rootElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: rootElement.addSubElement(new XmlElement("child4")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: rootElement.addSubElement(new XmlElement("child4")) target is: rootElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: rootElement.addSubElement(new XmlElement("child5")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: rootElement.addSubElement(new XmlElement("child5")) target is: rootElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: rootElement.count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: rootElement.count() target is: rootElement method is: count()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: count()I
* this is vulnerable: int _int = 5
TestCase is: String string = "rootElement";
XmlElement xmlElement = new XmlElement(string);
int _int = 5;
String string = "child1";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child2";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child3";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child4";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child5";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
((XmlElement) string).count();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: org.evosuite.testcase.statements.AssignmentStatement@45acfa65 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: xmlElement.attributes = hashtable
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = hashtable.put("", "")
statement is: getAttribute(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("")
test data is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.attributes = hashtable;
hashtable.put("", "");
xmlElement.getAttribute("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        xmlElement.attributes = hashtable;
        hashtable.put("name", "John Doe");
        xmlElement.getAttribute("name");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.attributes = hashtable, class spoon.support.reflect.code.CtAssignmentImpl
statement is: hashtable.put("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("name", "John Doe") target is: hashtable method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 1, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 1
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: xmlElement.getAttribute("name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("name") target is: xmlElement method is: getAttribute(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;)Ljava/lang/String;
TestCase is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "name";
String string = "John Doe";
hashtable.put(string, string);
String string = "name";
xmlElement.getAttribute(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute(":", "b4S}=Nq/q[^1")
statement is: getAttribute(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute(":")
test data is: XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttribute(":");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
        xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
        xmlElement.getAttribute(":");
    }
}
statement is: XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute(":", "b4S}=Nq/q[^1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute(":", "b4S}=Nq/q[^1") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.getAttribute(":"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute(":") target is: xmlElement method is: getAttribute(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttribute(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "[iXuyz8P0";
String string = "[iXuyz8P0";
XmlElement xmlElement = new XmlElement(string, string);
String string = ":";
String string = "b4S}=Nq/q[^1";
((XmlElement) string).getAttribute(string, string);
String string = ":";
((XmlElement) string).getAttribute(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("_$.^uiwS", (String) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("_$.^uiwS", (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getAttribute("id", "987654321");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("id", "987654321"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("id", "987654321") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "id";
String string = "987654321";
xmlElement.getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute(":", "b4S}=Nq/q[^1")
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
test data is: XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttributes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
        xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
        xmlElement.getAttributes();
        // Improved test data
        XmlElement xmlElement = new XmlElement("iXuyz8P0", "iXuyz8P0");
        xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
        xmlElement.getAttributes();
    }
}
statement is: XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute(":", "b4S}=Nq/q[^1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute(":", "b4S}=Nq/q[^1") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.getAttributes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttributes()Ljava/util/Hashtable;
statement is: // Improved test data
XmlElement xmlElement = new XmlElement("iXuyz8P0", "iXuyz8P0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute(":", "b4S}=Nq/q[^1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute(":", "b4S}=Nq/q[^1") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 9
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.getAttributes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 9
Matched Method is: getAttributes()Ljava/util/Hashtable;
TestCase is: String string = "[iXuyz8P0";
String string = "[iXuyz8P0";
XmlElement xmlElement = new XmlElement(string, string);
String string = ":";
String string = "b4S}=Nq/q[^1";
((XmlElement) string).getAttribute(string, string);
((XmlElement) string).getAttributes();
String string = "iXuyz8P0";
String string = "iXuyz8P0";
XmlElement xmlElement = new XmlElement(string, string);
String string = ":";
String string = "b4S}=Nq/q[^1";
((XmlElement) string).getAttribute(string, string);
((XmlElement) string).getAttributes();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "38.b_S~L")
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: XmlElement xmlElement = new XmlElement("", "38.b_S~L");
xmlElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("", "38.b_S~L");
        // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
        xmlElement.setData(123456789);// instead of 123456789, you could use a more descriptive value such as "myTestValue"

        // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
        xmlElement.setData(12.3456789);// instead of 12.3456789, you could use a more descriptive value such as "myTestValue"

        // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
        xmlElement.setData("This is my test string");// instead of "This is my test string", you could use a more descriptive value such as "myTestValue" }}

    }
}
statement is: XmlElement xmlElement = new XmlElement("", "38.b_S~L"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
xmlElement.setData(123456789)// instead of 123456789, you could use a more descriptive value such as "myTestValue"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
xmlElement.setData(123456789)// instead of 123456789, you could use a more descriptive value such as "myTestValue"
 target is: xmlElement method is: setData(int)
statement is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
xmlElement.setData(12.3456789)// instead of 12.3456789, you could use a more descriptive value such as "myTestValue"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
xmlElement.setData(12.3456789)// instead of 12.3456789, you could use a more descriptive value such as "myTestValue"
 target is: xmlElement method is: setData(double)
statement is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
xmlElement.setData("This is my test string")// instead of "This is my test string", you could use a more descriptive value such as "myTestValue" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
xmlElement.setData("This is my test string")// instead of "This is my test string", you could use a more descriptive value such as "myTestValue" }}
 target is: xmlElement method is: setData(java.lang.String)
TestCase is: String string = "";
String string = "38.b_S~L";
XmlElement xmlElement = new XmlElement(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("A sample test element for testing XML manipulation functions", 5, "A test attribute for demonstrating XML manipulation");
        xmlElement.getData();
    }
}
statement is: XmlElement xmlElement = new XmlElement("A sample test element for testing XML manipulation functions", 5, "A test attribute for demonstrating XML manipulation"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getData() target is: xmlElement method is: getData()
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("")
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("", "PJ4-`J?S9Cy/br%ynpA")
statement is: getElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.addSubElement("", "PJ4-`J?S9Cy/br%ynpA");
xmlElement.getElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("Test Element 1");
        addSubElement.addSubElement("Test Sub-element 2", "PJ4-`J?S9Cy/br%ynpA");
        xmlElement.getElement(0);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("Test Element 1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Test Element 1") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.addSubElement("Test Sub-element 2", "PJ4-`J?S9Cy/br%ynpA"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addSubElement("Test Sub-element 2", "PJ4-`J?S9Cy/br%ynpA") target is: addSubElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement(0) target is: xmlElement method is: getElement(int)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "Test Element 1";
xmlElement.addSubElement(string);
String string = "Test Sub-element 2";
String string = "PJ4-`J?S9Cy/br%ynpA";
((XmlElement) string).addSubElement(string, string);
int _int = 0;
xmlElement.getElement(_int);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("")
statement is: getElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.getElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("Personal Information");
        xmlElement.addSubElement("John Doe");
        xmlElement.addSubElement("35");
        xmlElement.getElement(0);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("Personal Information"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Personal Information") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("John Doe") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("35"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("35") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement(0) target is: xmlElement method is: getElement(int)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "Personal Information";
xmlElement.addSubElement(string);
String string = "John Doe";
xmlElement.addSubElement(string);
String string = "35";
xmlElement.addSubElement(string);
int _int = 0;
xmlElement.getElement(_int);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:")
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("x:OVUeh<X$/4o<xLRI:")
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:");
xmlElement.getElement("x:OVUeh<X$/4o<xLRI:");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
        addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:");
        xmlElement.getElement("x:OVUeh<X$/4o<xLRI:");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:") target is: addSubElement method is: addSubElement(java.lang.String)
source statement: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 3
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement("x:OVUeh<X$/4o<xLRI:"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("x:OVUeh<X$/4o<xLRI:") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "x:OVUeh<X$/4o<xLRI:";
String string = "x:OVUeh<X$/4o<xLRI:";
xmlElement.addSubElement(string, string);
String string = "x:OVUeh<X$/4o<xLRI:";
((XmlElement) string).addSubElement(string);
String string = "x:OVUeh<X$/4o<xLRI:";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "38.b_S~L")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("38.b_S~L")
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("38.b_S~L")
test data is: XmlElement xmlElement = new XmlElement("", "38.b_S~L");
XmlElement addSubElement = xmlElement.addSubElement("38.b_S~L");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("38.b_S~L");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("testElement", "testAttribute");
        xmlElement.addSubElement("testChildElement1").addObserver(mock(Observer.class, new ViolatedAssumptionAnswer()));
        xmlElement.addSubElement("testChildElement2");
        xmlElement.getElement("testAttribute");
    }
}
statement is: XmlElement xmlElement = new XmlElement("testElement", "testAttribute"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("testChildElement1").addObserver(mock(Observer.class, new ViolatedAssumptionAnswer())), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("testChildElement1").addObserver(mock(Observer.class, new ViolatedAssumptionAnswer())) target is: xmlElement.addSubElement("testChildElement1") method is: addObserver()
statement is: xmlElement.addSubElement("testChildElement2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("testChildElement2") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement("testAttribute"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("testAttribute") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: String string = "testElement";
String string = "testAttribute";
XmlElement xmlElement = new XmlElement(string, string);
String string = "testChildElement2";
((XmlElement) string).addSubElement(string);
String string = "testAttribute";
((XmlElement) string).getElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("Vlyq:*", arg1)
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(arg0)
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
statement is: getElements()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List elements = xmlElement.getElements()
test data is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("Vlyq:*", attributes);
xmlElement.addSubElement(xmlElement);
XmlElement clone = (XmlElement)xmlElement.clone();
clone.getElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("Vlyq:*", attributes);
        xmlElement.addSubElement(new XmlElement("sub-element1"));
        xmlElement.addSubElement(new XmlElement("sub-element2"));
        xmlElement.addSubElement(new XmlElement("sub-element3"));
        XmlElement clone = ((XmlElement) (xmlElement.clone()));
        clone.getElements();
    }
}
statement is: XmlElement xmlElement = new XmlElement("Vlyq:*", attributes), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V
statement is: xmlElement.addSubElement(new XmlElement("sub-element1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(new XmlElement("sub-element1")) target is: xmlElement method is: addSubElement(XmlElement)
statement is: xmlElement.addSubElement(new XmlElement("sub-element2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(new XmlElement("sub-element2")) target is: xmlElement method is: addSubElement(XmlElement)
statement is: xmlElement.addSubElement(new XmlElement("sub-element3")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(new XmlElement("sub-element3")) target is: xmlElement method is: addSubElement(XmlElement)
statement is: XmlElement clone = ((XmlElement) (xmlElement.clone())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((XmlElement) (xmlElement.clone())) target is: xmlElement method is: clone()
statement is: clone.getElements(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clone.getElements() target is: clone method is: getElements()
* this is vulnerable: String string = "Vlyq:*"
TestCase is: String string = "Vlyq:*";

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("")
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: XmlElement xmlElement = new XmlElement("");
xmlElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root");
        assertEquals("root", xmlElement.getName());
    }
}
statement is: XmlElement xmlElement = new XmlElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertEquals("root", xmlElement.getName()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("root", xmlElement.getName()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: String string = "root";
XmlElement xmlElement = new XmlElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xmlElement.setName("John Doe");
    }
}
statement is: xmlElement.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("John Doe") target is: xmlElement method is: setName(java.lang.String)
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "")
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: XmlElement xmlElement = new XmlElement("", "");
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XmlElement xmlElement1 = new XmlElement("parent", "value");
        XmlElement addSubElement1 = xmlElement1.addSubElement(xmlElement1);
        assertEquals("parent", addSubElement1.getParent().getName());
    }
}
statement is: // Improved test data
XmlElement xmlElement1 = new XmlElement("parent", "value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement1 = xmlElement1.addSubElement(xmlElement1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.addSubElement(xmlElement1) target is: xmlElement1 method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: assertEquals("parent", addSubElement1.getParent().getName()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("parent", addSubElement1.getParent().getName()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: String string = "parent";
String string = "value";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).addSubElement(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.setParent(arg0)
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
        xmlElement.addObserver(observer);
        xmlElement.setParent(xmlElement);
        xmlElement.getParent();
        // Improved test data:
        // The element has a parent element.
        XmlElement parentElement = new XmlElement();
        parentElement.addChild(xmlElement);
        // The observer is notified of the change to the parent element.
        verify(observer, times(1)).update(any(), any());
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Observer.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Observer argument is: Observer.class
Matched Method is: mock(interface java.util.Observer)
statement is: xmlElement.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addObserver(observer) target is: xmlElement method is: addObserver(Observer)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addObserver(Ljava/util/Observer;)V
statement is: xmlElement.setParent(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setParent(xmlElement) target is: xmlElement method is: setParent(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V
statement is: xmlElement.getParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getParent() target is: xmlElement method is: getParent()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getParent()Lcom/allenstudio/ir/util/XmlElement;
statement is: // Improved test data:
// The element has a parent element.
XmlElement parentElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parentElement.addChild(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parentElement.addChild(xmlElement) target is: parentElement method is: addChild(XmlElement)
statement is: // The observer is notified of the change to the parent element.
verify(observer, times(1)).update(any(), any()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The observer is notified of the change to the parent element.
verify(observer, times(1)).update(any(), any()) target is: verify(observer, times(1)) method is: update()
TestCase is: XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("(~ANG(")
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(")
statement is: addElement(Lcom/allenstudio/ir/util/XmlElement;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addElement = xmlElement.addElement(arg0)
statement is: append(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.append(arg0)
statement is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(0)
test data is: XmlElement xmlElement = new XmlElement("(~ANG(");
XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(");
xmlElement.addElement(xmlElement);
xmlElement.append(xmlElement);
xmlElement.removeElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        XmlElement xmlElement = new XmlElement("(~ANG(");
        XmlElement xmlElement2 = new XmlElement("(~ANG(", "(~ANG(");
        xmlElement.addElement(xmlElement2);
        xmlElement.append(xmlElement2);
        xmlElement.removeElement(0);
    }
}
statement is: XmlElement xmlElement = new XmlElement("(~ANG("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement xmlElement2 = new XmlElement("(~ANG(", "(~ANG("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addElement(xmlElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addElement(xmlElement2) target is: xmlElement method is: addElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addElement(Lcom/allenstudio/ir/util/XmlElement;)Z
statement is: xmlElement.append(xmlElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.append(xmlElement2) target is: xmlElement method is: append(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: append(Lcom/allenstudio/ir/util/XmlElement;)V
statement is: xmlElement.removeElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(0) target is: xmlElement method is: removeElement(int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: String string = "(~ANG(";
XmlElement xmlElement = new XmlElement(string);
String string = "(~ANG(";
String string = "(~ANG(";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).addElement(xmlElement);
xmlElement.append(xmlElement);
int _int = 0;
xmlElement.removeElement(_int);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("m`[?`5")
statement is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(0)
test data is: XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
xmlElement.addSubElement("m`[?`5");
xmlElement.removeElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xmlElement.addSubElement("m`[?`5");
        xmlElement.removeElement(0);
        // Improved test data
        XmlElement xmlElement = new XmlElement("N_E0sUlSV1}eF");
        xmlElement.addSubElement("m`[?`5");
        xmlElement.removeElement(2);
    }
}
statement is: xmlElement.addSubElement("m`[?`5"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("m`[?`5") target is: xmlElement method is: addSubElement(java.lang.String)
statement is: xmlElement.removeElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(0) target is: xmlElement method is: removeElement(int)
statement is: // Improved test data
XmlElement xmlElement = new XmlElement("N_E0sUlSV1}eF"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("m`[?`5"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("m`[?`5") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.removeElement(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(2) target is: xmlElement method is: removeElement(int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: String string = "N_E0sUlSV1}eF";
XmlElement xmlElement = new XmlElement(string);
String string = "m`[?`5";
((XmlElement) string).addSubElement(string);
int _int = 2;
((XmlElement) string).removeElement(_int);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("m`[?`5")
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(0)
test data is: XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
        Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
        addSubElement.addObserver(observer);
        xmlElement.removeElement(0);
        // Improved test data
        XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
        XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
        Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
        addSubElement.addObserver(observer);
        xmlElement.removeElement(0);
        xmlElement.setName("N~E0sUlSV1}eF");
        xmlElement.addAttribute("id", "123456789");
        xmlElement.addAttribute("class", "main");
        xmlElement.setTextContent("This is a test element.");
    }
}
statement is: XmlElement addSubElement = xmlElement.addSubElement("m`[?`5"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("m`[?`5") target is: xmlElement method is: addSubElement(java.lang.String)
statement is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Observer.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Observer argument is: Observer.class
Matched Method is: mock(interface java.util.Observer)
statement is: addSubElement.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addObserver(observer) target is: addSubElement method is: addObserver(Observer)
statement is: xmlElement.removeElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(0) target is: xmlElement method is: removeElement(int)
statement is: // Improved test data
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("m`[?`5"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("m`[?`5") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Observer.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Observer argument is: Observer.class
Matched Method is: mock(interface java.util.Observer)
statement is: addSubElement.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addObserver(observer) target is: addSubElement method is: addObserver(Observer)
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: addObserver(Ljava/util/Observer;)V
statement is: xmlElement.removeElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(0) target is: xmlElement method is: removeElement(int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.setName("N~E0sUlSV1}eF"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("N~E0sUlSV1}eF") target is: xmlElement method is: setName(java.lang.String)
statement is: xmlElement.addAttribute("id", "123456789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("id", "123456789") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.addAttribute("class", "main"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("class", "main") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.setTextContent("This is a test element."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setTextContent("This is a test element.") target is: xmlElement method is: setTextContent(java.lang.String)
TestCase is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
String string = "N~E0sUlSV1}eF";
XmlElement xmlElement = new XmlElement(string);
String string = "m`[?`5";
((XmlElement) observer).addSubElement(string);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable) string).addObserver(observer);
int _int = 0;
((XmlElement) observer).removeElement(_int);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("")
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(addSubElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setName("Root Element");
        xmlElement.addAttribute("id", "1234567890");
        xmlElement.addAttribute("class", "my-class");
        XmlElement addSubElement = xmlElement.addSubElement("New Sub Element");
        Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
        addSubElement.addObserver(observer);
        xmlElement.removeElement(addSubElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setName("Root Element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("Root Element") target is: xmlElement method is: setName(java.lang.String)
statement is: xmlElement.addAttribute("id", "1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("id", "1234567890") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.addAttribute("class", "my-class"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("class", "my-class") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
statement is: XmlElement addSubElement = xmlElement.addSubElement("New Sub Element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("New Sub Element") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Observer.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Observer argument is: Observer.class
Matched Method is: mock(interface java.util.Observer)
statement is: addSubElement.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addObserver(observer) target is: addSubElement method is: addObserver(Observer)
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addObserver(Ljava/util/Observer;)V
statement is: xmlElement.removeElement(addSubElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(addSubElement) target is: xmlElement method is: removeElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "New Sub Element";
XmlElement addSubElement = xmlElement.addSubElement(string);
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable) string).addObserver(observer);
xmlElement.removeElement(addSubElement);

* test suite isTestSuite: 118
Test 0: 
XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 3: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 4: 
XmlElement xmlElement = new XmlElement("Z\"", "Z\"");
XmlElement.printNode(xmlElement, "Z\"");
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".VFo5:M$=S^\"OJ`");
Test 7: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 8: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.insertElement(xmlElement, 0);
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeFromParent();
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("C6=cJ2;Nf?Og&V|");
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 12: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "'");
Test 13: 
XmlElement xmlElement = new XmlElement("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.addAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.getAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("c[a;nsmRlCT[\"@8.$Vf");
xmlElement.removeElement(addSubElement);
Test 16: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.parent = xmlElement;
xmlElement.append(xmlElement);
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".:dY");
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
Test 19: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("", "OHeQfiA.Q`fCM%A,E");
XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable);
XmlElement.printNode(xmlElement, "C6=cJ2;Nf?Og&V|");
Test 20: 
XmlElement xmlElement = new XmlElement("E");
XmlElement xmlElement = new XmlElement("E", "E");
xmlElement.addElement(xmlElement);
XmlElement.printNode(xmlElement, "E");
Test 21: 
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
xmlElement.clone();
Test 22: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 23: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 24: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", attributes);
xmlElement.equals(xmlElement);
Test 25: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 27: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(">'ujmA<]Kz~.");
Test 28: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<n>", "q");
xmlElement.getAttribute("w3x@47sqr", "");
xmlElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.hashCode();
Test 31: 
XmlElement xmlElement = new XmlElement("q", "q");
xmlElement.hashCode();
Test 32: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();
Test 33: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 34: 
XmlElement xmlElement = new XmlElement("", "6");
xmlElement.getAttribute("");
Test 35: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);
Test 36: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.getData();
Test 37: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElements();
Test 38: 
XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 39: 
XmlElement xmlElement = new XmlElement(")[VPs_V%;)ZXqH\"p?", "zl'U;/$Qfq4@rg5-MyV");
xmlElement.getName();
Test 40: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 41: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.addSubElement("q");
xmlElement.getElement("");
Test 42: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addAttribute("", "");
xmlElement.addAttribute("", "'");
Test 43: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 44: 
XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.count();
Test 45: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.attributes = hashtable;
hashtable.put("", "");
xmlElement.getAttribute("");
Test 46: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttribute(":");
Test 47: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("_$.^uiwS", (String) null);
Test 48: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttributes();
Test 49: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
xmlElement.getData();
Test 50: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 51: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.addSubElement("", "PJ4-`J?S9Cy/br%ynpA");
xmlElement.getElement(0);
Test 52: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.getElement(0);
Test 53: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:");
xmlElement.getElement("x:OVUeh<X$/4o<xLRI:");
Test 54: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
XmlElement addSubElement = xmlElement.addSubElement("38.b_S~L");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("38.b_S~L");
Test 55: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("Vlyq:*", attributes);
xmlElement.addSubElement(xmlElement);
XmlElement clone = (XmlElement)xmlElement.clone();
clone.getElements();
Test 56: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getName();
Test 57: 
XmlElement xmlElement = new XmlElement();
xmlElement.getName();
Test 58: 
XmlElement xmlElement = new XmlElement("", "");
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 59: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 60: 
XmlElement xmlElement = new XmlElement("(~ANG(");
XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(");
xmlElement.addElement(xmlElement);
xmlElement.append(xmlElement);
xmlElement.removeElement(0);
Test 61: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
xmlElement.addSubElement("m`[?`5");
xmlElement.removeElement(0);
Test 62: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(0);
Test 63: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(addSubElement);
Test 64: 
XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
((XmlElement)"Z8liwAh%k'BQ('6r").getAttributes();

Test 65: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();

Test 66: 
XmlElement xmlElement = new XmlElement();

Test 67: 
XmlElement xmlElement = new XmlElement("user", "John Doe");
XmlElement.printNode(xmlElement, "user");

Test 68: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("This is a sample string.");

Test 69: 
String string = "q";
XmlElement xmlElement = new XmlElement("q", "");
((XmlElement)"q").insertElement(xmlElement, 0);
String string = "q";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
String string = "q";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
int _int = 0;
((XmlElement) string).insertElement(xmlElement, _int);

Test 70: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement((XmlElement) "child-1");
xmlElement.removeFromParent();
XmlElement xmlElement = new XmlElement();
String string = "child-2";
xmlElement.addSubElement((XmlElement) string);
xmlElement.removeFromParent();
XmlElement xmlElement = new XmlElement();
String string = "child-1";
xmlElement.addSubElement((XmlElement) string);
xmlElement.removeFromParent();

Test 71: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("customer");
XmlElement xmlElement = new XmlElement();
xmlElement.setName("customer");

Test 72: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234");

Test 73: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("\"", (String) null);

Test 74: 
String string = "CustomerID";
XmlElement xmlElement = new XmlElement("CustomerID", "John Doe");
((XmlElement)"CustomerID").addAttribute("OrderDate", "2022-03-15");
String string = "OrderTotal";
String string = "199.99";
((XmlElement) string).getAttribute(string, string);

Test 75: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement((XmlElement) "child");

Test 76: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("sub-element");
xmlElement.removeElement(addSubElement);

Test 77: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement("test");

Test 78: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("child1");
xmlElement.addSubElement("child2");

Test 79: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5");
XmlElement xmlElement = new XmlElement("839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "C6=cJ2;Nf?Og&V|");
XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "A0897E3F-BCDA-424D-B15D-267C974E0D01");
XmlElement xmlElement = new XmlElement("A0897E3F-BCDA-424D-B15D-267C974E0D01", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "");
XmlElement xmlElement = new XmlElement("", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "John Doe");
hashtable.put("age", "30");
hashtable.put("email", "johndoe@example.com");
XmlElement xmlElement = new XmlElement("user", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "Jane Doe");
hashtable.put("age", "27");
hashtable.put("email", "janedoe@example.com");
XmlElement xmlElement = new XmlElement("user", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "Bob Smith");
hashtable.put("age", "45");
hashtable.put("email", "bobsmith@example.com");
XmlElement xmlElement = new XmlElement("user", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "Alice Johnson");
hashtable.put("age", "35");
hashtable.put("email", "alicejohnson@example.com");
XmlElement xmlElement = new XmlElement("user", hashtable);
XmlElement.printNode((XmlElement) "users", (String) null);

Test 80: 
XmlElement xmlElement = new XmlElement("A");
XmlElement xmlElement = new XmlElement("B", "C");
((XmlElement)"A").addElement(xmlElement);
String string = "E";
XmlElement.printNode(xmlElement, string);

Test 81: 
String string = "com.allenstudio.ir.util.XmlElement";
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
((XmlElement)"com.allenstudio.ir.util.XmlElement").clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 1";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 2";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 3";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();

Test 82: 
XmlElement xmlElement = new XmlElement();
xmlElement.clone();

Test 83: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

Test 84: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
((XmlElement)"com.allenstudio.ir.util.XmlElement").equals(xmlElement);

Test 85: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("");

Test 86: 
XmlElement xmlElement = new XmlElement();

Test 87: 
XmlElement xmlElement = new XmlElement("root", (Hashtable<String, String>) null);
((XmlElement)"root").hashCode();

Test 88: 
XmlElement xmlElement = new XmlElement("question", "What is the meaning of life?");
((XmlElement)"question").hashCode();

Test 89: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 90: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 91: 
XmlElement xmlElement = new XmlElement("root", "12");
((XmlElement)"root").getAttribute("id");

Test 92: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);

Test 93: 
XmlElement xmlElement = new XmlElement("q", "");
((XmlElement)"q").getData();

Test 94: 
XmlElement xmlElement = new XmlElement();

Test 95: 
XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");

Test 96: 
XmlElement xmlElement = new XmlElement("product", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
((XmlElement)"product").getName();

Test 97: 
XmlElement xmlElement = new XmlElement("q", "This is a sample text");

Test 98: 
String string = "customer";
XmlElement xmlElement = new XmlElement("customer", "John Doe");
((XmlElement)"customer").addAttribute("age", "30");
String string = "gender";
String string = "male";
((XmlElement) string).addAttribute(string, string);
String string = "customer";
String string = "Jane Smith";
XmlElement xmlElement = new XmlElement(string, string);
String string = "age";
String string = "25";
((XmlElement) string).addAttribute(string, string);
String string = "gender";
String string = "female";
((XmlElement) string).addAttribute(string, string);

Test 99: 
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());

Test 100: 
String string = "rootElement";
XmlElement xmlElement = new XmlElement("rootElement");
XmlElement xmlElement = new XmlElement("child1");
((XmlElement)"rootElement").addSubElement((String) xmlElement);
String string = "child2";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child3";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child4";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child5";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
((XmlElement) string).count();

Test 101: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "John Doe");
xmlElement.getAttribute("name");

Test 102: 
String string = "[iXuyz8P0";
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
((XmlElement)"[iXuyz8P0").getAttribute(":", "b4S}=Nq/q[^1");
String string = ":";
((XmlElement) string).getAttribute(string);

Test 103: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("id", "987654321");

Test 104: 
String string = "[iXuyz8P0";
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
((XmlElement)"[iXuyz8P0").getAttribute(":", "b4S}=Nq/q[^1");
((XmlElement) string).getAttributes();
String string = "iXuyz8P0";
String string = "iXuyz8P0";
XmlElement xmlElement = new XmlElement(string, string);
String string = ":";
String string = "b4S}=Nq/q[^1";
((XmlElement) string).getAttribute(string, string);
((XmlElement) string).getAttributes();

Test 105: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");

Test 106: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("Test Element 1");
((XmlElement)"Test Element 1").addSubElement("Test Sub-element 2", "PJ4-`J?S9Cy/br%ynpA");
int _int = 0;
xmlElement.getElement(_int);

Test 107: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("Personal Information");
xmlElement.addSubElement("John Doe");
xmlElement.addSubElement("35");
xmlElement.getElement(0);

Test 108: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
((XmlElement)"x:OVUeh<X$/4o<xLRI:").addSubElement("x:OVUeh<X$/4o<xLRI:");
String string = "x:OVUeh<X$/4o<xLRI:";
xmlElement.getElement(string);

Test 109: 
String string = "testElement";
XmlElement xmlElement = new XmlElement("testElement", "testAttribute");
((XmlElement)"testElement").addSubElement("testChildElement2");
String string = "testAttribute";
((XmlElement) string).getElement(string);

Test 110: 

Test 111: 
XmlElement xmlElement = new XmlElement("root");

Test 112: 
XmlElement xmlElement = new XmlElement("parent", "value");
((XmlElement)"parent").addSubElement(xmlElement);

Test 113: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
XmlElement xmlElement = new XmlElement();

Test 114: 
XmlElement xmlElement = new XmlElement("(~ANG(");
XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(");
((XmlElement)"(~ANG(").addElement(xmlElement);
xmlElement.append(xmlElement);
int _int = 0;
xmlElement.removeElement(_int);

Test 115: 
String string = "N_E0sUlSV1}eF";
XmlElement xmlElement = new XmlElement("N_E0sUlSV1}eF");
((XmlElement)"N_E0sUlSV1}eF").addSubElement("m`[?`5");
int _int = 2;
((XmlElement) string).removeElement(_int);

Test 116: 
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
String string = "N~E0sUlSV1}eF";
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
((XmlElement) observer).addSubElement("m`[?`5");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable) string).addObserver(observer);
int _int = 0;
((XmlElement) observer).removeElement(_int);

Test 117: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("New Sub Element");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable)"New Sub Element").addObserver(observer);
xmlElement.removeElement(addSubElement);


* Generated after the refinement and before minimization 118 tests with total length 432
* test suite isTestSuite: 118
Test 0: 
XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 3: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 4: 
XmlElement xmlElement = new XmlElement("Z\"", "Z\"");
XmlElement.printNode(xmlElement, "Z\"");
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".VFo5:M$=S^\"OJ`");
Test 7: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 8: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.insertElement(xmlElement, 0);
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeFromParent();
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("C6=cJ2;Nf?Og&V|");
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 12: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "'");
Test 13: 
XmlElement xmlElement = new XmlElement("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.addAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.getAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("c[a;nsmRlCT[\"@8.$Vf");
xmlElement.removeElement(addSubElement);
Test 16: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.parent = xmlElement;
xmlElement.append(xmlElement);
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".:dY");
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
Test 19: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("", "OHeQfiA.Q`fCM%A,E");
XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable);
XmlElement.printNode(xmlElement, "C6=cJ2;Nf?Og&V|");
Test 20: 
XmlElement xmlElement = new XmlElement("E");
XmlElement xmlElement = new XmlElement("E", "E");
xmlElement.addElement(xmlElement);
XmlElement.printNode(xmlElement, "E");
Test 21: 
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
xmlElement.clone();
Test 22: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 23: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 24: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", attributes);
xmlElement.equals(xmlElement);
Test 25: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 27: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(">'ujmA<]Kz~.");
Test 28: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<n>", "q");
xmlElement.getAttribute("w3x@47sqr", "");
xmlElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.hashCode();
Test 31: 
XmlElement xmlElement = new XmlElement("q", "q");
xmlElement.hashCode();
Test 32: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();
Test 33: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 34: 
XmlElement xmlElement = new XmlElement("", "6");
xmlElement.getAttribute("");
Test 35: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);
Test 36: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.getData();
Test 37: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElements();
Test 38: 
XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 39: 
XmlElement xmlElement = new XmlElement(")[VPs_V%;)ZXqH\"p?", "zl'U;/$Qfq4@rg5-MyV");
xmlElement.getName();
Test 40: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 41: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.addSubElement("q");
xmlElement.getElement("");
Test 42: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addAttribute("", "");
xmlElement.addAttribute("", "'");
Test 43: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 44: 
XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.count();
Test 45: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.attributes = hashtable;
hashtable.put("", "");
xmlElement.getAttribute("");
Test 46: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttribute(":");
Test 47: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("_$.^uiwS", (String) null);
Test 48: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttributes();
Test 49: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
xmlElement.getData();
Test 50: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 51: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.addSubElement("", "PJ4-`J?S9Cy/br%ynpA");
xmlElement.getElement(0);
Test 52: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.getElement(0);
Test 53: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:");
xmlElement.getElement("x:OVUeh<X$/4o<xLRI:");
Test 54: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
XmlElement addSubElement = xmlElement.addSubElement("38.b_S~L");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("38.b_S~L");
Test 55: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("Vlyq:*", attributes);
xmlElement.addSubElement(xmlElement);
XmlElement clone = (XmlElement)xmlElement.clone();
clone.getElements();
Test 56: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getName();
Test 57: 
XmlElement xmlElement = new XmlElement();
xmlElement.getName();
Test 58: 
XmlElement xmlElement = new XmlElement("", "");
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 59: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 60: 
XmlElement xmlElement = new XmlElement("(~ANG(");
XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(");
xmlElement.addElement(xmlElement);
xmlElement.append(xmlElement);
xmlElement.removeElement(0);
Test 61: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
xmlElement.addSubElement("m`[?`5");
xmlElement.removeElement(0);
Test 62: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(0);
Test 63: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(addSubElement);
Test 64: 
XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
((XmlElement)"Z8liwAh%k'BQ('6r").getAttributes();

Test 65: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();

Test 66: 
XmlElement xmlElement = new XmlElement();

Test 67: 
XmlElement xmlElement = new XmlElement("user", "John Doe");
XmlElement.printNode(xmlElement, "user");

Test 68: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("This is a sample string.");

Test 69: 
String string = "q";
XmlElement xmlElement = new XmlElement("q", "");
((XmlElement)"q").insertElement(xmlElement, 0);
String string = "q";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
String string = "q";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
int _int = 0;
((XmlElement) string).insertElement(xmlElement, _int);

Test 70: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement((XmlElement) "child-1");
xmlElement.removeFromParent();
XmlElement xmlElement = new XmlElement();
String string = "child-2";
xmlElement.addSubElement((XmlElement) string);
xmlElement.removeFromParent();
XmlElement xmlElement = new XmlElement();
String string = "child-1";
xmlElement.addSubElement((XmlElement) string);
xmlElement.removeFromParent();

Test 71: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("customer");
XmlElement xmlElement = new XmlElement();
xmlElement.setName("customer");

Test 72: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234");

Test 73: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("\"", (String) null);

Test 74: 
String string = "CustomerID";
XmlElement xmlElement = new XmlElement("CustomerID", "John Doe");
((XmlElement)"CustomerID").addAttribute("OrderDate", "2022-03-15");
String string = "OrderTotal";
String string = "199.99";
((XmlElement) string).getAttribute(string, string);

Test 75: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement((XmlElement) "child");

Test 76: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("sub-element");
xmlElement.removeElement(addSubElement);

Test 77: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement("test");

Test 78: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("child1");
xmlElement.addSubElement("child2");

Test 79: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5");
XmlElement xmlElement = new XmlElement("839DF2D6-F6AB-4B23-AAC6-CEA8FDB5EBE5", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "C6=cJ2;Nf?Og&V|");
XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "A0897E3F-BCDA-424D-B15D-267C974E0D01");
XmlElement xmlElement = new XmlElement("A0897E3F-BCDA-424D-B15D-267C974E0D01", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("id", "");
XmlElement xmlElement = new XmlElement("", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "John Doe");
hashtable.put("age", "30");
hashtable.put("email", "johndoe@example.com");
XmlElement xmlElement = new XmlElement("user", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "Jane Doe");
hashtable.put("age", "27");
hashtable.put("email", "janedoe@example.com");
XmlElement xmlElement = new XmlElement("user", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "Bob Smith");
hashtable.put("age", "45");
hashtable.put("email", "bobsmith@example.com");
XmlElement xmlElement = new XmlElement("user", hashtable);
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "Alice Johnson");
hashtable.put("age", "35");
hashtable.put("email", "alicejohnson@example.com");
XmlElement xmlElement = new XmlElement("user", hashtable);
XmlElement.printNode((XmlElement) "users", (String) null);

Test 80: 
XmlElement xmlElement = new XmlElement("A");
XmlElement xmlElement = new XmlElement("B", "C");
((XmlElement)"A").addElement(xmlElement);
String string = "E";
XmlElement.printNode(xmlElement, string);

Test 81: 
String string = "com.allenstudio.ir.util.XmlElement";
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
((XmlElement)"com.allenstudio.ir.util.XmlElement").clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 1";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 2";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "XML element 3";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);
((XmlElement) string).clone();

Test 82: 
XmlElement xmlElement = new XmlElement();
xmlElement.clone();

Test 83: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();

Test 84: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
((XmlElement)"com.allenstudio.ir.util.XmlElement").equals(xmlElement);

Test 85: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("");

Test 86: 
XmlElement xmlElement = new XmlElement();

Test 87: 
XmlElement xmlElement = new XmlElement("root", (Hashtable<String, String>) null);
((XmlElement)"root").hashCode();

Test 88: 
XmlElement xmlElement = new XmlElement("question", "What is the meaning of life?");
((XmlElement)"question").hashCode();

Test 89: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 90: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 91: 
XmlElement xmlElement = new XmlElement("root", "12");
((XmlElement)"root").getAttribute("id");

Test 92: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);

Test 93: 
XmlElement xmlElement = new XmlElement("q", "");
((XmlElement)"q").getData();

Test 94: 
XmlElement xmlElement = new XmlElement();

Test 95: 
XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");

Test 96: 
XmlElement xmlElement = new XmlElement("product", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
((XmlElement)"product").getName();

Test 97: 
XmlElement xmlElement = new XmlElement("q", "This is a sample text");

Test 98: 
String string = "customer";
XmlElement xmlElement = new XmlElement("customer", "John Doe");
((XmlElement)"customer").addAttribute("age", "30");
String string = "gender";
String string = "male";
((XmlElement) string).addAttribute(string, string);
String string = "customer";
String string = "Jane Smith";
XmlElement xmlElement = new XmlElement(string, string);
String string = "age";
String string = "25";
((XmlElement) string).addAttribute(string, string);
String string = "gender";
String string = "female";
((XmlElement) string).addAttribute(string, string);

Test 99: 
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());

Test 100: 
String string = "rootElement";
XmlElement xmlElement = new XmlElement("rootElement");
XmlElement xmlElement = new XmlElement("child1");
((XmlElement)"rootElement").addSubElement((String) xmlElement);
String string = "child2";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child3";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child4";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
String string = "child5";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
((XmlElement) string).count();

Test 101: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("name", "John Doe");
xmlElement.getAttribute("name");

Test 102: 
String string = "[iXuyz8P0";
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
((XmlElement)"[iXuyz8P0").getAttribute(":", "b4S}=Nq/q[^1");
String string = ":";
((XmlElement) string).getAttribute(string);

Test 103: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("id", "987654321");

Test 104: 
String string = "[iXuyz8P0";
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
((XmlElement)"[iXuyz8P0").getAttribute(":", "b4S}=Nq/q[^1");
((XmlElement) string).getAttributes();
String string = "iXuyz8P0";
String string = "iXuyz8P0";
XmlElement xmlElement = new XmlElement(string, string);
String string = ":";
String string = "b4S}=Nq/q[^1";
((XmlElement) string).getAttribute(string, string);
((XmlElement) string).getAttributes();

Test 105: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");

Test 106: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("Test Element 1");
((XmlElement)"Test Element 1").addSubElement("Test Sub-element 2", "PJ4-`J?S9Cy/br%ynpA");
int _int = 0;
xmlElement.getElement(_int);

Test 107: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("Personal Information");
xmlElement.addSubElement("John Doe");
xmlElement.addSubElement("35");
xmlElement.getElement(0);

Test 108: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
((XmlElement)"x:OVUeh<X$/4o<xLRI:").addSubElement("x:OVUeh<X$/4o<xLRI:");
String string = "x:OVUeh<X$/4o<xLRI:";
xmlElement.getElement(string);

Test 109: 
String string = "testElement";
XmlElement xmlElement = new XmlElement("testElement", "testAttribute");
((XmlElement)"testElement").addSubElement("testChildElement2");
String string = "testAttribute";
((XmlElement) string).getElement(string);

Test 110: 

Test 111: 
XmlElement xmlElement = new XmlElement("root");

Test 112: 
XmlElement xmlElement = new XmlElement("parent", "value");
((XmlElement)"parent").addSubElement(xmlElement);

Test 113: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
XmlElement xmlElement = new XmlElement();

Test 114: 
XmlElement xmlElement = new XmlElement("(~ANG(");
XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(");
((XmlElement)"(~ANG(").addElement(xmlElement);
xmlElement.append(xmlElement);
int _int = 0;
xmlElement.removeElement(_int);

Test 115: 
String string = "N_E0sUlSV1}eF";
XmlElement xmlElement = new XmlElement("N_E0sUlSV1}eF");
((XmlElement)"N_E0sUlSV1}eF").addSubElement("m`[?`5");
int _int = 2;
((XmlElement) string).removeElement(_int);

Test 116: 
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
String string = "N~E0sUlSV1}eF";
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
((XmlElement) observer).addSubElement("m`[?`5");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable) string).addObserver(observer);
int _int = 0;
((XmlElement) observer).removeElement(_int);

Test 117: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("New Sub Element");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
((Observable)"New Sub Element").addObserver(observer);
xmlElement.removeElement(addSubElement);


* Minimizing test suite
* test suite isTestSuite: 63
Test 0: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 3: 
XmlElement xmlElement = new XmlElement("user", "John Doe");
XmlElement.printNode(xmlElement, "user");
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 7: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.insertElement(xmlElement, 0);
Test 8: 
XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 9: 
XmlElement xmlElement = new XmlElement("", "");
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("customer");
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("\"", (String) null);
Test 12: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "'");
Test 13: 
XmlElement xmlElement = new XmlElement("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.addAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.getAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("c[a;nsmRlCT[\"@8.$Vf");
xmlElement.removeElement(addSubElement);
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeFromParent();
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".:dY");
Test 18: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.addSubElement("q");
xmlElement.getElement("");
Test 19: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".VFo5:M$=S^\"OJ`");
Test 21: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("", "OHeQfiA.Q`fCM%A,E");
XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable);
XmlElement.printNode(xmlElement, "C6=cJ2;Nf?Og&V|");
Test 22: 
XmlElement xmlElement = new XmlElement("E");
XmlElement xmlElement = new XmlElement("E", "E");
xmlElement.addElement(xmlElement);
XmlElement.printNode(xmlElement, "E");
Test 23: 
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
xmlElement.clone();
Test 24: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 25: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("Vlyq:*", attributes);
xmlElement.addSubElement(xmlElement);
XmlElement clone = (XmlElement)xmlElement.clone();
clone.getElements();
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 27: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", attributes);
xmlElement.equals(xmlElement);
Test 28: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
addSubElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 30: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("");
Test 31: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<n>", "q");
xmlElement.getAttribute("w3x@47sqr", "");
xmlElement.equals(xmlElement);
Test 32: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.equals(xmlElement);
Test 33: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.hashCode();
Test 34: 
XmlElement xmlElement = new XmlElement("q", "q");
xmlElement.hashCode();
Test 35: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 36: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("name");
Test 37: 
XmlElement xmlElement = new XmlElement();
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 38: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);
Test 39: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
xmlElement.getData();
Test 40: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElements();
Test 41: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getName();
Test 42: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 43: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addAttribute("", "");
xmlElement.addAttribute("", "'");
Test 44: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 45: 
XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.count();
Test 46: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.attributes = hashtable;
hashtable.put("", "");
xmlElement.getAttribute("");
Test 47: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttribute(":");
Test 48: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("_$.^uiwS", (String) null);
Test 49: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttributes();
Test 50: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.getData();
Test 51: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 52: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.addSubElement("", "PJ4-`J?S9Cy/br%ynpA");
xmlElement.getElement(0);
Test 53: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.getElement(0);
Test 54: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:");
xmlElement.getElement("x:OVUeh<X$/4o<xLRI:");
Test 55: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
XmlElement addSubElement = xmlElement.addSubElement("38.b_S~L");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("38.b_S~L");
Test 56: 
XmlElement xmlElement = new XmlElement(")[VPs_V%;)ZXqH\"p?", "zl'U;/$Qfq4@rg5-MyV");
xmlElement.getName();
Test 57: 
XmlElement xmlElement = new XmlElement();
xmlElement.getName();
Test 58: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 59: 
XmlElement xmlElement = new XmlElement("(~ANG(");
XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(");
xmlElement.addElement(xmlElement);
xmlElement.append(xmlElement);
xmlElement.removeElement(0);
Test 60: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
xmlElement.addSubElement("m`[?`5");
xmlElement.removeElement(0);
Test 61: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(0);
Test 62: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(addSubElement);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 95
* Number of covered goals: 95
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 156
* Number of covered goals: 154
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 62%
* Total number of goals: 109
* Number of covered goals: 68
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 95
* Number of covered goals: 87
* Generated 63 tests with total length 181
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 60%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
int count = xmlElement.count();
assertEquals(0, count);


** It was a parseable test case! 
refined test name is: testCountReturnsZeroWhenNoChildElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Enumeration attributeNames = xmlElement.getAttributeNames();
assertNotNull(attributeNames);


** It was a parseable test case! 
refined test name is: testGetAttributeNamesNotNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
assertNull(xmlElement.getName());


** It was a parseable test case! 
refined test name is: testRemoveAllElementsShouldSetNameToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("user", "John Doe");
XmlElement.printNode(arg0, "user");
assertEquals("user", arg0.getName());
assertEquals("John Doe", arg0.getData());


** It was a parseable test case! 
refined test name is: testPrintNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
assertNull(xmlElement.getName());


** It was a parseable test case! 
refined test name is: testGetNameReturnsNullWhenNotSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement parent = xmlElement.getParent();
assertNull(parent);


** It was a parseable test case! 
refined test name is: testGetParentReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
assertNull(xmlElement.getData());


** It was a parseable test case! 
refined test name is: testNotifyObserversShouldSetDataToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("q", "");
arg0.insertElement(arg0, 0);
assertEquals("", arg0.getData());


** It was a parseable test case! 
refined test name is: testInsertElementemptyDataField
* Compiling Tests
refined test name is: testInsertElementWithEmptyDataField
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
Hashtable<String, String> attributes = xmlElement.getAttributes();
assertNull(attributes);


** It was a parseable test case! 
refined test name is: testGetAttributesReturnsNullWhenNoAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("", "");
XmlElement addSubElement = arg0.addSubElement(arg0);
XmlElement parent = addSubElement.getParent();
assertSame(parent, addSubElement);


** It was a parseable test case! 
refined test name is: testAddingSubElementToXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.setName("customer");
assertFalse(xmlElement.hasChanged());


** It was a parseable test case! 
refined test name is: testSetNameChangesHasChangedState
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Object addAttribute = xmlElement.addAttribute("\"", (String) null);
assertNull(addAttribute);


** It was a parseable test case! 
refined test name is: testInvalidAttributeName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Object addAttribute = xmlElement.addAttribute((String) null, "'");
assertNull(addAttribute);


** It was a parseable test case! 
refined test name is: testAddAttributeNullInputReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.addAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
String attribute = xmlElement.getAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
assertEquals("C=cJ2f?Og&V|", attribute);


** It was a parseable test case! 
refined test name is: testAddAttributeToXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement removeElement = arg0.removeElement(arg0);
assertNull(removeElement);


** It was a parseable test case! 
refined test name is: testRemoveElementReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement arg0 = xmlElement.addSubElement("c[a;nsmRlCT[\"@8.$Vf");
xmlElement.removeElement(arg0);
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testRemoveElementWithInvalidName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.addSubElement(arg0);
arg0.removeFromParent();
assertEquals(0, arg0.count());


** It was a parseable test case! 
refined test name is: testRemovingSubElement
* Compiling Tests
refined test name is: testRemoveSubElementCountIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement element = xmlElement.getElement(".:dY");
assertNull(element);


** It was a parseable test case! 
refined test name is: testGetElementWithInvalidName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("q", "");
xmlElement.addSubElement("q");
xmlElement.getElement("");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddSubElementWithDuplicateName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddSubElementsShouldReturnCorrectCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".VFo5:M$=S^\"OJ`");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddSubElementWithInvalidName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Hashtable<String, String> arg1 = new Hashtable<String, String>();
arg1.put("", "OHeQfiA.Q`fCM%A,E");
XmlElement arg0 = new XmlElement("C6=cJ2;Nf?Og&V|", arg1);
XmlElement.printNode(arg0, "C6=cJ2;Nf?Og&V|");
assertEquals(0, arg0.countObservers());


** It was a parseable test case! 
refined test name is: testPrintNodeWithEmptyName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
Object clone = xmlElement.clone();
assertNotSame(clone, xmlElement);
assertNotNull(clone);


** It was a parseable test case! 
refined test name is: testCloneXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
Object clone = xmlElement.clone();
assertNotNull(clone);
assertNotSame(clone, xmlElement);


** It was a parseable test case! 
refined test name is: testCloneMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> arg1 = xmlElement.getAttributes();
XmlElement arg0 = new XmlElement("Vlyq:*", arg1);
xmlElement.addSubElement(arg0);
XmlElement clone = (XmlElement)xmlElement.clone();
clone.getElements();
assertEquals(1, xmlElement.count());
assertTrue(xmlElement.equals((Object)clone));


** It was a parseable test case! 
refined test name is: testClone
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
boolean equals = arg0.equals(arg0);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsForSameXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> arg1 = xmlElement.getAttributes();
XmlElement arg0 = new XmlElement("com.allenstudio.ir.util.XmlElement", arg1);
boolean equals = xmlElement.equals(arg0);
assertFalse(arg0.equals((Object)xmlElement));
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testNotEqualsDifferentAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement addSubElement = arg0.addSubElement("com.allenstudio.ir.util.XmlElement");
boolean equals = addSubElement.equals(arg0);
assertEquals(1, arg0.count());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testAddSubElementWithSameNameAsParent
* Compiling Tests
refined test name is: testAddSubElementWithDuplicateName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
boolean equals = xmlElement.equals((Object) null);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testXmlElementEqualsNullReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
boolean equals = xmlElement.equals("");
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithEmptyStringReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement arg0 = new XmlElement("<n>", "q");
String attribute = arg0.getAttribute("w3x@47sqr", "");
assertNotNull(attribute);
assertEquals("", attribute);

boolean equals = xmlElement.equals(arg0);
assertFalse(arg0.equals((Object)xmlElement));
assertEquals("q", arg0.getData());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testXmlElementConstructorAndMethods
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement xmlElement = new XmlElement();
assertTrue(xmlElement.equals((Object)arg0));

xmlElement.addSubElement(arg0);
boolean equals = xmlElement.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testAddingSubElementToParent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeReturnsNonZeroValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("q", "q");
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeMethod
* Compiling Tests
refined test name is: testHashCodeConsistency
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeWithNoSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String attribute = xmlElement.getAttribute("name");
assertNull(attribute);


** It was a parseable test case! 
refined test name is: testRetrieveAttributeWhenNotSetreturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.setParent(arg0);
XmlElement parent = arg0.getParent();
assertNull(parent.getName());


** It was a parseable test case! 
refined test name is: testGetNullParent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> arg0 = xmlElement.getAttributes();
xmlElement.setAttributes(arg0);
assertEquals(0, xmlElement.count());


** It was a parseable test case! 
refined test name is: testSetAttributesShouldIncreaseCountByOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("", "38.b_S~L");
String data = xmlElement.getData();
assertEquals("38.b_S~L", data);
assertNotNull(data);


** It was a parseable test case! 
refined test name is: testGetDataWithEmptyNameAndSpecificValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
List elements = xmlElement.getElements();
assertEquals(0, elements.size());


** It was a parseable test case! 
refined test name is: testGetSizeOfEmptyElementList
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("");
String name = xmlElement.getName();
assertEquals("", name);


** It was a parseable test case! 
refined test name is: testGetNameWhenNameIsEmpty
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
assertEquals(0, xmlElement.countObservers());


** It was a parseable test case! 
refined test name is: testRemovingChildElement
* Compiling Tests
refined test name is: testRemovingChildXmlElementDecreasesObserverCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("", "");
xmlElement.addAttribute("", "");
Object addAttribute = xmlElement.addAttribute("", "'");
assertEquals("", addAttribute);


** It was a parseable test case! 
refined test name is: testAddAttributeSetsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
int count = xmlElement.count();
assertEquals(1, count);


** It was a parseable test case! 
refined test name is: testCountMethodSingleSubElementReturnsOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.attributes = hashtable;
hashtable.put("", "");
String attribute = xmlElement.getAttribute("");
assertEquals("", attribute);


** It was a parseable test case! 
refined test name is: testGetNonExistentAttributeDefaultValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String attribute = xmlElement.getAttribute("_$.^uiwS", (String) null);
assertNull(attribute);


** It was a parseable test case! 
refined test name is: testGetAttributeWithNoValueReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
String attribute = xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
assertNotNull(attribute);
assertEquals("b4S}=Nq/q[^1", attribute);

Hashtable<String, String> attributes = xmlElement.getAttributes();
assertFalse(attributes.isEmpty());


** It was a parseable test case! 
refined test name is: testGetAttributeAndGetAttributesMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("q", "");
String data = xmlElement.getData();
assertEquals("", data);
assertNotNull(data);


** It was a parseable test case! 
refined test name is: testGetDataFromXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String data = xmlElement.getData();
assertNull(data);


** It was a parseable test case! 
refined test name is: testGetDataReturnsNullWhenNoDataPresent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.addSubElement("", "PJ4-`J?S9Cy/br%ynpA");
xmlElement.getElement(0);
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddEmptySubElementAndGetElementByIndex
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
XmlElement element = xmlElement.getElement(0);
assertSame(element, addSubElement);


** It was a parseable test case! 
refined test name is: testAddSubElementShouldReturnTheSameElementAsAdded
* Compiling Tests
refined test name is: testAddSubElementValidArgumentReturnsElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:");
xmlElement.getElement("x:OVUeh<X$/4o<xLRI:");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("", "38.b_S~L");
XmlElement addSubElement = xmlElement.addSubElement("38.b_S~L");
Observer arg0 = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(arg0);
xmlElement.getElement("38.b_S~L");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddObserverWithSubElementIncrementsCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement(")[VPs_V%;)ZXqH\"p?", "zl'U;/$Qfq4@rg5-MyV");
String name = xmlElement.getName();
assertNotNull(name);
assertEquals(")[VPs_V%;)ZXqH\"p?", name);
assertEquals("zl'U;/$Qfq4@rg5-MyV", xmlElement.getData());


** It was a parseable test case! 
refined test name is: testGetNameAndGetData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String name = xmlElement.getName();
assertNull(name);


** It was a parseable test case! 
refined test name is: testGetNameReturnsNullWhenNoNameDefined
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
XmlElement removeElement = xmlElement.removeElement(0);
assertSame(removeElement, addSubElement);
assertEquals("m`[?`5", removeElement.getName());


** It was a parseable test case! 
refined test name is: testRemoveFirstSubElementSameAsAddedElement
* Compiling Tests
refined test name is: testRemoveFirstSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
Observer arg0 = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(arg0);
XmlElement removeElement = xmlElement.removeElement(0);
assertEquals("m`[?`5", removeElement.getName());
assertEquals(1, removeElement.countObservers());


** It was a parseable test case! 
refined test name is: testRemoveFirstSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:24.697 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:24.715 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:24.764 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:24.765 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:24.842 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:24.843 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:24.911 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:24.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:24.954 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:24.955 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:08:24.995 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:24.996 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.034 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.034 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.069 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.070 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.105 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
[MASTER] 17:08:25.188 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.190 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.240 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.242 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.289 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.290 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.329 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.330 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.374 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.375 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.409 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.451 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.452 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:25.488 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.490 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.531 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.533 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.569 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.570 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.612 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.652 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.653 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.689 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.690 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.726 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.727 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.764 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.765 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.805 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.845 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.847 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.887 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.888 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:25.926 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.927 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:25.965 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:25.966 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.016 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.072 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.073 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:08:26.119 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.119 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
* Compiling Tests
[MASTER] 17:08:26.169 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.169 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:26.244 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.311 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.321 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.372 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.373 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:08:26.415 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
* Compiling Tests
[MASTER] 17:08:26.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.509 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.510 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.553 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.556 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.596 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.597 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:26.638 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.638 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.681 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.727 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.728 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.769 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.770 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.812 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.813 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.858 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.859 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.899 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.900 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.941 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.941 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:26.984 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:26.985 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:27.030 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:27.031 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:27.076 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:27.077 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:27.129 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:27.130 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:27.176 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:27.177 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:27.222 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:27.223 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:27.268 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:27.269 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:27.319 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:27.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 7 called: 0 to improve: false
** Write a test suite: 16 called: 1 to improve: false
** Write a test suite: 27 called: 2 to improve: false
** Write a test suite: 33 called: 3 to improve: false
** Write a test suite: 41 called: 4 to improve: false
** Write a test suite: 50 called: 5 to improve: false
** Write a test suite: 55 called: 6 to improve: false
[MASTER] 17:08:28.760 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:28.761 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 15 called: 2 to improve: false
** Write a test suite: 23 called: 3 to improve: false
** Write a test suite: 29 called: 4 to improve: false
** Write a test suite: 40 called: 5 to improve: false
** Write a test suite: 49 called: 6 to improve: false
[MASTER] 17:08:29.720 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:29.721 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
[MASTER] 17:08:30.647 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 67
Test 0: 
XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 2: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
xmlElement.addSubElement(xmlElement);
clone.equals(xmlElement);
Test 3: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 5: 
XmlElement xmlElement = new XmlElement("Z\"", "Z\"");
XmlElement.printNode(xmlElement, "Z\"");
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 7: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".VFo5:M$=S^\"OJ`");
Test 8: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 9: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.insertElement(xmlElement, 0);
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeFromParent();
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("C6=cJ2;Nf?Og&V|");
Test 12: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 13: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "'");
Test 14: 
XmlElement xmlElement = new XmlElement("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.addAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.getAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
Test 15: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 16: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("c[a;nsmRlCT[\"@8.$Vf");
xmlElement.removeElement(addSubElement);
Test 17: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.parent = xmlElement;
xmlElement.append(xmlElement);
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".:dY");
Test 19: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
Test 20: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("", "OHeQfiA.Q`fCM%A,E");
XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable);
XmlElement.printNode(xmlElement, "C6=cJ2;Nf?Og&V|");
Test 21: 
XmlElement xmlElement = new XmlElement("E");
XmlElement xmlElement = new XmlElement("E", "E");
xmlElement.addElement(xmlElement);
XmlElement.printNode(xmlElement, "E");
Test 22: 
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
xmlElement.clone();
Test 23: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 24: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("HtIX");
xmlElement.clone();
Test 25: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 26: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", attributes);
xmlElement.equals(xmlElement);
Test 27: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.equals(xmlElement);
Test 28: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 29: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(">'ujmA<]Kz~.");
Test 30: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<n>", "q");
xmlElement.getAttribute("w3x@47sqr", "");
xmlElement.equals(xmlElement);
Test 31: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.hashCode();
Test 32: 
XmlElement xmlElement = new XmlElement("q", "q");
xmlElement.hashCode();
Test 33: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();
Test 34: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 35: 
XmlElement xmlElement = new XmlElement("", "6");
xmlElement.getAttribute("");
Test 36: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);
Test 37: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.getData();
Test 38: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElements();
Test 39: 
XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 40: 
XmlElement xmlElement = new XmlElement(")[VPs_V%;)ZXqH\"p?", "zl'U;/$Qfq4@rg5-MyV");
xmlElement.getName();
Test 41: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 42: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.addSubElement("q");
xmlElement.getElement("");
Test 43: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("", attributes);
xmlElement.append(xmlElement);
xmlElement.getElement("");
Test 44: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addAttribute("", "");
xmlElement.addAttribute("", "'");
Test 45: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
clone.addSubElement(xmlElement);
Test 46: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 47: 
XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.count();
Test 48: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.attributes = hashtable;
hashtable.put("", "");
xmlElement.getAttribute("");
Test 49: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttribute(":");
Test 50: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("_$.^uiwS", (String) null);
Test 51: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttributes();
Test 52: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
xmlElement.getData();
Test 53: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 54: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.addSubElement("", "PJ4-`J?S9Cy/br%ynpA");
xmlElement.getElement(0);
Test 55: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.getElement(0);
Test 56: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:");
xmlElement.getElement("x:OVUeh<X$/4o<xLRI:");
Test 57: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
XmlElement addSubElement = xmlElement.addSubElement("38.b_S~L");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("38.b_S~L");
Test 58: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.getElements();
Test 59: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getName();
Test 60: 
XmlElement xmlElement = new XmlElement();
xmlElement.getName();
Test 61: 
XmlElement xmlElement = new XmlElement("", "");
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 62: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 63: 
XmlElement xmlElement = new XmlElement("(~ANG(");
XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(");
xmlElement.addElement(xmlElement);
xmlElement.append(xmlElement);
xmlElement.removeElement(0);
Test 64: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
xmlElement.addSubElement("m`[?`5");
xmlElement.removeElement(0);
Test 65: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(0);
Test 66: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(addSubElement);

* Minimizing test suite
* test suite isTestSuite: 67
Test 0: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 1: 
XmlElement xmlElement = new XmlElement("Z8liwAh%k'BQ('6r", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 2: 
XmlElement xmlElement = new XmlElement("", "6");
xmlElement.getAttribute("");
Test 3: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 6: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
xmlElement.getData();
Test 7: 
XmlElement xmlElement = new XmlElement();
xmlElement.setData("com.allenstudio.ir.util.XmlElement");
Test 8: 
XmlElement xmlElement = new XmlElement("Z\"", "Z\"");
XmlElement.printNode(xmlElement, "Z\"");
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".VFo5:M$=S^\"OJ`");
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 12: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.insertElement(xmlElement, 0);
Test 13: 
XmlElement xmlElement = new XmlElement("", "");
XmlElement addSubElement = xmlElement.addSubElement(xmlElement);
addSubElement.getParent();
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("C6=cJ2;Nf?Og&V|");
Test 15: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "'");
Test 17: 
XmlElement xmlElement = new XmlElement("", "");
xmlElement.addAttribute("", "");
xmlElement.addAttribute("", "'");
Test 18: 
XmlElement xmlElement = new XmlElement("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.addAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
xmlElement.getAttribute("C=cJ2f?Og&V|", "C=cJ2f?Og&V|");
Test 19: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("_$.^uiwS", (String) null);
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 21: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("c[a;nsmRlCT[\"@8.$Vf");
xmlElement.removeElement(addSubElement);
Test 22: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.removeFromParent();
Test 23: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".:dY");
Test 24: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.addSubElement("q");
xmlElement.getElement("");
Test 25: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
Test 26: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("", "OHeQfiA.Q`fCM%A,E");
XmlElement xmlElement = new XmlElement("C6=cJ2;Nf?Og&V|", hashtable);
XmlElement.printNode(xmlElement, "C6=cJ2;Nf?Og&V|");
Test 27: 
XmlElement xmlElement = new XmlElement("E");
XmlElement xmlElement = new XmlElement("E", "E");
xmlElement.addElement(xmlElement);
XmlElement.printNode(xmlElement, "E");
Test 28: 
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", (Hashtable<String, String>) null);
xmlElement.clone();
Test 29: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
xmlElement.addSubElement(xmlElement);
clone.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 31: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("HtIX");
xmlElement.clone();
Test 32: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 33: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> attributes = xmlElement.getAttributes();
XmlElement xmlElement = new XmlElement("com.allenstudio.ir.util.XmlElement", attributes);
xmlElement.equals(xmlElement);
Test 34: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.equals(xmlElement);
Test 35: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 36: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(">'ujmA<]Kz~.");
Test 37: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<n>", "q");
xmlElement.getAttribute("w3x@47sqr", "");
xmlElement.equals(xmlElement);
Test 38: 
XmlElement xmlElement = new XmlElement("", (Hashtable<String, String>) null);
xmlElement.hashCode();
Test 39: 
XmlElement xmlElement = new XmlElement("q", "q");
xmlElement.hashCode();
Test 40: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();
Test 41: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 42: 
XmlElement xmlElement = new XmlElement();
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 43: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElements();
Test 44: 
XmlElement xmlElement = new XmlElement("");
xmlElement.getName();
Test 45: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
xmlElement.removeElement(addSubElement);
Test 46: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 47: 
XmlElement xmlElement = new XmlElement();
XmlElement clone = (XmlElement)xmlElement.clone();
clone.addSubElement(xmlElement);
Test 48: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 49: 
XmlElement xmlElement = new XmlElement("bZ X");
xmlElement.addSubElement("com.allenstudio.ir.util.XmlElement");
xmlElement.count();
Test 50: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
xmlElement.attributes = hashtable;
hashtable.put("", "");
xmlElement.getAttribute("");
Test 51: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttribute(":");
Test 52: 
XmlElement xmlElement = new XmlElement("[iXuyz8P0", "[iXuyz8P0");
xmlElement.getAttribute(":", "b4S}=Nq/q[^1");
xmlElement.getAttributes();
Test 53: 
XmlElement xmlElement = new XmlElement("q", "");
xmlElement.getData();
Test 54: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 55: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.addSubElement("", "PJ4-`J?S9Cy/br%ynpA");
xmlElement.getElement(0);
Test 56: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.getElement(0);
Test 57: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("x:OVUeh<X$/4o<xLRI:", "x:OVUeh<X$/4o<xLRI:");
addSubElement.addSubElement("x:OVUeh<X$/4o<xLRI:");
xmlElement.getElement("x:OVUeh<X$/4o<xLRI:");
Test 58: 
XmlElement xmlElement = new XmlElement("", "38.b_S~L");
XmlElement addSubElement = xmlElement.addSubElement("38.b_S~L");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.getElement("38.b_S~L");
Test 59: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.getElements();
Test 60: 
XmlElement xmlElement = new XmlElement(")[VPs_V%;)ZXqH\"p?", "zl'U;/$Qfq4@rg5-MyV");
xmlElement.getName();
Test 61: 
XmlElement xmlElement = new XmlElement();
xmlElement.getName();
Test 62: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 63: 
XmlElement xmlElement = new XmlElement("(~ANG(");
XmlElement xmlElement = new XmlElement("(~ANG(", "(~ANG(");
xmlElement.addElement(xmlElement);
xmlElement.append(xmlElement);
xmlElement.removeElement(0);
Test 64: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
xmlElement.addSubElement("m`[?`5");
xmlElement.removeElement(0);
Test 65: 
XmlElement xmlElement = new XmlElement("N~E0sUlSV1}eF");
XmlElement addSubElement = xmlElement.addSubElement("m`[?`5");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(0);
Test 66: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("");
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
addSubElement.addObserver(observer);
xmlElement.removeElement(addSubElement);

[MASTER] 17:08:43.649 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 95
* Number of covered goals: 95
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 156
* Number of covered goals: 154
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 62%
* Total number of goals: 109
* Number of covered goals: 68
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 95
* Number of covered goals: 87
* Generated 67 tests with total length 189
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 17:08:43.765 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 61%
* Compiling and checking tests
[MASTER] 17:08:48.592 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.016 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.049 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.050 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.094 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.094 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.137 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.137 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.202 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.203 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.263 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.264 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.318 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.319 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.393 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.393 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.430 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.430 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.467 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.467 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.504 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.505 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.542 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.543 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.581 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.620 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:51.620 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.696 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.751 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.832 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.833 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.893 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.893 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:51.962 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:51.963 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.048 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.048 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.100 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.101 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.161 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.162 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.216 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:52.217 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.264 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.264 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.323 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.323 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:52.380 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.380 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.433 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.493 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:52.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.559 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.622 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.623 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:52.689 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.689 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.753 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.754 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.820 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.886 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.887 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:52.942 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:52.943 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.003 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.010 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:08:53.071 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.072 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.137 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.139 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.199 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.199 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.258 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.259 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.314 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.506 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.506 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:08:53.596 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.597 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.674 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.676 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.716 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:08:53.717 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.765 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.766 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.793 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.793 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.824 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.825 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.856 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.856 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.889 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.890 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.921 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.922 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.951 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.952 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:53.981 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:53.982 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.012 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.013 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.045 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.045 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.079 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.079 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.116 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.117 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.149 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.150 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.182 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.183 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.216 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.217 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.259 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.260 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:08:54.311 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:54.312 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
[MASTER] 17:08:55.014 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:55.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
[MASTER] 17:08:55.632 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar4714053592137852334.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:08:55.633 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4714053592137852334.jar
* Writing tests to file
[MASTER] 17:08:55.634 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'XmlElement_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 15 called: 2 to improve: false
** Write a test suite: 23 called: 3 to improve: false
** Write a test suite: 29 called: 4 to improve: false
** Write a test suite: 40 called: 5 to improve: false
** Write a test suite: 49 called: 6 to improve: false
* Writing JUnit test case 'XmlElement_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
* Done!

* Computation finished
