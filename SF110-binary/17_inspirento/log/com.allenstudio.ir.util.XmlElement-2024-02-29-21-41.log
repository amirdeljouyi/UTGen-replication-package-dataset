* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: com.allenstudio.ir.util.XmlElement
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/17_inspirento/evosuite-files/evosuite.properties
* Connecting to master process on port 12289
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:41:52.954 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:41:52.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:41:52.962 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 21:41:52.978 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:41:52.983 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:41:52.984 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class com.allenstudio.ir.util.XmlElement
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 490
* Using seed 1709242911430
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 260 / 490
[Progress:>                             3%] [Cov:=======================>           68%][MASTER] 21:41:57.600 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.allenstudio.ir.util.XmlElement.addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;: I3 Branch 1 IFNULL L131 - true in context: com.allenstudio.ir.util.XmlElement:addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
[Progress:=>                            4%] [Cov:==========================>        76%][Progress:=>                            4%] [Cov:==========================>        76%][Progress:=>                            4%] [Cov:==========================>        77%][Progress:=>                            5%] [Cov:============================>      81%][Progress:=>                            5%] [Cov:============================>      82%][Progress:=>                            5%] [Cov:=============================>     83%][Progress:=>                            6%] [Cov:=============================>     83%][Progress:=>                            6%] [Cov:=============================>     83%][Progress:=>                            6%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           7%] [Cov:=============================>     84%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%]
* Search finished after 101s and 380 generations, 81587 statements, best individual has fitness: 54.0
* Generated before the refinement 64 tests with total length 181
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int count = xmlElement.count()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("Employee");
        xmlElement.setId(1234);
        xmlElement.setName("John Doe");
        xmlElement.setSalary(50000.0);
        xmlElement.setDepartment("Sales");
        xmlElement.count();
    }
}
statement is: XmlElement xmlElement = new XmlElement("Employee"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setId(1234), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setId(1234) target is: xmlElement method is: setId(int)
statement is: xmlElement.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("John Doe") target is: xmlElement method is: setName(java.lang.String)
statement is: xmlElement.setSalary(50000.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setSalary(50000.0) target is: xmlElement method is: setSalary(double)
statement is: xmlElement.setDepartment("Sales"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setDepartment("Sales") target is: xmlElement method is: setDepartment(java.lang.String)
statement is: xmlElement.count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.count() target is: xmlElement method is: count()
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttributeNames()Ljava/util/Enumeration; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Enumeration<E>
statement code is: Enumeration attributeNames = xmlElement.getAttributeNames()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getAttributeNames();
        // Improved test data
        int age = 30;
        String name = "John Doe";
        Double salary = 50000.0;
        // Changed the primitive values and Strings to more illustrative examples }}
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttributeNames(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributeNames() target is: xmlElement method is: getAttributeNames()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttributeNames()Ljava/util/Enumeration;
statement is: // Improved test data
int age = 30, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Double salary = 50000.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed the primitive values and Strings to more illustrative examples }}, class spoon.support.reflect.code.CtCommentImpl
* this is vulnerable: int _int = 30
* this is vulnerable: String string = "John Doe"
* this is vulnerable: double _double = 50000.0
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
int _int = 30;
String string = "John Doe";
double _double = 50000.0;

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeAllElements()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeAllElements()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.removeAllElements();// This line removes all elements from the XML element

        // Example of a more descriptive test data for the same scenario
        String expectedXml = "<root><element1>Hello</element1><element2>World</element2></root>";
        String actualXml = xmlElement.toString();
        assertEquals(expectedXml, actualXml);// This line asserts that the actual XML string is equal to the expected XML string }}

    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.removeAllElements()// This line removes all elements from the XML element
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeAllElements()// This line removes all elements from the XML element
 target is: xmlElement method is: removeAllElements()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeAllElements()V
statement is: // Example of a more descriptive test data for the same scenario
String expectedXml = "<root><element1>Hello</element1><element2>World</element2></root>", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String actualXml = xmlElement.toString(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.toString() target is: xmlElement method is: toString()
statement is: assertEquals(expectedXml, actualXml)// This line asserts that the actual XML string is equal to the expected XML string }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedXml, actualXml)// This line asserts that the actual XML string is equal to the expected XML string }}
 target is:  method is: assertEquals(java.lang.String,java.lang.String)
* this is vulnerable: String string = "<root><element1>Hello</element1><element2>World</element2></root>"
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
String string = "<root><element1>Hello</element1><element2>World</element2></root>";

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("!9_th5G]O^&", "!9_th5G]O^&")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement("!9_th5G]O^&", "!9_th5G]O^&");
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("MyXmlElement", "This is a test XML element.");
        xmlElement.hashCode();
    }
}
statement is: XmlElement xmlElement = new XmlElement("MyXmlElement", "This is a test XML element."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: hashCode()I
TestCase is: String string = "MyXmlElement";
String string = "This is a test XML element.";
XmlElement xmlElement = new XmlElement(string, string);
string.hashCode();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getParent();
        // Improved test data
        XmlElement xmlChildElement = new XmlElement("child");
        xmlElement.addChild(xmlChildElement);
        xmlChildElement.setTextContent("Testing 123");
        xmlChildElement.getParent();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getParent() target is: xmlElement method is: getParent()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getParent()Lcom/allenstudio/ir/util/XmlElement;
statement is: // Improved test data
XmlElement xmlChildElement = new XmlElement("child"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addChild(xmlChildElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(xmlChildElement) target is: xmlElement method is: addChild(XmlElement)
statement is: xmlChildElement.setTextContent("Testing 123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlChildElement.setTextContent("Testing 123") target is: xmlChildElement method is: setTextContent(java.lang.String)
statement is: xmlChildElement.getParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlChildElement.getParent() target is: xmlChildElement method is: getParent()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getParent()Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
xmlElement.getParent();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: notifyObservers()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.notifyObservers()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setName("root");
        xmlElement.setValue("value");
        xmlElement.addChild(new XmlElement("child1", "value1"));
        xmlElement.addChild(new XmlElement("child2", "value2"));
        xmlElement.notifyObservers();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setName("root"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("root") target is: xmlElement method is: setName(java.lang.String)
statement is: xmlElement.setValue("value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setValue("value") target is: xmlElement method is: setValue(java.lang.String)
statement is: xmlElement.addChild(new XmlElement("child1", "value1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(new XmlElement("child1", "value1")) target is: xmlElement method is: addChild(XmlElement)
statement is: xmlElement.addChild(new XmlElement("child2", "value2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(new XmlElement("child2", "value2")) target is: xmlElement method is: addChild(XmlElement)
statement is: xmlElement.notifyObservers(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.notifyObservers() target is: xmlElement method is: notifyObservers()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: notifyObservers()V
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: insertElement(Lcom/allenstudio/ir/util/XmlElement;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.insertElement(arg0, 0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.insertElement(xmlElement, "beginning");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.insertElement(xmlElement, "beginning"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.insertElement(xmlElement, "beginning") target is: xmlElement method is: insertElement(XmlElement,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: insertElement(Lcom/allenstudio/ir/util/XmlElement;I)V
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "beginning";
xmlElement.insertElement(xmlElement, (int) string);

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("?H>}.{,7m", arg1)
statement is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.setParent(arg0)
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.getParent()
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("?H>}.{,7m", hashtable);
xmlElement.setParent(xmlElement);
xmlElement.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
statement is: getElements()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List elements = xmlElement.getElements()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.getElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("firstChildElement");
        xmlElement.addSubElement("secondChildElement");
        xmlElement.addAttribute("width", "100px");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("firstChildElement"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("firstChildElement") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("secondChildElement"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("secondChildElement") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addAttribute("width", "100px"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("width", "100px") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "firstChildElement";
xmlElement.addSubElement((XmlElement) string);
String string = "secondChildElement";
xmlElement.addSubElement((XmlElement) string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setName("")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.setName("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setName("book");
        xmlElement.setAttribute("id", "12345");
        xmlElement.setTextContent("Learning XML");
        xmlElement.setAttribute("price", "$10.99");
        xmlElement.setAttribute("author", "John Doe");
        xmlElement.appendChild(new XmlElement("title").setTextContent("A Guide to XML"));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setName("book"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("book") target is: xmlElement method is: setName(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: xmlElement.setAttribute("id", "12345"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("id", "12345") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.setTextContent("Learning XML"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setTextContent("Learning XML") target is: xmlElement method is: setTextContent(java.lang.String)
statement is: xmlElement.setAttribute("price", "$10.99"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("price", "$10.99") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.setAttribute("author", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("author", "John Doe") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.appendChild(new XmlElement("title").setTextContent("A Guide to XML")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.appendChild(new XmlElement("title").setTextContent("A Guide to XML")) target is: xmlElement method is: appendChild()
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "book";
xmlElement.setName(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute((String) null, (String) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addAttribute("name", "value");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("name", "value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("name", "value") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "name";
String string = "value";
xmlElement.addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute((String) null, "")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addAttribute("id", "1234567890");
        xmlElement.addAttribute("name", "John Doe");
        xmlElement.addAttribute("age", "30");
        xmlElement.addAttribute("gender", "male");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("id", "1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("id", "1234567890") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("name", "John Doe") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("age", "30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("age", "30") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("gender", "male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("gender", "male") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "id";
String string = "1234567890";
xmlElement.addAttribute(string, string);
String string = "name";
String string = "John Doe";
xmlElement.addAttribute(string, string);
String string = "age";
String string = "30";
xmlElement.addAttribute(string, string);
String string = "gender";
String string = "male";
xmlElement.addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute("/&xMbM5", "/&xMbM5")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("/&xMbM5", "3pJ")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("/&xMbM5", "/&xMbM5");
xmlElement.getAttribute("/&xMbM5", "3pJ");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addAttribute("id", "1234567890");
        xmlElement.getAttribute("id", "abcdefghijklmnopqrstuvwxyz");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("id", "1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("id", "1234567890") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.getAttribute("id", "abcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("id", "abcdefghijklmnopqrstuvwxyz") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "id";
String string = "1234567890";
xmlElement.addAttribute(string, string);
String string = "id";
String string = "abcdefghijklmnopqrstuvwxyz";
xmlElement.getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = arg0.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("parent");
        xmlElement.removeElement(new XmlElement("child"));
    }
}
statement is: XmlElement xmlElement = new XmlElement("parent"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.removeElement(new XmlElement("child")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(new XmlElement("child")) target is: xmlElement method is: removeElement(XmlElement)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("")
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = arg0.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.removeElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("<sub-element name=\"John Doe\"><age>30</age></sub-element>");
        xmlElement.removeElement("sub-element");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("<sub-element name=\"John Doe\"><age>30</age></sub-element>"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("<sub-element name=\"John Doe\"><age>30</age></sub-element>") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.removeElement("sub-element"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement("sub-element") target is: xmlElement method is: removeElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "<sub-element name=\"John Doe\"><age>30</age></sub-element>";
xmlElement.addSubElement(string);
String string = "sub-element";
xmlElement.removeElement((XmlElement) string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("(")
statement is: removeFromParent()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeFromParent()
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("(");
addSubElement.removeFromParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("Employee");
        addSubElement.removeFromParent();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("Employee"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Employee") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.removeFromParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.removeFromParent() target is: addSubElement method is: removeFromParent()
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: removeFromParent()V
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "Employee";
xmlElement.addSubElement(string);
((XmlElement) string).removeFromParent();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(".cK.R=hB2P:K4a|a:g<")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".cK.R=hB2P:K4a|a:g<");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("This is a sample sub-element with a more descriptive value to test the addition of a sub-element.");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("This is a sample sub-element with a more descriptive value to test the addition of a sub-element."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("This is a sample sub-element with a more descriptive value to test the addition of a sub-element.") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "This is a sample sub-element with a more descriptive value to test the addition of a sub-element.";
xmlElement.addSubElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("\":~g\"")
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(".n$\"rUN]$\"")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("\":~g\"");
xmlElement.getElement(".n$\"rUN]$\"");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("This is a test string for the addSubElement method.");
        xmlElement.getElement("This is a test string for the getElement method.");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("This is a test string for the addSubElement method."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("This is a test string for the addSubElement method.") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement("This is a test string for the getElement method."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("This is a test string for the getElement method.") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "This is a test string for the addSubElement method.";
xmlElement.addSubElement(string);
String string = "This is a test string for the getElement method.";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR")
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("~.D_CXu%GR");
XmlElement clone = (XmlElement)xmlElement.clone();
clone.addSubElement("~.D_CXu%GR");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addSubElement("A unique element name");
        XmlElement clone = ((XmlElement) (xmlElement.clone()));
        clone.addSubElement("Another unique element name");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("A unique element name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("A unique element name") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: XmlElement clone = ((XmlElement) (xmlElement.clone())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((XmlElement) (xmlElement.clone())) target is: xmlElement method is: clone()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: clone()Ljava/lang/Object;
statement is: clone.addSubElement("Another unique element name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clone.addSubElement("Another unique element name") target is: clone method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
source statement: clone()Ljava/lang/Object; callee: VariableReference: Statement 2, type com.allenstudio.ir.util.XmlElementindex is: 3
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "A unique element name";
xmlElement.addSubElement(string);
xmlElement.clone();
String string = "Another unique element name";
xmlElement.addSubElement(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]", "<hV-X{c96}VuB?cO|]")
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "<hV-X{c96}VuB?cO|]")
test data is: XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]", "<hV-X{c96}VuB?cO|]");
XmlElement.printNode(xmlElement, "<hV-X{c96}VuB?cO|]");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement.printNode(xmlElement1, "John Doe");
        XmlElement xmlElement2 = new XmlElement("age", 30);
        XmlElement.printNode(xmlElement2, "age:30");
        XmlElement xmlElement3 = new XmlElement("city", "New York");
        XmlElement.printNode(xmlElement3, "city:New York");
    }
}
statement is: XmlElement.printNode(xmlElement1, "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement1, "John Doe") target is: XmlElement method is: printNode(java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: XmlElement xmlElement2 = new XmlElement("age", 30), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement.printNode(xmlElement2, "age:30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement2, "age:30") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
statement is: XmlElement xmlElement3 = new XmlElement("city", "New York"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement.printNode(xmlElement3, "city:New York"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement3, "city:New York") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
TestCase is: String string = "John Doe";
String string = null;
XmlElement.printNode((XmlElement) string, string);
String string = "age";
int _int = 30;
XmlElement xmlElement = new XmlElement(string, (String) _int);
String string = "age:30";
XmlElement.printNode(xmlElement, string);
String string = "city";
String string = "New York";
XmlElement xmlElement = new XmlElement(string, string);
String string = "city:New York";
XmlElement.printNode(xmlElement, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement")
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "com.allenstudio.ir.util.XmlElement")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
XmlElement.printNode(xmlElement, "com.allenstudio.ir.util.XmlElement");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("book", "title", "The Great Gatsby");
        xmlElement.addAttribute("author", "F. Scott Fitzgerald");
        XmlElement.printNode(xmlElement, "book");
    }
}
statement is: XmlElement xmlElement = new XmlElement("book", "title", "The Great Gatsby"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("author", "F. Scott Fitzgerald"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("author", "F. Scott Fitzgerald") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
statement is: XmlElement.printNode(xmlElement, "book"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement, "book") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: String string = "book";
String string = null;
XmlElement.printNode((XmlElement) string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(";JbxKt*qS i")
statement is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: XmlElement.printNode(arg0, "i!zb_<axeu<*PnvV.")
test data is: XmlElement xmlElement = new XmlElement("");
xmlElement.addSubElement(";JbxKt*qS i");
XmlElement.printNode(xmlElement, "i!zb_<axeu<*PnvV.");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("Test Element");
        xmlElement.addSubElement("Child Element 1");
        xmlElement.addSubElement("Child Element 2");
        XmlElement.printNode(xmlElement, "Parent Node");
    }
}
statement is: XmlElement xmlElement = new XmlElement("Test Element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("Child Element 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Child Element 1") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.addSubElement("Child Element 2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Child Element 2") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: XmlElement.printNode(xmlElement, "Parent Node"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: XmlElement.printNode(xmlElement, "Parent Node") target is: XmlElement method is: printNode(XmlElement,java.lang.String)
Matched Method is: printNode(Lcom/allenstudio/ir/util/XmlElement;Ljava/lang/String;)V
TestCase is: String string = "Test Element";
XmlElement xmlElement = new XmlElement(string);
String string = "Child Element 1";
((XmlElement) string).addSubElement(string);
String string = "Child Element 2";
((XmlElement) string).addSubElement(string);
String string = "Parent Node";
XmlElement.printNode(xmlElement, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@29ca2235 type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: xmlElement.attributes = null
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.attributes = Collections.emptyMap();
        xmlElement.clone();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.attributes = Collections.emptyMap(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.clone() target is: xmlElement method is: clone()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: clone()Ljava/lang/Object;
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.clone();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@34e6b15a type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.List<com.allenstudio.ir.util.XmlElement>
statement code is: xmlElement.subElements = null
statement is: clone()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement clone = (XmlElement)xmlElement.clone()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.subElements = new ArrayList<XmlElement>();
        xmlElement.subElements.add(new XmlElement("Child1", "Value1"));
        xmlElement.subElements.add(new XmlElement("Child2", "Value2"));
        xmlElement.clone();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.subElements = new ArrayList<XmlElement>(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.subElements.add(new XmlElement("Child1", "Value1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.subElements.add(new XmlElement("Child1", "Value1")) target is: xmlElement.subElements method is: add(XmlElement)
statement is: xmlElement.subElements.add(new XmlElement("Child2", "Value2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.subElements.add(new XmlElement("Child2", "Value2")) target is: xmlElement.subElements method is: add(XmlElement)
statement is: xmlElement.clone(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.clone() target is: xmlElement method is: clone()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: clone()Ljava/lang/Object;
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.clone();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement("root", "This is a sample XML element");
        XmlElement xmlElement2 = new XmlElement("child", "This is another sample XML element");
        xmlElement1.equals(xmlElement2);
    }
}
statement is: XmlElement xmlElement1 = new XmlElement("root", "This is a sample XML element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement xmlElement2 = new XmlElement("child", "This is another sample XML element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.equals(xmlElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.equals(xmlElement2) target is: xmlElement1 method is: equals(XmlElement)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("x_p-SH")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("x_p-SH");
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement1 = new XmlElement("x_p-SH");
        XmlElement xmlElement2 = new XmlElement("x_p-SH");
        assertTrue(xmlElement1.equals(xmlElement2));
    }
}
statement is: XmlElement xmlElement1 = new XmlElement("x_p-SH"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement xmlElement2 = new XmlElement("x_p-SH"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertTrue(xmlElement1.equals(xmlElement2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(xmlElement1.equals(xmlElement2)) target is:  method is: assertTrue(<unknown>)
TestCase is: String string = "x_p-SH";
XmlElement xmlElement = new XmlElement(string);
String string = "x_p-SH";
XmlElement xmlElement = new XmlElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals((Object) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.equals(((Object) ("This is a string")));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.equals(((Object) ("This is a string"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals(((Object) ("This is a string"))) target is: xmlElement method is: equals(java.lang.Object)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "This is a string";
xmlElement.equals(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals("x_p-oH")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.equals("x_p-oH");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.equals("x_p-oH");
        xmlElement.setName("myXmlElement");
        xmlElement.setAttribute("id", "1234567890");
        xmlElement.setTextContent("This is a test element.");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.equals("x_p-oH"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals("x_p-oH") target is: xmlElement method is: equals(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: xmlElement.setName("myXmlElement"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("myXmlElement") target is: xmlElement method is: setName(java.lang.String)
statement is: xmlElement.setAttribute("id", "1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("id", "1234567890") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.setTextContent("This is a test element."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setTextContent("This is a test element.") target is: xmlElement method is: setTextContent(java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "x_p-oH";
xmlElement.equals(string);

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("    ", "%jm")
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = hashtable.put("?H>}.{,7m", "    ")
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("/'+t}?[;E", arg1)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("    ", "%jm");
hashtable.put("?H>}.{,7m", "    ");
XmlElement xmlElement = new XmlElement("/'+t}?[;E", hashtable);
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        hashtable.put("key1", "This is a value 1");
        hashtable.put("key2", "This is a value 2");
        XmlElement xmlElement1 = new XmlElement("tagName1", hashtable);
        hashtable.clear();
        hashtable.put("key3", "This is a value 3");
        XmlElement xmlElement2 = new XmlElement("tagName2", hashtable);
        xmlElement1.equals(xmlElement2);
    }
}
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("key1", "This is a value 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("key1", "This is a value 1") target is: hashtable method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 0
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: hashtable.put("key2", "This is a value 2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("key2", "This is a value 2") target is: hashtable method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 0
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement1 = new XmlElement("tagName1", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.clear(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.clear() target is: hashtable method is: clear()
statement is: hashtable.put("key3", "This is a value 3"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("key3", "This is a value 3") target is: hashtable method is: put(java.lang.String,java.lang.String)
source statement: java.util.Hashtable()V callee: VariableReference: Statement 0, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 0
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: XmlElement xmlElement2 = new XmlElement("tagName2", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement1.equals(xmlElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement1.equals(xmlElement2) target is: xmlElement1 method is: equals(XmlElement)
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "key1";
String string = "This is a value 1";
hashtable.put(string, string);
String string = "key2";
String string = "This is a value 2";
hashtable.put(string, string);
String string = "tagName1";
XmlElement xmlElement = new XmlElement(string, hashtable);
String string = "key3";
String string = "This is a value 3";
hashtable.put(string, string);
String string = "tagName2";
XmlElement xmlElement = new XmlElement(string, hashtable);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("_aKX,", arg1)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("_aKX,", hashtable);
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("_aKX,", hashtable);
        xmlElement.equals(xmlElement);
        // Improved code
        XmlElement xmlElement = new XmlElement("myXmlElement", hashtable);
        xmlElement.equals(xmlElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement("_aKX,", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V
statement is: xmlElement.equals(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals(xmlElement) target is: xmlElement method is: equals(XmlElement)
statement is: // Improved code
XmlElement xmlElement = new XmlElement("myXmlElement", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.equals(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.equals(xmlElement) target is: xmlElement method is: equals(XmlElement)
* this is vulnerable: String string = "_aKX,"
TestCase is: String string = "_aKX,";
String string = "myXmlElement";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addElement(Lcom/allenstudio/ir/util/XmlElement;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addElement = xmlElement.addElement(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = xmlElement.equals(arg0)
test data is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addElement(xmlElement);
xmlElement.equals(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root", "value");
        XmlElement xmlElement2 = new XmlElement("child1", "value1");
        xmlElement.addElement(xmlElement2);
        assertEquals(true, xmlElement.equals(xmlElement2));
    }
}
statement is: XmlElement xmlElement = new XmlElement("root", "value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement xmlElement2 = new XmlElement("child1", "value1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addElement(xmlElement2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addElement(xmlElement2) target is: xmlElement method is: addElement(XmlElement)
statement is: assertEquals(true, xmlElement.equals(xmlElement2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(true, xmlElement.equals(xmlElement2)) target is:  method is: assertEquals(boolean,<unknown>)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@385ed58a type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: xmlElement.attributes = null
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.attributes = null;
        xmlElement.hashCode();
        // Improved test data
        xmlElement.attributes = Collections.singletonMap("key", "value");
        xmlElement.hashCode();
        // More descriptive example
        xmlElement.attributes = new HashMap<String, String>();
        xmlElement.attributes.put("key1", "value1");
        xmlElement.attributes.put("key2", "value2");
        xmlElement.hashCode();
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.attributes = null, class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: hashCode()I
statement is: // Improved test data
xmlElement.attributes = Collections.singletonMap("key", "value"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: hashCode()I
statement is: // More descriptive example
xmlElement.attributes = new HashMap<String, String>(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.attributes.put("key1", "value1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.attributes.put("key1", "value1") target is: xmlElement.attributes method is: put(java.lang.String,java.lang.String)
statement is: xmlElement.attributes.put("key2", "value2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.attributes.put("key2", "value2") target is: xmlElement.attributes method is: put(java.lang.String,java.lang.String)
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: hashCode()I
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();
xmlElement.hashCode();
xmlElement.hashCode();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@46859fbb type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.List<com.allenstudio.ir.util.XmlElement>
statement code is: xmlElement.subElements = null
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = xmlElement.hashCode()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XmlElement xmlElement = new XmlElement();
        xmlElement.subElements = Collections.singletonList(new XmlSubElement("subElement1", 1));
        xmlElement.hashCode();
    }
}
statement is: // Improved test data
XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.subElements = Collections.singletonList(new XmlSubElement("subElement1", 1)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.hashCode() target is: xmlElement method is: hashCode()
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: hashCode()I
TestCase is: XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttribute(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute(":n$#976<F$h6i")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute(":n$#976<F$h6i");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getAttribute("username");// get the value of the "username" attribute

        xmlElement.getAttribute("password");// get the value of the "password" attribute

        xmlElement.getAttribute("email");// get the value of the "email" attribute }}

    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("username")// get the value of the "username" attribute
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("username")// get the value of the "username" attribute
 target is: xmlElement method is: getAttribute(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.getAttribute("password")// get the value of the "password" attribute
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("password")// get the value of the "password" attribute
 target is: xmlElement method is: getAttribute(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;)Ljava/lang/String;
statement is: xmlElement.getAttribute("email")// get the value of the "email" attribute }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("email")// get the value of the "email" attribute }}
 target is: xmlElement method is: getAttribute(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;)Ljava/lang/String;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "username";
xmlElement.getAttribute(string);
String string = "password";
xmlElement.getAttribute(string);
String string = "email";
xmlElement.getAttribute(string);

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("$Ht`kyaWKxE SW", arg1)
statement is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setParent((XmlElement) null)
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("$Ht`kyaWKxE SW", hashtable);
xmlElement.setParent((XmlElement) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        hashtable.put("name", "Jane Smith");
        hashtable.put("age", "35");
        XmlElement xmlElement = new XmlElement("$Ht`kyaWKxE SW", hashtable);
        xmlElement.setParent(((XmlElement) (null)));
    }
}
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("name", "Jane Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("name", "Jane Smith") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("age", "35"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("age", "35") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: XmlElement xmlElement = new XmlElement("$Ht`kyaWKxE SW", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setParent(((XmlElement) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setParent(((XmlElement) (null))) target is: xmlElement method is: setParent(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: setParent(Lcom/allenstudio/ir/util/XmlElement;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "$Ht`kyaWKxE SW";
XmlElement xmlElement = new XmlElement(string, hashtable);
XmlElement xmlElement = null;
((XmlElement) string).setParent(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("!9_th5G]O^&")
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
statement is: setAttributes(Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setAttributes(arg0)
test data is: XmlElement xmlElement = new XmlElement("!9_th5G]O^&");
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("<book>");
        Hashtable<String, String> attributes = new Hashtable<>();
        attributes.put("title", "The Great Gatsby");
        attributes.put("author", "F. Scott Fitzgerald");
        xmlElement.setAttributes(attributes);
    }
}
statement is: XmlElement xmlElement = new XmlElement("<book>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> attributes = new Hashtable<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributes.put("title", "The Great Gatsby"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes.put("title", "The Great Gatsby") target is: attributes method is: put(java.lang.String,java.lang.String)
statement is: attributes.put("author", "F. Scott Fitzgerald"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes.put("author", "F. Scott Fitzgerald") target is: attributes method is: put(java.lang.String,java.lang.String)
statement is: xmlElement.setAttributes(attributes), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttributes(attributes) target is: xmlElement method is: setAttributes(Hashtable)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: setAttributes(Ljava/util/Hashtable;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "<book>";
XmlElement xmlElement = new XmlElement(string);
Hashtable<String, String> hashtable = null;
((XmlElement) string).setAttributes(hashtable);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int someInteger = 5;
        double someDouble = 3.14;
        String someString = "Hello, World!";
        char someChar = 'a';
        xmlElement.setData(someInteger, someDouble, someString, someChar);
    }
}
statement is: // Improved test data
int someInteger = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double someDouble = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String someString = "Hello, World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char someChar = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: xmlElement.setData(someInteger, someDouble, someString, someChar), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setData(someInteger, someDouble, someString, someChar) target is: xmlElement method is: setData(int,double,java.lang.String,char)
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello, World!"
* this is vulnerable: char _char = 'a'
TestCase is: int _int = 5;
double _double = 3.14;
String string = "Hello, World!";
char _char = 'a';

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("{X~*#x2j9t;3%y", arg1)
statement is: getElements()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List elements = xmlElement.getElements()
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("{X~*#x2j9t;3%y", hashtable);
xmlElement.getElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        hashtable.put("key1", "value1");
        hashtable.put("key2", "value2");
        XmlElement xmlElement = new XmlElement("element", hashtable);
        xmlElement.getElements();
    }
}
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("key1", "value1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("key1", "value1") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("key2", "value2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("key2", "value2") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: XmlElement xmlElement = new XmlElement("element", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getElements(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElements() target is: xmlElement method is: getElements()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getElements()Ljava/util/List;
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "element";
XmlElement xmlElement = new XmlElement(string, hashtable);
((XmlElement) string).getElements();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "")
statement is: setData(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.setData("")
test data is: XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.setData("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
        xmlElement.setData("This is a sample XML element with some data.");
    }
}
statement is: XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setData("This is a sample XML element with some data."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setData("This is a sample XML element with some data.") target is: xmlElement method is: setData(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: setData(Ljava/lang/String;)V
TestCase is: String string = "+>MBvPZAZ!tlp";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
String string = "This is a sample XML element with some data.";
((XmlElement) string).setData(string);

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", arg1)
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        hashtable.put("name", "John Doe");
        hashtable.put("age", "thirty");
        hashtable.put("gender", "male");
        XmlElement xmlElement = new XmlElement("", hashtable);
        String expectedResult = "John Doe";
        assertEquals(expectedResult, xmlElement.getName());
    }
}
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("name", "John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("name", "John Doe") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("age", "thirty"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("age", "thirty") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("gender", "male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("gender", "male") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: XmlElement xmlElement = new XmlElement("", hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String expectedResult = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedResult, xmlElement.getName()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedResult, xmlElement.getName()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "John Doe"
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
String string = "";
XmlElement xmlElement = new XmlElement(string, hashtable);
String string = "John Doe";

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: removeFromParent()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.removeFromParent()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("my-element", "This is a sample element");
        xmlElement.addChild(new XmlText("This is some text content"));
        xmlElement.setAttribute("id", "unique_identifier");
    }
}
statement is: XmlElement xmlElement = new XmlElement("my-element", "This is a sample element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addChild(new XmlText("This is some text content")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addChild(new XmlText("This is some text content")) target is: xmlElement method is: addChild(XmlText)
statement is: xmlElement.setAttribute("id", "unique_identifier"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAttribute("id", "unique_identifier") target is: xmlElement method is: setAttribute(java.lang.String,java.lang.String)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]")
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(arg0)
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("<hV-X{c96}VuB?cO|]")
test data is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement("<hV-X{c96}VuB?cO|]");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.setId("12345");
        xmlElement.setName("John Doe");
        xmlElement.setAge(30);
        xmlElement.setGender("male");
        XmlElement subElement = new XmlElement();
        subElement.setId("67890");
        subElement.setName("Jane Doe");
        subElement.setAge(25);
        subElement.setGender("female");
        xmlElement.addSubElement(subElement);
        XmlElement subSubElement = new XmlElement();
        subSubElement.setId("90123");
        subSubElement.setName("Jim Brown");
        subSubElement.setAge(45);
        subSubElement.setGender("male");
        subElement.addSubElement(subSubElement);
        XmlElement element = xmlElement.getElement("<hV-X{c96}VuB?cO|>");
        assertEquals(xmlElement, element);
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.setId("12345"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setId("12345") target is: xmlElement method is: setId(java.lang.String)
statement is: xmlElement.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setName("John Doe") target is: xmlElement method is: setName(java.lang.String)
statement is: xmlElement.setAge(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setAge(30) target is: xmlElement method is: setAge(int)
statement is: xmlElement.setGender("male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.setGender("male") target is: xmlElement method is: setGender(java.lang.String)
statement is: XmlElement subElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: subElement.setId("67890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subElement.setId("67890") target is: subElement method is: setId(java.lang.String)
statement is: subElement.setName("Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subElement.setName("Jane Doe") target is: subElement method is: setName(java.lang.String)
statement is: subElement.setAge(25), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subElement.setAge(25) target is: subElement method is: setAge(int)
statement is: subElement.setGender("female"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subElement.setGender("female") target is: subElement method is: setGender(java.lang.String)
statement is: xmlElement.addSubElement(subElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(subElement) target is: xmlElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: XmlElement subSubElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: subSubElement.setId("90123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subSubElement.setId("90123") target is: subSubElement method is: setId(java.lang.String)
statement is: subSubElement.setName("Jim Brown"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subSubElement.setName("Jim Brown") target is: subSubElement method is: setName(java.lang.String)
statement is: subSubElement.setAge(45), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subSubElement.setAge(45) target is: subSubElement method is: setAge(int)
statement is: subSubElement.setGender("male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subSubElement.setGender("male") target is: subSubElement method is: setGender(java.lang.String)
statement is: subElement.addSubElement(subSubElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: subElement.addSubElement(subSubElement) target is: subElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 3
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: XmlElement element = xmlElement.getElement("<hV-X{c96}VuB?cO|>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("<hV-X{c96}VuB?cO|>") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 3
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: assertEquals(xmlElement, element), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xmlElement, element) target is:  method is: assertEquals(<unknown>,<unknown>)
TestCase is: XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
String string = "<hV-X{c96}VuB?cO|>";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:")
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = hashtable.put("0(r]5!:", "\"KsjnpC?[W)v&q")
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String addAttribute = (String)xmlElement.addAttribute("0(r]5!:", "0(r]5!:")
test data is: XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
xmlElement.addAttribute("0(r]5!:", "0(r]5!:");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("name", "John Doe");
        Hashtable<String, String> attributes = xmlElement.getAttributes();
        attributes.put("age", "25");
        xmlElement.addAttribute("gender", "male");
    }
}
statement is: XmlElement xmlElement = new XmlElement("name", "John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> attributes = xmlElement.getAttributes(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttributes()Ljava/util/Hashtable;
statement is: attributes.put("age", "25"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes.put("age", "25") target is: attributes method is: put(java.lang.String,java.lang.String)
source statement: getAttributes()Ljava/util/Hashtable; callee: VariableReference: Statement 1, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 3
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: xmlElement.addAttribute("gender", "male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("gender", "male") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
TestCase is: String string = "name";
String string = "John Doe";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getAttributes();
String string = "age";
String string = "25";
((Hashtable) string).put(string, string);
String string = "gender";
String string = "male";
((XmlElement) string).addAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: mock(interface java.util.Observer) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.util.Observer
statement code is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer())
statement is: addObserver(Ljava/util/Observer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xmlElement.addObserver(arg0)
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
test data is: XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
        xmlElement.addObserver(observer);
        xmlElement.addSubElement(new XmlElement("child-element", "child element value"));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Observer.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Observer argument is: Observer.class
Matched Method is: mock(interface java.util.Observer)
statement is: xmlElement.addObserver(observer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addObserver(observer) target is: xmlElement method is: addObserver(Observer)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addObserver(Ljava/util/Observer;)V
statement is: xmlElement.addSubElement(new XmlElement("child-element", "child element value")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(new XmlElement("child-element", "child element value")) target is: xmlElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
XmlElement xmlElement = null;
xmlElement.addSubElement(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "[XNNS:")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(" = '")
statement is: count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int count = xmlElement.count()
test data is: XmlElement xmlElement = new XmlElement("", "[XNNS:");
xmlElement.addSubElement(" = '");
xmlElement.count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("", "http://example.com/");
        xmlElement.addSubElement("name=\"John\"");
        xmlElement.count();
    }
}
statement is: XmlElement xmlElement = new XmlElement("", "http://example.com/"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("name=\"John\""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("name=\"John\"") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.count() target is: xmlElement method is: count()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: count()I
TestCase is: String string = "";
String string = "http://example.com/";
XmlElement xmlElement = new XmlElement(string, string);
String string = "name=\"John\"";
((XmlElement) string).addSubElement(string);
((XmlElement) string).count();

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute(">sbd2", "")
statement is: getAttribute(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute(">sbd2")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute(">sbd2", "");
xmlElement.getAttribute(">sbd2");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xmlElement = new XmlElement();
        xmlElement.addAttribute("sbd2", "2023-02-27T15:48:06+0000");
        xmlElement.getAttribute("sbd2");
    }
}
statement is: xmlElement = new XmlElement(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.addAttribute("sbd2", "2023-02-27T15:48:06+0000"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("sbd2", "2023-02-27T15:48:06+0000") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
statement is: xmlElement.getAttribute("sbd2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("sbd2") target is: xmlElement method is: getAttribute(java.lang.String)
statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object addAttribute = xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement")
statement is: getAttribute(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement")
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
        xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement") target is: xmlElement method is: addAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
statement is: xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement") target is: xmlElement method is: getAttribute(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;)Ljava/lang/String;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "com.allenstudio.ir.util.XmlElement";
String string = "com.allenstudio.ir.util.XmlElement";
xmlElement.addAttribute(string, string);
String string = "com.allenstudio.ir.util.XmlElement";
xmlElement.getAttribute(string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("<C_FCR")
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("", "")
test data is: XmlElement xmlElement = new XmlElement("<C_FCR");
xmlElement.getAttribute("", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("<C_FCR");
        xmlElement.getAttribute("customerId", "123456789");
        // Improved test data
        XmlElement xmlElement = new XmlElement("<C_FCR");
        xmlElement.getAttribute("customerId", "ABC-1234");
    }
}
statement is: XmlElement xmlElement = new XmlElement("<C_FCR"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("customerId", "123456789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("customerId", "123456789") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
statement is: // Improved test data
XmlElement xmlElement = new XmlElement("<C_FCR"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("customerId", "ABC-1234"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("customerId", "ABC-1234") target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 6
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "<C_FCR";
XmlElement xmlElement = new XmlElement(string);
String string = "customerId";
String string = "123456789";
((XmlElement) string).getAttribute(string, string);
String string = "<C_FCR";
XmlElement xmlElement = new XmlElement(string);
String string = "customerId";
String string = "ABC-1234";
((XmlElement) string).getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String attribute = xmlElement.getAttribute("BRW[", (String) null)
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("BRW[", (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.getAttribute("BRW[", ((String) (null)));
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttribute("BRW[", ((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttribute("BRW[", ((String) (null))) target is: xmlElement method is: getAttribute(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "BRW[";
String string = null;
xmlElement.getAttribute(string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:")
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = hashtable.put("0(r]5!:", "\"KsjnpC?[W)v&q")
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
test data is: XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
xmlElement.getAttributes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
        Hashtable<String, String> attributes = xmlElement.getAttributes();
        attributes.put("0(r]5!:", "\"\u007fKsjnpC?[W)v&q");
        xmlElement.getAttributes();
    }
}
statement is: XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<String, String> attributes = xmlElement.getAttributes(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttributes()Ljava/util/Hashtable;
statement is: attributes.put("0(r]5!:", "\"\u007fKsjnpC?[W)v&q"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributes.put("0(r]5!:", "\"\u007fKsjnpC?[W)v&q") target is: attributes method is: put(java.lang.String,java.lang.String)
source statement: getAttributes()Ljava/util/Hashtable; callee: VariableReference: Statement 1, type java.util.Hashtable<java.lang.String, java.lang.String>index is: 3
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: xmlElement.getAttributes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getAttributes()Ljava/util/Hashtable;
TestCase is: String string = "0(r]5!:";
String string = "0(r]5!:";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getAttributes();
String string = "0(r]5!:";
String string = "\"KsjnpC?[W)v&q";
((Hashtable) string).put(string, string);
((XmlElement) string).getAttributes();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("0(j**FiD_", (Hashtable<String, String>) null)
statement is: getAttributes()Ljava/util/Hashtable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> attributes = xmlElement.getAttributes()
test data is: XmlElement xmlElement = new XmlElement("0(j**FiD_", (Hashtable<String, String>) null);
xmlElement.getAttributes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        // Improved test data: using more descriptive and representative values for the primitive variables and strings
        XmlElement xmlElement = new XmlElement("0(j**FiD_", ((Hashtable<String, String>) (null)));
        xmlElement.getAttributes();
    }
}
statement is: // Improved test data: using more descriptive and representative values for the primitive variables and strings
XmlElement xmlElement = new XmlElement("0(j**FiD_", ((Hashtable<String, String>) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getAttributes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getAttributes() target is: xmlElement method is: getAttributes()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getAttributes()Ljava/util/Hashtable;
TestCase is: String string = "0(j**FiD_";
XmlElement xmlElement = new XmlElement(string, (Hashtable<String, String>) null);
((XmlElement) string).getAttributes();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("")
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
        XmlElement addSubElement = xmlElement.addSubElement("test-element");
        addSubElement.getData();
    }
}
statement is: XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("test-element"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("test-element") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.getData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.getData() target is: addSubElement method is: getData()
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: getData()Ljava/lang/String;
TestCase is: String string = "ev*Ol-.ro&ec1'&zr";
String string = "PF2.Ejnve6 4fRLO";
XmlElement xmlElement = new XmlElement(string, string);
String string = "test-element";
((XmlElement) string).addSubElement(string);
((XmlElement) string).getData();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"")
statement is: getData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String data = xmlElement.getData()
test data is: XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"");
xmlElement.getData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"");
        xmlElement.getData();
        // Original test data
        /* XmlElement xmlElement = new XmlElement("", "");
        xmlElement.getData();
         */
    }
}
statement is: // Improved test data
XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getData() target is: xmlElement method is: getData()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getData()Ljava/lang/String;
statement is: // Original test data, class spoon.support.reflect.code.CtCommentImpl
statement is: /* XmlElement xmlElement = new XmlElement("", "");
xmlElement.getData();
 */, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "{l0[SR7^RJ~F\"$\"";
String string = "{l0[SR7^RJ~F\"$\"";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getData();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("?W>jloJ$")
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.addSubElement(arg0)
statement is: getElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(0)
test data is: XmlElement xmlElement = new XmlElement("?W>jloJ$");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("<root><child/></root>");
        xmlElement.addSubElement(xmlElement);
        xmlElement.getElement(0);
    }
}
statement is: XmlElement xmlElement = new XmlElement("<root><child/></root>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement(xmlElement) target is: xmlElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement(0) target is: xmlElement method is: getElement(int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: String string = "<root><child/></root>";
XmlElement xmlElement = new XmlElement(string);
((XmlElement) string).addSubElement(xmlElement);
int _int = 0;
((XmlElement) string).getElement(_int);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("?W>jloJ$")
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("?W>jloJ$", "?W>jloJ$")
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(arg0)
statement is: getElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement(0)
test data is: XmlElement xmlElement = new XmlElement("?W>jloJ$");
XmlElement xmlElement = new XmlElement("?W>jloJ$", "?W>jloJ$");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement root = new XmlElement("root");
        root.addSubElement(new XmlElement("child1", "This is child1"));
        root.getElement(0).addSubElement(new XmlElement("grandchild1", "This is grandchild1"));
        root.getElement(0).getElement(0).addSubElement(new XmlElement("great-grandchild1", "This is great-grandchild1"));
    }
}
statement is: XmlElement root = new XmlElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: root.addSubElement(new XmlElement("child1", "This is child1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: root.addSubElement(new XmlElement("child1", "This is child1")) target is: root method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
statement is: root.getElement(0).addSubElement(new XmlElement("grandchild1", "This is grandchild1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: root.getElement(0).addSubElement(new XmlElement("grandchild1", "This is grandchild1")) target is: root.getElement(0) method is: addSubElement(XmlElement)
statement is: root.getElement(0).getElement(0).addSubElement(new XmlElement("great-grandchild1", "This is great-grandchild1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: root.getElement(0).getElement(0).addSubElement(new XmlElement("great-grandchild1", "This is great-grandchild1")) target is: root.getElement(0).getElement(0) method is: addSubElement(XmlElement)
TestCase is: String string = "root";
XmlElement xmlElement = new XmlElement(string);
String string = "child1";
String string = "This is child1";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).addSubElement(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR")
statement is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement element = xmlElement.getElement("~.D_CXu%GR")
test data is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR");
addSubElement.addSubElement("~.D_CXu%GR");
xmlElement.getElement("~.D_CXu%GR");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        XmlElement addSubElement = xmlElement.addSubElement("root");
        addSubElement.addSubElement("child1");
        xmlElement.getElement("child1");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("root") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.addSubElement("child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addSubElement("child1") target is: addSubElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.getElement("child1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElement("child1") target is: xmlElement method is: getElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement()V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 0
Matched Method is: getElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: XmlElement xmlElement = new XmlElement();
String string = "root";
xmlElement.addSubElement(string);
String string = "child1";
xmlElement.addSubElement(string);
String string = "child1";
xmlElement.getElement(string);

statement is: com.allenstudio.ir.util.XmlElement()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement()
statement is: org.evosuite.testcase.statements.AssignmentStatement@e11b3c type is: class org.evosuite.testcase.statements.AssignmentStatement return type java.util.List<com.allenstudio.ir.util.XmlElement>
statement code is: xmlElement.subElements = null
statement is: getElements()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List elements = xmlElement.getElements()
test data is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.getElements();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement();
        xmlElement.subElements = new ArrayList<>();
        xmlElement.getElements("element1", "element2");
    }
}
statement is: XmlElement xmlElement = new XmlElement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.subElements = new ArrayList<>(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.getElements("element1", "element2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getElements("element1", "element2") target is: xmlElement method is: getElements(java.lang.String,java.lang.String)
TestCase is: XmlElement xmlElement = new XmlElement();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO")
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
xmlElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("EVOLVE-OLD.ROCKET&EC1'&ZR", "PF2.EJNV*E6 4FRLO");
        xmlElement.getName();
    }
}
statement is: XmlElement xmlElement = new XmlElement("EVOLVE-OLD.ROCKET&EC1'&ZR", "PF2.EJNV*E6 4FRLO"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getName() target is: xmlElement method is: getName()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: getName()Ljava/lang/String;
TestCase is: String string = "EVOLVE-OLD.ROCKET&EC1'&ZR";
String string = "PF2.EJNV*E6 4FRLO";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).getName();

statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.String, java.lang.String>
statement code is: Hashtable<String, String> hashtable = new Hashtable<String, String>()
statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement((String) null, arg1)
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = xmlElement.getName()
test data is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement((String) null, hashtable);
xmlElement.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Hashtable<String, String> hashtable = new Hashtable<String, String>();
        hashtable.put("name", "Jane Smith");
        hashtable.put("age", "35");
        hashtable.put("city", "New York");
        XmlElement xmlElement = new XmlElement(((String) (null)), hashtable);
        xmlElement.getName();
    }
}
statement is: Hashtable<String, String> hashtable = new Hashtable<String, String>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("name", "Jane Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("name", "Jane Smith") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("age", "35"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("age", "35") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("city", "New York"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("city", "New York") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: XmlElement xmlElement = new XmlElement(((String) (null)), hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.getName() target is: xmlElement method is: getName()
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/util/Hashtable;)V callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: getName()Ljava/lang/String;
TestCase is: Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement(hashtable, hashtable);
xmlElement.getName();

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL")
statement is: org.evosuite.testcase.statements.AssignmentStatement@e0badf88 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: xmlElement.parent = xmlElement
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = arg0.parent.addSubElement(arg0)
statement is: getParent()Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement parent = xmlElement.parent.getParent()
test data is: XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL");
xmlElement.parent = xmlElement;
xmlElement.parent.addSubElement(xmlElement);
xmlElement.parent.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL");
        xmlElement.parent = xmlElement;
        xmlElement.parent.addSubElement(xmlElement);
        xmlElement.parent.getParent();
    }
}
statement is: XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.parent = xmlElement, class spoon.support.reflect.code.CtAssignmentImpl
statement is: xmlElement.parent.addSubElement(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.parent.addSubElement(xmlElement) target is: xmlElement.parent method is: addSubElement(XmlElement)
statement is: xmlElement.parent.getParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.parent.getParent() target is: xmlElement.parent method is: getParent()
TestCase is: String string = "e%XH6xEAjU3h3>>MFeL";
String string = "e%XH6xEAjU3h3>>MFeL";
XmlElement xmlElement = new XmlElement(string, string);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("")
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("", "*a7wqu!UQ%")
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement("", "")
statement is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(0)
test data is: XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement("", "*a7wqu!UQ%");
addSubElement.addSubElement("", "");
xmlElement.removeElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root");
        XmlElement addSubElement = xmlElement.addSubElement("child1", "This is a test string for child 1.");
        addSubElement.addSubElement("child2", "This is another test string for child 2.");
        xmlElement.removeElement(0);
    }
}
statement is: XmlElement xmlElement = new XmlElement("root"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("child1", "This is a test string for child 1."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("child1", "This is a test string for child 1.") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.addSubElement("child2", "This is another test string for child 2."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addSubElement("child2", "This is another test string for child 2.") target is: addSubElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
source statement: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.removeElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(0) target is: xmlElement method is: removeElement(int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 1
Matched Method is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: String string = "root";
XmlElement xmlElement = new XmlElement(string);
String string = "child1";
String string = "This is a test string for child 1.";
((XmlElement) string).addSubElement(string, string);
String string = "child2";
String string = "This is another test string for child 2.";
((XmlElement) string).addSubElement(string, string);
int _int = 0;
((XmlElement) string).removeElement(_int);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw")
statement is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement((String) null, "F@=ya}xT")
statement is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(0)
test data is: XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw");
xmlElement.addSubElement((String) null, "F@=ya}xT");
xmlElement.removeElement(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw");
        xmlElement.addSubElement("subelement1", "F@=ya}xT");
        xmlElement.removeElement(0);
    }
}
statement is: XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.addSubElement("subelement1", "F@=ya}xT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("subelement1", "F@=ya}xT") target is: xmlElement method is: addSubElement(java.lang.String,java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: xmlElement.removeElement(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.removeElement(0) target is: xmlElement method is: removeElement(int)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: removeElement(I)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: String string = "y:m~@`Kw";
String string = "y:m~@`Kw";
XmlElement xmlElement = new XmlElement(string, string);
String string = "subelement1";
String string = "F@=ya}xT";
((XmlElement) string).addSubElement(string, string);
int _int = 0;
((XmlElement) string).removeElement(_int);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("", "[XNNS:")
statement is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(" = '")
statement is: addSubElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement addSubElement = xmlElement.addSubElement(arg0)
statement is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement removeElement = xmlElement.removeElement(arg0)
test data is: XmlElement xmlElement = new XmlElement("", "[XNNS:");
XmlElement addSubElement = xmlElement.addSubElement(" = '");
addSubElement.addSubElement(xmlElement);
addSubElement.removeElement(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("", "XML");
        XmlElement addSubElement = xmlElement.addSubElement("Version: 1.0");
        addSubElement.addSubElement(xmlElement);
        addSubElement.removeElement(xmlElement);
    }
}
statement is: XmlElement xmlElement = new XmlElement("", "XML"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: XmlElement addSubElement = xmlElement.addSubElement("Version: 1.0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.addSubElement("Version: 1.0") target is: xmlElement method is: addSubElement(java.lang.String)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.addSubElement(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.addSubElement(xmlElement) target is: addSubElement method is: addSubElement(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement;
statement is: addSubElement.removeElement(xmlElement), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addSubElement.removeElement(xmlElement) target is: addSubElement method is: removeElement(XmlElement)
source statement: addSubElement(Ljava/lang/String;)Lcom/allenstudio/ir/util/XmlElement; callee: VariableReference: Statement 1, type com.allenstudio.ir.util.XmlElementindex is: 4
Matched Method is: removeElement(Lcom/allenstudio/ir/util/XmlElement;)Lcom/allenstudio/ir/util/XmlElement;
TestCase is: String string = "";
String string = "XML";
XmlElement xmlElement = new XmlElement(string, string);
String string = "Version: 1.0";
((XmlElement) string).addSubElement(string);
((XmlElement) string).addSubElement((String) xmlElement);
((XmlElement) string).removeElement(xmlElement);

statement is: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.allenstudio.ir.util.XmlElement
statement code is: XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "")
statement is: append(Lcom/allenstudio/ir/util/XmlElement;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.append(arg0)
test data is: XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.append(xmlElement);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XmlElement xmlElement = new XmlElement("root", "");
        xmlElement.append(new XmlElement("child1", "value1"));
        xmlElement.append(new XmlElement("child2", "value2"));
    }
}
statement is: XmlElement xmlElement = new XmlElement("root", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xmlElement.append(new XmlElement("child1", "value1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.append(new XmlElement("child1", "value1")) target is: xmlElement method is: append(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: append(Lcom/allenstudio/ir/util/XmlElement;)V
statement is: xmlElement.append(new XmlElement("child2", "value2")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xmlElement.append(new XmlElement("child2", "value2")) target is: xmlElement method is: append(XmlElement)
source statement: com.allenstudio.ir.util.XmlElement(Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.allenstudio.ir.util.XmlElementindex is: 2
Matched Method is: append(Lcom/allenstudio/ir/util/XmlElement;)V
TestCase is: String string = "root";
String string = "";
XmlElement xmlElement = new XmlElement(string, string);
String string = "child1";
String string = "value1";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).append(xmlElement);
String string = "child2";
String string = "value2";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).append(xmlElement);

* test suite isTestSuite: 121
Test 0: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 3: 
XmlElement xmlElement = new XmlElement("!9_th5G]O^&", "!9_th5G]O^&");
xmlElement.hashCode();
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);
Test 7: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("?H>}.{,7m", hashtable);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 8: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.getElements();
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("");
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "");
Test 12: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("/&xMbM5", "/&xMbM5");
xmlElement.getAttribute("/&xMbM5", "3pJ");
Test 13: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("(");
addSubElement.removeFromParent();
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".cK.R=hB2P:K4a|a:g<");
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("\":~g\"");
xmlElement.getElement(".n$\"rUN]$\"");
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("~.D_CXu%GR");
XmlElement clone = (XmlElement)xmlElement.clone();
clone.addSubElement("~.D_CXu%GR");
Test 19: 
XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]", "<hV-X{c96}VuB?cO|]");
XmlElement.printNode(xmlElement, "<hV-X{c96}VuB?cO|]");
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
XmlElement.printNode(xmlElement, "com.allenstudio.ir.util.XmlElement");
Test 21: 
XmlElement xmlElement = new XmlElement("");
xmlElement.addSubElement(";JbxKt*qS i");
XmlElement.printNode(xmlElement, "i!zb_<axeu<*PnvV.");
Test 22: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.clone();
Test 23: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 24: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 25: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("x_p-SH");
xmlElement.equals(xmlElement);
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 27: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("x_p-oH");
Test 28: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("    ", "%jm");
hashtable.put("?H>}.{,7m", "    ");
XmlElement xmlElement = new XmlElement("/'+t}?[;E", hashtable);
xmlElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("_aKX,", hashtable);
xmlElement.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addElement(xmlElement);
xmlElement.equals(xmlElement);
Test 31: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();
Test 32: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 33: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute(":n$#976<F$h6i");
Test 34: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("$Ht`kyaWKxE SW", hashtable);
xmlElement.setParent((XmlElement) null);
Test 35: 
XmlElement xmlElement = new XmlElement("!9_th5G]O^&");
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);
Test 36: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 37: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("{X~*#x2j9t;3%y", hashtable);
xmlElement.getElements();
Test 38: 
XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.setData("");
Test 39: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getName();
Test 40: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 41: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement("<hV-X{c96}VuB?cO|]");
Test 42: 
XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
xmlElement.addAttribute("0(r]5!:", "0(r]5!:");
Test 43: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 44: 
XmlElement xmlElement = new XmlElement("", "[XNNS:");
xmlElement.addSubElement(" = '");
xmlElement.count();
Test 45: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute(">sbd2", "");
xmlElement.getAttribute(">sbd2");
Test 46: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");
Test 47: 
XmlElement xmlElement = new XmlElement("<C_FCR");
xmlElement.getAttribute("", "");
Test 48: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("BRW[", (String) null);
Test 49: 
XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
xmlElement.getAttributes();
Test 50: 
XmlElement xmlElement = new XmlElement("0(j**FiD_", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 51: 
XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.getData();
Test 52: 
XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"");
xmlElement.getData();
Test 53: 
XmlElement xmlElement = new XmlElement("?W>jloJ$");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement(0);
Test 54: 
XmlElement xmlElement = new XmlElement("?W>jloJ$");
XmlElement xmlElement = new XmlElement("?W>jloJ$", "?W>jloJ$");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement(0);
Test 55: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR");
addSubElement.addSubElement("~.D_CXu%GR");
xmlElement.getElement("~.D_CXu%GR");
Test 56: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.getElements();
Test 57: 
XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
xmlElement.getName();
Test 58: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement((String) null, hashtable);
xmlElement.getName();
Test 59: 
XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL");
xmlElement.parent = xmlElement;
xmlElement.parent.addSubElement(xmlElement);
xmlElement.parent.getParent();
Test 60: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement("", "*a7wqu!UQ%");
addSubElement.addSubElement("", "");
xmlElement.removeElement(0);
Test 61: 
XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw");
xmlElement.addSubElement((String) null, "F@=ya}xT");
xmlElement.removeElement(0);
Test 62: 
XmlElement xmlElement = new XmlElement("", "[XNNS:");
XmlElement addSubElement = xmlElement.addSubElement(" = '");
addSubElement.addSubElement(xmlElement);
addSubElement.removeElement(xmlElement);
Test 63: 
XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.append(xmlElement);
Test 64: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();

Test 65: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();

Test 66: 
XmlElement xmlElement = new XmlElement("MyXmlElement", "This is a test XML element.");
((XmlElement)"MyXmlElement").hashCode();

Test 67: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
xmlElement.getParent();

Test 68: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();

Test 69: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, (int) "beginning");

Test 70: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement((XmlElement) "firstChildElement");
String string = "secondChildElement";
xmlElement.addSubElement((XmlElement) string);

Test 71: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("book");

Test 72: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("name", "value");

Test 73: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234567890");
xmlElement.addAttribute("name", "John Doe");
xmlElement.addAttribute("age", "30");
xmlElement.addAttribute("gender", "male");

Test 74: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234567890");
xmlElement.getAttribute("id", "abcdefghijklmnopqrstuvwxyz");

Test 75: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("<sub-element name=\"John Doe\"><age>30</age></sub-element>");
xmlElement.removeElement((XmlElement) "sub-element");

Test 76: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("Employee");
((XmlElement)"Employee").removeFromParent();

Test 77: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("This is a sample sub-element with a more descriptive value to test the addition of a sub-element.");

Test 78: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("This is a test string for the addSubElement method.");
xmlElement.getElement("This is a test string for the getElement method.");

Test 79: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("A unique element name");
xmlElement.clone();
xmlElement.addSubElement("Another unique element name");

Test 80: 
XmlElement.printNode((XmlElement) "John Doe", (String) null);
String string = "age";
int _int = 30;
XmlElement xmlElement = new XmlElement(string, (String) _int);
String string = "age:30";
XmlElement.printNode(xmlElement, string);
String string = "city";
String string = "New York";
XmlElement xmlElement = new XmlElement(string, string);
String string = "city:New York";
XmlElement.printNode(xmlElement, string);

Test 81: 
XmlElement.printNode((XmlElement) "book", (String) null);

Test 82: 
String string = "Test Element";
XmlElement xmlElement = new XmlElement("Test Element");
((XmlElement)"Test Element").addSubElement("Child Element 1");
String string = "Child Element 2";
((XmlElement) string).addSubElement(string);
String string = "Parent Node";
XmlElement.printNode(xmlElement, string);

Test 83: 
XmlElement xmlElement = new XmlElement();
xmlElement.clone();

Test 84: 
XmlElement xmlElement = new XmlElement();
xmlElement.clone();

Test 85: 
XmlElement xmlElement = new XmlElement("x_p-SH");
XmlElement xmlElement = new XmlElement("x_p-SH");

Test 86: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("This is a string");

Test 87: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("x_p-oH");

Test 88: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("key1", "This is a value 1");
hashtable.put("key2", "This is a value 2");
XmlElement xmlElement = new XmlElement("tagName1", hashtable);
String string = "key3";
String string = "This is a value 3";
hashtable.put(string, string);
String string = "tagName2";
XmlElement xmlElement = new XmlElement(string, hashtable);

Test 89: 
XmlElement xmlElement = new XmlElement("myXmlElement", (Hashtable<String, String>) "myXmlElement");

Test 90: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();
xmlElement.hashCode();
xmlElement.hashCode();

Test 91: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 92: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("username");
xmlElement.getAttribute("password");
xmlElement.getAttribute("email");

Test 93: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("$Ht`kyaWKxE SW", hashtable);
((XmlElement)"$Ht`kyaWKxE SW").setParent((XmlElement) null);

Test 94: 
XmlElement xmlElement = new XmlElement("<book>");
((XmlElement)"<book>").setAttributes((Hashtable<String, String>) null);

Test 95: 

Test 96: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("element", hashtable);
((XmlElement)"element").getElements();

Test 97: 
XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
((XmlElement)"+>MBvPZAZ!tlp").setData("This is a sample XML element with some data.");

Test 98: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);

Test 99: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.getElement("<hV-X{c96}VuB?cO|>");

Test 100: 
String string = "name";
String string = "John Doe";
XmlElement xmlElement = new XmlElement("name", "John Doe");
((XmlElement)"name").getAttributes();
String string = "age";
String string = "25";
((Hashtable) string).put(string, string);
String string = "gender";
String string = "male";
((XmlElement) string).addAttribute(string, string);

Test 101: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement((XmlElement) null);

Test 102: 
String string = "";
XmlElement xmlElement = new XmlElement("", "http://example.com/");
((XmlElement)"").addSubElement("name=\"John\"");
((XmlElement) string).count();

Test 103: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");

Test 104: 
String string = "<C_FCR";
XmlElement xmlElement = new XmlElement("<C_FCR");
((XmlElement)"<C_FCR").getAttribute("customerId", "123456789");
String string = "<C_FCR";
XmlElement xmlElement = new XmlElement(string);
String string = "customerId";
String string = "ABC-1234";
((XmlElement) string).getAttribute(string, string);

Test 105: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("BRW[", (String) null);

Test 106: 
String string = "0(r]5!:";
String string = "0(r]5!:";
XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
((XmlElement)"0(r]5!:").getAttributes();
String string = "0(r]5!:";
String string = "\"KsjnpC?[W)v&q";
((Hashtable) string).put(string, string);
((XmlElement) string).getAttributes();

Test 107: 
XmlElement xmlElement = new XmlElement("0(j**FiD_", (Hashtable<String, String>) null);
((XmlElement)"0(j**FiD_").getAttributes();

Test 108: 
String string = "PF2.Ejnve6 4fRLO";
XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
((XmlElement)"ev*Ol-.ro&ec1'&zr").addSubElement("test-element");
((XmlElement) string).getData();

Test 109: 
XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"");
((XmlElement)"{l0[SR7^RJ~F\"$\"").getData();

Test 110: 
String string = "<root><child/></root>";
XmlElement xmlElement = new XmlElement("<root><child/></root>");
((XmlElement)"<root><child/></root>").addSubElement(xmlElement);
int _int = 0;
((XmlElement) string).getElement(_int);

Test 111: 
XmlElement xmlElement = new XmlElement("root");
XmlElement xmlElement = new XmlElement("child1", "This is child1");
((XmlElement)"root").addSubElement(xmlElement);

Test 112: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("root");
xmlElement.addSubElement("child1");
xmlElement.getElement("child1");

Test 113: 
XmlElement xmlElement = new XmlElement();

Test 114: 
XmlElement xmlElement = new XmlElement("EVOLVE-OLD.ROCKET&EC1'&ZR", "PF2.EJNV*E6 4FRLO");
((XmlElement)"EVOLVE-OLD.ROCKET&EC1'&ZR").getName();

Test 115: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement(hashtable, hashtable);
xmlElement.getName();

Test 116: 
XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL");

Test 117: 
String string = "root";
XmlElement xmlElement = new XmlElement("root");
((XmlElement)"root").addSubElement("child1", "This is a test string for child 1.");
String string = "child2";
String string = "This is another test string for child 2.";
((XmlElement) string).addSubElement(string, string);
int _int = 0;
((XmlElement) string).removeElement(_int);

Test 118: 
String string = "y:m~@`Kw";
XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw");
((XmlElement)"y:m~@`Kw").addSubElement("subelement1", "F@=ya}xT");
int _int = 0;
((XmlElement) string).removeElement(_int);

Test 119: 
String string = "";
String string = "XML";
XmlElement xmlElement = new XmlElement("", "XML");
((XmlElement)"").addSubElement("Version: 1.0");
((XmlElement) string).addSubElement((String) xmlElement);
((XmlElement) string).removeElement(xmlElement);

Test 120: 
String string = "root";
XmlElement xmlElement = new XmlElement("root", "");
XmlElement xmlElement = new XmlElement("child1", "value1");
((XmlElement)"root").append(xmlElement);
String string = "child2";
String string = "value2";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).append(xmlElement);


* Generated after the refinement and before minimization 121 tests with total length 385
* test suite isTestSuite: 121
Test 0: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 3: 
XmlElement xmlElement = new XmlElement("!9_th5G]O^&", "!9_th5G]O^&");
xmlElement.hashCode();
Test 4: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 5: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);
Test 7: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("?H>}.{,7m", hashtable);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 8: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.getElements();
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("");
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 11: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "");
Test 12: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("/&xMbM5", "/&xMbM5");
xmlElement.getAttribute("/&xMbM5", "3pJ");
Test 13: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.removeElement(xmlElement);
Test 15: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("(");
addSubElement.removeFromParent();
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".cK.R=hB2P:K4a|a:g<");
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("\":~g\"");
xmlElement.getElement(".n$\"rUN]$\"");
Test 18: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("~.D_CXu%GR");
XmlElement clone = (XmlElement)xmlElement.clone();
clone.addSubElement("~.D_CXu%GR");
Test 19: 
XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]", "<hV-X{c96}VuB?cO|]");
XmlElement.printNode(xmlElement, "<hV-X{c96}VuB?cO|]");
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
XmlElement.printNode(xmlElement, "com.allenstudio.ir.util.XmlElement");
Test 21: 
XmlElement xmlElement = new XmlElement("");
xmlElement.addSubElement(";JbxKt*qS i");
XmlElement.printNode(xmlElement, "i!zb_<axeu<*PnvV.");
Test 22: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.clone();
Test 23: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 24: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 25: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("x_p-SH");
xmlElement.equals(xmlElement);
Test 26: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 27: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("x_p-oH");
Test 28: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("    ", "%jm");
hashtable.put("?H>}.{,7m", "    ");
XmlElement xmlElement = new XmlElement("/'+t}?[;E", hashtable);
xmlElement.equals(xmlElement);
Test 29: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("_aKX,", hashtable);
xmlElement.equals(xmlElement);
Test 30: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addElement(xmlElement);
xmlElement.equals(xmlElement);
Test 31: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();
Test 32: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 33: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute(":n$#976<F$h6i");
Test 34: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("$Ht`kyaWKxE SW", hashtable);
xmlElement.setParent((XmlElement) null);
Test 35: 
XmlElement xmlElement = new XmlElement("!9_th5G]O^&");
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);
Test 36: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 37: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("{X~*#x2j9t;3%y", hashtable);
xmlElement.getElements();
Test 38: 
XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.setData("");
Test 39: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getName();
Test 40: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 41: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement("<hV-X{c96}VuB?cO|]");
Test 42: 
XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
xmlElement.addAttribute("0(r]5!:", "0(r]5!:");
Test 43: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 44: 
XmlElement xmlElement = new XmlElement("", "[XNNS:");
xmlElement.addSubElement(" = '");
xmlElement.count();
Test 45: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute(">sbd2", "");
xmlElement.getAttribute(">sbd2");
Test 46: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");
Test 47: 
XmlElement xmlElement = new XmlElement("<C_FCR");
xmlElement.getAttribute("", "");
Test 48: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("BRW[", (String) null);
Test 49: 
XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
xmlElement.getAttributes();
Test 50: 
XmlElement xmlElement = new XmlElement("0(j**FiD_", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 51: 
XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.getData();
Test 52: 
XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"");
xmlElement.getData();
Test 53: 
XmlElement xmlElement = new XmlElement("?W>jloJ$");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement(0);
Test 54: 
XmlElement xmlElement = new XmlElement("?W>jloJ$");
XmlElement xmlElement = new XmlElement("?W>jloJ$", "?W>jloJ$");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement(0);
Test 55: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR");
addSubElement.addSubElement("~.D_CXu%GR");
xmlElement.getElement("~.D_CXu%GR");
Test 56: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.getElements();
Test 57: 
XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
xmlElement.getName();
Test 58: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement((String) null, hashtable);
xmlElement.getName();
Test 59: 
XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL");
xmlElement.parent = xmlElement;
xmlElement.parent.addSubElement(xmlElement);
xmlElement.parent.getParent();
Test 60: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement("", "*a7wqu!UQ%");
addSubElement.addSubElement("", "");
xmlElement.removeElement(0);
Test 61: 
XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw");
xmlElement.addSubElement((String) null, "F@=ya}xT");
xmlElement.removeElement(0);
Test 62: 
XmlElement xmlElement = new XmlElement("", "[XNNS:");
XmlElement addSubElement = xmlElement.addSubElement(" = '");
addSubElement.addSubElement(xmlElement);
addSubElement.removeElement(xmlElement);
Test 63: 
XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.append(xmlElement);
Test 64: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();

Test 65: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();

Test 66: 
XmlElement xmlElement = new XmlElement("MyXmlElement", "This is a test XML element.");
((XmlElement)"MyXmlElement").hashCode();

Test 67: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
xmlElement.getParent();

Test 68: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();

Test 69: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, (int) "beginning");

Test 70: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement((XmlElement) "firstChildElement");
String string = "secondChildElement";
xmlElement.addSubElement((XmlElement) string);

Test 71: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("book");

Test 72: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("name", "value");

Test 73: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234567890");
xmlElement.addAttribute("name", "John Doe");
xmlElement.addAttribute("age", "30");
xmlElement.addAttribute("gender", "male");

Test 74: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234567890");
xmlElement.getAttribute("id", "abcdefghijklmnopqrstuvwxyz");

Test 75: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("<sub-element name=\"John Doe\"><age>30</age></sub-element>");
xmlElement.removeElement((XmlElement) "sub-element");

Test 76: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("Employee");
((XmlElement)"Employee").removeFromParent();

Test 77: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("This is a sample sub-element with a more descriptive value to test the addition of a sub-element.");

Test 78: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("This is a test string for the addSubElement method.");
xmlElement.getElement("This is a test string for the getElement method.");

Test 79: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("A unique element name");
xmlElement.clone();
xmlElement.addSubElement("Another unique element name");

Test 80: 
XmlElement.printNode((XmlElement) "John Doe", (String) null);
String string = "age";
int _int = 30;
XmlElement xmlElement = new XmlElement(string, (String) _int);
String string = "age:30";
XmlElement.printNode(xmlElement, string);
String string = "city";
String string = "New York";
XmlElement xmlElement = new XmlElement(string, string);
String string = "city:New York";
XmlElement.printNode(xmlElement, string);

Test 81: 
XmlElement.printNode((XmlElement) "book", (String) null);

Test 82: 
String string = "Test Element";
XmlElement xmlElement = new XmlElement("Test Element");
((XmlElement)"Test Element").addSubElement("Child Element 1");
String string = "Child Element 2";
((XmlElement) string).addSubElement(string);
String string = "Parent Node";
XmlElement.printNode(xmlElement, string);

Test 83: 
XmlElement xmlElement = new XmlElement();
xmlElement.clone();

Test 84: 
XmlElement xmlElement = new XmlElement();
xmlElement.clone();

Test 85: 
XmlElement xmlElement = new XmlElement("x_p-SH");
XmlElement xmlElement = new XmlElement("x_p-SH");

Test 86: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("This is a string");

Test 87: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("x_p-oH");

Test 88: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
hashtable.put("key1", "This is a value 1");
hashtable.put("key2", "This is a value 2");
XmlElement xmlElement = new XmlElement("tagName1", hashtable);
String string = "key3";
String string = "This is a value 3";
hashtable.put(string, string);
String string = "tagName2";
XmlElement xmlElement = new XmlElement(string, hashtable);

Test 89: 
XmlElement xmlElement = new XmlElement("myXmlElement", (Hashtable<String, String>) "myXmlElement");

Test 90: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();
xmlElement.hashCode();
xmlElement.hashCode();

Test 91: 
XmlElement xmlElement = new XmlElement();
xmlElement.hashCode();

Test 92: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("username");
xmlElement.getAttribute("password");
xmlElement.getAttribute("email");

Test 93: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("$Ht`kyaWKxE SW", hashtable);
((XmlElement)"$Ht`kyaWKxE SW").setParent((XmlElement) null);

Test 94: 
XmlElement xmlElement = new XmlElement("<book>");
((XmlElement)"<book>").setAttributes((Hashtable<String, String>) null);

Test 95: 

Test 96: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("element", hashtable);
((XmlElement)"element").getElements();

Test 97: 
XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
((XmlElement)"+>MBvPZAZ!tlp").setData("This is a sample XML element with some data.");

Test 98: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);

Test 99: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.getElement("<hV-X{c96}VuB?cO|>");

Test 100: 
String string = "name";
String string = "John Doe";
XmlElement xmlElement = new XmlElement("name", "John Doe");
((XmlElement)"name").getAttributes();
String string = "age";
String string = "25";
((Hashtable) string).put(string, string);
String string = "gender";
String string = "male";
((XmlElement) string).addAttribute(string, string);

Test 101: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement((XmlElement) null);

Test 102: 
String string = "";
XmlElement xmlElement = new XmlElement("", "http://example.com/");
((XmlElement)"").addSubElement("name=\"John\"");
((XmlElement) string).count();

Test 103: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");

Test 104: 
String string = "<C_FCR";
XmlElement xmlElement = new XmlElement("<C_FCR");
((XmlElement)"<C_FCR").getAttribute("customerId", "123456789");
String string = "<C_FCR";
XmlElement xmlElement = new XmlElement(string);
String string = "customerId";
String string = "ABC-1234";
((XmlElement) string).getAttribute(string, string);

Test 105: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("BRW[", (String) null);

Test 106: 
String string = "0(r]5!:";
String string = "0(r]5!:";
XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
((XmlElement)"0(r]5!:").getAttributes();
String string = "0(r]5!:";
String string = "\"KsjnpC?[W)v&q";
((Hashtable) string).put(string, string);
((XmlElement) string).getAttributes();

Test 107: 
XmlElement xmlElement = new XmlElement("0(j**FiD_", (Hashtable<String, String>) null);
((XmlElement)"0(j**FiD_").getAttributes();

Test 108: 
String string = "PF2.Ejnve6 4fRLO";
XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
((XmlElement)"ev*Ol-.ro&ec1'&zr").addSubElement("test-element");
((XmlElement) string).getData();

Test 109: 
XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"");
((XmlElement)"{l0[SR7^RJ~F\"$\"").getData();

Test 110: 
String string = "<root><child/></root>";
XmlElement xmlElement = new XmlElement("<root><child/></root>");
((XmlElement)"<root><child/></root>").addSubElement(xmlElement);
int _int = 0;
((XmlElement) string).getElement(_int);

Test 111: 
XmlElement xmlElement = new XmlElement("root");
XmlElement xmlElement = new XmlElement("child1", "This is child1");
((XmlElement)"root").addSubElement(xmlElement);

Test 112: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("root");
xmlElement.addSubElement("child1");
xmlElement.getElement("child1");

Test 113: 
XmlElement xmlElement = new XmlElement();

Test 114: 
XmlElement xmlElement = new XmlElement("EVOLVE-OLD.ROCKET&EC1'&ZR", "PF2.EJNV*E6 4FRLO");
((XmlElement)"EVOLVE-OLD.ROCKET&EC1'&ZR").getName();

Test 115: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement(hashtable, hashtable);
xmlElement.getName();

Test 116: 
XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL");

Test 117: 
String string = "root";
XmlElement xmlElement = new XmlElement("root");
((XmlElement)"root").addSubElement("child1", "This is a test string for child 1.");
String string = "child2";
String string = "This is another test string for child 2.";
((XmlElement) string).addSubElement(string, string);
int _int = 0;
((XmlElement) string).removeElement(_int);

Test 118: 
String string = "y:m~@`Kw";
XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw");
((XmlElement)"y:m~@`Kw").addSubElement("subelement1", "F@=ya}xT");
int _int = 0;
((XmlElement) string).removeElement(_int);

Test 119: 
String string = "";
String string = "XML";
XmlElement xmlElement = new XmlElement("", "XML");
((XmlElement)"").addSubElement("Version: 1.0");
((XmlElement) string).addSubElement((String) xmlElement);
((XmlElement) string).removeElement(xmlElement);

Test 120: 
String string = "root";
XmlElement xmlElement = new XmlElement("root", "");
XmlElement xmlElement = new XmlElement("child1", "value1");
((XmlElement)"root").append(xmlElement);
String string = "child2";
String string = "value2";
XmlElement xmlElement = new XmlElement(string, string);
((XmlElement) string).append(xmlElement);


* Minimizing test suite
* test suite isTestSuite: 68
Test 0: 
XmlElement xmlElement = new XmlElement();
xmlElement.count();
Test 1: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("BRW[", (String) null);
Test 2: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttributeNames();
Test 3: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
Test 4: 
XmlElement xmlElement = new XmlElement("<hV-X{c96}VuB?cO|]", "<hV-X{c96}VuB?cO|]");
XmlElement.printNode(xmlElement, "<hV-X{c96}VuB?cO|]");
Test 5: 
XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.setData("");
Test 6: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("A unique element name");
xmlElement.clone();
Test 7: 
XmlElement xmlElement = new XmlElement();
xmlElement.getParent();
Test 8: 
XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw");
xmlElement.addSubElement((String) null, "F@=ya}xT");
xmlElement.removeElement(0);
Test 9: 
XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
Test 10: 
XmlElement xmlElement = new XmlElement();
xmlElement.insertElement(xmlElement, 0);
Test 11: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", hashtable);
xmlElement.getName();
Test 12: 
XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.append(xmlElement);
Test 13: 
XmlElement xmlElement = new XmlElement();
xmlElement.setName("book");
Test 14: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
XmlElement.printNode(xmlElement, "com.allenstudio.ir.util.XmlElement");
Test 15: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, "");
Test 16: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234567890");
xmlElement.getAttribute("id", "abcdefghijklmnopqrstuvwxyz");
Test 17: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeElement(xmlElement);
Test 18: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("(");
addSubElement.removeFromParent();
Test 19: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("");
xmlElement.removeElement(xmlElement);
Test 20: 
XmlElement xmlElement = new XmlElement();
xmlElement.getElement(".n$\"rUN]$\"");
Test 21: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("This is a test string for the addSubElement method.");
xmlElement.getElement("This is a test string for the getElement method.");
Test 22: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("child1");
xmlElement.getElement("child1");
Test 23: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("~.D_CXu%GR");
xmlElement.getElement("~.D_CXu%GR");
Test 24: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".cK.R=hB2P:K4a|a:g<");
Test 25: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("~.D_CXu%GR");
xmlElement.addSubElement("~.D_CXu%GR");
Test 26: 
XmlElement xmlElement = new XmlElement();
XmlElement.printNode(xmlElement, "com.allenstudio.ir.util.XmlElement");
Test 27: 
XmlElement xmlElement = new XmlElement("");
xmlElement.addSubElement(";JbxKt*qS i");
XmlElement.printNode(xmlElement, "i!zb_<axeu<*PnvV.");
Test 28: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.clone();
Test 29: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.clone();
Test 30: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals(xmlElement);
Test 31: 
XmlElement xmlElement = new XmlElement();
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("_aKX,", hashtable);
xmlElement.equals(xmlElement);
Test 32: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement("x_p-SH");
xmlElement.equals(xmlElement);
Test 33: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals((Object) null);
Test 34: 
XmlElement xmlElement = new XmlElement();
xmlElement.equals("This is a string");
Test 35: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("    ", "%jm");
hashtable.put("?H>}.{,7m", "    ");
XmlElement xmlElement = new XmlElement("/'+t}?[;E", hashtable);
xmlElement.equals(xmlElement);
Test 36: 
XmlElement xmlElement = new XmlElement();
XmlElement xmlElement = new XmlElement();
xmlElement.addElement(xmlElement);
xmlElement.equals(xmlElement);
Test 37: 
XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();
Test 38: 
XmlElement xmlElement = new XmlElement("!9_th5G]O^&", "!9_th5G]O^&");
xmlElement.hashCode();
Test 39: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();
Test 40: 
XmlElement xmlElement = new XmlElement();
xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");
Test 41: 
XmlElement xmlElement = new XmlElement("0(j**FiD_", (Hashtable<String, String>) null);
xmlElement.getAttributes();
Test 42: 
XmlElement xmlElement = new XmlElement("!9_th5G]O^&");
Hashtable<String, String> attributes = xmlElement.getAttributes();
xmlElement.setAttributes(attributes);
Test 43: 
XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"");
xmlElement.getData();
Test 44: 
XmlElement xmlElement = new XmlElement("?W>jloJ$");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement(0);
Test 45: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("{X~*#x2j9t;3%y", hashtable);
xmlElement.getElements();
Test 46: 
XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
xmlElement.getName();
Test 47: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute((String) null, (String) null);
Test 48: 
XmlElement xmlElement = new XmlElement("", "[XNNS:");
xmlElement.addSubElement(xmlElement);
xmlElement.removeElement(xmlElement);
Test 49: 
XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
Test 50: 
XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
xmlElement.addAttribute("0(r]5!:", "0(r]5!:");
Test 51: 
XmlElement xmlElement = new XmlElement("?W>jloJ$");
XmlElement xmlElement = new XmlElement("?W>jloJ$", "?W>jloJ$");
xmlElement.addSubElement(xmlElement);
xmlElement.getElement(0);
Test 52: 
XmlElement xmlElement = new XmlElement();
Observer observer = mock(Observer.class, new ViolatedAssumptionAnswer());
xmlElement.addObserver(observer);
xmlElement.addSubElement(xmlElement);
Test 53: 
XmlElement xmlElement = new XmlElement("", "[XNNS:");
xmlElement.addSubElement(" = '");
xmlElement.count();
Test 54: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute(">sbd2", "");
xmlElement.getAttribute(">sbd2");
Test 55: 
XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");
Test 56: 
XmlElement xmlElement = new XmlElement("<C_FCR");
xmlElement.getAttribute("", "");
Test 57: 
XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
xmlElement.getAttributes();
Test 58: 
XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
XmlElement addSubElement = xmlElement.addSubElement("");
addSubElement.getData();
Test 59: 
XmlElement xmlElement = new XmlElement();
xmlElement.getData();
Test 60: 
XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR");
addSubElement.addSubElement("~.D_CXu%GR");
xmlElement.getElement("~.D_CXu%GR");
Test 61: 
XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(xmlElement);
xmlElement.getElements();
Test 62: 
XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.getElements();
Test 63: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement((String) null, hashtable);
xmlElement.getName();
Test 64: 
XmlElement xmlElement = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL");
xmlElement.parent = xmlElement;
xmlElement.parent.addSubElement(xmlElement);
xmlElement.parent.getParent();
Test 65: 
Hashtable<String, String> hashtable = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("?H>}.{,7m", hashtable);
xmlElement.setParent(xmlElement);
xmlElement.getParent();
Test 66: 
XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement("", "*a7wqu!UQ%");
addSubElement.addSubElement("", "");
xmlElement.removeElement(0);
Test 67: 
XmlElement xmlElement = new XmlElement("", "[XNNS:");
XmlElement addSubElement = xmlElement.addSubElement(" = '");
addSubElement.addSubElement(xmlElement);
addSubElement.removeElement(xmlElement);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 95
* Number of covered goals: 95
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 156
* Number of covered goals: 154
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 60%
* Total number of goals: 109
* Number of covered goals: 65
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 95
* Number of covered goals: 87
* Generated 68 tests with total length 189
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 62%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
int count = xmlElement.count();
assertEquals(0, count);


** It was a parseable test case! 
refined test name is: testCountOnEmptyXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String attribute = xmlElement.getAttribute("BRW[", (String) null);
assertNull(attribute);


** It was a parseable test case! 
refined test name is: testGetUnknownAttributeReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Enumeration attributeNames = xmlElement.getAttributeNames();
assertNotNull(attributeNames);


** It was a parseable test case! 
refined test name is: testGetAttributeNamesReturnsNonNullEnumeration
* Compiling Tests
refined test name is: testRetrieveAttributeNamesshouldNotReturnNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.removeAllElements();
assertEquals(0, xmlElement.countObservers());


** It was a parseable test case! 
refined test name is: testRemoveAllElementsshouldRemoveAllChildElements
* Compiling Tests
refined test name is: testRemoveAllElementsShouldRemoveAllChildElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("<hV-X{c96}VuB?cO|]", "<hV-X{c96}VuB?cO|]");
XmlElement.printNode(arg0, "<hV-X{c96}VuB?cO|]");
assertFalse(arg0.hasChanged());


** It was a parseable test case! 
refined test name is: testPrintNodeWithValidElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("+>MBvPZAZ!tlp", "");
xmlElement.setData("");
assertEquals("", xmlElement.getData());


** It was a parseable test case! 
refined test name is: testSetDataToEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("A unique element name");
xmlElement.clone();
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testCloneXmlElementWithUniqueSubElementName
* Compiling Tests
refined test name is: testCloneMethodCopiesSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement parent = xmlElement.getParent();
assertNull(parent);


** It was a parseable test case! 
refined test name is: testGetParentReturnsNullWhenNoParentExists
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("y:m~@`Kw", "y:m~@`Kw");
XmlElement addSubElement = xmlElement.addSubElement((String) null, "F@=ya}xT");
assertNotNull(addSubElement);

XmlElement removeElement = xmlElement.removeElement(0);
assertEquals("F@=ya}xT", removeElement.getData());
assertSame(removeElement, addSubElement);
assertNotNull(removeElement);


** It was a parseable test case! 
refined test name is: testAddAndRemoveXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.notifyObservers();
assertEquals(0, xmlElement.countObservers());


** It was a parseable test case! 
refined test name is: testNotifyObserversNoRegisteredObservers
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.insertElement(arg0, 0);
assertNull(arg0.getName());


** It was a parseable test case! 
refined test name is: testInsertElementAtZeroReturnsNullName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Hashtable<String, String> arg1 = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("", arg1);
String name = xmlElement.getName();
assertEquals("", name);


** It was a parseable test case! 
refined test name is: testGetNameWithEmptyArg1
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("+>MBvPZAZ!tlp", "");
arg0.append(arg0);
assertEquals("", arg0.getData());


** It was a parseable test case! 
refined test name is: testAppendSameElementWithoutChangingData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.setName("book");
assertEquals(0, xmlElement.countObservers());


** It was a parseable test case! 
refined test name is: testCountObserversWithNoObservers
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
XmlElement.printNode(arg0, "com.allenstudio.ir.util.XmlElement");
assertEquals(0, arg0.countObservers());


** It was a parseable test case! 
refined test name is: testPrintNodeWithOneAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Object addAttribute = xmlElement.addAttribute((String) null, "");
assertNull(addAttribute);


** It was a parseable test case! 
refined test name is: testAddAttributeWithNullNameThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("id", "1234567890");
String attribute = xmlElement.getAttribute("id", "abcdefghijklmnopqrstuvwxyz");
assertNotNull(attribute);
assertEquals("1234567890", attribute);


** It was a parseable test case! 
refined test name is: testGetAttributeWithDefaultNamespace
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement removeElement = arg0.removeElement(arg0);
assertNull(removeElement);


** It was a parseable test case! 
refined test name is: testRemoveElementShouldReturnNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("(");
assertEquals(1, xmlElement.count());

addSubElement.removeFromParent();
assertEquals(0, xmlElement.count());


** It was a parseable test case! 
refined test name is: testRemovingSubElementShouldDecreaseChildCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.addSubElement("");
arg0.removeElement(arg0);
assertEquals(1, arg0.count());


** It was a parseable test case! 
refined test name is: testAddRemoveElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement element = xmlElement.getElement(".n$\"rUN]$\"");
assertNull(element);


** It was a parseable test case! 
refined test name is: testFindElementByInvalidName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("This is a test string for the addSubElement method.");
xmlElement.getElement("This is a test string for the getElement method.");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddAndGetSubElements
* Compiling Tests
refined test name is: testAddSubElementAndCountElementsshouldPass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("child1");
xmlElement.getElement("child1");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddAndGetSubElementOneElementInCount
* Compiling Tests
refined test name is: testXmlElementAddSubElementAndGetCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("~.D_CXu%GR");
xmlElement.getElement("~.D_CXu%GR");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddSubElementUpdatesCountCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement(".cK.R=hB2P:K4a|a:g<");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addSubElement("~.D_CXu%GR");
xmlElement.addSubElement("~.D_CXu%GR");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement.printNode(arg0, "com.allenstudio.ir.util.XmlElement");
assertNull(arg0.getName());


** It was a parseable test case! 
refined test name is: testPrintNodewithElementWithoutNamereturnsNullName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("");
arg0.addSubElement(";JbxKt*qS i");
XmlElement.printNode(arg0, "i!zb_<axeu<*PnvV.");
assertEquals(1, arg0.count());


** It was a parseable test case! 
refined test name is: testXmlElementCreationAndSubElementAddition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
Object clone = xmlElement.clone();
assertNotSame(clone, xmlElement);
assertNotNull(clone);


** It was a parseable test case! 
refined test name is: testCloneXmlElementNoAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
Object clone = xmlElement.clone();
assertNotNull(clone);
assertNotSame(clone, xmlElement);


** It was a parseable test case! 
refined test name is: testCloneXmlElementWithNoSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
boolean equals = arg0.equals(arg0);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsSelf
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Hashtable<String, String> arg1 = new Hashtable<String, String>();
XmlElement arg0 = new XmlElement("_aKX,", arg1);
boolean equals = xmlElement.equals(arg0);
assertFalse(equals);
assertFalse(arg0.equals((Object)xmlElement));


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentXmlElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
XmlElement xmlElement = new XmlElement("x_p-SH");
boolean equals = xmlElement.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsDifferentValuesReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
boolean equals = xmlElement.equals((Object) null);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithNullArgumentShouldReturnFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
boolean equals = xmlElement.equals("This is a string");
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithStringArgumentReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Hashtable<String, String> arg1 = new Hashtable<String, String>();
XmlElement arg0 = new XmlElement("    ", "%jm");
arg1.put("?H>}.{,7m", "    ");
XmlElement xmlElement = new XmlElement("/'+t}?[;E", arg1);
boolean equals = xmlElement.equals(arg0);
assertFalse(equals);
assertEquals("%jm", arg0.getData());


** It was a parseable test case! 
refined test name is: testXmlElementEqualsWithDifferentValuesIsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement arg0 = new XmlElement();
assertTrue(arg0.equals((Object)xmlElement));

xmlElement.addElement(arg0);
boolean equals = xmlElement.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testXmlElementEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.attributes = null;
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeWithNoAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("!9_th5G]O^&", "!9_th5G]O^&");
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testHashCode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
xmlElement.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeOnEmptyXmlElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String attribute = xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");
assertNull(attribute);


** It was a parseable test case! 
refined test name is: testGetAttributeUnknownName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("0(j**FiD_", (Hashtable<String, String>) null);
Hashtable<String, String> attributes = xmlElement.getAttributes();
assertNull(attributes);


** It was a parseable test case! 
refined test name is: testGetAttributesOnXmlElementWithNoAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("!9_th5G]O^&");
Hashtable<String, String> arg0 = xmlElement.getAttributes();
xmlElement.setAttributes(arg0);
assertEquals(0, arg0.size());


** It was a parseable test case! 
refined test name is: testGetAndSetAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("{l0[SR7^RJ~F\"$\"", "{l0[SR7^RJ~F\"$\"");
String data = xmlElement.getData();
assertEquals("{l0[SR7^RJ~F\"$\"", data);


** It was a parseable test case! 
refined test name is: testGetDataReturnsValidXmlContent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("?W>jloJ$");
arg0.addSubElement(arg0);
XmlElement element = arg0.getElement(0);
assertEquals("?W>jloJ$", element.getName());


** It was a parseable test case! 
refined test name is: testAddingSelfAsSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Hashtable<String, String> arg1 = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement("{X~*#x2j9t;3%y", arg1);
List elements = xmlElement.getElements();
assertEquals(0, elements.size());


** It was a parseable test case! 
refined test name is: testGetElementsReturnsEmptyListWhenNoChildren
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
String name = xmlElement.getName();
assertNotNull(name);
assertEquals("ev*Ol-.ro&ec1'&zr", name);
assertEquals("PF2.Ejnve6 4fRLO", xmlElement.getData());


** It was a parseable test case! 
refined test name is: testValidXmlElementNameAndData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
Object addAttribute = xmlElement.addAttribute((String) null, (String) null);
assertNull(addAttribute);


** It was a parseable test case! 
refined test name is: testAddAttributeWithNullArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("", "[XNNS:");
arg0.addSubElement(arg0);
arg0.removeElement(arg0);
assertEquals(0, arg0.count());


** It was a parseable test case! 
refined test name is: testAddAndRemoveSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.removeFromParent();
assertEquals(0, xmlElement.countObservers());


** It was a parseable test case! 
refined test name is: testRemovedElementHasNoObservers
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("0(r]5!:", "0(r]5!:");
Hashtable<String, String> attributes = xmlElement.getAttributes();
attributes.put("0(r]5!:", "\"KsjnpC?[W)v&q");
Object addAttribute = xmlElement.addAttribute("0(r]5!:", "0(r]5!:");
assertEquals("\"KsjnpC?[W)v&q", addAttribute);


** It was a parseable test case! 
refined test name is: testAddAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("?W>jloJ$");
XmlElement arg0 = new XmlElement("?W>jloJ$", "?W>jloJ$");
XmlElement addSubElement = xmlElement.addSubElement(arg0);
assertNotNull(addSubElement);

XmlElement element = xmlElement.getElement(0);
assertNotNull(element);
assertSame(element, addSubElement);


** It was a parseable test case! 
refined test name is: testAddSubElementWithoutExistingSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("", "[XNNS:");
xmlElement.addSubElement(" = '");
int count = xmlElement.count();
assertEquals(1, count);


** It was a parseable test case! 
refined test name is: testAddSubElementCountIncreasesByOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute(">sbd2", "");
String attribute = xmlElement.getAttribute(">sbd2");
assertEquals("", attribute);


** It was a parseable test case! 
refined test name is: testAddAttributeshouldReturnCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.addAttribute("com.allenstudio.ir.util.XmlElement", "com.allenstudio.ir.util.XmlElement");
String attribute = xmlElement.getAttribute("com.allenstudio.ir.util.XmlElement");
assertEquals("com.allenstudio.ir.util.XmlElement", attribute);


** It was a parseable test case! 
refined test name is: testAddAndGetAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("<C_FCR");
String attribute = xmlElement.getAttribute("", "");
assertNotNull(attribute);
assertEquals("", attribute);


** It was a parseable test case! 
refined test name is: testGetAttributeEmptyAttributesReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("ev*Ol-.ro&ec1'&zr", "PF2.Ejnve6 4fRLO");
XmlElement addSubElement = xmlElement.addSubElement("");
String data = addSubElement.getData();
assertEquals(1, xmlElement.count());
assertEquals("", data);


** It was a parseable test case! 
refined test name is: testXmlElementGetData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
String data = xmlElement.getData();
assertNull(data);


** It was a parseable test case! 
refined test name is: testGetDataReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
XmlElement addSubElement = xmlElement.addSubElement("~.D_CXu%GR");
addSubElement.addSubElement("~.D_CXu%GR");
xmlElement.getElement("~.D_CXu%GR");
assertEquals(1, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddingSubElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement();
arg0.addSubElement(arg0);
List elements = arg0.getElements();
assertEquals(1, elements.size());


** It was a parseable test case! 
refined test name is: testAddSelfAsSubElementAndGetElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement();
xmlElement.subElements = null;
List elements = xmlElement.getElements();
assertNull(elements);


** It was a parseable test case! 
refined test name is: testGetElementsReturnsNullWhenNoSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Hashtable<String, String> arg1 = new Hashtable<String, String>();
XmlElement xmlElement = new XmlElement((String) null, arg1);
String name = xmlElement.getName();
assertNull(name);


** It was a parseable test case! 
refined test name is: testGetNameWithNoAttributesReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement arg0 = new XmlElement("e%XH6xEAjU3h3>>MFeL", "e%XH6xEAjU3h3>>MFeL");
arg0.parent = arg0;
arg0.parent.addSubElement(arg0);
XmlElement parent = arg0.parent.getParent();
assertEquals("e%XH6xEAjU3h3>>MFeL", parent.getName());


** It was a parseable test case! 
refined test name is: testAddSubElementSetsParentToSelfAndName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Hashtable<String, String> arg1 = new Hashtable<String, String>();
XmlElement arg0 = new XmlElement("?H>}.{,7m", arg1);
arg0.setParent(arg0);
XmlElement parent = arg0.getParent();
assertSame(parent, arg0);


** It was a parseable test case! 
refined test name is: testGetParent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XmlElement xmlElement = new XmlElement("");
XmlElement addSubElement = xmlElement.addSubElement("", "*a7wqu!UQ%");
addSubElement.addSubElement("", "");
xmlElement.removeElement(0);
assertEquals(0, xmlElement.count());


** It was a parseable test case! 
refined test name is: testAddAndRemoveSubElements
* Compiling Tests
refined test name is: testAddAndRemoveSubElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:16.790 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:16.822 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:16.898 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:16.900 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:53:16.972 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:53:16.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.042 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.044 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.106 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.107 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.168 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:53:17.171 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.259 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.261 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.347 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.350 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.439 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.442 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.528 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.531 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.621 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.623 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.712 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.714 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.805 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.807 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.897 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.899 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:17.991 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:17.993 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.089 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.179 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.183 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.272 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.274 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.369 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.371 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.462 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.467 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.552 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:53:18.553 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.635 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:53:18.637 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.720 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.722 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.806 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.809 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.896 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.899 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:18.985 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:18.987 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:19.069 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.071 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:19.130 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.131 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:19.192 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:19.247 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:19.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.302 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.304 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:19.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:19.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.423 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.424 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
[MASTER] 21:53:19.480 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:19.482 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.537 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:19.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.619 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:19.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.715 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:19.717 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.804 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:19.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.895 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:19.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:19.996 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.002 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.100 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.205 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.207 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.299 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.392 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.480 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.574 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.639 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.640 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.702 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.703 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.765 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.826 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.827 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.889 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:20.955 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:20.957 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.022 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.023 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.087 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.088 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.232 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.235 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.360 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.413 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.482 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.484 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.556 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.558 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.626 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.627 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.694 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.696 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.765 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.838 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:53:21.915 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.919 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:53:21.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:21.996 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 21 called: 3 to improve: false
** Write a test suite: 22 called: 4 to improve: false
** Write a test suite: 64 called: 5 to improve: false
[MASTER] 21:53:22.387 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:22.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 42 called: 1 to improve: false
** Write a test suite: 43 called: 2 to improve: false
** Write a test suite: 58 called: 3 to improve: false
** Write a test suite: 61 called: 4 to improve: false
** Write a test suite: 62 called: 5 to improve: false
[MASTER] 21:53:22.927 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar965109359549980931.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:53:22.929 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar965109359549980931.jar
* Writing tests to file
* Writing JUnit test case 'XmlElement_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 42 called: 1 to improve: false
** Write a test suite: 43 called: 2 to improve: false
** Write a test suite: 58 called: 3 to improve: false
** Write a test suite: 61 called: 4 to improve: false
** Write a test suite: 62 called: 5 to improve: false
* Done!

* Computation finished
