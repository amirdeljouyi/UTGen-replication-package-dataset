* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: net.virtualinfinity.atrobots.robot.Robot
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/86_at-robots2-j/evosuite-files/evosuite.properties
* Connecting to master process on port 11304
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:27:23.551 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:27:23.551 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:27:23.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:27:24.056 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:27:24.057 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:27:24.111 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:27:25.086 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 08:27:25.120 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 08:27:25.120 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 08:27:25.120 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 08:27:25.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 08:27:25.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 08:27:25.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 08:27:25.122 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 08:27:25.122 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 08:27:25.132 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class net.virtualinfinity.atrobots.robot.Robot
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 648
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1709281641733
* Starting evolution
* Initial Number of Goals in DynaMOSA = 395 / 648
[Progress:>                             0%] [Cov:===============>                   45%][Progress:>                             0%] [Cov:================>                  47%][Progress:>                             1%] [Cov:=================>                 51%][Progress:>                             1%] [Cov:=================>                 51%][Progress:>                             1%] [Cov:==================>                53%][Progress:>                             1%] [Cov:==================>                54%][Progress:>                             1%] [Cov:==================>                54%][Progress:>                             2%] [Cov:===================>               55%][Progress:>                             2%] [Cov:===================>               56%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:====================>              58%][Progress:=>                            4%] [Cov:====================>              58%][Progress:=>                            4%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:=====================>             60%][Progress:===>                          11%] [Cov:=====================>             60%][Progress:===>                          11%] [Cov:=====================>             60%][Progress:===>                          11%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          12%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         14%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         16%] [Cov:=====================>             60%][Progress:====>                         16%] [Cov:=====================>             60%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 103s and 421 generations, 143437 statements, best individual has fitness: 265.0
* Generated before the refinement 68 tests with total length 224
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, (RobotScore) null)
statement is: getOverburnLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler overburnLatchPort = robot.getOverburnLatchPort()
test data is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, (RobotScore) null);
robot.getOverburnLatchPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, ((RobotScore) (null)));
        robot.getOverburnLatchPort();
        // Improved test data
        Robot robot2 = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 1, ((RobotScore) (null)));
        robot2.getOverburnLatchPort();
        Robot robot3 = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 10, ((RobotScore) (null)));
        robot3.getOverburnLatchPort();
    }
}
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getOverburnLatchPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getOverburnLatchPort() target is: robot method is: getOverburnLatchPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getOverburnLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
statement is: // Improved test data
Robot robot2 = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 1, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot2.getOverburnLatchPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot2.getOverburnLatchPort() target is: robot2 method is: getOverburnLatchPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 6
Matched Method is: getOverburnLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
statement is: Robot robot3 = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 10, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot3.getOverburnLatchPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot3.getOverburnLatchPort() target is: robot3 method is: getOverburnLatchPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 10
Matched Method is: getOverburnLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
TestCase is: String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
int _int = 0;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getOverburnLatchPort();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
int _int = 1;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getOverburnLatchPort();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
int _int = 10;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getOverburnLatchPort();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 0, (RobotScore) null)
statement is: getTurret()Lnet/virtualinfinity/atrobots/hardware/turret/Turret; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.turret.Turret
statement code is: Turret turret = robot.getTurret()
test data is: Robot robot = new Robot("", 0, (RobotScore) null);
robot.getTurret();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Red", 123456789, RobotScore.HIGH);
        robot.getTurret();
        // Here we are testing a different color for the robot's skin
        Robot robot2 = new Robot("Blue", 987654321, RobotScore.LOW);
        robot2.getTurret();
    }
}
statement is: Robot robot = new Robot("Red", 123456789, RobotScore.HIGH), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTurret(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTurret() target is: robot method is: getTurret()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getTurret()Lnet/virtualinfinity/atrobots/hardware/turret/Turret;
statement is: // Here we are testing a different color for the robot's skin
Robot robot2 = new Robot("Blue", 987654321, RobotScore.LOW), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot2.getTurret(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot2.getTurret() target is: robot2 method is: getTurret()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 6
Matched Method is: getTurret()Lnet/virtualinfinity/atrobots/hardware/turret/Turret;
TestCase is: String string = "Red";
int _int = 123456789;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getTurret();
String string = "Blue";
int _int = 987654321;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getTurret();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("\" t", (-3754), arg2)
statement is: getAimTurretPort()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler aimTurretPort = robot.getAimTurretPort()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("\" t", (-3754), robotScoreKeeper);
robot.getAimTurretPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Robot robot = new Robot("R2D2", 0, new RobotScoreKeeper());
        robot.getAimTurretPort(1);// pass in the necessary argument for this method }}

    }
}
statement is: // Improved test data
Robot robot = new Robot("R2D2", 0, new RobotScoreKeeper()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getAimTurretPort(1)// pass in the necessary argument for this method }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getAimTurretPort(1)// pass in the necessary argument for this method }}
 target is: robot method is: getAimTurretPort(int)
TestCase is: String string = "R2D2";
int _int = 0;
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(string, _int, robotScoreKeeper);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, arg2)
statement is: net.virtualinfinity.atrobots.ArenaObjectVisitorAdaptor()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.ArenaObjectVisitorAdaptor
statement code is: ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor()
statement is: accept(Lnet/virtualinfinity/atrobots/ArenaObjectVisitor;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.accept(arg0)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
robot.accept(arenaObjectVisitorAdaptor);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
        ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
        robot.accept(arenaObjectVisitorAdaptor);
        robot.setName("Robot 1");
        robot.setTeam("Red Team");
        robotScoreKeeper.setScore(500);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.accept(arenaObjectVisitorAdaptor), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.accept(arenaObjectVisitorAdaptor) target is: robot method is: accept(ArenaObjectVisitorAdaptor)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: accept(Lnet/virtualinfinity/atrobots/ArenaObjectVisitor;)V
statement is: robot.setName("Robot 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setName("Robot 1") target is: robot method is: setName(java.lang.String)
statement is: robot.setTeam("Red Team"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setTeam("Red Team") target is: robot method is: setTeam(java.lang.String)
statement is: robotScoreKeeper.setScore(500), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotScoreKeeper.setScore(500) target is: robotScoreKeeper method is: setScore(int)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.robot.Robot";
int _int = 1;
Robot robot = new Robot(string, _int, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
((Robot) string).accept(arenaObjectVisitorAdaptor);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null)
statement is: getSpeed()Lnet/virtualinfinity/atrobots/arena/Speed; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.arena.Speed
statement code is: Speed speed = robot.getSpeed()
test data is: Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
robot.getSpeed();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("g2|KKwy", 10000, null);
        robot.getSpeed();
    }
}
statement is: Robot robot = new Robot("g2|KKwy", 10000, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getSpeed(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getSpeed() target is: robot method is: getSpeed()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getSpeed()Lnet/virtualinfinity/atrobots/arena/Speed;
TestCase is: String string = "g2|KKwy";
int _int = 10000;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getSpeed();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null)
statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.addRobotListener(arg0)
statement is: winRound()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.winRound()
test data is: Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robot.addRobotListener(robotScoreKeeper);
robot.winRound();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("g2|KKwy", -1431655765, ((RobotScore) (null)));
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        robot.addRobotListener(robotScoreKeeper);
        robot.winRound();
    }
}
statement is: Robot robot = new Robot("g2|KKwy", -1431655765, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.addRobotListener(robotScoreKeeper), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.addRobotListener(robotScoreKeeper) target is: robot method is: addRobotListener(RobotScoreKeeper)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V
statement is: robot.winRound(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.winRound() target is: robot method is: winRound()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: winRound()V
TestCase is: String string = "g2|KKwy";
Robot robot = new Robot(string, (-1431655765), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
((Robot) string).addRobotListener(robotScoreKeeper);
((Robot) string).winRound();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot((String) null, (-854), arg2)
statement is: getHeading()Lnet/virtualinfinity/atrobots/arena/Heading; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.arena.Heading
statement code is: Heading heading = robot.getHeading()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-854), robotScoreKeeper);
robot.getHeading();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("R2-D2", 854, robotScoreKeeper);
        robot.getHeading();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("R2-D2", 854, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getHeading(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getHeading() target is: robot method is: getHeading()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getHeading()Lnet/virtualinfinity/atrobots/arena/Heading;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "R2-D2";
int _int = 854;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getHeading();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 8, (RobotScore) null)
statement is: getDesiredHeading()Lnet/virtualinfinity/atrobots/arena/Heading; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.arena.Heading
statement code is: Heading desiredHeading = robot.getDesiredHeading()
test data is: Robot robot = new Robot("", 8, (RobotScore) null);
robot.getDesiredHeading();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("WALL-E", 8, new RobotScore(10, 20));
        String desiredHeading = robot.getDesiredHeading();
        assertEquals("NORTH", desiredHeading);
    }
}
statement is: Robot robot = new Robot("WALL-E", 8, new RobotScore(10, 20)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String desiredHeading = robot.getDesiredHeading(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getDesiredHeading() target is: robot method is: getDesiredHeading()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getDesiredHeading()Lnet/virtualinfinity/atrobots/arena/Heading;
statement is: assertEquals("NORTH", desiredHeading), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("NORTH", desiredHeading) target is:  method is: assertEquals(java.lang.String,java.lang.String)
TestCase is: String string = "WALL-E";
int _int = 8;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getDesiredHeading();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, arg2)
statement is: net.virtualinfinity.atrobots.hardware.armor.Armor(D)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.armor.Armor
statement code is: Armor armor = new Armor((-1203.8008070456))
statement is: setArmor(Lnet/virtualinfinity/atrobots/hardware/armor/Armor;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setArmor(arg0)
statement is: getSnapshot()Lnet/virtualinfinity/atrobots/snapshots/ArenaObjectSnapshot; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.snapshots.ArenaObjectSnapshot
statement code is: ArenaObjectSnapshot snapshot = robot.getSnapshot()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
Armor armor = new Armor((-1203.8008070456));
robot.setArmor(armor);
robot.getSnapshot();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
        Armor armor = new Armor(-1203.8008070456);
        robot.setArmor(armor);
        robot.getSnapshot();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Armor armor = new Armor(-1203.8008070456), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setArmor(armor), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setArmor(armor) target is: robot method is: setArmor(Armor)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: setArmor(Lnet/virtualinfinity/atrobots/hardware/armor/Armor;)V
statement is: robot.getSnapshot(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getSnapshot() target is: robot method is: getSnapshot()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getSnapshot()Lnet/virtualinfinity/atrobots/snapshots/ArenaObjectSnapshot;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "NP\"%0oOb \"ur#WvB";
int _int = 0;
Robot robot = new Robot(string, _int, robotScoreKeeper);
Armor armor = new Armor((-1203.8008070456));
((Robot) string).setArmor(armor);
((ArenaObject) string).getSnapshot();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot(".at2", 0, arg2)
statement is: getTransponder()Lnet/virtualinfinity/atrobots/hardware/transponder/Transponder; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.transponder.Transponder
statement code is: Transponder transponder = robot.getTransponder()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
robot.getTransponder();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("NX2113", 0, robotScoreKeeper);
        robot.getTransponder();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("NX2113", 0, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTransponder(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTransponder() target is: robot method is: getTransponder()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getTransponder()Lnet/virtualinfinity/atrobots/hardware/transponder/Transponder;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "NX2113";
int _int = 0;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getTransponder();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("\" t", 69, (RobotScore) null)
statement is: getThrottle()Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.throttle.Throttle
statement code is: Throttle throttle = robot.getThrottle()
test data is: Robot robot = new Robot("\" t", 69, (RobotScore) null);
robot.getThrottle();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Snoopy", 42, ((RobotScore) (null)));
        robot.getThrottle();
    }
}
statement is: Robot robot = new Robot("Snoopy", 42, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getThrottle(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getThrottle() target is: robot method is: getThrottle()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getThrottle()Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle;
TestCase is: String string = "Snoopy";
int _int = 42;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getThrottle();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), arg2)
statement is: getHardwareBus()Lnet/virtualinfinity/atrobots/computer/HardwareBus; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.computer.HardwareBus
statement code is: HardwareBus hardwareBus = robot.getHardwareBus()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.getHardwareBus();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Red", 1234, robotScoreKeeper);
        robot.getHardwareBus();
    }
}
statement is: // Improved test data for the code snippet
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Red", 1234, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getHardwareBus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getHardwareBus() target is: robot method is: getHardwareBus()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getHardwareBus()Lnet/virtualinfinity/atrobots/computer/HardwareBus;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Red";
int _int = 1234;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getHardwareBus();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("6.lx{es|GMg|_", (-1), arg2)
statement is: getMineLayer()Lnet/virtualinfinity/atrobots/hardware/mines/MineLayer; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.mines.MineLayer
statement code is: MineLayer mineLayer = robot.getMineLayer()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("6.lx{es|GMg|_", (-1), robotScoreKeeper);
robot.getMineLayer();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("6.lx{es|GMg|_", -1, robotScoreKeeper);
        robot.getMineLayer();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("6.lx{es|GMg|_", -1, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getMineLayer(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getMineLayer() target is: robot method is: getMineLayer()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getMineLayer()Lnet/virtualinfinity/atrobots/hardware/mines/MineLayer;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "6.lx{es|GMg|_";
Robot robot = new Robot(string, (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getMineLayer();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1717986918, arg2)
statement is: net.virtualinfinity.atrobots.computer.Memory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.computer.Memory
statement code is: Memory memory = new Memory()
statement is: getCell(I)Lnet/virtualinfinity/atrobots/computer/MemoryCell; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.computer.MemoryCell
statement code is: MemoryCell cell = memory.getCell(0)
statement is: net.virtualinfinity.atrobots.computer.RandomAccessMemoryArray(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.computer.RandomAccessMemoryArray
statement code is: RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(2021161080)
statement is: addMemoryArray(Lnet/virtualinfinity/atrobots/computer/MemoryArray;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: memory.addMemoryArray(arg0)
statement is: createGetRobotStatisticsInterrupt(Lnet/virtualinfinity/atrobots/computer/MemoryCell;Lnet/virtualinfinity/atrobots/computer/MemoryCell;Lnet/virtualinfinity/atrobots/computer/MemoryCell;)Lnet/virtualinfinity/atrobots/robot/Robot$GetRobotStatisticsInterrupt; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt
statement code is: Robot.GetRobotStatisticsInterrupt createGetRobotStatisticsInterrupt = robot.createGetRobotStatisticsInterrupt(arg2, (MemoryCell) null, arg2)
statement is: handleInterrupt()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot_GetRobotStatisticsInterrupt.handleInterrupt()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1717986918, robotScoreKeeper);
Memory memory = new Memory();
MemoryCell cell = memory.getCell(0);
RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(2021161080);
memory.addMemoryArray(randomAccessMemoryArray);
Robot.GetRobotStatisticsInterrupt createGetRobotStatisticsInterrupt = robot.createGetRobotStatisticsInterrupt(cell, (MemoryCell) null, cell);
createGetRobotStatisticsInterrupt.handleInterrupt();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("R2-D2", 1717986918, robotScoreKeeper);
        Memory memory = new Memory();
        MemoryCell cell = memory.getCell(0);
        RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(2021161080);
        memory.addMemoryArray(randomAccessMemoryArray);
        Robot.GetRobotStatisticsInterrupt createGetRobotStatisticsInterrupt = robot.createGetRobotStatisticsInterrupt(cell, ((MemoryCell) (null)), cell);
        createGetRobotStatisticsInterrupt.handleInterrupt();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("R2-D2", 1717986918, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Memory memory = new Memory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MemoryCell cell = memory.getCell(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: memory.getCell(0) target is: memory method is: getCell(int)
source statement: net.virtualinfinity.atrobots.computer.Memory()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.computer.Memoryindex is: 4
Matched Method is: getCell(I)Lnet/virtualinfinity/atrobots/computer/MemoryCell;
statement is: RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(2021161080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: memory.addMemoryArray(randomAccessMemoryArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: memory.addMemoryArray(randomAccessMemoryArray) target is: memory method is: addMemoryArray(RandomAccessMemoryArray)
source statement: net.virtualinfinity.atrobots.computer.Memory()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.computer.Memoryindex is: 4
Matched Method is: addMemoryArray(Lnet/virtualinfinity/atrobots/computer/MemoryArray;)V
statement is: Robot.GetRobotStatisticsInterrupt createGetRobotStatisticsInterrupt = robot.createGetRobotStatisticsInterrupt(cell, ((MemoryCell) (null)), cell), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.createGetRobotStatisticsInterrupt(cell, ((MemoryCell) (null)), cell) target is: robot method is: createGetRobotStatisticsInterrupt(MemoryCell,MemoryCell,MemoryCell)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: createGetRobotStatisticsInterrupt(Lnet/virtualinfinity/atrobots/computer/MemoryCell;Lnet/virtualinfinity/atrobots/computer/MemoryCell;Lnet/virtualinfinity/atrobots/computer/MemoryCell;)Lnet/virtualinfinity/atrobots/robot/Robot$GetRobotStatisticsInterrupt;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: createGetRobotStatisticsInterrupt.handleInterrupt(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: createGetRobotStatisticsInterrupt.handleInterrupt() target is: createGetRobotStatisticsInterrupt method is: handleInterrupt()
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "R2-D2";
int _int = 1717986918;
Robot robot = new Robot(string, _int, robotScoreKeeper);
Memory memory = new Memory();
int _int = 0;
MemoryCell cell = ((Memory) _int).getCell(_int);
int _int = 2021161080;
RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(_int);
((Memory) _int).addMemoryArray(randomAccessMemoryArray);
MemoryCell memoryCell = null;
((Robot) string).createGetRobotStatisticsInterrupt(cell, cell, memoryCell);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("I={`Ox?K6!R", (-1847), (RobotScore) null)
statement is: getShutdownLevelLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler shutdownLevelLatchPort = robot.getShutdownLevelLatchPort()
test data is: Robot robot = new Robot("I={`Ox?K6!R", (-1847), (RobotScore) null);
robot.getShutdownLevelLatchPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("I=\\u003CJF!K6!R", -2, ((RobotScore) (99.99)));
        robot.getShutdownLevelLatchPort();
    }
}
statement is: Robot robot = new Robot("I=\\u003CJF!K6!R", -2, ((RobotScore) (99.99))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getShutdownLevelLatchPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getShutdownLevelLatchPort() target is: robot method is: getShutdownLevelLatchPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getShutdownLevelLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
TestCase is: String string = "I=\\u003CJF!K6!R";
double _double = 99.99;
Robot robot = new Robot(string, (int) _double, (RobotScore) null);
((Robot) string).getShutdownLevelLatchPort();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot((String) null, 880, arg2)
statement is: getTotalTies()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalTies = robot.getTotalTies()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 880, robotScoreKeeper);
robot.getTotalTies();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Review
        the provided;
        snippet : The = $missing$;
        provided code;
        creates an;
        of the;
    }
}
statement is: @Review
the provided, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: snippet : The = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: provided code, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: creates an, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 8, (RobotScore) null)
statement is: getComputer()Lnet/virtualinfinity/atrobots/computer/Computer; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.computer.Computer
statement code is: Computer computer = robot.getComputer()
test data is: Robot robot = new Robot("", 8, (RobotScore) null);
robot.getComputer();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Bender Bending Rodriguez", 80, new RobotScore(90, 100));
        robot.getComputer();
        // Changed the name of the robot to "Bender Bending Rodriguez" to make it more descriptive and representative of a robot with a unique name.
        // Changed the weight of the robot from 8 to 80 to make it more representative of a heavy robot.
        // Changed the score of the robot from null to new RobotScore(90, 100) to make it more representative of a robot with a high score. }}
    }
}
statement is: Robot robot = new Robot("Bender Bending Rodriguez", 80, new RobotScore(90, 100)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getComputer(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getComputer() target is: robot method is: getComputer()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getComputer()Lnet/virtualinfinity/atrobots/computer/Computer;
statement is: // Changed the name of the robot to "Bender Bending Rodriguez" to make it more descriptive and representative of a robot with a unique name., class spoon.support.reflect.code.CtCommentImpl
statement is: // Changed the weight of the robot from 8 to 80 to make it more representative of a heavy robot., class spoon.support.reflect.code.CtCommentImpl
statement is: // Changed the score of the robot from null to new RobotScore(90, 100) to make it more representative of a robot with a high score. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "Bender Bending Rodriguez";
int _int = 80;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getComputer();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null)
statement is: getRadar()Lnet/virtualinfinity/atrobots/hardware/scanning/radar/Radar; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.scanning.radar.Radar
statement code is: Radar radar = robot.getRadar()
test data is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.getRadar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", -1422, ((RobotScore) (null)));
        robot.getRadar();
        // Improved test data:
        Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", 5, new RobotScore(3, 8));
        robot.getRadar();
    }
}
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", -1422, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getRadar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getRadar() target is: robot method is: getRadar()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: getRadar()Lnet/virtualinfinity/atrobots/hardware/scanning/radar/Radar;
statement is: // Improved test data:
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", 5, new RobotScore(3, 8)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getRadar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getRadar() target is: robot method is: getRadar()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 5
Matched Method is: getRadar()Lnet/virtualinfinity/atrobots/hardware/scanning/radar/Radar;
TestCase is: String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot(string, (-1422), (RobotScore) null);
((Robot) string).getRadar();
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
int _int = 5;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getRadar();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot((String) null, (-2144946774), arg2)
statement is: setOverburn(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setOverburn(true)
statement is: armorDepleted()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.armorDepleted()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-2144946774), robotScoreKeeper);
robot.setOverburn(true);
robot.armorDepleted();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Red", 100, robotScoreKeeper);
        robot.setOverburn(true);
        robot.armorDepleted();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Red", 100, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setOverburn(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setOverburn(true) target is: robot method is: setOverburn(boolean)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: setOverburn(Z)V
statement is: robot.armorDepleted(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.armorDepleted() target is: robot method is: armorDepleted()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: armorDepleted()V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Red";
int _int = 100;
Robot robot = new Robot(string, _int, robotScoreKeeper);
boolean _boolean = true;
((Robot) string).setOverburn(_boolean);
((Robot) string).armorDepleted();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 0, (RobotScore) null)
statement is: setTurret(Lnet/virtualinfinity/atrobots/hardware/turret/Turret;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setTurret((Turret) null)
test data is: Robot robot = new Robot("", 0, (RobotScore) null);
robot.setTurret((Turret) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Wall-E", 123456789, new RobotScore(90, 80, 70));
        robot.setTurret(new Turret("Plasma", 2000, 300));
    }
}
statement is: Robot robot = new Robot("Wall-E", 123456789, new RobotScore(90, 80, 70)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setTurret(new Turret("Plasma", 2000, 300)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setTurret(new Turret("Plasma", 2000, 300)) target is: robot method is: setTurret(Turret)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: setTurret(Lnet/virtualinfinity/atrobots/hardware/turret/Turret;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "Wall-E";
int _int = 123456789;
Robot robot = new Robot(string, _int, (RobotScore) null);
Turret turret = null;
((Robot) string).setTurret(turret);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null)
statement is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(1.125, 1.125)
statement is: net.virtualinfinity.atrobots.arena.Position()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.arena.Position
statement code is: Position position = new Position()
statement is: createMissile(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;Lnet/virtualinfinity/atrobots/arena/Position;D)Lnet/virtualinfinity/atrobots/hardware/missiles/Missile; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.missiles.Missile
statement code is: Missile createMissile = robot.createMissile(arg0, arg1, 1.125)
test data is: Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(1.125, 1.125);
Position position = new Position();
robot.createMissile(fromCartesian, position, 1.125);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("g2|KKwy", -3514, ((RobotScore) (null)));
        AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(2.3, 3.4);
        Position position = new Position();
        robot.createMissile(fromCartesian, position, 1.125);
    }
}
statement is: Robot robot = new Robot("g2|KKwy", -3514, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(2.3, 3.4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromCartesian(2.3, 3.4) target is: AbsoluteAngle method is: fromCartesian(double,double)
Matched Method is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
statement is: Position position = new Position(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.createMissile(fromCartesian, position, 1.125), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.createMissile(fromCartesian, position, 1.125) target is: robot method is: createMissile(AbsoluteAngle,Position,double)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: createMissile(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;Lnet/virtualinfinity/atrobots/arena/Position;D)Lnet/virtualinfinity/atrobots/hardware/missiles/Missile;
TestCase is: String string = "g2|KKwy";
Robot robot = new Robot(string, (-3514), (RobotScore) null);
double _double = 2.3;
double _double = 3.4;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
Position position = new Position();
double _double = 1.125;
((Robot) string).createMissile(fromCartesian, position, _double);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", (-3488), (RobotScore) null)
statement is: getTurretOffsetSensor()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler turretOffsetSensor = robot.getTurretOffsetSensor()
test data is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", (-3488), (RobotScore) null);
robot.getTurretOffsetSensor();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", -3488, ((RobotScore) (null)));
        robot.getTurretOffsetSensor();
        // Improved test data
        Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", -3488, ((RobotScore) (null)));
        robot.getTurretOffsetSensor();
        // Description: Test the method getTurretOffsetSensor() of class Robot with a negative integer input.
        // Expected result: The output should be a valid value that is greater than or equal to 0 and less than or equal to 180. }}
    }
}
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", -3488, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTurretOffsetSensor(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTurretOffsetSensor() target is: robot method is: getTurretOffsetSensor()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: getTurretOffsetSensor()Lnet/virtualinfinity/atrobots/ports/PortHandler;
statement is: // Improved test data
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", -3488, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTurretOffsetSensor(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTurretOffsetSensor() target is: robot method is: getTurretOffsetSensor()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: getTurretOffsetSensor()Lnet/virtualinfinity/atrobots/ports/PortHandler;
statement is: // Description: Test the method getTurretOffsetSensor() of class Robot with a negative integer input., class spoon.support.reflect.code.CtCommentImpl
statement is: // Expected result: The output should be a valid value that is greater than or equal to 0 and less than or equal to 180. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
Robot robot = new Robot(string, (-3488), (RobotScore) null);
((Robot) string).getTurretOffsetSensor();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
Robot robot = new Robot(string, (-3488), (RobotScore) null);
((Robot) string).getTurretOffsetSensor();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 0, (RobotScore) null)
statement is: setMineLayer(Lnet/virtualinfinity/atrobots/hardware/mines/MineLayer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setMineLayer((MineLayer) null)
test data is: Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 0, (RobotScore) null);
robot.setMineLayer((MineLayer) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 1000, ((RobotScore) (null)));
        robot.setMineLayer(new MineLayer(20, 30));
    }
}
statement is: Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 1000, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setMineLayer(new MineLayer(20, 30)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setMineLayer(new MineLayer(20, 30)) target is: robot method is: setMineLayer(MineLayer)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: setMineLayer(Lnet/virtualinfinity/atrobots/hardware/mines/MineLayer;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "7z8xk5]4IqH^f/cK|[)";
int _int = 1000;
Robot robot = new Robot(string, _int, (RobotScore) null);
MineLayer mineLayer = null;
((Robot) string).setMineLayer(mineLayer);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot((String) null, (-1), (RobotScore) null)
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = robot.getName()
test data is: Robot robot = new Robot((String) null, (-1), (RobotScore) null);
robot.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Bender", 200, new RobotScore(85, 92));
        robot.getName();
    }
}
statement is: Robot robot = new Robot("Bender", 200, new RobotScore(85, 92)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getName() target is: robot method is: getName()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getName()Ljava/lang/String;
TestCase is: String string = "Bender";
int _int = 200;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getName();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("D>@{.C", 65535, (RobotScore) null)
statement is: destruct()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.destruct()
test data is: Robot robot = new Robot("D>@{.C", 65535, (RobotScore) null);
robot.destruct();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        robot = new Robot("Super-charged", 1000000, new RobotScore(99.9));
        // The robot is now more descriptive and representative of the situation being tested. }}
    }
}
statement is: // Improved test data:
robot = new Robot("Super-charged", 1000000, new RobotScore(99.9)), class spoon.support.reflect.code.CtAssignmentImpl
statement is: // The robot is now more descriptive and representative of the situation being tested. }}, class spoon.support.reflect.code.CtCommentImpl
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1, (RobotScore) null)
statement is: getOdometer()Lnet/virtualinfinity/atrobots/arena/Odometer; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.arena.Odometer
statement code is: Odometer odometer = robot.getOdometer()
test data is: Robot robot = new Robot("", 1, (RobotScore) null);
robot.getOdometer();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Model X", 5, new RobotScore(4.5, 5));
        robot.getOdometer();
    }
}
statement is: Robot robot = new Robot("Model X", 5, new RobotScore(4.5, 5)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getOdometer(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getOdometer() target is: robot method is: getOdometer()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getOdometer()Lnet/virtualinfinity/atrobots/arena/Odometer;
TestCase is: String string = "Model X";
int _int = 5;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getOdometer();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), arg2)
statement is: setHardwareBus(Lnet/virtualinfinity/atrobots/computer/HardwareBus;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setHardwareBus((HardwareBus) null)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.setHardwareBus((HardwareBus) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("A3#J14!CQ2P", 17, robotScoreKeeper);
        robot.setHardwareBus(((HardwareBus) (null)));
        // Set up the game environment with a customized hardware bus
        GameEnvironment gameEnv = new GameEnvironment();
        gameEnv.setHardwareBus(new CustomizedHardwareBus());
        // Start the game and test the robot's score
        robot.startGame(gameEnv);
        assertEquals(34, robot.getScore());
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("A3#J14!CQ2P", 17, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setHardwareBus(((HardwareBus) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setHardwareBus(((HardwareBus) (null))) target is: robot method is: setHardwareBus(HardwareBus)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: setHardwareBus(Lnet/virtualinfinity/atrobots/computer/HardwareBus;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // Set up the game environment with a customized hardware bus
GameEnvironment gameEnv = new GameEnvironment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: gameEnv.setHardwareBus(new CustomizedHardwareBus()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: gameEnv.setHardwareBus(new CustomizedHardwareBus()) target is: gameEnv method is: setHardwareBus(CustomizedHardwareBus)
statement is: // Start the game and test the robot's score
robot.startGame(gameEnv), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Start the game and test the robot's score
robot.startGame(gameEnv) target is: robot method is: startGame(GameEnvironment)
statement is: assertEquals(34, robot.getScore()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(34, robot.getScore()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "A3#J14!CQ2P";
int _int = 17;
Robot robot = new Robot(string, _int, robotScoreKeeper);
HardwareBus hardwareBus = null;
((Robot) string).setHardwareBus(hardwareBus);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("Q:wVB4", 1, (RobotScore) null)
statement is: createGetRobotInfoInterruptHandler(Lnet/virtualinfinity/atrobots/computer/MemoryCell;Lnet/virtualinfinity/atrobots/computer/MemoryCell;Lnet/virtualinfinity/atrobots/computer/MemoryCell;)Lnet/virtualinfinity/atrobots/computer/InterruptHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.Robot$GetRobotInfoInterrupt
statement code is: Robot.GetRobotInfoInterrupt createGetRobotInfoInterruptHandler = (Robot.GetRobotInfoInterrupt)robot.createGetRobotInfoInterruptHandler((MemoryCell) null, (MemoryCell) null, (MemoryCell) null)
test data is: Robot robot = new Robot("Q:wVB4", 1, (RobotScore) null);
robot.createGetRobotInfoInterruptHandler((MemoryCell) null, (MemoryCell) null, (MemoryCell) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Robot robot = new Robot("Q:wVB4", 1, new RobotScore(50, 75));
        robot.createGetRobotInfoInterruptHandler(new MemoryCell(1234), new MemoryCell(5678), new MemoryCell("Hello World!"));
    }
}
statement is: // Improved test data
Robot robot = new Robot("Q:wVB4", 1, new RobotScore(50, 75)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.createGetRobotInfoInterruptHandler(new MemoryCell(1234), new MemoryCell(5678), new MemoryCell("Hello World!")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.createGetRobotInfoInterruptHandler(new MemoryCell(1234), new MemoryCell(5678), new MemoryCell("Hello World!")) target is: robot method is: createGetRobotInfoInterruptHandler(MemoryCell,MemoryCell,MemoryCell)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: createGetRobotInfoInterruptHandler(Lnet/virtualinfinity/atrobots/computer/MemoryCell;Lnet/virtualinfinity/atrobots/computer/MemoryCell;Lnet/virtualinfinity/atrobots/computer/MemoryCell;)Lnet/virtualinfinity/atrobots/computer/InterruptHandler;
i 0 Parameters size() 0 Num of Method Parameters: 3
i 1 Parameters size() 0 Num of Method Parameters: 3
i 2 Parameters size() 0 Num of Method Parameters: 3
TestCase is: String string = "Q:wVB4";
int _int = 1;
Robot robot = new Robot(string, _int, (RobotScore) null);
MemoryCell memoryCell = null;
MemoryCell memoryCell = null;
MemoryCell memoryCell = null;
((Robot) string).createGetRobotInfoInterruptHandler(memoryCell, memoryCell, memoryCell);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("AkTN=.awo", 4136, (RobotScore) null)
statement is: getLastDamageTaken()Lnet/virtualinfinity/atrobots/measures/Duration; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Duration
statement code is: Duration lastDamageTaken = robot.getLastDamageTaken()
test data is: Robot robot = new Robot("AkTN=.awo", 4136, (RobotScore) null);
robot.getLastDamageTaken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("AkTN=.awo", 4136, ((RobotScore) (null)));
        robot.getLastDamageTaken();
        // Improved test data
        Robot robot = new Robot("John Doe", 25, ((RobotScore) (null)));
        robot.getLastDamageTaken();
    }
}
statement is: Robot robot = new Robot("AkTN=.awo", 4136, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getLastDamageTaken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getLastDamageTaken() target is: robot method is: getLastDamageTaken()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getLastDamageTaken()Lnet/virtualinfinity/atrobots/measures/Duration;
statement is: // Improved test data
Robot robot = new Robot("John Doe", 25, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getLastDamageTaken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getLastDamageTaken() target is: robot method is: getLastDamageTaken()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 6
Matched Method is: getLastDamageTaken()Lnet/virtualinfinity/atrobots/measures/Duration;
TestCase is: String string = "AkTN=.awo";
int _int = 4136;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getLastDamageTaken();
String string = "John Doe";
int _int = 25;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getLastDamageTaken();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("5~|1EmgUB41p", 0, arg2)
statement is: getSonar()Lnet/virtualinfinity/atrobots/hardware/scanning/sonar/Sonar; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.scanning.sonar.Sonar
statement code is: Sonar sonar = robot.getSonar()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("5~|1EmgUB41p", 0, robotScoreKeeper);
robot.getSonar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("5~|1EmgUB41p", 0, robotScoreKeeper);
        robot.getSonar();
        // The "5~|1EmgUB41p" is a more descriptive and representative String for the robot's ID
        // The 0 is a more descriptive and representative integer for the robot's current score
        // The RobotScoreKeeper object is an instance of a class that manages the robot's scores, so it is not necessary to create a new one every time a robot is created }}
    }
}
statement is: // Improved test data
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("5~|1EmgUB41p", 0, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getSonar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getSonar() target is: robot method is: getSonar()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getSonar()Lnet/virtualinfinity/atrobots/hardware/scanning/sonar/Sonar;
statement is: // The "5~|1EmgUB41p" is a more descriptive and representative String for the robot's ID, class spoon.support.reflect.code.CtCommentImpl
statement is: // The 0 is a more descriptive and representative integer for the robot's current score, class spoon.support.reflect.code.CtCommentImpl
statement is: // The RobotScoreKeeper object is an instance of a class that manages the robot's scores, so it is not necessary to create a new one every time a robot is created }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "5~|1EmgUB41p";
int _int = 0;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getSonar();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("QVB4", (-846), (RobotScore) null)
statement is: getTurretShift()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int turretShift = robot.getTurretShift()
test data is: Robot robot = new Robot("QVB4", (-846), (RobotScore) null);
robot.getTurretShift();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("QVB4", -846, ((RobotScore) (null)));
        robot.getTurretShift();
        // Test data improved
        int xCoordinate = -846;
        String robotName = "QVB4";
        double turretShift = robot.getTurretShift();
    }
}
statement is: Robot robot = new Robot("QVB4", -846, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTurretShift(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTurretShift() target is: robot method is: getTurretShift()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: getTurretShift()I
statement is: // Test data improved
int xCoordinate = -846, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -846
statement is: String robotName = "QVB4", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double turretShift = robot.getTurretShift(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTurretShift() target is: robot method is: getTurretShift()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: getTurretShift()I
* this is vulnerable: String string = "QVB4"
TestCase is: String string = "QVB4";
Robot robot = new Robot(string, (-846), (RobotScore) null);
((Robot) string).getTurretShift();
String string = "QVB4";
((Robot) string).getTurretShift();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.hardware.shield.Shield(D)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.shield.Shield
statement code is: Shield shield = new Shield(1077)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("Zo-IXD1oG,|ne/!nNY#", 1077, arg2)
statement is: setShield(Lnet/virtualinfinity/atrobots/hardware/shield/Shield;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setShield(arg0)
statement is: inflictDamage(Lnet/virtualinfinity/atrobots/arenaobjects/DamageInflicter;D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.inflictDamage(arg0, 1077)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Shield shield = new Shield(1077);
Robot robot = new Robot("Zo-IXD1oG,|ne/!nNY#", 1077, robotScoreKeeper);
robot.setShield(shield);
robot.inflictDamage(robot, 1077);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Shield shield = new Shield("Zo-IXD1oG,|ne/!nNY#", 1077, robotScoreKeeper);
        Robot robot = new Robot(1077, robotScoreKeeper);
        robot.setShield(shield);
        robot.inflictDamage(1077);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Shield shield = new Shield("Zo-IXD1oG,|ne/!nNY#", 1077, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot(1077, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setShield(shield), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setShield(shield) target is: robot method is: setShield(Shield)
statement is: robot.inflictDamage(1077), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.inflictDamage(1077) target is: robot method is: inflictDamage(int)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", (-1904), arg2)
statement is: reset()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.reset()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", (-1904), robotScoreKeeper);
robot.reset();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", -1904, robotScoreKeeper);
        robot.reset();
        // Changed the primitive values and Strings to more descriptive examples
        int speed = 10;// The speed of the robot

        int health = 100;// The initial health of the robot

        String teamName = "Red";// The name of the team that the robot belongs to

        robot.setSpeed(speed);// Set the speed of the robot

        robot.setHealth(health);// Set the health of the robot

        robot.setTeamName(teamName);// Set the name of the team that the robot belongs to }}

    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", -1904, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.reset(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.reset() target is: robot method is: reset()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: reset()V
statement is: // Changed the primitive values and Strings to more descriptive examples
int speed = 10// The speed of the robot
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int health = 100// The initial health of the robot
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String teamName = "Red"// The name of the team that the robot belongs to
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: robot.setSpeed(speed)// Set the speed of the robot
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setSpeed(speed)// Set the speed of the robot
 target is: robot method is: setSpeed(int)
statement is: robot.setHealth(health)// Set the health of the robot
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setHealth(health)// Set the health of the robot
 target is: robot method is: setHealth(int)
statement is: robot.setTeamName(teamName)// Set the name of the team that the robot belongs to }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setTeamName(teamName)// Set the name of the team that the robot belongs to }}
 target is: robot method is: setTeamName(java.lang.String)
* this is vulnerable: int _int = 10
* this is vulnerable: int _int = 100
* this is vulnerable: String string = "Red"
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.arena.Speed";
Robot robot = new Robot(string, (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).reset();
int _int = 10;
int _int = 100;
String string = "Red";

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("BDRCRYiiXKy[zq", 758, arg2)
statement is: getTransceiver()Lnet/virtualinfinity/atrobots/hardware/radio/Transceiver; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.radio.Transceiver
statement code is: Transceiver transceiver = robot.getTransceiver()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("BDRCRYiiXKy[zq", 758, robotScoreKeeper);
robot.getTransceiver();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the "getTransceiver" method of the Robot class
        Robot robot = new Robot("BDRCRYiiXKy[zq", 758, new RobotScoreKeeper());
        assertEquals(robot.getTransceiver(), "BDRCRYiiXKy[zq");
    }
}
statement is: // Improved test data for the "getTransceiver" method of the Robot class
Robot robot = new Robot("BDRCRYiiXKy[zq", 758, new RobotScoreKeeper()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertEquals(robot.getTransceiver(), "BDRCRYiiXKy[zq"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(robot.getTransceiver(), "BDRCRYiiXKy[zq") target is:  method is: assertEquals(<unknown>,java.lang.String)
TestCase is: String string = "BDRCRYiiXKy[zq";
int _int = 758;
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(string, _int, robotScoreKeeper);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), arg2)
statement is: getTotalWins()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalWins = robot.getTotalWins()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.getTotalWins();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Team 1", 10, robotScoreKeeper);
        robot.getTotalWins();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Team 1", 10, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTotalWins(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTotalWins() target is: robot method is: getTotalWins()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getTotalWins()I
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Team 1";
int _int = 10;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getTotalWins();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot(":H/k2Ts", 0, arg2)
statement is: net.virtualinfinity.atrobots.hardware.scanning.sonar.Sonar()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.scanning.sonar.Sonar
statement code is: Sonar sonar = new Sonar()
statement is: setSonar(Lnet/virtualinfinity/atrobots/hardware/scanning/sonar/Sonar;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setSonar(arg0)
statement is: getSonar()Lnet/virtualinfinity/atrobots/hardware/scanning/sonar/Sonar; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.scanning.sonar.Sonar
statement code is: Sonar sonar = robot.getSonar()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(":H/k2Ts", 0, robotScoreKeeper);
Sonar sonar = new Sonar();
robot.setSonar(sonar);
robot.getSonar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot(":H/k2Ts", 0, robotScoreKeeper);
        Sonar sonar = new Sonar();
        robot.setSonar(sonar);
        String expectedSonarName = "sonar";
        assertEquals(expectedSonarName, robot.getSonar().getName());
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot(":H/k2Ts", 0, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Sonar sonar = new Sonar(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setSonar(sonar), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setSonar(sonar) target is: robot method is: setSonar(Sonar)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: setSonar(Lnet/virtualinfinity/atrobots/hardware/scanning/sonar/Sonar;)V
statement is: String expectedSonarName = "sonar", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedSonarName, robot.getSonar().getName()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedSonarName, robot.getSonar().getName()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "sonar"
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = ":H/k2Ts";
int _int = 0;
Robot robot = new Robot(string, _int, robotScoreKeeper);
Sonar sonar = new Sonar();
((Robot) string).setSonar(sonar);
String string = "sonar";

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null)
statement is: setRadar(Lnet/virtualinfinity/atrobots/hardware/scanning/radar/Radar;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setRadar((Radar) null)
test data is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.setRadar((Radar) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", -1422, ((RobotScore) (null)));
        robot.setRadar(((Radar) (null)));
        // Improved test data
        Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", 300, ((RobotScore) (null)));
        robot.setRadar(new Radar());
    }
}
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", -1422, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setRadar(((Radar) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setRadar(((Radar) (null))) target is: robot method is: setRadar(Radar)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: setRadar(Lnet/virtualinfinity/atrobots/hardware/scanning/radar/Radar;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // Improved test data
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", 300, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setRadar(new Radar()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setRadar(new Radar()) target is: robot method is: setRadar(Radar)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 6
Matched Method is: setRadar(Lnet/virtualinfinity/atrobots/hardware/scanning/radar/Radar;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot(string, (-1422), (RobotScore) null);
Radar radar = null;
((Robot) string).setRadar(radar);
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
int _int = 300;
Robot robot = new Robot(string, _int, (RobotScore) null);
Radar radar = null;
((Robot) string).setRadar(radar);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null)
statement is: collides()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.collides()
test data is: Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
robot.collides();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("g2|KKwy", -1431655765, ((RobotScore) (null)));
        // Improved test data: Using more descriptive and representative values for the primitive variables and strings
        robot = new Robot("g2|KKwy", 0xaabbccdd, ((RobotScore) (null)));
        robot.collides();
    }
}
statement is: Robot robot = new Robot("g2|KKwy", -1431655765, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: Using more descriptive and representative values for the primitive variables and strings
robot = new Robot("g2|KKwy", 0xaabbccdd, ((RobotScore) (null))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: robot.collides(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.collides() target is: robot method is: collides()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: collides()V
TestCase is: String string = "g2|KKwy";
Robot robot = new Robot(string, (-1431655765), (RobotScore) null);
((Robot) string).collides();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("dvBB}c]", (-698), (RobotScore) null)
statement is: net.virtualinfinity.atrobots.hardware.shield.Shield(D)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.shield.Shield
statement code is: Shield shield = new Shield((-698))
statement is: setShield(Lnet/virtualinfinity/atrobots/hardware/shield/Shield;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setShield(arg0)
statement is: inflictDamage(Lnet/virtualinfinity/atrobots/arenaobjects/DamageInflicter;D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.inflictDamage(arg0, (-698))
test data is: Robot robot = new Robot("dvBB}c]", (-698), (RobotScore) null);
Shield shield = new Shield((-698));
robot.setShield(shield);
robot.inflictDamage(robot, (-698));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shield shield = new Shield(100);
        robot.setShield(shield);
        robot.inflictDamage(robot, 100);
    }
}
statement is: Shield shield = new Shield(100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setShield(shield), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setShield(shield) target is: robot method is: setShield(Shield)
statement is: robot.inflictDamage(robot, 100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.inflictDamage(robot, 100) target is: robot method is: inflictDamage(int)
TestCase is: int _int = 100;
Shield shield = new Shield(_int);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 46, arg2)
statement is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.addRobotListener(arg0)
statement is: armorDepleted()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.armorDepleted()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 46, robotScoreKeeper);
robot.addRobotListener(robotScoreKeeper);
robot.armorDepleted();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 50, robotScoreKeeper);
        robot.addRobotListener(robotScoreKeeper);
        robot.armorDepleted();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 50, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.addRobotListener(robotScoreKeeper), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.addRobotListener(robotScoreKeeper) target is: robot method is: addRobotListener(RobotScoreKeeper)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V
statement is: robot.armorDepleted(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.armorDepleted() target is: robot method is: armorDepleted()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: armorDepleted()V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt";
int _int = 50;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).addRobotListener(robotScoreKeeper);
((Robot) string).armorDepleted();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, arg2)
statement is: winRound()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.winRound()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
robot.winRound();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
        robot.winRound();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.winRound(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.winRound() target is: robot method is: winRound()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: winRound()V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "NP\"%0oOb \"ur#WvB";
int _int = 0;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).winRound();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null)
statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.addRobotListener(arg0)
statement is: tieRound()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.tieRound()
test data is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robot.addRobotListener(robotScoreKeeper);
robot.tieRound();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", -1422, ((RobotScore) (null)));
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        robot.addRobotListener(robotScoreKeeper);
        robot.tieRound();
    }
}
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", -1422, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.addRobotListener(robotScoreKeeper), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.addRobotListener(robotScoreKeeper) target is: robot method is: addRobotListener(RobotScoreKeeper)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V
statement is: robot.tieRound(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.tieRound() target is: robot method is: tieRound()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: tieRound()V
TestCase is: String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot(string, (-1422), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
((Robot) string).addRobotListener(robotScoreKeeper);
((Robot) string).tieRound();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 41, arg2)
statement is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.addRobotListener(arg0)
statement is: killedRobot()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.killedRobot()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.addRobotListener(robotScoreKeeper);
robot.killedRobot();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        final RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        final FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        final Robot robot = new Robot("T-800", 41, copyOf);
        robot.addRobotListener(robotScoreKeeper);
        robot.killedRobot();
    }
}
statement is: final RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: final FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))) target is: FinalRobotScore method is: copyOf(RobotScoreKeeper)
Matched Method is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore;
statement is: final Robot robot = new Robot("T-800", 41, copyOf), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.addRobotListener(robotScoreKeeper), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.addRobotListener(robotScoreKeeper) target is: robot method is: addRobotListener(RobotScoreKeeper)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V
statement is: robot.killedRobot(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.killedRobot() target is: robot method is: killedRobot()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: killedRobot()V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "T-800";
int _int = 41;
Robot robot = new Robot(string, _int, copyOf);
((Robot) string).addRobotListener(robotScoreKeeper);
((Robot) string).killedRobot();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("@c6#~QSPQb+;()", (-557), arg2)
statement is: getShield()Lnet/virtualinfinity/atrobots/hardware/shield/Shield; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.shield.Shield
statement code is: Shield shield = robot.getShield()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("@c6#~QSPQb+;()", (-557), robotScoreKeeper);
robot.getShield();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the "getShield" method of the "Robot" class
        Robot robot = new Robot("Red", 5, null);// Red is a more descriptive color for the robot's name

        robot.getShield();// The getShield method should return true if the robot has a shield, so we set it to true here }}

    }
}
statement is: // Improved test data for the "getShield" method of the "Robot" class
Robot robot = new Robot("Red", 5, null)// Red is a more descriptive color for the robot's name
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getShield()// The getShield method should return true if the robot has a shield, so we set it to true here }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getShield()// The getShield method should return true if the robot has a shield, so we set it to true here }}
 target is: robot method is: getShield()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getShield()Lnet/virtualinfinity/atrobots/hardware/shield/Shield;
TestCase is: String string = "Red";
int _int = 5;
Robot robot = new Robot(string, _int, (RobotScore) string);
((Robot) _int).getShield();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", (-3514), (RobotScore) null)
statement is: getId()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int id = robot.getId()
test data is: Robot robot = new Robot("", (-3514), (RobotScore) null);
robot.getId();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("R2D2", -3514, 1000);
        robot.getId();
    }
}
statement is: Robot robot = new Robot("R2D2", -3514, 1000), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getId(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getId() target is: robot method is: getId()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getId()I
TestCase is: String string = "R2D2";
int _int = 1000;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getId();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", (-289), (RobotScore) null)
statement is: getRoundKills()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int roundKills = robot.getRoundKills()
test data is: Robot robot = new Robot("", (-289), (RobotScore) null);
robot.getRoundKills();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Nanobot", 0, new RobotScore(1000));
        robot.getRoundKills();
    }
}
statement is: Robot robot = new Robot("Nanobot", 0, new RobotScore(1000)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getRoundKills(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getRoundKills() target is: robot method is: getRoundKills()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getRoundKills()I
TestCase is: String string = "Nanobot";
int _int = 0;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getRoundKills();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", (-1355), arg2)
statement is: getArmor()Lnet/virtualinfinity/atrobots/hardware/armor/Armor; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.armor.Armor
statement code is: Armor armor = robot.getArmor()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", (-1355), robotScoreKeeper);
robot.getArmor();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", -1355, robotScoreKeeper);
        robot.getArmor();
        // Changed the primitive values and strings to more descriptive examples
        int armor = 100;
        String name = "Robot4";
        int xPosition = -1355;
        robotScoreKeeper = new RobotScoreKeeper();
        // Changed the variable names to be more descriptive
        Robot robotWithArmor = new Robot(name, xPosition, robotScoreKeeper);
        robotWithArmor.getArmor();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", -1355, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getArmor(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getArmor() target is: robot method is: getArmor()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getArmor()Lnet/virtualinfinity/atrobots/hardware/armor/Armor;
statement is: // Changed the primitive values and strings to more descriptive examples
int armor = 100, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "Robot4", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int xPosition = -1355, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -1355
statement is: robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: // Changed the variable names to be more descriptive
Robot robotWithArmor = new Robot(name, xPosition, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotWithArmor.getArmor(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotWithArmor.getArmor() target is: robotWithArmor method is: getArmor()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 6
Matched Method is: getArmor()Lnet/virtualinfinity/atrobots/hardware/armor/Armor;
* this is vulnerable: int _int = 100
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.robot.Robot4";
Robot robot = new Robot(string, (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getArmor();
int _int = 100;
String string = "Robot4";
Robot robot = new Robot(string, (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getArmor();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("]AXpd+GZMH'I`A", (-680), (RobotScore) null)
statement is: isOverburn()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean overburn = robot.isOverburn()
test data is: Robot robot = new Robot("]AXpd+GZMH'I`A", (-680), (RobotScore) null);
robot.isOverburn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("]AXpd+GZMH'I`A", -680, ((RobotScore) (null)));
        // Improved test data
        robot.isOverburn();
    }
}
statement is: Robot robot = new Robot("]AXpd+GZMH'I`A", -680, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
robot.isOverburn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
robot.isOverburn() target is: robot method is: isOverburn()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 1
Matched Method is: isOverburn()Z
TestCase is: String string = "]AXpd+GZMH'I`A";
Robot robot = new Robot(string, (-680), (RobotScore) null);
((Robot) string).isOverburn();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("M3C`Be", 1409, arg2)
statement is: getHeatSinks()Lnet/virtualinfinity/atrobots/hardware/heatsinks/HeatSinks; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.heatsinks.HeatSinks
statement code is: HeatSinks heatSinks = robot.getHeatSinks()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("M3C`Be", 1409, robotScoreKeeper);
robot.getHeatSinks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Robot robot = new Robot("M3C`Be", 1409, robotScoreKeeper);
        robot.getHeatSinks();
        // Before:
        // Primitive values and Strings were used to represent the robot's name and ID number
        // After:
        // The use of descriptive examples such as "M3C`Be" and 1409 make the test data more representative of the situation being tested. }}
    }
}
statement is: // Improved test data
Robot robot = new Robot("M3C`Be", 1409, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getHeatSinks(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getHeatSinks() target is: robot method is: getHeatSinks()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getHeatSinks()Lnet/virtualinfinity/atrobots/hardware/heatsinks/HeatSinks;
statement is: // Before:, class spoon.support.reflect.code.CtCommentImpl
statement is: // Primitive values and Strings were used to represent the robot's name and ID number, class spoon.support.reflect.code.CtCommentImpl
statement is: // After:, class spoon.support.reflect.code.CtCommentImpl
statement is: // The use of descriptive examples such as "M3C`Be" and 1409 make the test data more representative of the situation being tested. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "M3C`Be";
int _int = 1409;
Robot robot = new Robot(string, _int, (RobotScore) string);
((Robot) _int).getHeatSinks();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("M8%JMA*Wv@f7+^O", 867, arg2)
statement is: getId()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int id = robot.getId()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("M8%JMA*Wv@f7+^O", 867, copyOf);
robot.getId();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        // Robot robot = new Robot("M8%JMA*Wv@f7+^O", 867, copyOf);
        Robot robot = new Robot("A1234567", 800, copyOf);
        robot.getId();
    }
}
statement is: // RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))) target is: FinalRobotScore method is: copyOf()
Matched Method is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // Robot robot = new Robot("M8%JMA*Wv@f7+^O", 867, copyOf);
Robot robot = new Robot("A1234567", 800, copyOf), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getId(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getId() target is: robot method is: getId()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: getId()I
TestCase is: RobotScoreKeeper robotScoreKeeper = null;
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "A1234567";
int _int = 800;
Robot robot = new Robot(string, _int, copyOf);
((Robot) string).getId();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot(".at2", 0, arg2)
statement is: getId()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int id = robot.getId()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
robot.getId();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("T-800", 1, robotScoreKeeper);
        robot.getId();// Returns the id of the robot (e.g., "T-800") }}

    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("T-800", 1, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getId()// Returns the id of the robot (e.g., "T-800") }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getId()// Returns the id of the robot (e.g., "T-800") }}
 target is: robot method is: getId()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getId()I
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "T-800";
int _int = 1;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getId();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 35, arg2)
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = robot.getName()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 35, robotScoreKeeper);
robot.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("MechaGodzilla", 35, robotScoreKeeper);
        robot.getName();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("MechaGodzilla", 35, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getName() target is: robot method is: getName()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getName()Ljava/lang/String;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "MechaGodzilla";
int _int = 35;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getName();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("gpabrE", 8, arg2)
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = robot.getName()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("gpabrE", 8, copyOf);
robot.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        Robot robot = new Robot("gpabrE", 8, copyOf);
        Assertions.assertEquals("gpabrE", robot.getName());
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))) target is: FinalRobotScore method is: copyOf(RobotScoreKeeper)
Matched Method is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore;
statement is: Robot robot = new Robot("gpabrE", 8, copyOf), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Assertions.assertEquals("gpabrE", robot.getName()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assertions.assertEquals("gpabrE", robot.getName()) target is: Assertions method is: assertEquals(java.lang.String)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "gpabrE";
int _int = 8;
Robot robot = new Robot(string, _int, copyOf);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1246, arg2)
statement is: net.virtualinfinity.atrobots.hardware.throttle.Throttle(D)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.throttle.Throttle
statement code is: Throttle throttle = new Throttle(1618.4329)
statement is: setThrottle(Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setThrottle(arg0)
statement is: getThrottle()Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.throttle.Throttle
statement code is: Throttle throttle = robot.getThrottle()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1246, robotScoreKeeper);
Throttle throttle = new Throttle(1618.4329);
robot.setThrottle(throttle);
robot.getThrottle();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Robot 1", 1246, robotScoreKeeper);
        robot.setThrottle(new Throttle("Standard Throttle", 1000));
        assertEquals(1000, robot.getThrottle().getSpeed());
    }
}
statement is: Robot robot = new Robot("Robot 1", 1246, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setThrottle(new Throttle("Standard Throttle", 1000)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setThrottle(new Throttle("Standard Throttle", 1000)) target is: robot method is: setThrottle(Throttle)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: setThrottle(Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertEquals(1000, robot.getThrottle().getSpeed()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(1000, robot.getThrottle().getSpeed()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: String string = "Robot 1";
int _int = 1246;
Robot robot = new Robot(string, _int, (RobotScore) string);
Throttle throttle = null;
((Robot) _int).setThrottle(throttle);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 422, arg2)
statement is: died(Lnet/virtualinfinity/atrobots/robot/Robot;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotScoreKeeper.died(arg0)
statement is: getTotalDeaths()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalDeaths = robot.getTotalDeaths()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 422, robotScoreKeeper);
robotScoreKeeper.died(robot);
robot.getTotalDeaths();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Bender", 422, robotScoreKeeper);
        robot.setLocation(new Location("The Lab"));
        robot.setType(MECHANICAL);
        robotScoreKeeper.died(robot);
        assertEquals(1, robot.getTotalDeaths());
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Bender", 422, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setLocation(new Location("The Lab")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setLocation(new Location("The Lab")) target is: robot method is: setLocation(Location)
statement is: robot.setType(MECHANICAL), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setType(MECHANICAL) target is: robot method is: setType()
statement is: robotScoreKeeper.died(robot), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotScoreKeeper.died(robot) target is: robotScoreKeeper method is: died(Robot)
source statement: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.RobotScoreKeeperindex is: 0
Matched Method is: died(Lnet/virtualinfinity/atrobots/robot/Robot;)V
statement is: assertEquals(1, robot.getTotalDeaths()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(1, robot.getTotalDeaths()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Bender";
int _int = 422;
Robot robot = new Robot(string, _int, robotScoreKeeper);
robotScoreKeeper.died(robot);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 41, arg2)
statement is: getTotalDeaths()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalDeaths = robot.getTotalDeaths()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.getTotalDeaths();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        robotScoreKeeper = new RobotScoreKeeper();
        copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        robot = new Robot("Bender", 41, copyOf);
    }
}
statement is: robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: robot = new Robot("Bender", 41, copyOf), class spoon.support.reflect.code.CtAssignmentImpl
statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot((String) null, 0, arg2)
statement is: killedRobot(Lnet/virtualinfinity/atrobots/robot/Robot;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotScoreKeeper.killedRobot(arg0)
statement is: getTotalKills()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalKills = robot.getTotalKills()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);
robot.getTotalKills();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        // Test with a non-null name and a positive total kills value
        Robot robot1 = new Robot("R2D2", 5, robotScoreKeeper);
        robotScoreKeeper.killedRobot(robot1);
        assertEquals(6, robot1.getTotalKills());
        // Test with a null name and a negative total kills value
        Robot robot2 = new Robot(((String) (null)), -3, robotScoreKeeper);
        robotScoreKeeper.killedRobot(robot2);
        assertEquals(-3, robot2.getTotalKills());
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Test with a non-null name and a positive total kills value
Robot robot1 = new Robot("R2D2", 5, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotScoreKeeper.killedRobot(robot1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotScoreKeeper.killedRobot(robot1) target is: robotScoreKeeper method is: killedRobot(Robot)
source statement: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.RobotScoreKeeperindex is: 0
Matched Method is: killedRobot(Lnet/virtualinfinity/atrobots/robot/Robot;)V
statement is: assertEquals(6, robot1.getTotalKills()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(6, robot1.getTotalKills()) target is:  method is: assertEquals(int,<unknown>)
statement is: // Test with a null name and a negative total kills value
Robot robot2 = new Robot(((String) (null)), -3, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotScoreKeeper.killedRobot(robot2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotScoreKeeper.killedRobot(robot2) target is: robotScoreKeeper method is: killedRobot(Robot)
source statement: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.RobotScoreKeeperindex is: 0
Matched Method is: killedRobot(Lnet/virtualinfinity/atrobots/robot/Robot;)V
statement is: assertEquals(-3, robot2.getTotalKills()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(-3, robot2.getTotalKills()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "R2D2";
int _int = 5;
Robot robot = new Robot(string, _int, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);
Robot robot = new Robot((String) robotScoreKeeper, _int, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot((String) null, 0, arg2)
statement is: getTotalKills()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalKills = robot.getTotalKills()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, robotScoreKeeper);
robot.getTotalKills();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("John", 34, robotScoreKeeper);
        robot.getTotalKills(10);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("John", 34, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTotalKills(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTotalKills(10) target is: robot method is: getTotalKills(int)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "John";
int _int = 34;
Robot robot = new Robot(string, _int, robotScoreKeeper);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: tiedRound(Lnet/virtualinfinity/atrobots/robot/Robot;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotScoreKeeper.tiedRound((Robot) null)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot((String) null, 880, arg2)
statement is: getTotalTies()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalTies = robot.getTotalTies()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robotScoreKeeper.tiedRound((Robot) null);
Robot robot = new Robot((String) null, 880, robotScoreKeeper);
robot.getTotalTies();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Robby", 1000);
        RobotScoreKeeper scoreKeeper = new RobotScoreKeeper();
        scoreKeeper.tiedRound(robot);
        assertEquals(1, scoreKeeper.getTotalTies());
    }
}
statement is: Robot robot = new Robot("Robby", 1000), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RobotScoreKeeper scoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scoreKeeper.tiedRound(robot), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scoreKeeper.tiedRound(robot) target is: scoreKeeper method is: tiedRound(Robot)
source statement: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.RobotScoreKeeperindex is: 0
Matched Method is: tiedRound(Lnet/virtualinfinity/atrobots/robot/Robot;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertEquals(1, scoreKeeper.getTotalTies()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(1, scoreKeeper.getTotalTies()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = null;
robotScoreKeeper.tiedRound(robot);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), arg2)
statement is: wonRound(Lnet/virtualinfinity/atrobots/robot/Robot;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotScoreKeeper.wonRound(arg0)
statement is: getTotalWins()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalWins = robot.getTotalWins()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robotScoreKeeper.wonRound(robot);
robot.getTotalWins();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("AstroBoy", 85, robotScoreKeeper);
        robotScoreKeeper.wonRound(robot);
        robot.getTotalWins();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("AstroBoy", 85, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotScoreKeeper.wonRound(robot), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotScoreKeeper.wonRound(robot) target is: robotScoreKeeper method is: wonRound(Robot)
source statement: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.RobotScoreKeeperindex is: 0
Matched Method is: wonRound(Lnet/virtualinfinity/atrobots/robot/Robot;)V
statement is: robot.getTotalWins(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTotalWins() target is: robot method is: getTotalWins()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getTotalWins()I
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "AstroBoy";
int _int = 85;
Robot robot = new Robot(string, _int, robotScoreKeeper);
robotScoreKeeper.wonRound(robot);
((Robot) string).getTotalWins();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot(".at2", 0, arg2)
statement is: net.virtualinfinity.atrobots.hardware.transponder.Transponder()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.transponder.Transponder
statement code is: Transponder transponder = new Transponder()
statement is: setTransponder(Lnet/virtualinfinity/atrobots/hardware/transponder/Transponder;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setTransponder(arg0)
statement is: getTransponder()Lnet/virtualinfinity/atrobots/hardware/transponder/Transponder; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.transponder.Transponder
statement code is: Transponder transponder = robot.getTransponder()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
Transponder transponder = new Transponder();
robot.setTransponder(transponder);
robot.getTransponder();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("ABC123", 10, robotScoreKeeper);
        Transponder transponder = new Transponder();
        robot.setTransponder(transponder);
        String actualTransponder = robot.getTransponder();
        assertEquals("ABC123", actualTransponder);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("ABC123", 10, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Transponder transponder = new Transponder(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setTransponder(transponder), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setTransponder(transponder) target is: robot method is: setTransponder(Transponder)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: setTransponder(Lnet/virtualinfinity/atrobots/hardware/transponder/Transponder;)V
statement is: String actualTransponder = robot.getTransponder(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTransponder() target is: robot method is: getTransponder()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getTransponder()Lnet/virtualinfinity/atrobots/hardware/transponder/Transponder;
statement is: assertEquals("ABC123", actualTransponder), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("ABC123", actualTransponder) target is:  method is: assertEquals(java.lang.String,java.lang.String)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "ABC123";
int _int = 10;
Robot robot = new Robot(string, _int, robotScoreKeeper);
Transponder transponder = new Transponder();
((Robot) string).setTransponder(transponder);
((Robot) string).getTransponder();

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atroots.root.bot$2", 30, (RobotScore) null)
statement is: net.virtualinfinity.atrobots.hardware.radio.Transceiver()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.radio.Transceiver
statement code is: Transceiver transceiver = new Transceiver()
statement is: setTransceiver(Lnet/virtualinfinity/atrobots/hardware/radio/Transceiver;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setTransceiver(arg0)
statement is: net.virtualinfinity.atrobots.arena.Arena(Lnet/virtualinfinity/atrobots/arena/FrameBuilder;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.arena.Arena
statement code is: Arena arena = new Arena((FrameBuilder) null)
statement is: arenaConnected(Lnet/virtualinfinity/atrobots/arena/Arena;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.arenaConnected(arg0)
test data is: Robot robot = new Robot("net.virtualinfinity.atroots.root.bot$2", 30, (RobotScore) null);
Transceiver transceiver = new Transceiver();
robot.setTransceiver(transceiver);
Arena arena = new Arena((FrameBuilder) null);
robot.arenaConnected(arena);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Bot1", 50, ((RobotScore) (null)));
        Transceiver transceiver = new Transceiver();
        robot.setTransceiver(transceiver);
        Arena arena = new Arena(((FrameBuilder) (null)));
        robot.arenaConnected(arena);
    }
}
statement is: Robot robot = new Robot("Bot1", 50, ((RobotScore) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Transceiver transceiver = new Transceiver(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setTransceiver(transceiver), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setTransceiver(transceiver) target is: robot method is: setTransceiver(Transceiver)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: setTransceiver(Lnet/virtualinfinity/atrobots/hardware/radio/Transceiver;)V
statement is: Arena arena = new Arena(((FrameBuilder) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.arenaConnected(arena), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.arenaConnected(arena) target is: robot method is: arenaConnected(Arena)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: arenaConnected(Lnet/virtualinfinity/atrobots/arena/Arena;)V
TestCase is: String string = "Bot1";
int _int = 50;
Robot robot = new Robot(string, _int, (RobotScore) null);
Transceiver transceiver = new Transceiver();
((Robot) string).setTransceiver(transceiver);
Arena arena = new Arena((FrameBuilder) null);
((Robot) string).arenaConnected(arena);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, arg2)
statement is: checkCollision(Lnet/virtualinfinity/atrobots/arena/TangibleArenaObject;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.checkCollision(arg0)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
robot.checkCollision(robot);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot1 = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
        Robot robot2 = new Robot("net.virtualinfinity.atrobots.robot.Robot", 2, robotScoreKeeper);
        robot1.checkCollision(robot2);
    }
}
statement is: // Improved test data
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot1 = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot2 = new Robot("net.virtualinfinity.atrobots.robot.Robot", 2, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot1.checkCollision(robot2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot1.checkCollision(robot2) target is: robot1 method is: checkCollision(Robot)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 6
Matched Method is: checkCollision(Lnet/virtualinfinity/atrobots/arena/TangibleArenaObject;)V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.robot.Robot";
int _int = 1;
Robot robot = new Robot(string, _int, robotScoreKeeper);
String string = "net.virtualinfinity.atrobots.robot.Robot";
int _int = 2;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).checkCollision(robot);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", (-269), arg2)
statement is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(2211)
statement is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/RelativeAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.RelativeAngle
statement code is: RelativeAngle fromBygrees = RelativeAngle.fromBygrees((-655))
statement is: clockwiseFrom(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;Lnet/virtualinfinity/atrobots/measures/RelativeAngle;)Lnet/virtualinfinity/atrobots/measures/AngleBracket; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AngleBracket
statement code is: AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(arg0, arg1)
statement is: scan(Lnet/virtualinfinity/atrobots/measures/AngleBracket;DZZ)Lnet/virtualinfinity/atrobots/hardware/scanning/ScanResult; type is: class org.evosuite.testcase.statements.MethodStatement return type interface net.virtualinfinity.atrobots.hardware.scanning.ScanResult
statement code is: ScanResult scan = robot.scan(arg0, 2688.0255799902143, true, false)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", (-269), robotScoreKeeper);
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(2211);
RelativeAngle fromBygrees = RelativeAngle.fromBygrees((-655));
AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, fromBygrees);
robot.scan(clockwiseFrom, 2688.0255799902143, true, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Robot 1", -269, robotScoreKeeper);
        AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(354);
        RelativeAngle fromBygrees = RelativeAngle.fromBygrees(-60);
        AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, fromBygrees);
        robot.scan(clockwiseFrom, 2688.0255799902143, true, false);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Robot 1", -269, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(354), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromBygrees(354) target is: AbsoluteAngle method is: fromBygrees(int)
Matched Method is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
statement is: RelativeAngle fromBygrees = RelativeAngle.fromBygrees(-60), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: RelativeAngle.fromBygrees(-60) target is: RelativeAngle method is: fromBygrees(int)
Matched Method is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, fromBygrees), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AngleBracket.clockwiseFrom(fromBygrees, fromBygrees) target is: AngleBracket method is: clockwiseFrom(RelativeAngle,RelativeAngle)
Matched Method is: clockwiseFrom(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;Lnet/virtualinfinity/atrobots/measures/RelativeAngle;)Lnet/virtualinfinity/atrobots/measures/AngleBracket;
statement is: robot.scan(clockwiseFrom, 2688.0255799902143, true, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.scan(clockwiseFrom, 2688.0255799902143, true, false) target is: robot method is: scan(AngleBracket,double,boolean,boolean)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: scan(Lnet/virtualinfinity/atrobots/measures/AngleBracket;DZZ)Lnet/virtualinfinity/atrobots/hardware/scanning/ScanResult;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Robot 1";
Robot robot = new Robot(string, (int) robotScoreKeeper, robotScoreKeeper);
int _int = 354;
AbsoluteAngle.fromBygrees(_int);
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(_int);
AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, (RelativeAngle) fromBygrees);
double _double = 2688.0255799902143;
boolean _boolean = true;
boolean _boolean = false;
((Robot) string).scan(clockwiseFrom, _double, _boolean, _boolean);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 41, arg2)
statement is: inflictedDamage(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.inflictedDamage(441.5542693224)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.inflictedDamage(441.5542693224);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        Robot robot = new Robot("Name", 41, copyOf);// Changed the primitive value of "name" to a more descriptive and representative value

        robot.inflictedDamage(358.2926834173);// Changed the floating-point value to a more illustrative example }}

    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))) target is: FinalRobotScore method is: copyOf(RobotScoreKeeper)
Matched Method is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore;
statement is: Robot robot = new Robot("Name", 41, copyOf)// Changed the primitive value of "name" to a more descriptive and representative value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.inflictedDamage(358.2926834173)// Changed the floating-point value to a more illustrative example }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.inflictedDamage(358.2926834173)// Changed the floating-point value to a more illustrative example }}
 target is: robot method is: inflictedDamage(double)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: inflictedDamage(D)V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "Name";
int _int = 41;
Robot robot = new Robot(string, _int, copyOf);
double _double = 358.2926834173;
((Robot) string).inflictedDamage(_double);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 41, arg2)
statement is: net.virtualinfinity.atrobots.computer.Memory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.computer.Memory
statement code is: Memory memory = new Memory()
statement is: net.virtualinfinity.atrobots.computer.DebugInfo()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.computer.DebugInfo
statement code is: DebugInfo debugInfo = new DebugInfo()
statement is: net.virtualinfinity.atrobots.computer.Computer(Lnet/virtualinfinity/atrobots/computer/Memory;IILnet/virtualinfinity/atrobots/computer/DebugInfo;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.computer.Computer
statement code is: Computer computer = new Computer(arg0, 41, 68, arg3)
statement is: setComputer(Lnet/virtualinfinity/atrobots/computer/Computer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setComputer(arg0)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
Memory memory = new Memory();
DebugInfo debugInfo = new DebugInfo();
Computer computer = new Computer(memory, 41, 68, debugInfo);
robot.setComputer(computer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        Robot robot = new Robot("Eve", 41, copyOf);
        Memory memory = new Memory();
        DebugInfo debugInfo = new DebugInfo();
        Computer computer = new Computer(memory, 41, 68, debugInfo);
        robot.setComputer(computer);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))) target is: FinalRobotScore method is: copyOf(RobotScoreKeeper)
Matched Method is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore;
statement is: Robot robot = new Robot("Eve", 41, copyOf), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Memory memory = new Memory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DebugInfo debugInfo = new DebugInfo(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Computer computer = new Computer(memory, 41, 68, debugInfo), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setComputer(computer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setComputer(computer) target is: robot method is: setComputer(Computer)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: setComputer(Lnet/virtualinfinity/atrobots/computer/Computer;)V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "Eve";
int _int = 41;
Robot robot = new Robot(string, _int, copyOf);
Memory memory = new Memory();
DebugInfo debugInfo = new DebugInfo();
int _int = 41;
int _int = 68;
Computer computer = new Computer(memory, _int, _int, debugInfo);
((Robot) string).setComputer(computer);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("w", 8, arg2)
statement is: getLastDamageGiven()Lnet/virtualinfinity/atrobots/measures/Duration; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Duration
statement code is: Duration lastDamageGiven = robot.getLastDamageGiven()
statement is: update(Lnet/virtualinfinity/atrobots/measures/Duration;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.update(arg0)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("w", 8, copyOf);
Duration lastDamageGiven = robot.getLastDamageGiven();
robot.update(lastDamageGiven);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        Robot robot = new Robot("w", 8, copyOf);
        Duration lastDamageGiven = Duration.ofSeconds(100);
        robot.update(lastDamageGiven);
        // Test data improved with more descriptive values
        Duration lastDamageGiven2 = Duration.ofSeconds(200);
        robot.update(lastDamageGiven2);
        // Test data improved with more descriptive values
        Duration lastDamageGiven3 = Duration.ofMinutes(10);
        robot.update(lastDamageGiven3);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))) target is: FinalRobotScore method is: copyOf(RobotScoreKeeper)
Matched Method is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore;
statement is: Robot robot = new Robot("w", 8, copyOf), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Duration lastDamageGiven = Duration.ofSeconds(100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Duration.ofSeconds(100) target is: Duration method is: ofSeconds(int)
statement is: robot.update(lastDamageGiven), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.update(lastDamageGiven) target is: robot method is: update(Duration)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: update(Lnet/virtualinfinity/atrobots/measures/Duration;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // Test data improved with more descriptive values
Duration lastDamageGiven2 = Duration.ofSeconds(200), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Duration.ofSeconds(200) target is: Duration method is: ofSeconds(int)
statement is: robot.update(lastDamageGiven2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.update(lastDamageGiven2) target is: robot method is: update(Duration)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: update(Lnet/virtualinfinity/atrobots/measures/Duration;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // Test data improved with more descriptive values
Duration lastDamageGiven3 = Duration.ofMinutes(10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Duration.ofMinutes(10) target is: Duration method is: ofMinutes(int)
statement is: robot.update(lastDamageGiven3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.update(lastDamageGiven3) target is: robot method is: update(Duration)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: update(Lnet/virtualinfinity/atrobots/measures/Duration;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "w";
int _int = 8;
Robot robot = new Robot(string, _int, copyOf);
Duration duration = null;
((Robot) string).update(duration);
Duration duration = null;
((Robot) string).update(duration);
Duration duration = null;
((Robot) string).update(duration);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 8, (RobotScore) null)
statement is: createSpecificSnapshot()Lnet/virtualinfinity/atrobots/snapshots/ArenaObjectSnapshot; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.snapshots.ArenaObjectSnapshot
statement code is: ArenaObjectSnapshot createSpecificSnapshot = robot.createSpecificSnapshot()
test data is: Robot robot = new Robot("", 8, (RobotScore) null);
robot.createSpecificSnapshot();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Charles Babbage", 256, "Fantastic Visionary");
        robot.createSpecificSnapshot();
    }
}
statement is: Robot robot = new Robot("Charles Babbage", 256, "Fantastic Visionary"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.createSpecificSnapshot(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.createSpecificSnapshot() target is: robot method is: createSpecificSnapshot()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: createSpecificSnapshot()Lnet/virtualinfinity/atrobots/snapshots/ArenaObjectSnapshot;
TestCase is: String string = "Charles Babbage";
int _int = 256;
String string = "Fantastic Visionary";
Robot robot = new Robot(string, _int, (RobotScore) string);
((Robot) string).createSpecificSnapshot();

* test suite isTestSuite: 133
Test 0: 
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, (RobotScore) null);
robot.getOverburnLatchPort();
Test 1: 
Robot robot = new Robot("", 0, (RobotScore) null);
robot.getTurret();
Test 2: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("\" t", (-3754), robotScoreKeeper);
robot.getAimTurretPort();
Test 3: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
robot.accept(arenaObjectVisitorAdaptor);
Test 4: 
Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
robot.getSpeed();
Test 5: 
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robot.addRobotListener(robotScoreKeeper);
robot.winRound();
Test 6: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-854), robotScoreKeeper);
robot.getHeading();
Test 7: 
Robot robot = new Robot("", 8, (RobotScore) null);
robot.getDesiredHeading();
Test 8: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
Armor armor = new Armor((-1203.8008070456));
robot.setArmor(armor);
// Undeclared exception!
try { 
  robot.getSnapshot();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 9: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
robot.getTransponder();
Test 10: 
Robot robot = new Robot("\" t", 69, (RobotScore) null);
robot.getThrottle();
Test 11: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.getHardwareBus();
Test 12: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("6.lx{es|GMg|_", (-1), robotScoreKeeper);
robot.getMineLayer();
Test 13: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1717986918, robotScoreKeeper);
Memory memory = new Memory();
MemoryCell cell = memory.getCell(0);
RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(2021161080);
memory.addMemoryArray(randomAccessMemoryArray);
Robot.GetRobotStatisticsInterrupt createGetRobotStatisticsInterrupt = robot.createGetRobotStatisticsInterrupt(cell, (MemoryCell) null, cell);
// Undeclared exception!
try { 
  createGetRobotStatisticsInterrupt.handleInterrupt();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", e);
}

Test 14: 
Robot robot = new Robot("I={`Ox?K6!R", (-1847), (RobotScore) null);
robot.getShutdownLevelLatchPort();
Test 15: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 880, robotScoreKeeper);
robot.getTotalTies();
Test 16: 
Robot robot = new Robot("", 8, (RobotScore) null);
robot.getComputer();
Test 17: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.getRadar();
Test 18: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-2144946774), robotScoreKeeper);
robot.setOverburn(true);
// Undeclared exception!
try { 
  robot.armorDepleted();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 19: 
Robot robot = new Robot("", 0, (RobotScore) null);
robot.setTurret((Turret) null);
Test 20: 
Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(1.125, 1.125);
Position position = new Position();
robot.createMissile(fromCartesian, position, 1.125);
Test 21: 
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", (-3488), (RobotScore) null);
robot.getTurretOffsetSensor();
Test 22: 
Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 0, (RobotScore) null);
robot.setMineLayer((MineLayer) null);
Test 23: 
Robot robot = new Robot((String) null, (-1), (RobotScore) null);
robot.getName();
Test 24: 
Robot robot = new Robot("D>@{.C", 65535, (RobotScore) null);
// Undeclared exception!
try { 
  robot.destruct();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 25: 
Robot robot = new Robot("", 1, (RobotScore) null);
robot.getOdometer();
Test 26: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.setHardwareBus((HardwareBus) null);
Test 27: 
Robot robot = new Robot("Q:wVB4", 1, (RobotScore) null);
robot.createGetRobotInfoInterruptHandler((MemoryCell) null, (MemoryCell) null, (MemoryCell) null);
Test 28: 
Robot robot = new Robot("AkTN=.awo", 4136, (RobotScore) null);
robot.getLastDamageTaken();
Test 29: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("5~|1EmgUB41p", 0, robotScoreKeeper);
robot.getSonar();
Test 30: 
Robot robot = new Robot("QVB4", (-846), (RobotScore) null);
// Undeclared exception!
try { 
  robot.getTurretShift();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 31: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Shield shield = new Shield(1077);
Robot robot = new Robot("Zo-IXD1oG,|ne/!nNY#", 1077, robotScoreKeeper);
robot.setShield(shield);
// Undeclared exception!
try { 
  robot.inflictDamage(robot, 1077);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 32: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", (-1904), robotScoreKeeper);
robot.reset();
Test 33: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("BDRCRYiiXKy[zq", 758, robotScoreKeeper);
robot.getTransceiver();
Test 34: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.getTotalWins();
Test 35: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(":H/k2Ts", 0, robotScoreKeeper);
Sonar sonar = new Sonar();
robot.setSonar(sonar);
robot.getSonar();
Test 36: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.setRadar((Radar) null);
Test 37: 
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
// Undeclared exception!
try { 
  robot.collides();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 38: 
Robot robot = new Robot("dvBB}c]", (-698), (RobotScore) null);
Shield shield = new Shield((-698));
robot.setShield(shield);
// Undeclared exception!
try { 
  robot.inflictDamage(robot, (-698));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 39: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 46, robotScoreKeeper);
robot.addRobotListener(robotScoreKeeper);
// Undeclared exception!
try { 
  robot.armorDepleted();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 40: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
robot.winRound();
Test 41: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robot.addRobotListener(robotScoreKeeper);
robot.tieRound();
Test 42: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.addRobotListener(robotScoreKeeper);
robot.killedRobot();
Test 43: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("@c6#~QSPQb+;()", (-557), robotScoreKeeper);
robot.getShield();
Test 44: 
Robot robot = new Robot("", (-3514), (RobotScore) null);
robot.getId();
Test 45: 
Robot robot = new Robot("", (-289), (RobotScore) null);
robot.getRoundKills();
Test 46: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", (-1355), robotScoreKeeper);
robot.getArmor();
Test 47: 
Robot robot = new Robot("]AXpd+GZMH'I`A", (-680), (RobotScore) null);
robot.isOverburn();
Test 48: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("M3C`Be", 1409, robotScoreKeeper);
robot.getHeatSinks();
Test 49: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("M8%JMA*Wv@f7+^O", 867, copyOf);
robot.getId();
Test 50: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
robot.getId();
Test 51: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 35, robotScoreKeeper);
robot.getName();
Test 52: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("gpabrE", 8, copyOf);
robot.getName();
Test 53: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1246, robotScoreKeeper);
Throttle throttle = new Throttle(1618.4329);
robot.setThrottle(throttle);
robot.getThrottle();
Test 54: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 422, robotScoreKeeper);
robotScoreKeeper.died(robot);
robot.getTotalDeaths();
Test 55: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.getTotalDeaths();
Test 56: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);
robot.getTotalKills();
Test 57: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, robotScoreKeeper);
robot.getTotalKills();
Test 58: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robotScoreKeeper.tiedRound((Robot) null);
Robot robot = new Robot((String) null, 880, robotScoreKeeper);
robot.getTotalTies();
Test 59: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robotScoreKeeper.wonRound(robot);
robot.getTotalWins();
Test 60: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
Transponder transponder = new Transponder();
robot.setTransponder(transponder);
robot.getTransponder();
Test 61: 
Robot robot = new Robot("net.virtualinfinity.atroots.root.bot$2", 30, (RobotScore) null);
Transceiver transceiver = new Transceiver();
robot.setTransceiver(transceiver);
Arena arena = new Arena((FrameBuilder) null);
robot.arenaConnected(arena);
Test 62: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
// Undeclared exception!
try { 
  robot.checkCollision(robot);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.arena.Position", e);
}

Test 63: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", (-269), robotScoreKeeper);
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(2211);
RelativeAngle fromBygrees = RelativeAngle.fromBygrees((-655));
AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, fromBygrees);
// Undeclared exception!
try { 
  robot.scan(clockwiseFrom, 2688.0255799902143, true, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 64: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
// Undeclared exception!
try { 
  robot.inflictedDamage(441.5542693224);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 65: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
Memory memory = new Memory();
DebugInfo debugInfo = new DebugInfo();
Computer computer = new Computer(memory, 41, 68, debugInfo);
robot.setComputer(computer);
Test 66: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("w", 8, copyOf);
Duration lastDamageGiven = robot.getLastDamageGiven();
// Undeclared exception!
try { 
  robot.update(lastDamageGiven);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.arena.Position", e);
}

Test 67: 
Robot robot = new Robot("", 8, (RobotScore) null);
// Undeclared exception!
try { 
  robot.createSpecificSnapshot();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 68: 
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, (RobotScore) null);
((Robot)"net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction").getOverburnLatchPort();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
int _int = 1;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getOverburnLatchPort();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
int _int = 10;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getOverburnLatchPort();

Test 69: 
String string = "Red";
Robot robot = new Robot("Red", 123456789, (RobotScore) null);
((Robot)"Red").getTurret();
String string = "Blue";
int _int = 987654321;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getTurret();

Test 70: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("R2D2", 0, robotScoreKeeper);

Test 71: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
((Robot)"net.virtualinfinity.atrobots.robot.Robot").accept(arenaObjectVisitorAdaptor);

Test 72: 
Robot robot = new Robot("g2|KKwy", 10000, (RobotScore) null);
((Robot)"g2|KKwy").getSpeed();

Test 73: 
String string = "g2|KKwy";
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
((Robot)"g2|KKwy").addRobotListener(robotScoreKeeper);
((Robot) string).winRound();

Test 74: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("R2-D2", 854, robotScoreKeeper);
((Robot)"R2-D2").getHeading();

Test 75: 
Robot robot = new Robot("WALL-E", 8, (RobotScore) null);
((Robot)"WALL-E").getDesiredHeading();

Test 76: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "NP\"%0oOb \"ur#WvB";
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
Armor armor = new Armor((-1203.8008070456));
((Robot)"NP\"%0oOb \"ur#WvB").setArmor(armor);
((ArenaObject) string).getSnapshot();

Test 77: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NX2113", 0, robotScoreKeeper);
((Robot)"NX2113").getTransponder();

Test 78: 
Robot robot = new Robot("Snoopy", 42, (RobotScore) null);
((Robot)"Snoopy").getThrottle();

Test 79: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("Red", 1234, robotScoreKeeper);
((Robot)"Red").getHardwareBus();

Test 80: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "6.lx{es|GMg|_";
Robot robot = new Robot("6.lx{es|GMg|_", (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getMineLayer();

Test 81: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "R2-D2";
int _int = 1717986918;
Robot robot = new Robot("R2-D2", 1717986918, robotScoreKeeper);
Memory memory = new Memory();
MemoryCell cell = ((Memory)1717986918).getCell(0);
int _int = 2021161080;
RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(_int);
((Memory) _int).addMemoryArray(randomAccessMemoryArray);
MemoryCell memoryCell = null;
((Robot) string).createGetRobotStatisticsInterrupt(cell, cell, memoryCell);

Test 82: 
String string = "I=\\u003CJF!K6!R";
Robot robot = new Robot("I=<JF!K6!R", (int) 99.99, (RobotScore) null);
((Robot) string).getShutdownLevelLatchPort();

Test 83: 
Robot robot = new Robot("Bender Bending Rodriguez", 80, (RobotScore) null);
((Robot)"Bender Bending Rodriguez").getComputer();

Test 84: 
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
((Robot)"net.virtualinfinity.atrobots.ports.PortHandler").getRadar();
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
int _int = 5;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getRadar();

Test 85: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Red";
Robot robot = new Robot("Red", 100, robotScoreKeeper);
((Robot)"Red").setOverburn(true);
((Robot) string).armorDepleted();

Test 86: 
Robot robot = new Robot("Wall-E", 123456789, (RobotScore) null);
((Robot)"Wall-E").setTurret((Turret) null);

Test 87: 
Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(2.3, 3.4);
Position position = new Position();
((Robot)"g2|KKwy").createMissile(fromCartesian, position, 1.125);

Test 88: 
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", (-3488), (RobotScore) null);
((Robot)"net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction").getTurretOffsetSensor();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
Robot robot = new Robot(string, (-3488), (RobotScore) null);
((Robot) string).getTurretOffsetSensor();

Test 89: 
Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 1000, (RobotScore) null);
((Robot)"7z8xk5]4IqH^f/cK|[)").setMineLayer((MineLayer) null);

Test 90: 
Robot robot = new Robot("Bender", 200, (RobotScore) null);
((Robot)"Bender").getName();

Test 91: 
Robot robot = new Robot("Model X", 5, (RobotScore) null);
((Robot)"Model X").getOdometer();

Test 92: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("A3#J14!CQ2P", 17, robotScoreKeeper);
((Robot)"A3#J14!CQ2P").setHardwareBus((HardwareBus) null);

Test 93: 
Robot robot = new Robot("Q:wVB4", 1, (RobotScore) null);
((Robot)"Q:wVB4").createGetRobotInfoInterruptHandler((MemoryCell) null, (MemoryCell) null, (MemoryCell) null);

Test 94: 
String string = "AkTN=.awo";
Robot robot = new Robot("AkTN=.awo", 4136, (RobotScore) null);
((Robot)"AkTN=.awo").getLastDamageTaken();
String string = "John Doe";
int _int = 25;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getLastDamageTaken();

Test 95: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("5~|1EmgUB41p", 0, robotScoreKeeper);
((Robot)"5~|1EmgUB41p").getSonar();

Test 96: 
String string = "QVB4";
Robot robot = new Robot("QVB4", (-846), (RobotScore) null);
((Robot)"QVB4").getTurretShift();
((Robot) string).getTurretShift();

Test 97: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();

Test 98: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.arena.Speed";
Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).reset();

Test 99: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("BDRCRYiiXKy[zq", 758, robotScoreKeeper);

Test 100: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("Team 1", 10, robotScoreKeeper);
((Robot)"Team 1").getTotalWins();

Test 101: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(":H/k2Ts", 0, robotScoreKeeper);
Sonar sonar = new Sonar();
((Robot)":H/k2Ts").setSonar(sonar);

Test 102: 
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
((Robot)"net.virtualinfinity.atrobots.ports.PortHandler").setRadar((Radar) null);
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
int _int = 300;
Robot robot = new Robot(string, _int, (RobotScore) null);
Radar radar = null;
((Robot) string).setRadar(radar);

Test 103: 
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
((Robot)"g2|KKwy").collides();

Test 104: 
Shield shield = new Shield(100);

Test 105: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt";
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 50, robotScoreKeeper);
((Robot)"net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt").addRobotListener(robotScoreKeeper);
((Robot) string).armorDepleted();

Test 106: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
((Robot)"NP\"%0oOb \"ur#WvB").winRound();

Test 107: 
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
((Robot)"net.virtualinfinity.atrobots.ports.PortHandler").addRobotListener(robotScoreKeeper);
((Robot) string).tieRound();

Test 108: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "T-800";
Robot robot = new Robot("T-800", 41, copyOf);
((Robot)"T-800").addRobotListener(robotScoreKeeper);
((Robot) string).killedRobot();

Test 109: 
int _int = 5;
Robot robot = new Robot("Red", 5, (RobotScore) "Red");
((Robot) _int).getShield();

Test 110: 
Robot robot = new Robot("R2D2", 1000, (RobotScore) null);
((Robot)"R2D2").getId();

Test 111: 
Robot robot = new Robot("Nanobot", 0, (RobotScore) null);
((Robot)"Nanobot").getRoundKills();

Test 112: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.robot.Robot4";
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getArmor();
String string = "Robot4";
Robot robot = new Robot(string, (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getArmor();

Test 113: 
Robot robot = new Robot("]AXpd+GZMH'I`A", (-680), (RobotScore) null);
((Robot)"]AXpd+GZMH'I`A").isOverburn();

Test 114: 
int _int = 1409;
Robot robot = new Robot("M3C`Be", 1409, (RobotScore) "M3C`Be");
((Robot) _int).getHeatSinks();

Test 115: 
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf((RobotScore) null);
String string = "A1234567";
int _int = 800;
Robot robot = new Robot(string, _int, copyOf);
((Robot) string).getId();

Test 116: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("T-800", 1, robotScoreKeeper);
((Robot)"T-800").getId();

Test 117: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("MechaGodzilla", 35, robotScoreKeeper);
((Robot)"MechaGodzilla").getName();

Test 118: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("gpabrE", 8, copyOf);

Test 119: 
int _int = 1246;
Robot robot = new Robot("Robot 1", 1246, (RobotScore) "Robot 1");
Throttle throttle = null;
((Robot) _int).setThrottle(throttle);

Test 120: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("Bender", 422, robotScoreKeeper);
robotScoreKeeper.died(robot);

Test 121: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("R2D2", 5, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);
Robot robot = new Robot((String) robotScoreKeeper, 5, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);

Test 122: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("John", 34, robotScoreKeeper);

Test 123: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robotScoreKeeper.tiedRound((Robot) null);

Test 124: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("AstroBoy", 85, robotScoreKeeper);
robotScoreKeeper.wonRound(robot);
((Robot)"AstroBoy").getTotalWins();

Test 125: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "ABC123";
Robot robot = new Robot("ABC123", 10, robotScoreKeeper);
Transponder transponder = new Transponder();
((Robot)"ABC123").setTransponder(transponder);
((Robot) string).getTransponder();

Test 126: 
String string = "Bot1";
Robot robot = new Robot("Bot1", 50, (RobotScore) null);
Transceiver transceiver = new Transceiver();
((Robot)"Bot1").setTransceiver(transceiver);
Arena arena = new Arena((FrameBuilder) null);
((Robot) string).arenaConnected(arena);

Test 127: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 2, robotScoreKeeper);
((Robot)"net.virtualinfinity.atrobots.robot.Robot").checkCollision(robot);

Test 128: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Robot 1";
Robot robot = new Robot("Robot 1", (int) robotScoreKeeper, robotScoreKeeper);
int _int = 354;
AbsoluteAngle.fromBygrees(_int);
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(_int);
AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, (RelativeAngle) fromBygrees);
double _double = 2688.0255799902143;
boolean _boolean = true;
boolean _boolean = false;
((Robot) string).scan(clockwiseFrom, _double, _boolean, _boolean);

Test 129: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("Name", 41, copyOf);
((Robot)"Name").inflictedDamage(358.2926834173);

Test 130: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("Eve", 41, copyOf);
Memory memory = new Memory();
DebugInfo debugInfo = new DebugInfo();
Computer computer = new Computer(memory, 41, 68, debugInfo);
((Robot)"Eve").setComputer(computer);

Test 131: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "w";
Robot robot = new Robot("w", 8, copyOf);
((Robot)"w").update((Duration) null);
Duration duration = null;
((Robot) string).update(duration);
Duration duration = null;
((Robot) string).update(duration);

Test 132: 
String string = "Charles Babbage";
Robot robot = new Robot("Charles Babbage", 256, (RobotScore) "Fantastic Visionary");
((Robot) string).createSpecificSnapshot();


* Generated after the refinement and before minimization 133 tests with total length 491
* test suite isTestSuite: 133
Test 0: 
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, (RobotScore) null);
robot.getOverburnLatchPort();
Test 1: 
Robot robot = new Robot("", 0, (RobotScore) null);
robot.getTurret();
Test 2: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("\" t", (-3754), robotScoreKeeper);
robot.getAimTurretPort();
Test 3: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
robot.accept(arenaObjectVisitorAdaptor);
Test 4: 
Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
robot.getSpeed();
Test 5: 
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robot.addRobotListener(robotScoreKeeper);
robot.winRound();
Test 6: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-854), robotScoreKeeper);
robot.getHeading();
Test 7: 
Robot robot = new Robot("", 8, (RobotScore) null);
robot.getDesiredHeading();
Test 8: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
Armor armor = new Armor((-1203.8008070456));
robot.setArmor(armor);
// Undeclared exception!
try { 
  robot.getSnapshot();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 9: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
robot.getTransponder();
Test 10: 
Robot robot = new Robot("\" t", 69, (RobotScore) null);
robot.getThrottle();
Test 11: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.getHardwareBus();
Test 12: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("6.lx{es|GMg|_", (-1), robotScoreKeeper);
robot.getMineLayer();
Test 13: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1717986918, robotScoreKeeper);
Memory memory = new Memory();
MemoryCell cell = memory.getCell(0);
RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(2021161080);
memory.addMemoryArray(randomAccessMemoryArray);
Robot.GetRobotStatisticsInterrupt createGetRobotStatisticsInterrupt = robot.createGetRobotStatisticsInterrupt(cell, (MemoryCell) null, cell);
// Undeclared exception!
try { 
  createGetRobotStatisticsInterrupt.handleInterrupt();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", e);
}

Test 14: 
Robot robot = new Robot("I={`Ox?K6!R", (-1847), (RobotScore) null);
robot.getShutdownLevelLatchPort();
Test 15: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 880, robotScoreKeeper);
robot.getTotalTies();
Test 16: 
Robot robot = new Robot("", 8, (RobotScore) null);
robot.getComputer();
Test 17: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.getRadar();
Test 18: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-2144946774), robotScoreKeeper);
robot.setOverburn(true);
// Undeclared exception!
try { 
  robot.armorDepleted();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 19: 
Robot robot = new Robot("", 0, (RobotScore) null);
robot.setTurret((Turret) null);
Test 20: 
Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(1.125, 1.125);
Position position = new Position();
robot.createMissile(fromCartesian, position, 1.125);
Test 21: 
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", (-3488), (RobotScore) null);
robot.getTurretOffsetSensor();
Test 22: 
Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 0, (RobotScore) null);
robot.setMineLayer((MineLayer) null);
Test 23: 
Robot robot = new Robot((String) null, (-1), (RobotScore) null);
robot.getName();
Test 24: 
Robot robot = new Robot("D>@{.C", 65535, (RobotScore) null);
// Undeclared exception!
try { 
  robot.destruct();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 25: 
Robot robot = new Robot("", 1, (RobotScore) null);
robot.getOdometer();
Test 26: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.setHardwareBus((HardwareBus) null);
Test 27: 
Robot robot = new Robot("Q:wVB4", 1, (RobotScore) null);
robot.createGetRobotInfoInterruptHandler((MemoryCell) null, (MemoryCell) null, (MemoryCell) null);
Test 28: 
Robot robot = new Robot("AkTN=.awo", 4136, (RobotScore) null);
robot.getLastDamageTaken();
Test 29: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("5~|1EmgUB41p", 0, robotScoreKeeper);
robot.getSonar();
Test 30: 
Robot robot = new Robot("QVB4", (-846), (RobotScore) null);
// Undeclared exception!
try { 
  robot.getTurretShift();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 31: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Shield shield = new Shield(1077);
Robot robot = new Robot("Zo-IXD1oG,|ne/!nNY#", 1077, robotScoreKeeper);
robot.setShield(shield);
// Undeclared exception!
try { 
  robot.inflictDamage(robot, 1077);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 32: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", (-1904), robotScoreKeeper);
robot.reset();
Test 33: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("BDRCRYiiXKy[zq", 758, robotScoreKeeper);
robot.getTransceiver();
Test 34: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.getTotalWins();
Test 35: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(":H/k2Ts", 0, robotScoreKeeper);
Sonar sonar = new Sonar();
robot.setSonar(sonar);
robot.getSonar();
Test 36: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.setRadar((Radar) null);
Test 37: 
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
// Undeclared exception!
try { 
  robot.collides();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 38: 
Robot robot = new Robot("dvBB}c]", (-698), (RobotScore) null);
Shield shield = new Shield((-698));
robot.setShield(shield);
// Undeclared exception!
try { 
  robot.inflictDamage(robot, (-698));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 39: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 46, robotScoreKeeper);
robot.addRobotListener(robotScoreKeeper);
// Undeclared exception!
try { 
  robot.armorDepleted();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 40: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
robot.winRound();
Test 41: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robot.addRobotListener(robotScoreKeeper);
robot.tieRound();
Test 42: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.addRobotListener(robotScoreKeeper);
robot.killedRobot();
Test 43: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("@c6#~QSPQb+;()", (-557), robotScoreKeeper);
robot.getShield();
Test 44: 
Robot robot = new Robot("", (-3514), (RobotScore) null);
robot.getId();
Test 45: 
Robot robot = new Robot("", (-289), (RobotScore) null);
robot.getRoundKills();
Test 46: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", (-1355), robotScoreKeeper);
robot.getArmor();
Test 47: 
Robot robot = new Robot("]AXpd+GZMH'I`A", (-680), (RobotScore) null);
robot.isOverburn();
Test 48: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("M3C`Be", 1409, robotScoreKeeper);
robot.getHeatSinks();
Test 49: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("M8%JMA*Wv@f7+^O", 867, copyOf);
robot.getId();
Test 50: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
robot.getId();
Test 51: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 35, robotScoreKeeper);
robot.getName();
Test 52: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("gpabrE", 8, copyOf);
robot.getName();
Test 53: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1246, robotScoreKeeper);
Throttle throttle = new Throttle(1618.4329);
robot.setThrottle(throttle);
robot.getThrottle();
Test 54: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 422, robotScoreKeeper);
robotScoreKeeper.died(robot);
robot.getTotalDeaths();
Test 55: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.getTotalDeaths();
Test 56: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);
robot.getTotalKills();
Test 57: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, robotScoreKeeper);
robot.getTotalKills();
Test 58: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robotScoreKeeper.tiedRound((Robot) null);
Robot robot = new Robot((String) null, 880, robotScoreKeeper);
robot.getTotalTies();
Test 59: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robotScoreKeeper.wonRound(robot);
robot.getTotalWins();
Test 60: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
Transponder transponder = new Transponder();
robot.setTransponder(transponder);
robot.getTransponder();
Test 61: 
Robot robot = new Robot("net.virtualinfinity.atroots.root.bot$2", 30, (RobotScore) null);
Transceiver transceiver = new Transceiver();
robot.setTransceiver(transceiver);
Arena arena = new Arena((FrameBuilder) null);
robot.arenaConnected(arena);
Test 62: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
// Undeclared exception!
try { 
  robot.checkCollision(robot);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.arena.Position", e);
}

Test 63: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", (-269), robotScoreKeeper);
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(2211);
RelativeAngle fromBygrees = RelativeAngle.fromBygrees((-655));
AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, fromBygrees);
// Undeclared exception!
try { 
  robot.scan(clockwiseFrom, 2688.0255799902143, true, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 64: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
// Undeclared exception!
try { 
  robot.inflictedDamage(441.5542693224);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 65: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
Memory memory = new Memory();
DebugInfo debugInfo = new DebugInfo();
Computer computer = new Computer(memory, 41, 68, debugInfo);
robot.setComputer(computer);
Test 66: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("w", 8, copyOf);
Duration lastDamageGiven = robot.getLastDamageGiven();
// Undeclared exception!
try { 
  robot.update(lastDamageGiven);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.arena.Position", e);
}

Test 67: 
Robot robot = new Robot("", 8, (RobotScore) null);
// Undeclared exception!
try { 
  robot.createSpecificSnapshot();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 68: 
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, (RobotScore) null);
((Robot)"net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction").getOverburnLatchPort();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
int _int = 1;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getOverburnLatchPort();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
int _int = 10;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getOverburnLatchPort();

Test 69: 
String string = "Red";
Robot robot = new Robot("Red", 123456789, (RobotScore) null);
((Robot)"Red").getTurret();
String string = "Blue";
int _int = 987654321;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getTurret();

Test 70: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("R2D2", 0, robotScoreKeeper);

Test 71: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
((Robot)"net.virtualinfinity.atrobots.robot.Robot").accept(arenaObjectVisitorAdaptor);

Test 72: 
Robot robot = new Robot("g2|KKwy", 10000, (RobotScore) null);
((Robot)"g2|KKwy").getSpeed();

Test 73: 
String string = "g2|KKwy";
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
((Robot)"g2|KKwy").addRobotListener(robotScoreKeeper);
((Robot) string).winRound();

Test 74: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("R2-D2", 854, robotScoreKeeper);
((Robot)"R2-D2").getHeading();

Test 75: 
Robot robot = new Robot("WALL-E", 8, (RobotScore) null);
((Robot)"WALL-E").getDesiredHeading();

Test 76: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "NP\"%0oOb \"ur#WvB";
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
Armor armor = new Armor((-1203.8008070456));
((Robot)"NP\"%0oOb \"ur#WvB").setArmor(armor);
((ArenaObject) string).getSnapshot();

Test 77: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NX2113", 0, robotScoreKeeper);
((Robot)"NX2113").getTransponder();

Test 78: 
Robot robot = new Robot("Snoopy", 42, (RobotScore) null);
((Robot)"Snoopy").getThrottle();

Test 79: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("Red", 1234, robotScoreKeeper);
((Robot)"Red").getHardwareBus();

Test 80: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "6.lx{es|GMg|_";
Robot robot = new Robot("6.lx{es|GMg|_", (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getMineLayer();

Test 81: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "R2-D2";
int _int = 1717986918;
Robot robot = new Robot("R2-D2", 1717986918, robotScoreKeeper);
Memory memory = new Memory();
MemoryCell cell = ((Memory)1717986918).getCell(0);
int _int = 2021161080;
RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(_int);
((Memory) _int).addMemoryArray(randomAccessMemoryArray);
MemoryCell memoryCell = null;
((Robot) string).createGetRobotStatisticsInterrupt(cell, cell, memoryCell);

Test 82: 
String string = "I=\\u003CJF!K6!R";
Robot robot = new Robot("I=<JF!K6!R", (int) 99.99, (RobotScore) null);
((Robot) string).getShutdownLevelLatchPort();

Test 83: 
Robot robot = new Robot("Bender Bending Rodriguez", 80, (RobotScore) null);
((Robot)"Bender Bending Rodriguez").getComputer();

Test 84: 
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
((Robot)"net.virtualinfinity.atrobots.ports.PortHandler").getRadar();
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
int _int = 5;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getRadar();

Test 85: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Red";
Robot robot = new Robot("Red", 100, robotScoreKeeper);
((Robot)"Red").setOverburn(true);
((Robot) string).armorDepleted();

Test 86: 
Robot robot = new Robot("Wall-E", 123456789, (RobotScore) null);
((Robot)"Wall-E").setTurret((Turret) null);

Test 87: 
Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(2.3, 3.4);
Position position = new Position();
((Robot)"g2|KKwy").createMissile(fromCartesian, position, 1.125);

Test 88: 
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", (-3488), (RobotScore) null);
((Robot)"net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction").getTurretOffsetSensor();
String string = "net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction";
Robot robot = new Robot(string, (-3488), (RobotScore) null);
((Robot) string).getTurretOffsetSensor();

Test 89: 
Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 1000, (RobotScore) null);
((Robot)"7z8xk5]4IqH^f/cK|[)").setMineLayer((MineLayer) null);

Test 90: 
Robot robot = new Robot("Bender", 200, (RobotScore) null);
((Robot)"Bender").getName();

Test 91: 
Robot robot = new Robot("Model X", 5, (RobotScore) null);
((Robot)"Model X").getOdometer();

Test 92: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("A3#J14!CQ2P", 17, robotScoreKeeper);
((Robot)"A3#J14!CQ2P").setHardwareBus((HardwareBus) null);

Test 93: 
Robot robot = new Robot("Q:wVB4", 1, (RobotScore) null);
((Robot)"Q:wVB4").createGetRobotInfoInterruptHandler((MemoryCell) null, (MemoryCell) null, (MemoryCell) null);

Test 94: 
String string = "AkTN=.awo";
Robot robot = new Robot("AkTN=.awo", 4136, (RobotScore) null);
((Robot)"AkTN=.awo").getLastDamageTaken();
String string = "John Doe";
int _int = 25;
Robot robot = new Robot(string, _int, (RobotScore) null);
((Robot) string).getLastDamageTaken();

Test 95: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("5~|1EmgUB41p", 0, robotScoreKeeper);
((Robot)"5~|1EmgUB41p").getSonar();

Test 96: 
String string = "QVB4";
Robot robot = new Robot("QVB4", (-846), (RobotScore) null);
((Robot)"QVB4").getTurretShift();
((Robot) string).getTurretShift();

Test 97: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();

Test 98: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.arena.Speed";
Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).reset();

Test 99: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("BDRCRYiiXKy[zq", 758, robotScoreKeeper);

Test 100: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("Team 1", 10, robotScoreKeeper);
((Robot)"Team 1").getTotalWins();

Test 101: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(":H/k2Ts", 0, robotScoreKeeper);
Sonar sonar = new Sonar();
((Robot)":H/k2Ts").setSonar(sonar);

Test 102: 
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
((Robot)"net.virtualinfinity.atrobots.ports.PortHandler").setRadar((Radar) null);
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
int _int = 300;
Robot robot = new Robot(string, _int, (RobotScore) null);
Radar radar = null;
((Robot) string).setRadar(radar);

Test 103: 
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
((Robot)"g2|KKwy").collides();

Test 104: 
Shield shield = new Shield(100);

Test 105: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt";
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 50, robotScoreKeeper);
((Robot)"net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt").addRobotListener(robotScoreKeeper);
((Robot) string).armorDepleted();

Test 106: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
((Robot)"NP\"%0oOb \"ur#WvB").winRound();

Test 107: 
String string = "net.virtualinfinity.atrobots.ports.PortHandler";
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
((Robot)"net.virtualinfinity.atrobots.ports.PortHandler").addRobotListener(robotScoreKeeper);
((Robot) string).tieRound();

Test 108: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "T-800";
Robot robot = new Robot("T-800", 41, copyOf);
((Robot)"T-800").addRobotListener(robotScoreKeeper);
((Robot) string).killedRobot();

Test 109: 
int _int = 5;
Robot robot = new Robot("Red", 5, (RobotScore) "Red");
((Robot) _int).getShield();

Test 110: 
Robot robot = new Robot("R2D2", 1000, (RobotScore) null);
((Robot)"R2D2").getId();

Test 111: 
Robot robot = new Robot("Nanobot", 0, (RobotScore) null);
((Robot)"Nanobot").getRoundKills();

Test 112: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.robot.Robot4";
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getArmor();
String string = "Robot4";
Robot robot = new Robot(string, (int) robotScoreKeeper, robotScoreKeeper);
((Robot) string).getArmor();

Test 113: 
Robot robot = new Robot("]AXpd+GZMH'I`A", (-680), (RobotScore) null);
((Robot)"]AXpd+GZMH'I`A").isOverburn();

Test 114: 
int _int = 1409;
Robot robot = new Robot("M3C`Be", 1409, (RobotScore) "M3C`Be");
((Robot) _int).getHeatSinks();

Test 115: 
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf((RobotScore) null);
String string = "A1234567";
int _int = 800;
Robot robot = new Robot(string, _int, copyOf);
((Robot) string).getId();

Test 116: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("T-800", 1, robotScoreKeeper);
((Robot)"T-800").getId();

Test 117: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("MechaGodzilla", 35, robotScoreKeeper);
((Robot)"MechaGodzilla").getName();

Test 118: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("gpabrE", 8, copyOf);

Test 119: 
int _int = 1246;
Robot robot = new Robot("Robot 1", 1246, (RobotScore) "Robot 1");
Throttle throttle = null;
((Robot) _int).setThrottle(throttle);

Test 120: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("Bender", 422, robotScoreKeeper);
robotScoreKeeper.died(robot);

Test 121: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("R2D2", 5, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);
Robot robot = new Robot((String) robotScoreKeeper, 5, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);

Test 122: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("John", 34, robotScoreKeeper);

Test 123: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robotScoreKeeper.tiedRound((Robot) null);

Test 124: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("AstroBoy", 85, robotScoreKeeper);
robotScoreKeeper.wonRound(robot);
((Robot)"AstroBoy").getTotalWins();

Test 125: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "ABC123";
Robot robot = new Robot("ABC123", 10, robotScoreKeeper);
Transponder transponder = new Transponder();
((Robot)"ABC123").setTransponder(transponder);
((Robot) string).getTransponder();

Test 126: 
String string = "Bot1";
Robot robot = new Robot("Bot1", 50, (RobotScore) null);
Transceiver transceiver = new Transceiver();
((Robot)"Bot1").setTransceiver(transceiver);
Arena arena = new Arena((FrameBuilder) null);
((Robot) string).arenaConnected(arena);

Test 127: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 2, robotScoreKeeper);
((Robot)"net.virtualinfinity.atrobots.robot.Robot").checkCollision(robot);

Test 128: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Robot 1";
Robot robot = new Robot("Robot 1", (int) robotScoreKeeper, robotScoreKeeper);
int _int = 354;
AbsoluteAngle.fromBygrees(_int);
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(_int);
AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, (RelativeAngle) fromBygrees);
double _double = 2688.0255799902143;
boolean _boolean = true;
boolean _boolean = false;
((Robot) string).scan(clockwiseFrom, _double, _boolean, _boolean);

Test 129: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("Name", 41, copyOf);
((Robot)"Name").inflictedDamage(358.2926834173);

Test 130: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("Eve", 41, copyOf);
Memory memory = new Memory();
DebugInfo debugInfo = new DebugInfo();
Computer computer = new Computer(memory, 41, 68, debugInfo);
((Robot)"Eve").setComputer(computer);

Test 131: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "w";
Robot robot = new Robot("w", 8, copyOf);
((Robot)"w").update((Duration) null);
Duration duration = null;
((Robot) string).update(duration);
Duration duration = null;
((Robot) string).update(duration);

Test 132: 
String string = "Charles Babbage";
Robot robot = new Robot("Charles Babbage", 256, (RobotScore) "Fantastic Visionary");
((Robot) string).createSpecificSnapshot();


* Minimizing test suite
* test suite isTestSuite: 68
Test 0: 
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, (RobotScore) null);
robot.getOverburnLatchPort();
Test 1: 
Robot robot = new Robot("", 0, (RobotScore) null);
robot.getTurret();
Test 2: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1246, robotScoreKeeper);
Throttle throttle = new Throttle(1618.4329);
robot.setThrottle(throttle);
robot.getThrottle();
Test 3: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("w", 8, copyOf);
Duration lastDamageGiven = robot.getLastDamageGiven();
// Undeclared exception!
try { 
  robot.update(lastDamageGiven);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.arena.Position", e);
}

Test 4: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("\" t", (-3754), robotScoreKeeper);
robot.getAimTurretPort();
Test 5: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
robot.accept(arenaObjectVisitorAdaptor);
Test 6: 
Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
robot.getSpeed();
Test 7: 
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robot.addRobotListener(robotScoreKeeper);
robot.winRound();
Test 8: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-854), robotScoreKeeper);
robot.getHeading();
Test 9: 
Robot robot = new Robot("", 8, (RobotScore) null);
robot.getDesiredHeading();
Test 10: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.getTotalDeaths();
Test 11: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
Armor armor = new Armor((-1203.8008070456));
robot.setArmor(armor);
// Undeclared exception!
try { 
  robot.getSnapshot();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 12: 
Robot robot = new Robot("", 8, (RobotScore) null);
// Undeclared exception!
try { 
  robot.createSpecificSnapshot();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 13: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
robot.getTransponder();
Test 14: 
Robot robot = new Robot("\" t", 69, (RobotScore) null);
robot.getThrottle();
Test 15: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
Transponder transponder = new Transponder();
robot.setTransponder(transponder);
robot.getTransponder();
Test 16: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.getHardwareBus();
Test 17: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("6.lx{es|GMg|_", (-1), robotScoreKeeper);
robot.getMineLayer();
Test 18: 
Robot robot = new Robot("", (-289), (RobotScore) null);
robot.getRoundKills();
Test 19: 
Robot robot = new Robot("I={`Ox?K6!R", (-1847), (RobotScore) null);
robot.getShutdownLevelLatchPort();
Test 20: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 880, robotScoreKeeper);
robot.getTotalTies();
Test 21: 
Robot robot = new Robot("", 8, (RobotScore) null);
robot.getComputer();
Test 22: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.getRadar();
Test 23: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", (-1904), robotScoreKeeper);
robot.reset();
Test 24: 
Robot robot = new Robot("", 0, (RobotScore) null);
robot.setTurret((Turret) null);
Test 25: 
Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(1.125, 1.125);
Position position = new Position();
robot.createMissile(fromCartesian, position, 1.125);
Test 26: 
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", (-3488), (RobotScore) null);
robot.getTurretOffsetSensor();
Test 27: 
Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 0, (RobotScore) null);
robot.setMineLayer((MineLayer) null);
Test 28: 
Robot robot = new Robot((String) null, (-1), (RobotScore) null);
robot.getName();
Test 29: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
Memory memory = new Memory();
DebugInfo debugInfo = new DebugInfo();
Computer computer = new Computer(memory, 41, 68, debugInfo);
robot.setComputer(computer);
Test 30: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("@c6#~QSPQb+;()", (-557), robotScoreKeeper);
robot.getShield();
Test 31: 
Robot robot = new Robot("D>@{.C", 65535, (RobotScore) null);
// Undeclared exception!
try { 
  robot.destruct();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 32: 
Robot robot = new Robot("", 1, (RobotScore) null);
robot.getOdometer();
Test 33: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.setHardwareBus((HardwareBus) null);
Test 34: 
Robot robot = new Robot("Q:wVB4", 1, (RobotScore) null);
robot.createGetRobotInfoInterruptHandler((MemoryCell) null, (MemoryCell) null, (MemoryCell) null);
Test 35: 
Robot robot = new Robot("AkTN=.awo", 4136, (RobotScore) null);
robot.getLastDamageTaken();
Test 36: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("5~|1EmgUB41p", 0, robotScoreKeeper);
robot.getSonar();
Test 37: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, robotScoreKeeper);
robot.getTotalKills();
Test 38: 
Robot robot = new Robot("QVB4", (-846), (RobotScore) null);
// Undeclared exception!
try { 
  robot.getTurretShift();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 39: 
Robot robot = new Robot("dvBB}c]", (-698), (RobotScore) null);
Shield shield = new Shield((-698));
robot.setShield(shield);
// Undeclared exception!
try { 
  robot.inflictDamage(robot, (-698));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 40: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("BDRCRYiiXKy[zq", 758, robotScoreKeeper);
robot.getTransceiver();
Test 41: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robot.getTotalWins();
Test 42: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(":H/k2Ts", 0, robotScoreKeeper);
Sonar sonar = new Sonar();
robot.setSonar(sonar);
robot.getSonar();
Test 43: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.setRadar((Radar) null);
Test 44: 
Robot robot = new Robot("net.virtualinfinity.atroots.root.bot$2", 30, (RobotScore) null);
Transceiver transceiver = new Transceiver();
robot.setTransceiver(transceiver);
Arena arena = new Arena((FrameBuilder) null);
robot.arenaConnected(arena);
Test 45: 
Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
// Undeclared exception!
try { 
  robot.collides();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 46: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Shield shield = new Shield(1077);
Robot robot = new Robot("Zo-IXD1oG,|ne/!nNY#", 1077, robotScoreKeeper);
robot.setShield(shield);
// Undeclared exception!
try { 
  robot.inflictDamage(robot, 1077);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 47: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 46, robotScoreKeeper);
robot.addRobotListener(robotScoreKeeper);
// Undeclared exception!
try { 
  robot.armorDepleted();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 48: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-2144946774), robotScoreKeeper);
robot.setOverburn(true);
// Undeclared exception!
try { 
  robot.armorDepleted();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 49: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, robotScoreKeeper);
robot.winRound();
Test 50: 
Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robot.addRobotListener(robotScoreKeeper);
robot.tieRound();
Test 51: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
robot.addRobotListener(robotScoreKeeper);
robot.killedRobot();
Test 52: 
Robot robot = new Robot("", (-3514), (RobotScore) null);
robot.getId();
Test 53: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", (-1355), robotScoreKeeper);
robot.getArmor();
Test 54: 
Robot robot = new Robot("]AXpd+GZMH'I`A", (-680), (RobotScore) null);
robot.isOverburn();
Test 55: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("M3C`Be", 1409, robotScoreKeeper);
robot.getHeatSinks();
Test 56: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("M8%JMA*Wv@f7+^O", 867, copyOf);
robot.getId();
Test 57: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, robotScoreKeeper);
robot.getId();
Test 58: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 35, robotScoreKeeper);
robot.getName();
Test 59: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("gpabrE", 8, copyOf);
robot.getName();
Test 60: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 422, robotScoreKeeper);
robotScoreKeeper.died(robot);
robot.getTotalDeaths();
Test 61: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, robotScoreKeeper);
robotScoreKeeper.killedRobot(robot);
robot.getTotalKills();
Test 62: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
robotScoreKeeper.tiedRound((Robot) null);
Robot robot = new Robot((String) null, 880, robotScoreKeeper);
robot.getTotalTies();
Test 63: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), robotScoreKeeper);
robotScoreKeeper.wonRound(robot);
robot.getTotalWins();
Test 64: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, robotScoreKeeper);
// Undeclared exception!
try { 
  robot.checkCollision(robot);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.arena.Position", e);
}

Test 65: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", (-269), robotScoreKeeper);
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(2211);
RelativeAngle fromBygrees = RelativeAngle.fromBygrees((-655));
AngleBracket clockwiseFrom = AngleBracket.clockwiseFrom(fromBygrees, fromBygrees);
// Undeclared exception!
try { 
  robot.scan(clockwiseFrom, 2688.0255799902143, true, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 66: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 41, copyOf);
// Undeclared exception!
try { 
  robot.inflictedDamage(441.5542693224);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}

Test 67: 
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1717986918, robotScoreKeeper);
Memory memory = new Memory();
MemoryCell cell = memory.getCell(0);
RandomAccessMemoryArray randomAccessMemoryArray = new RandomAccessMemoryArray(2021161080);
memory.addMemoryArray(randomAccessMemoryArray);
Robot.GetRobotStatisticsInterrupt createGetRobotStatisticsInterrupt = robot.createGetRobotStatisticsInterrupt(cell, (MemoryCell) null, cell);
// Undeclared exception!
try { 
  createGetRobotStatisticsInterrupt.handleInterrupt();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 123
* Number of covered goals: 73
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 212
* Number of covered goals: 133
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 36%
* Total number of goals: 125
* Number of covered goals: 45
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 65
* Number of covered goals: 64
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 123
* Number of covered goals: 73
* Generated 68 tests with total length 224
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 7%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", 0, (RobotScore) null);
robot.getOverburnLatchPort();
assertEquals(0, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetOverburnLatchPortReturnsZeroWhenRobotIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("", 0, (RobotScore) null);
robot.getTurret();
assertEquals(0, robot.getRoundKills());
assertEquals(0, robot.getId());


** It was a parseable test case! 
refined test name is: testDefaultRobotProperties
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("", 1246, arg2);
Throttle arg0 = new Throttle(1618.4329);
robot.setThrottle(arg0);
robot.getThrottle();
assertEquals(0, robot.getRoundKills());
assertEquals(1246, robot.getId());


** It was a parseable test case! 
refined test name is: testSetThrottleUpdatesRoundKillsAndId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("\" t", (-3754), arg2);
robot.getAimTurretPort();
assertEquals((-3754), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetIdAndRoundKills
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, arg2);
ArenaObjectVisitorAdaptor arg0 = new ArenaObjectVisitorAdaptor();
robot.accept(arg0);
assertEquals(0, robot.getRoundKills());
assertEquals(1, robot.getId());


** It was a parseable test case! 
refined test name is: testVisitArenaObjectForRobot
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
robot.getSpeed();
assertEquals((-3514), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testRobotGetSpeedNotMoving
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
RobotScoreKeeper arg0 = new RobotScoreKeeper();
robot.addRobotListener(arg0);
robot.winRound();
assertEquals(0, robot.getRoundKills());
assertEquals((-1431655765), robot.getId());


** It was a parseable test case! 
refined test name is: testRobotWinRound
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-854), arg2);
robot.getHeading();
assertEquals((-854), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testCreateRobotWithNullNameAndId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("", 8, (RobotScore) null);
robot.getDesiredHeading();
assertEquals(8, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetDesiredHeadingAndInitialScore
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg0 = new RobotScoreKeeper();
RobotScore arg2 = FinalRobotScore.copyOf(arg0);
Robot robot = new Robot("", 41, arg2);
robot.getTotalDeaths();
assertEquals(41, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testRobotInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, arg2);
Armor arg0 = new Armor((-1203.8008070456));
robot.setArmor(arg0);
// Undeclared exception!
try { 
  robot.getSnapshot();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}


** It was a parseable test case! 
refined test name is: testGetSnapshotThrowsNPEWhenArmorIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("", 8, (RobotScore) null);
// Undeclared exception!
try { 
  robot.createSpecificSnapshot();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}


** It was a parseable test case! 
refined test name is: testCreateSpecificSnapshotNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, arg2);
robot.getTransponder();
assertEquals(0, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetTransponder
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("\" t", 69, (RobotScore) null);
robot.getThrottle();
assertEquals(69, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetThrottleReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, arg2);
Transponder arg0 = new Transponder();
robot.setTransponder(arg0);
robot.getTransponder();
assertEquals(0, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetRobotIDAndRoundKills
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), arg2);
robot.getHardwareBus();
assertEquals((-4279), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetHardwareBus
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("6.lx{es|GMg|_", (-1), arg2);
robot.getMineLayer();
assertEquals(0, robot.getRoundKills());
assertEquals((-1), robot.getId());


** It was a parseable test case! 
refined test name is: testRobotCreationAndInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("", (-289), (RobotScore) null);
int roundKills = robot.getRoundKills();
assertEquals((-289), robot.getId());
assertEquals(0, roundKills);


** It was a parseable test case! 
refined test name is: testGetRoundKillsNoScore
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("I={`Ox?K6!R", (-1847), (RobotScore) null);
robot.getShutdownLevelLatchPort();
assertEquals((-1847), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testConstructorWithValidIDAndNullScore
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 880, arg2);
robot.getTotalTies();
assertEquals(880, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetTotalTiesWithNullNameAndId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("", 8, (RobotScore) null);
robot.getComputer();
assertEquals(8, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testCreateRobot
* Compiling Tests
refined test name is: testCreateRobot
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.getRadar();
assertEquals((-1422), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testNegativeIdAndZeroRoundKills
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.arena.Speed", (-1904), arg2);
robot.reset();
assertFalse(robot.isOverburn());
assertEquals(0, robot.getRoundKills());
assertEquals((-1904), robot.getId());


** It was a parseable test case! 
refined test name is: testAddingNewRobotShouldHaveCorrectProperties
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("", 0, (RobotScore) null);
robot.setTurret((Turret) null);
assertEquals(0, robot.getRoundKills());
assertEquals(0, robot.getId());


** It was a parseable test case! 
refined test name is: testSetTurretToNullSetsRoundKillsAndIdToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("g2|KKwy", (-3514), (RobotScore) null);
AbsoluteAngle arg0 = AbsoluteAngle.fromCartesian(1.125, 1.125);
Position arg1 = new Position();
robot.createMissile(arg0, arg1, 1.125);
assertEquals(0, robot.getRoundKills());
assertEquals((-3514), robot.getId());


** It was a parseable test case! 
refined test name is: testCreateMissileUpdatesRoundKillsAndId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.JumpWhenGreaterInstruction", (-3488), (RobotScore) null);
robot.getTurretOffsetSensor();
assertEquals(0, robot.getRoundKills());
assertEquals((-3488), robot.getId());


** It was a parseable test case! 
refined test name is: testGetTurretOffsetSensorDoesNotAffectRobotStats
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("7z8xk5]4IqH^f/cK|[)", 0, (RobotScore) null);
robot.setMineLayer((MineLayer) null);
assertEquals(0, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testSetMineLayerToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot((String) null, (-1), (RobotScore) null);
robot.getName();
assertEquals(0, robot.getRoundKills());
assertEquals((-1), robot.getId());


** It was a parseable test case! 
refined test name is: testGetNameReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("@c6#~QSPQb+;()", (-557), arg2);
robot.getShield();
assertEquals(0, robot.getRoundKills());
assertEquals((-557), robot.getId());


** It was a parseable test case! 
refined test name is: testGetRobotDetails
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("D>@{.C", 65535, (RobotScore) null);
// Undeclared exception!
try { 
  robot.destruct();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}


** It was a parseable test case! 
refined test name is: testDestructWithNullArgumentThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("", 1, (RobotScore) null);
robot.getOdometer();
assertEquals(0, robot.getRoundKills());
assertEquals(1, robot.getId());


** It was a parseable test case! 
refined test name is: testGetOdometerInitialValue
* Compiling Tests
refined test name is: testGetOdometerInitialValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), arg2);
robot.setHardwareBus((HardwareBus) null);
assertEquals(0, robot.getRoundKills());
assertEquals((-4279), robot.getId());


** It was a parseable test case! 
refined test name is: testGetRoundKillsAndIdWithNullHardwareBus
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("Q:wVB4", 1, (RobotScore) null);
robot.createGetRobotInfoInterruptHandler((MemoryCell) null, (MemoryCell) null, (MemoryCell) null);
assertEquals(1, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testCreateGetRobotInfoInterruptHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("AkTN=.awo", 4136, (RobotScore) null);
Duration lastDamageTaken = robot.getLastDamageTaken();
assertEquals(4136, robot.getId());
assertEquals(0, lastDamageTaken.getCycles());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testRobotIdAndLastDamageTaken
* Compiling Tests
refined test name is: testRobotSettersAndGetters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("5~|1EmgUB41p", 0, arg2);
robot.getSonar();
assertEquals(0, robot.getRoundKills());
assertEquals(0, robot.getId());


** It was a parseable test case! 
refined test name is: testGetSonarInitiallyReturnsZeroRoundKills
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot((String) null, 0, arg2);
robot.getTotalKills();
assertEquals(0, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetTotalKillsDefaultValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("QVB4", (-846), (RobotScore) null);
// Undeclared exception!
try { 
  robot.getTurretShift();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}


** It was a parseable test case! 
refined test name is: testInvalidScoreThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("BDRCRYiiXKy[zq", 758, arg2);
robot.getTransceiver();
assertEquals(0, robot.getRoundKills());
assertEquals(758, robot.getId());


** It was a parseable test case! 
refined test name is: testGetTransceiver
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("<)ob5!N>' WMqKbg", (-4279), arg2);
robot.getTotalWins();
assertEquals(0, robot.getRoundKills());
assertEquals((-4279), robot.getId());


** It was a parseable test case! 
refined test name is: testGetTotalWinsAndRoundKills
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot(":H/k2Ts", 0, arg2);
Sonar arg0 = new Sonar();
robot.setSonar(arg0);
robot.getSonar();
assertEquals(0, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetSonarReturnsCorrectlySetSonarObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
robot.setRadar((Radar) null);
assertEquals((-1422), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testSetRadarNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("g2|KKwy", (-1431655765), (RobotScore) null);
// Undeclared exception!
try { 
  robot.collides();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}


** It was a parseable test case! 
refined test name is: testCollidesthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg0 = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot$GetRobotStatisticsInterrupt", 46, arg0);
robot.addRobotListener(arg0);
// Undeclared exception!
try { 
  robot.armorDepleted();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}


** It was a parseable test case! 
refined test name is: testArmourDepletedNotImplementedExceptionThrown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot((String) null, (-2144946774), arg2);
robot.setOverburn(true);
// Undeclared exception!
try { 
  robot.armorDepleted();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}


** It was a parseable test case! 
refined test name is: testRobotArmorDepletedThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("NP\"%0oOb \"ur#WvB", 0, arg2);
robot.winRound();
assertEquals(0, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testWinningRoundUpdatesScore
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("net.virtualinfinity.atrobots.ports.PortHandler", (-1422), (RobotScore) null);
RobotScoreKeeper arg0 = new RobotScoreKeeper();
robot.addRobotListener(arg0);
robot.tieRound();
assertEquals((-1422), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testRobotTieRound
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg0 = new RobotScoreKeeper();
RobotScore arg2 = FinalRobotScore.copyOf(arg0);
Robot robot = new Robot("", 41, arg2);
robot.addRobotListener(arg0);
robot.killedRobot();
assertEquals(1, arg0.getTotalKills());
assertEquals(41, robot.getId());


** It was a parseable test case! 
refined test name is: testCreateAndUpdateRobotScore
* Compiling Tests
refined test name is: testCreateAndUpdateRobotScore
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("", (-3514), (RobotScore) null);
int id = robot.getId();
assertEquals(0, robot.getRoundKills());
assertEquals((-3514), id);


** It was a parseable test case! 
refined test name is: testGetIdAndRoundKillsWithNegativeScore
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.robot.Robot4", (-1355), arg2);
robot.getArmor();
assertEquals(0, robot.getRoundKills());
assertEquals((-1355), robot.getId());


** It was a parseable test case! 
refined test name is: testGetArmorShouldReturnZeroWhenRobotIsNotShielded
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Robot robot = new Robot("]AXpd+GZMH'I`A", (-680), (RobotScore) null);
robot.isOverburn();
assertEquals((-680), robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testIsOverburnNonNullScoreAndNegativeIdIDSetToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("M3C`Be", 1409, arg2);
robot.getHeatSinks();
assertEquals(1409, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testRobotInitialization
* Compiling Tests
refined test name is: testGetHeatSinks
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg0 = new RobotScoreKeeper();
RobotScore arg2 = FinalRobotScore.copyOf(arg0);
Robot robot = new Robot("M8%JMA*Wv@f7+^O", 867, arg2);
int id = robot.getId();
assertEquals(0, robot.getRoundKills());
assertEquals(867, id);


** It was a parseable test case! 
refined test name is: testGetRoundKillsInitialValueIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot(".at2", 0, arg2);
int id = robot.getId();
assertEquals(0, robot.getRoundKills());
assertEquals(0, id);


** It was a parseable test case! 
refined test name is: testRobotScoreKeeperInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot robot = new Robot("", 35, arg2);
robot.getName();
assertEquals(0, robot.getRoundKills());
assertEquals(35, robot.getId());


** It was a parseable test case! 
refined test name is: testRobotConstructorAndGetters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg0 = new RobotScoreKeeper();
RobotScore arg2 = FinalRobotScore.copyOf(arg0);
Robot robot = new Robot("gpabrE", 8, arg2);
robot.getName();
assertEquals(8, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testCreateNewRobot
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot arg0 = new Robot("", 422, arg2);
arg2.died(arg0);
arg0.getTotalDeaths();
assertEquals(0, arg0.getRoundKills());
assertEquals(422, arg0.getId());


** It was a parseable test case! 
refined test name is: testDiedUpdatesDeathAndKillCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot arg0 = new Robot((String) null, 0, arg2);
arg2.killedRobot(arg0);
arg0.getTotalKills();
assertEquals(0, arg0.getId());
assertEquals(0, arg0.getRoundKills());


** It was a parseable test case! 
refined test name is: testIncrementTotalAndRoundKillsWhenRobotIsKilled
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
arg2.tiedRound((Robot) null);
Robot robot = new Robot((String) null, 880, arg2);
robot.getTotalTies();
assertEquals(880, robot.getId());
assertEquals(0, robot.getRoundKills());


** It was a parseable test case! 
refined test name is: testGetTotalTies
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot arg0 = new Robot("<)ob5!N>' WMqKbg", (-4279), arg2);
arg2.wonRound(arg0);
arg0.getTotalWins();
assertEquals((-4279), arg0.getId());
assertEquals(0, arg0.getRoundKills());


** It was a parseable test case! 
refined test name is: testRobotScoreKeeperWonRound
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg2 = new RobotScoreKeeper();
Robot arg0 = new Robot("net.virtualinfinity.atrobots.robot.Robot", 1, arg2);
// Undeclared exception!
try { 
  arg0.checkCollision(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.arena.Position", e);
}


** It was a parseable test case! 
refined test name is: testCheckCollisionThrowsNPEWithSameRobot
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotScoreKeeper arg0 = new RobotScoreKeeper();
RobotScore arg2 = FinalRobotScore.copyOf(arg0);
Robot robot = new Robot("", 41, arg2);
// Undeclared exception!
try { 
  robot.inflictedDamage(441.5542693224);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
}


** It was a parseable test case! 
refined test name is: testInflictedDamageNullArgument
* Compiling Tests
refined test name is: testInflictedDamageNullArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:32.223 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:32.254 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:32.370 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:32.372 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:32.487 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:32.490 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:32.619 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:32.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:32.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:32.785 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:32.914 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:32.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.031 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:33.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.147 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:33.261 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:33.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.379 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:33.381 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.505 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.507 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:33.630 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.633 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:33.754 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.756 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:33.875 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:33.877 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:33.998 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:34.000 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:34.130 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:34.132 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:34.218 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:34.219 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:34.308 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:34.310 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:34.404 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:34.406 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:34.512 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 08:43:34.518 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:34.611 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:34.612 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:34.711 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:34.712 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:34.823 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:34.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:34.945 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:34.947 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:35.087 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:35.089 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:35.215 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:35.217 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:35.342 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:35.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:35.473 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:35.482 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:35.613 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:35.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:35.748 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:35.751 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 08:43:35.890 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:35.893 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:36.015 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:36.018 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:36.140 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:36.142 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 08:43:36.276 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:36.279 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:36.411 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:36.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:36.513 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:36.514 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:36.649 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:36.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:36.780 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:36.782 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:36.911 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:36.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:37.055 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:37.064 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:37.190 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:37.192 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:37.341 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:37.343 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:37.488 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:37.492 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:37.639 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:37.642 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:37.781 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:37.783 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:37.918 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:37.920 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 08:43:38.028 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:38.029 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.112 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:38.191 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.192 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:38.269 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 08:43:38.270 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:38.347 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.349 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:38.434 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.435 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:38.519 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.521 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:38.596 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.597 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:38.678 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:38.680 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.767 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:38.770 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.923 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:38.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:39.053 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:39.055 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:39.191 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:39.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
[MASTER] 08:43:39.342 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:39.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 08:43:39.484 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:43:39.486 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
** Write a test suite: 20 called: 0 to improve: false
** Write a test suite: 30 called: 1 to improve: false
** Write a test suite: 33 called: 2 to improve: false
** Write a test suite: 46 called: 3 to improve: false
** Write a test suite: 50 called: 4 to improve: false
** Write a test suite: 60 called: 5 to improve: false
[MASTER] 08:43:42.440 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:42.442 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 10 called: 1 to improve: false
** Write a test suite: 14 called: 2 to improve: false
** Write a test suite: 27 called: 3 to improve: false
** Write a test suite: 30 called: 4 to improve: false
** Write a test suite: 40 called: 5 to improve: false
[MASTER] 08:43:45.312 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar2656466347768176593.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 08:43:45.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2656466347768176593.jar
* Writing tests to file
* Writing JUnit test case 'Robot_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 10 called: 1 to improve: false
** Write a test suite: 14 called: 2 to improve: false
** Write a test suite: 27 called: 3 to improve: false
** Write a test suite: 30 called: 4 to improve: false
** Write a test suite: 40 called: 5 to improve: false
* Done!

* Computation finished
