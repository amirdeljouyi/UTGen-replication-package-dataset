* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: net.virtualinfinity.atrobots.robot.Robot
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/86_at-robots2-j/evosuite-files/evosuite.properties
* Connecting to master process on port 4178
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:02:52.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:02:52.301 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:02:52.302 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:02:53.795 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:02:53.797 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:02:54.016 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:02:57.261 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:02:57.362 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:02:57.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:02:57.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:02:57.366 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:02:57.367 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:02:57.367 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:02:57.370 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:02:57.371 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:02:57.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class net.virtualinfinity.atrobots.robot.Robot
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 648
* Using seed 1710334969009
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 395 / 648
[Progress:>                             1%] [Cov:============>                      36%][Progress:>                             2%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:=================>                 50%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              58%][Progress:=====>                        18%] [Cov:====================>              58%][Progress:=====>                        18%] [Cov:====================>              58%][Progress:=====>                        18%] [Cov:====================>              58%][Progress:=====>                        18%] [Cov:====================>              58%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 42%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                46%] [Cov:====================>              59%][Progress:=============>                46%] [Cov:====================>              59%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             60%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 101s and 476 generations, 158619 statements, best individual has fitness: 265.0
* Generated before the refinement 67 tests with total length 246
statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", (-1431655765), arg2)
statement is: getOverburnLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler overburnLatchPort = robot.getOverburnLatchPort()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", (-1431655765), robotScoreKeeper);
robot.getOverburnLatchPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Bender", 20, robotScoreKeeper);
        robot.getOverburnLatchPort();
    }
}
statement is: // Improved test data:
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Bender", 20, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getOverburnLatchPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getOverburnLatchPort() target is: robot method is: getOverburnLatchPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getOverburnLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Bender";
int _int = 20;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getOverburnLatchPort();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot(" v^:", 715, arg2)
statement is: net.virtualinfinity.atrobots.hardware.throttle.Throttle(D)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.throttle.Throttle
statement code is: Throttle throttle = new Throttle(715)
statement is: setThrottle(Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setThrottle(arg0)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(" v^:", 715, robotScoreKeeper);
Throttle throttle = new Throttle(715);
robot.setThrottle(throttle);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("v^:", 715, robotScoreKeeper);
        Throttle throttle = new Throttle(715);
        robot.setThrottle(throttle);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("v^:", 715, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Throttle throttle = new Throttle(715), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setThrottle(throttle), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setThrottle(throttle) target is: robot method is: setThrottle(Throttle)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: setThrottle(Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle;)V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "v^:";
int _int = 715;
Robot robot = new Robot(string, _int, robotScoreKeeper);
int _int = 715;
Throttle throttle = new Throttle(_int);
((Robot) string).setThrottle(throttle);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot(":rkcr2", (-78), arg2)
statement is: getLastDamageGiven()Lnet/virtualinfinity/atrobots/measures/Duration; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Duration
statement code is: Duration lastDamageGiven = robot.getLastDamageGiven()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(":rkcr2", (-78), robotScoreKeeper);
robot.getLastDamageGiven();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot(":rkcr2", 10, robotScoreKeeper);
        robot.getLastDamageGiven();
    }
}
statement is: // Improved test data
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot(":rkcr2", 10, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getLastDamageGiven(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getLastDamageGiven() target is: robot method is: getLastDamageGiven()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getLastDamageGiven()Lnet/virtualinfinity/atrobots/measures/Duration;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = ":rkcr2";
int _int = 10;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getLastDamageGiven();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("e|`6jp<A", 3714, arg2)
statement is: getAimTurretPort()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler aimTurretPort = robot.getAimTurretPort()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("e|`6jp<A", 3714, robotScoreKeeper);
robot.getAimTurretPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int portNumber = 5;// Replace with a more descriptive value }}

    }
}
statement is: int portNumber = 5// Replace with a more descriptive value }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
TestCase is: int _int = 5;

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot(" v^:", 715, arg2)
statement is: net.virtualinfinity.atrobots.ArenaObjectVisitorAdaptor()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.ArenaObjectVisitorAdaptor
statement code is: ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor()
statement is: accept(Lnet/virtualinfinity/atrobots/ArenaObjectVisitor;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.accept(arg0)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot(" v^:", 715, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
robot.accept(arenaObjectVisitorAdaptor);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Mario", 715, robotScoreKeeper);
        ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
        robot.accept(arenaObjectVisitorAdaptor);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Mario", 715, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.accept(arenaObjectVisitorAdaptor), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.accept(arenaObjectVisitorAdaptor) target is: robot method is: accept(ArenaObjectVisitorAdaptor)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: accept(Lnet/virtualinfinity/atrobots/ArenaObjectVisitor;)V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Mario";
int _int = 715;
Robot robot = new Robot(string, _int, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
((Robot) string).accept(arenaObjectVisitorAdaptor);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("z", 375, arg2)
statement is: getSpeed()Lnet/virtualinfinity/atrobots/arena/Speed; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.arena.Speed
statement code is: Speed speed = robot.getSpeed()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("z", 375, robotScoreKeeper);
robot.getSpeed();

* Computation finished
