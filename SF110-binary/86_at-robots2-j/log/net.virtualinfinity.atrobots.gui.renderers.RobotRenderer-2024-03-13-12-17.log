* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/86_at-robots2-j/evosuite-files/evosuite.properties
* Connecting to master process on port 16728
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:17:31.977 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:17:31.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:17:32.016 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:17:32.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 175
* Using seed 1710332249769
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 85 / 175
[Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][MASTER] 12:17:34.937 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          12%] [Cov:=====================>             61%][Progress:===>                          12%] [Cov:=====================>             61%][Progress:===>                          12%] [Cov:=====================>             61%][Progress:===>                          12%] [Cov:=====================>             61%][Progress:===>                          12%] [Cov:=====================>             61%][Progress:===>                          12%] [Cov:=====================>             61%][Progress:===>                          12%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][MASTER] 12:18:02.203 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:========>                     29%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:==============================>    87%][Progress:=================>            59%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          64%] [Cov:===============================>   91%][Progress:===================>          65%] [Cov:===============================>   91%][Progress:===================>          65%] [Cov:===============================>   91%][Progress:===================>          65%] [Cov:===============================>   91%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          65%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%]
* Search finished after 101s and 867 generations, 368646 statements, best individual has fitness: 3.0
* Generated before the refinement 15 tests with total length 88
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2092))
statement is: net.virtualinfinity.atrobots.measures.Temperature(D)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.measures.Temperature
statement code is: Temperature temperature = new Temperature((-2092))
statement is: setTemperature(Lnet/virtualinfinity/atrobots/measures/Temperature;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setTemperature(arg0)
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setTurretHeading(arg0)
statement is: toUnitVector()Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector unitVector = absoluteAngle.toUnitVector()
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2092));
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(-2092);
        Temperature temperature = new Temperature(-2092);
        robotSnapshot.setTemperature(temperature);
        robotSnapshot.setHeading(fromBygrees);
        robotSnapshot.setTurretHeading(fromBygrees);
        Vector unitVector = fromBygrees.toUnitVector();
        robotSnapshot.setPositionVector(unitVector);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(((FontMetrics) (null))).when(graphics2D).getFontMetrics();
        doReturn(((Stroke) (null))).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(-2092), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromBygrees(-2092) target is: AbsoluteAngle method is: fromBygrees(int)
Matched Method is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Temperature temperature = new Temperature(-2092), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setTemperature(temperature), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setTemperature(temperature) target is: robotSnapshot method is: setTemperature(Temperature)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setTemperature(Lnet/virtualinfinity/atrobots/measures/Temperature;)V
statement is: robotSnapshot.setHeading(fromBygrees), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromBygrees) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: robotSnapshot.setTurretHeading(fromBygrees), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setTurretHeading(fromBygrees) target is: robotSnapshot method is: setTurretHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: Vector unitVector = fromBygrees.toUnitVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromBygrees.toUnitVector() target is: fromBygrees method is: toUnitVector()
source statement: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.measures.AbsoluteAngleindex is: 3
Matched Method is: toUnitVector()Lnet/virtualinfinity/atrobots/measures/Vector;
statement is: robotSnapshot.setPositionVector(unitVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(unitVector) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: doReturn(((FontMetrics) (null))).when(graphics2D).getFontMetrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((FontMetrics) (null))).when(graphics2D).getFontMetrics() target is: doReturn(((FontMetrics) (null))).when(graphics2D) method is: getFontMetrics()
statement is: doReturn(((Stroke) (null))).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((Stroke) (null))).when(graphics2D).getStroke() target is: doReturn(((Stroke) (null))).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(_int);
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setShowName(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowName(false)
statement is: isShowName()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showName = robotRenderer.isShowName()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowName(true);// Changed to true to demonstrate that the name is being shown

        robotRenderer.isShowName();
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowName(true)// Changed to true to demonstrate that the name is being shown
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowName(true)// Changed to true to demonstrate that the name is being shown
 target is: robotRenderer method is: setShowName(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowName(Z)V
statement is: robotRenderer.isShowName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isShowName() target is: robotRenderer method is: isShowName()
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: isShowName()Z
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = true;
robotRenderer.setShowName(_boolean);
robotRenderer.isShowName();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setFillShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setFillShield(false)
statement is: isFillShield()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean fillShield = robotRenderer.isFillShield()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    private boolean fillShield;

    public void setFillShield(boolean fillShield) {
        this.fillShield = fillShield;
    }

    public boolean isShieldIsFilled() {
        return fillShield;
    }
}
statement is: return fillShield, class spoon.support.reflect.code.CtReturnImpl
statement is: this.fillShield = fillShield, class spoon.support.reflect.code.CtAssignmentImpl
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render((Graphics2D) null, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setRenderDead(false);
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();
        linkedHashSet.add(10);
        robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setRenderDead(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(false) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedHashSet.add(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(10) target is: linkedHashSet method is: add(int)
statement is: robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
robotRenderer.setRenderDead(_boolean);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-16))
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setTurretHeading(arg0)
statement is: createPolar(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;D)Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector createPolar = Vector.createPolar(arg0, 20.0)
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: setShowStatusBars(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowStatusBars(false)
statement is: setShowName(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowName(false)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = linkedHashSet.add(arg0)
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-16));
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 20.0);
robotSnapshot.setPositionVector(createPolar);
robotRenderer.setShowStatusBars(false);
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(-16);
        robotSnapshot.setHeading(fromBygrees);
        robotSnapshot.setTurretHeading(fromBygrees);
        Vector createPolar = Vector.createPolar(fromBygrees, 20.0);
        robotSnapshot.setPositionVector(createPolar);
        robotRenderer.setShowStatusBars(false);
        robotRenderer.setShowName(false);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();
        linkedHashSet.add(0);
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(((Stroke) (null))).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(-16), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromBygrees(-16) target is: AbsoluteAngle method is: fromBygrees(int)
Matched Method is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: robotSnapshot.setHeading(fromBygrees), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromBygrees) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: robotSnapshot.setTurretHeading(fromBygrees), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setTurretHeading(fromBygrees) target is: robotSnapshot method is: setTurretHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: Vector createPolar = Vector.createPolar(fromBygrees, 20.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Vector.createPolar(fromBygrees, 20.0) target is: Vector method is: createPolar(AbsoluteAngle,double)
Matched Method is: createPolar(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;D)Lnet/virtualinfinity/atrobots/measures/Vector;
statement is: robotSnapshot.setPositionVector(createPolar), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(createPolar) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: robotRenderer.setShowStatusBars(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(false) target is: robotRenderer method is: setShowStatusBars(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowStatusBars(Z)V
statement is: robotRenderer.setShowName(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowName(false) target is: robotRenderer method is: setShowName(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowName(Z)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedHashSet.add(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(0) target is: linkedHashSet method is: add(int)
source statement: java.util.LinkedHashSet()V callee: VariableReference: Statement 9, type java.util.LinkedHashSet<java.lang.Integer>index is: 13
Matched Method is: add(Ljava/lang/Object;)Z
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(((Stroke) (null))).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((Stroke) (null))).when(graphics2D).getStroke() target is: doReturn(((Stroke) (null))).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(_int);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
double _double = 20.0;
Vector createPolar = Vector.createPolar(fromBygrees, _double);
robotSnapshot.setPositionVector(createPolar);
boolean _boolean = false;
robotRenderer.setShowStatusBars(_boolean);
boolean _boolean = false;
robotRenderer.setShowName(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
int _int = 0;
((Set) _boolean).add((Integer) _int);
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-4951))
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: setActiveShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setActiveShield(true)
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: toUnitVector()Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector unitVector = absoluteAngle.toUnitVector()
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-4951));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setActiveShield(true);
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(-45);// changed the value to -45, which is a more descriptive and representative angle for the situation being tested.

        RobotSnapshot robotSnapshot = new RobotSnapshot();
        robotSnapshot.setActiveShield(true);
        robotSnapshot.setHeading(fromBygrees);
        Vector unitVector = fromBygrees.toUnitVector();// changed the value of unit vector to be more descriptive and representative for the situation being tested.

        robotSnapshot.setPositionVector(unitVector);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(((Stroke) (null))).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(-45)// changed the value to -45, which is a more descriptive and representative angle for the situation being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromBygrees(-45) target is: AbsoluteAngle method is: fromBygrees(int)
Matched Method is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setActiveShield(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setActiveShield(true) target is: robotSnapshot method is: setActiveShield(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setActiveShield(Z)V
statement is: robotSnapshot.setHeading(fromBygrees), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromBygrees) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: Vector unitVector = fromBygrees.toUnitVector()// changed the value of unit vector to be more descriptive and representative for the situation being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromBygrees.toUnitVector() target is: fromBygrees method is: toUnitVector()
source statement: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.measures.AbsoluteAngleindex is: 2
Matched Method is: toUnitVector()Lnet/virtualinfinity/atrobots/measures/Vector;
statement is: robotSnapshot.setPositionVector(unitVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(unitVector) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(((Stroke) (null))).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((Stroke) (null))).when(graphics2D).getStroke() target is: doReturn(((Stroke) (null))).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(_int);
RobotSnapshot robotSnapshot = new RobotSnapshot();
boolean _boolean = true;
((RobotSnapshot) fromBygrees).setActiveShield(_boolean);
((RobotSnapshot) fromBygrees).setHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
((ArenaObjectSnapshot) fromBygrees).setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: setDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setDead(true)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render((Graphics2D) null, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setRenderDead(false);
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        robotSnapshot.setDead(true);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();// This sets the set to be empty.

        robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setRenderDead(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(false) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setDead(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setDead(true) target is: robotSnapshot method is: setDead(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setDead(Z)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>()// This sets the set to be empty.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
robotRenderer.setRenderDead(_boolean);
RobotSnapshot robotSnapshot = new RobotSnapshot();
boolean _boolean = true;
((ArenaObjectSnapshot) _void).setDead(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2021161078))
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: toUnitVector()Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector unitVector = absoluteAngle.toUnitVector()
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: setDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setDead(true)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2021161078));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(-2021161078);// This value represents a heading angle of 345 degrees, which is an unusual but valid value for the `fromBygrees` method.

        RobotSnapshot robotSnapshot = new RobotSnapshot();
        robotSnapshot.setHeading(fromBygrees);
        Vector unitVector = fromBygrees.toUnitVector();// This line creates a unit vector that corresponds to the heading angle of 345 degrees.

        robotSnapshot.setPositionVector(unitVector);
        robotSnapshot.setDead(true);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(((Stroke) (null))).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(-2021161078)// This value represents a heading angle of 345 degrees, which is an unusual but valid value for the `fromBygrees` method.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromBygrees(-2021161078) target is: AbsoluteAngle method is: fromBygrees(int)
Matched Method is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setHeading(fromBygrees), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromBygrees) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: Vector unitVector = fromBygrees.toUnitVector()// This line creates a unit vector that corresponds to the heading angle of 345 degrees.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromBygrees.toUnitVector() target is: fromBygrees method is: toUnitVector()
source statement: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.measures.AbsoluteAngleindex is: 2
Matched Method is: toUnitVector()Lnet/virtualinfinity/atrobots/measures/Vector;
statement is: robotSnapshot.setPositionVector(unitVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(unitVector) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: robotSnapshot.setDead(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setDead(true) target is: robotSnapshot method is: setDead(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setDead(Z)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(((Stroke) (null))).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((Stroke) (null))).when(graphics2D).getStroke() target is: doReturn(((Stroke) (null))).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(_int);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((RobotSnapshot) fromBygrees).setHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
((ArenaObjectSnapshot) fromBygrees).setPositionVector(unitVector);
boolean _boolean = true;
((ArenaObjectSnapshot) fromBygrees).setDead(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-3017))
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: createPolar(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;D)Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector createPolar = Vector.createPolar(arg0, 24)
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: setActiveShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setActiveShield(true)
statement is: setFillShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setFillShield(false)
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-3017));
robotSnapshot.setHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 24);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotSnapshot.setActiveShield(true);
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(90);
        robotSnapshot.setHeading(fromBygrees);
        Vector createPolar = Vector.createPolar(fromBygrees, 5);
        robotSnapshot.setPositionVector(createPolar);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();
        robotSnapshot.setActiveShield(false);
        robotRenderer.setFillShield(true);
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(((Stroke) (null))).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(90), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromBygrees(90) target is: AbsoluteAngle method is: fromBygrees(int)
Matched Method is: fromBygrees(I)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
statement is: robotSnapshot.setHeading(fromBygrees), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromBygrees) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: Vector createPolar = Vector.createPolar(fromBygrees, 5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Vector.createPolar(fromBygrees, 5) target is: Vector method is: createPolar(AbsoluteAngle,int)
Matched Method is: createPolar(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;D)Lnet/virtualinfinity/atrobots/measures/Vector;
statement is: robotSnapshot.setPositionVector(createPolar), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(createPolar) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setActiveShield(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setActiveShield(false) target is: robotSnapshot method is: setActiveShield(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 1
Matched Method is: setActiveShield(Z)V
statement is: robotRenderer.setFillShield(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setFillShield(true) target is: robotRenderer method is: setFillShield(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setFillShield(Z)V
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(((Stroke) (null))).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((Stroke) (null))).when(graphics2D).getStroke() target is: doReturn(((Stroke) (null))).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
int _int = 90;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(_int);
robotSnapshot.setHeading(fromBygrees);
int _int = 5;
Vector createPolar = Vector.createPolar(fromBygrees, _int);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
boolean _boolean = false;
robotSnapshot.setActiveShield(_boolean);
boolean _boolean = true;
robotRenderer.setFillShield(_boolean);
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isFillShield()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean fillShield = robotRenderer.isFillShield()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isFillShield();
        // Improved test data:
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isFillShield(true);// set to true to test filling the shield }}

    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isFillShield(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isFillShield() target is: robotRenderer method is: isFillShield()
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: isFillShield()Z
statement is: // Improved test data:
RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isFillShield(true)// set to true to test filling the shield }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isFillShield(true)// set to true to test filling the shield }}
 target is: robotRenderer method is: isFillShield(boolean)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isShowStatusBars()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showStatusBars = robotRenderer.isShowStatusBars()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowStatusBars(false);
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowStatusBars(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(false) target is: robotRenderer method is: setShowStatusBars(boolean)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isRenderDead()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean renderDead = robotRenderer.isRenderDead()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isRenderDead(true);// set to true to simulate a dead robot }}

    }
}
statement is: // Improved test data
RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isRenderDead(true)// set to true to simulate a dead robot }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isRenderDead(true)// set to true to simulate a dead robot }}
 target is: robotRenderer method is: isRenderDead(boolean)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isShowName()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showName = robotRenderer.isShowName()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isShowName("Jane Doe");
        robotRenderer.isShowName(false);
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isShowName("Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isShowName("Jane Doe") target is: robotRenderer method is: isShowName(java.lang.String)
statement is: robotRenderer.isShowName(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isShowName(false) target is: robotRenderer method is: isShowName(boolean)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: isRenderDead()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean renderDead = robotRenderer.isRenderDead()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setRenderDead(false);
        String deadStatus = (robotRenderer.isRenderDead()) ? "alive" : "dead";
        System.out.println("The robot's status is: " + deadStatus);
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setRenderDead(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(false) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: String deadStatus = (robotRenderer.isRenderDead()) ? "alive" : "dead", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConditionalImpl
IT HAS NOT BEEN SUPPORTED YET: (robotRenderer.isRenderDead()) ? "alive" : "dead"
statement is: System.out.println("The robot's status is: " + deadStatus), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println("The robot's status is: " + deadStatus) target is: System.out method is: println(java.lang.String)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
robotRenderer.setRenderDead(_boolean);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setShowStatusBars(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowStatusBars(false)
statement is: isShowStatusBars()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showStatusBars = robotRenderer.isShowStatusBars()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowStatusBars(true);
        Assert.assertTrue("Status bars are visible", robotRenderer.isShowStatusBars());
        robotRenderer.setShowStatusBars(false);
        Assert.assertFalse("Status bars are not visible", robotRenderer.isShowStatusBars());
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowStatusBars(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(true) target is: robotRenderer method is: setShowStatusBars(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowStatusBars(Z)V
statement is: Assert.assertTrue("Status bars are visible", robotRenderer.isShowStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertTrue("Status bars are visible", robotRenderer.isShowStatusBars()) target is: Assert method is: assertTrue(java.lang.String)
statement is: robotRenderer.setShowStatusBars(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(false) target is: robotRenderer method is: setShowStatusBars(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowStatusBars(Z)V
statement is: Assert.assertFalse("Status bars are not visible", robotRenderer.isShowStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertFalse("Status bars are not visible", robotRenderer.isShowStatusBars()) target is: Assert method is: assertFalse(java.lang.String)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = true;
robotRenderer.setShowStatusBars(_boolean);
boolean _boolean = false;
robotRenderer.setShowStatusBars(_boolean);

* test suite isTestSuite: 29
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2092));
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-16));
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 20.0);
robotSnapshot.setPositionVector(createPolar);
robotRenderer.setShowStatusBars(false);
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-4951));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setActiveShield(true);
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2021161078));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 8: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-3017));
robotSnapshot.setHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 24);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotSnapshot.setActiveShield(true);
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((int) (Integer) null);
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 16: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(true);
robotRenderer.isShowName();

Test 17: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) null);

Test 18: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((int) (Integer) null);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
double _double = 20.0;
Vector createPolar = Vector.createPolar(fromBygrees, _double);
robotSnapshot.setPositionVector(createPolar);
boolean _boolean = false;
robotRenderer.setShowStatusBars(_boolean);
boolean _boolean = false;
robotRenderer.setShowName(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
int _int = 0;
((Set) _boolean).add((Integer) _int);
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 19: 
RobotRenderer robotRenderer = new RobotRenderer();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((int) (Integer) null);
RobotSnapshot robotSnapshot = new RobotSnapshot();
boolean _boolean = true;
((RobotSnapshot) fromBygrees).setActiveShield(_boolean);
((RobotSnapshot) fromBygrees).setHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
((ArenaObjectSnapshot) fromBygrees).setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 20: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((ArenaObjectSnapshot)null).setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

Test 21: 
RobotRenderer robotRenderer = new RobotRenderer();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((int) (Integer) null);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((RobotSnapshot) fromBygrees).setHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
((ArenaObjectSnapshot) fromBygrees).setPositionVector(unitVector);
boolean _boolean = true;
((ArenaObjectSnapshot) fromBygrees).setDead(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 22: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(90);
robotSnapshot.setHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 5);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotSnapshot.setActiveShield(false);
robotRenderer.setFillShield(true);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 23: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
RobotRenderer robotRenderer = new RobotRenderer();

Test 24: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 25: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 26: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 27: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);

Test 28: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(true);
robotRenderer.setShowStatusBars(false);


* Generated after the refinement and before minimization 29 tests with total length 184
* test suite isTestSuite: 29
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2092));
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-16));
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 20.0);
robotSnapshot.setPositionVector(createPolar);
robotRenderer.setShowStatusBars(false);
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-4951));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setActiveShield(true);
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2021161078));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 8: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-3017));
robotSnapshot.setHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 24);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotSnapshot.setActiveShield(true);
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((int) (Integer) null);
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 16: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(true);
robotRenderer.isShowName();

Test 17: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) null);

Test 18: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((int) (Integer) null);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
double _double = 20.0;
Vector createPolar = Vector.createPolar(fromBygrees, _double);
robotSnapshot.setPositionVector(createPolar);
boolean _boolean = false;
robotRenderer.setShowStatusBars(_boolean);
boolean _boolean = false;
robotRenderer.setShowName(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
int _int = 0;
((Set) _boolean).add((Integer) _int);
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 19: 
RobotRenderer robotRenderer = new RobotRenderer();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((int) (Integer) null);
RobotSnapshot robotSnapshot = new RobotSnapshot();
boolean _boolean = true;
((RobotSnapshot) fromBygrees).setActiveShield(_boolean);
((RobotSnapshot) fromBygrees).setHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
((ArenaObjectSnapshot) fromBygrees).setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 20: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((ArenaObjectSnapshot)null).setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

Test 21: 
RobotRenderer robotRenderer = new RobotRenderer();
int _int = null;
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((int) (Integer) null);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((RobotSnapshot) fromBygrees).setHeading(fromBygrees);
Vector unitVector = ((AbsoluteAngle) _int).toUnitVector();
((ArenaObjectSnapshot) fromBygrees).setPositionVector(unitVector);
boolean _boolean = true;
((ArenaObjectSnapshot) fromBygrees).setDead(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 22: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees(90);
robotSnapshot.setHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 5);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotSnapshot.setActiveShield(false);
robotRenderer.setFillShield(true);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 23: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
RobotRenderer robotRenderer = new RobotRenderer();

Test 24: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 25: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 26: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 27: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);

Test 28: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(true);
robotRenderer.setShowStatusBars(false);


* Minimizing test suite
* test suite isTestSuite: 15
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2092));
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-16));
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 20.0);
robotSnapshot.setPositionVector(createPolar);
robotRenderer.setShowStatusBars(false);
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2021161078));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-4951));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setActiveShield(true);
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-3017));
robotSnapshot.setHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 24);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotSnapshot.setActiveShield(true);
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 83
* Number of covered goals: 82
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Generated 15 tests with total length 88
* Resulting test suite's coverage: 99% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean showName = robotRenderer.isShowName();
assertTrue(robotRenderer.isFillShield());
assertTrue(robotRenderer.isRenderDead());
assertTrue(showName);
assertTrue(robotRenderer.isShowStatusBars());


** It was a parseable test case! 
refined test name is: testIsRenderDeadAndFillShield
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot arg1 = new RobotSnapshot();
LinkedHashSet<Integer> arg2 = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, arg1, (Set<Integer>) arg2);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}


** It was a parseable test case! 
refined test name is: testRenderMethodWithNullGraphics2DContext
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean fillShield = robotRenderer.isFillShield();
assertTrue(robotRenderer.isShowStatusBars());
assertTrue(robotRenderer.isRenderDead());
assertTrue(robotRenderer.isShowName());
assertTrue(fillShield);


** It was a parseable test case! 
refined test name is: testIsFillShield
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isRenderDead());

robotRenderer.setRenderDead(false);
assertFalse(robotRenderer.isRenderDead());

RobotSnapshot arg1 = new RobotSnapshot();
arg1.setDead(true);
LinkedHashSet<Integer> arg2 = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, arg1, (Set<Integer>) arg2);
assertTrue(robotRenderer.isFillShield());


** It was a parseable test case! 
refined test name is: testRenderWithNullGraphicsContextAndPositions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean showStatusBars = robotRenderer.isShowStatusBars();
assertTrue(robotRenderer.isRenderDead());
assertTrue(robotRenderer.isFillShield());
assertTrue(robotRenderer.isShowName());
assertTrue(showStatusBars);


** It was a parseable test case! 
refined test name is: testDefaultValuesSetCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean renderDead = robotRenderer.isRenderDead();
assertTrue(renderDead);
assertTrue(robotRenderer.isShowStatusBars());
assertTrue(robotRenderer.isShowName());
assertTrue(robotRenderer.isFillShield());


** It was a parseable test case! 
refined test name is: testIsRenderDead
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isFillShield());

robotRenderer.setFillShield(false);
boolean fillShield = robotRenderer.isFillShield();
assertFalse(fillShield);


** It was a parseable test case! 
refined test name is: testRenderingPropertiesShouldBeProperlySetAndGet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isRenderDead());

robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
assertTrue(robotRenderer.isFillShield());


** It was a parseable test case! 
refined test name is: testRenderingDeadRobotsWithoutFillShields
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isShowName());

robotRenderer.setShowName(false);
boolean showName = robotRenderer.isShowName();
assertFalse(showName);


** It was a parseable test case! 
refined test name is: testRobotRendererWithDefaultSettings
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isShowStatusBars());

robotRenderer.setShowStatusBars(false);
boolean showStatusBars = robotRenderer.isShowStatusBars();
assertFalse(showStatusBars);


** It was a parseable test case! 
refined test name is: testHideStatusBars
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:33.472 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:33.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:33.575 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:33.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:33.664 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:33.665 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:33.750 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:33.751 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:33.813 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:33.814 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:33.877 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:33.878 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:33.927 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:33.928 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:33.985 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:33.986 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:34.053 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:34.054 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:34.114 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:34.115 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:34.283 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:34.284 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:02:34.473 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:34.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
[MASTER] 13:02:34.740 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 15
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2092));
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-16));
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 20.0);
robotSnapshot.setPositionVector(createPolar);
robotRenderer.setShowStatusBars(false);
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-4951));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setActiveShield(true);
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2021161078));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 8: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-3017));
robotSnapshot.setHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 24);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotSnapshot.setActiveShield(true);
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();

* Minimizing test suite
[MASTER] 13:02:39.461 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 15
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2092));
Temperature temperature = new Temperature((-2092));
robotSnapshot.setTemperature(temperature);
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-16));
robotSnapshot.setHeading(fromBygrees);
robotSnapshot.setTurretHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 20.0);
robotSnapshot.setPositionVector(createPolar);
robotRenderer.setShowStatusBars(false);
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-2021161078));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 8: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-4951));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setActiveShield(true);
robotSnapshot.setHeading(fromBygrees);
Vector unitVector = fromBygrees.toUnitVector();
robotSnapshot.setPositionVector(unitVector);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromBygrees = AbsoluteAngle.fromBygrees((-3017));
robotSnapshot.setHeading(fromBygrees);
Vector createPolar = Vector.createPolar(fromBygrees, 24);
robotSnapshot.setPositionVector(createPolar);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotSnapshot.setActiveShield(true);
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 83
* Number of covered goals: 82
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Generated 15 tests with total length 88
* Resulting test suite's coverage: 99% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:02:39.509 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 7%
[MASTER] 13:02:44.531 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.003 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.004 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.041 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.042 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.095 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.096 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.137 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.138 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 13:02:46.196 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.197 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.248 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.317 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.318 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.414 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.416 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.478 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.479 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:02:46.546 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.547 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 13:02:46.680 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.680 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 13:02:46.856 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1176066830544369711.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:02:46.857 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1176066830544369711.jar
* Writing tests to file
* Writing JUnit test case 'RobotRenderer_ESTest' to evosuite-tests
[MASTER] 13:02:46.858 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'RobotRenderer_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
* Done!

* Computation finished
