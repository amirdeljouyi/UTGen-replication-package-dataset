* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/86_at-robots2-j/evosuite-files/evosuite.properties
* Connecting to master process on port 21432
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:33:39.091 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:33:39.096 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:33:39.154 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:33:39.264 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 175
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1710455608935
* Starting evolution
* Initial Number of Goals in DynaMOSA = 85 / 175
[Progress:=>                            4%] [Cov:=================>                 49%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          10%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       20%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       21%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       22%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:======>                       23%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      24%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      25%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     27%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 42%] [Cov:====================>              59%][Progress:============>                 42%] [Cov:====================>              59%][Progress:============>                 42%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                45%] [Cov:====================>              59%][Progress:===============>              52%] [Cov:====================>              59%][Progress:===============>              52%] [Cov:====================>              59%][Progress:===============>              52%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%]
* Search finished after 202s and 805 generations, 166787 statements, best individual has fitness: 110.0
* Generated before the refinement 11 tests with total length 35
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isShowName()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showName = robotRenderer.isShowName()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowName(true);
    }
}
statement is: // Improved test data
RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowName(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowName(true) target is: robotRenderer method is: setShowName(boolean)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render((Graphics2D) null, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isShowStatusBars()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showStatusBars = robotRenderer.isShowStatusBars()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        section is;
        very descriptive;
        very it;
        be better;
        have more;
        illustrative examples;
        the primitive;
        and Strings;
        in the;
        // This method is used to check if the status bars are displayed or not
        // Checks if the status bar is shown on the screen }}
    }
}
statement is: section is, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: very descriptive, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: very it, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: be better, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: have more, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: illustrative examples, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the primitive, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: and Strings, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: in the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: // This method is used to check if the status bars are displayed or not, class spoon.support.reflect.code.CtCommentImpl
statement is: // Checks if the status bar is shown on the screen }}, class spoon.support.reflect.code.CtCommentImpl
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render((Graphics2D) null, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setRenderDead(false);
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        // Add some integer values to the set for testing purposes
        linkedHashSet.add(10);
        linkedHashSet.add(20);
        linkedHashSet.add(30);
        robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setRenderDead(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(false) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Add some integer values to the set for testing purposes
linkedHashSet.add(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add some integer values to the set for testing purposes
linkedHashSet.add(10) target is: linkedHashSet method is: add(int)
statement is: linkedHashSet.add(20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(20) target is: linkedHashSet method is: add(int)
statement is: linkedHashSet.add(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(30) target is: linkedHashSet method is: add(int)
statement is: robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
robotRenderer.setRenderDead(_boolean);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setShowStatusBars(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowStatusBars(false)
statement is: isShowStatusBars()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showStatusBars = robotRenderer.isShowStatusBars()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowStatusBars(true);
        Assert.assertTrue(robotRenderer.showStatusBars());
        robotRenderer.setShowStatusBars(false);
        Assert.assertFalse(robotRenderer.showStatusBars());
        robotRenderer.setShowStatusBars(1);
        Assert.assertTrue(robotRenderer.showStatusBars());
        robotRenderer.setShowStatusBars(-1);
        Assert.assertFalse(robotRenderer.showStatusBars());
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowStatusBars(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(true) target is: robotRenderer method is: setShowStatusBars(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowStatusBars(Z)V
statement is: Assert.assertTrue(robotRenderer.showStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertTrue(robotRenderer.showStatusBars()) target is: Assert method is: assertTrue()
statement is: robotRenderer.setShowStatusBars(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(false) target is: robotRenderer method is: setShowStatusBars(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowStatusBars(Z)V
statement is: Assert.assertFalse(robotRenderer.showStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertFalse(robotRenderer.showStatusBars()) target is: Assert method is: assertFalse()
statement is: robotRenderer.setShowStatusBars(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(1) target is: robotRenderer method is: setShowStatusBars(int)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowStatusBars(Z)V
statement is: Assert.assertTrue(robotRenderer.showStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertTrue(robotRenderer.showStatusBars()) target is: Assert method is: assertTrue()
statement is: robotRenderer.setShowStatusBars(-1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(-1) target is: robotRenderer method is: setShowStatusBars(int)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowStatusBars(Z)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Assert.assertFalse(robotRenderer.showStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertFalse(robotRenderer.showStatusBars()) target is: Assert method is: assertFalse()
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = true;
robotRenderer.setShowStatusBars(_boolean);
boolean _boolean = false;
robotRenderer.setShowStatusBars(_boolean);
int _int = 1;
robotRenderer.setShowStatusBars((boolean) _int);
int _int = null;
robotRenderer.setShowStatusBars((boolean) _int);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isFillShield()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean fillShield = robotRenderer.isFillShield()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isFillShield(new Shield(100, 50));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isFillShield(new Shield(100, 50)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isFillShield(new Shield(100, 50)) target is: robotRenderer method is: isFillShield(Shield)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: setDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setDead(true)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render((Graphics2D) null, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setRenderDead(false);
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        robotSnapshot.setDead(true);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        // Changing the primitive values and Strings to more illustrative examples
        robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setRenderDead(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(false) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setDead(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setDead(true) target is: robotSnapshot method is: setDead(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setDead(Z)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changing the primitive values and Strings to more illustrative examples
robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Changing the primitive values and Strings to more illustrative examples
robotRenderer.render(((Graphics2D) (null)), robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
robotRenderer.setRenderDead(_boolean);
RobotSnapshot robotSnapshot = new RobotSnapshot();
boolean _boolean = true;
((ArenaObjectSnapshot) _void).setDead(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isRenderDead()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean renderDead = robotRenderer.isRenderDead()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isRenderDead(new Color(10, 20, 30), 5.6);
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isRenderDead(new Color(10, 20, 30), 5.6), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isRenderDead(new Color(10, 20, 30), 5.6) target is: robotRenderer method is: isRenderDead(Color,double)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setFillShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setFillShield(false)
statement is: isFillShield()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean fillShield = robotRenderer.isFillShield()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setFillShield(true);// Changed from false to true

        assertTrue(robotRenderer.isFillShield());
        // Added a test case for a different value of fillShield
        RobotRenderer robotRenderer2 = new RobotRenderer();
        robotRenderer2.setFillShield(false);
        assertFalse(robotRenderer2.isFillShield());
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setFillShield(true)// Changed from false to true
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setFillShield(true)// Changed from false to true
 target is: robotRenderer method is: setFillShield(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setFillShield(Z)V
statement is: assertTrue(robotRenderer.isFillShield()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(robotRenderer.isFillShield()) target is:  method is: assertTrue(<unknown>)
statement is: // Added a test case for a different value of fillShield
RobotRenderer robotRenderer2 = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer2.setFillShield(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer2.setFillShield(false) target is: robotRenderer2 method is: setFillShield(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 3
Matched Method is: setFillShield(Z)V
statement is: assertFalse(robotRenderer2.isFillShield()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(robotRenderer2.isFillShield()) target is:  method is: assertFalse(<unknown>)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = true;
robotRenderer.setFillShield(_boolean);
RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
robotRenderer.setFillShield(_boolean);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: isRenderDead()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean renderDead = robotRenderer.isRenderDead()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setRenderDead(true);// Changed from false to true to make the test more descriptive and representative of the situation being tested.

        robotRenderer.isRenderDead();
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setRenderDead(true)// Changed from false to true to make the test more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(true)// Changed from false to true to make the test more descriptive and representative of the situation being tested.
 target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: robotRenderer.isRenderDead(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isRenderDead() target is: robotRenderer method is: isRenderDead()
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: isRenderDead()Z
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = true;
robotRenderer.setRenderDead(_boolean);
robotRenderer.isRenderDead();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setShowName(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowName(false)
statement is: isShowName()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showName = robotRenderer.isShowName()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowName("false");
        robotRenderer.isShowName();
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowName("false"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowName("false") target is: robotRenderer method is: setShowName(java.lang.String)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowName(Z)V
statement is: robotRenderer.isShowName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isShowName() target is: robotRenderer method is: isShowName()
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: isShowName()Z
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
String string = "false";
robotRenderer.setShowName((boolean) string);
robotRenderer.isShowName();

* test suite isTestSuite: 21
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 8: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 9: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) null);

Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) null);

Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(true);
robotRenderer.setShowStatusBars(false);
robotRenderer.setShowStatusBars((boolean) 1);
int _int = null;
robotRenderer.setShowStatusBars((boolean) _int);

Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 16: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((ArenaObjectSnapshot)null).setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

Test 17: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 18: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(true);
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);

Test 19: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(true);
robotRenderer.isRenderDead();

Test 20: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName((boolean) "false");
robotRenderer.isShowName();


* Generated after the refinement and before minimization 21 tests with total length 70
* test suite isTestSuite: 21
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 8: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 9: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) null);

Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) null);

Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(true);
robotRenderer.setShowStatusBars(false);
robotRenderer.setShowStatusBars((boolean) 1);
int _int = null;
robotRenderer.setShowStatusBars((boolean) _int);

Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 16: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((ArenaObjectSnapshot)null).setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
LinkedHashSet<Integer> linkedHashSet = null;
robotRenderer.render((Graphics2D) robotSnapshot, linkedHashSet, (Set<Integer>) linkedHashSet);

Test 17: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 18: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(true);
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);

Test 19: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(true);
robotRenderer.isRenderDead();

Test 20: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName((boolean) "false");
robotRenderer.isShowName();


* Minimizing test suite
* test suite isTestSuite: 11
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render((Graphics2D) null, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 8: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 9: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 35%
* Total number of goals: 37
* Number of covered goals: 13
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 25%
* Total number of goals: 83
* Number of covered goals: 21
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 35%
* Total number of goals: 37
* Number of covered goals: 13
* Generated 11 tests with total length 35
* Resulting test suite's coverage: 59% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 3%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean showName = robotRenderer.isShowName();
assertTrue(robotRenderer.isRenderDead());
assertTrue(robotRenderer.isFillShield());
assertTrue(showName);
assertTrue(robotRenderer.isShowStatusBars());


** It was a parseable test case! 
refined test name is: testRobotRendererProperties
* Compiling Tests
* Computation finished
