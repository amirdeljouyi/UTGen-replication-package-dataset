* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: net.virtualinfinity.atrobots.robot.Robot
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/86_at-robots2-j/evosuite-files/evosuite.properties
* Connecting to master process on port 3717
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:36:41.617 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:36:41.619 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:36:41.622 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:36:44.406 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:36:44.421 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:36:44.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:36:49.480 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:36:49.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:36:49.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:36:49.541 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:36:49.542 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:36:49.542 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:36:49.542 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:36:49.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:36:49.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:36:49.558 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class net.virtualinfinity.atrobots.robot.Robot
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 648
* Using seed 1710336994910
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 395 / 648
[Progress:>                             0%] [Cov:==============>                    42%][Progress:>                             1%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             3%] [Cov:================>                  48%][Progress:>                             3%] [Cov:=================>                 50%][Progress:>                             3%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:===================>               55%][Progress:=>                            4%] [Cov:===================>               56%][Progress:=>                            5%] [Cov:===================>               56%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:==>                           9%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          12%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       22%] [Cov:=====================>             60%][Progress:======>                       22%] [Cov:=====================>             60%][Progress:======>                       22%] [Cov:=====================>             60%][Progress:======>                       22%] [Cov:=====================>             60%][Progress:======>                       22%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  38%] [Cov:=====================>             61%][Progress:===========>                  38%] [Cov:=====================>             61%][Progress:===========>                  38%] [Cov:=====================>             61%][Progress:===========>                  39%] [Cov:=====================>             61%][Progress:===========>                  39%] [Cov:=====================>             61%][Progress:===========>                  39%] [Cov:=====================>             61%][Progress:===========>                  39%] [Cov:=====================>             61%][Progress:===========>                  39%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       75%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      78%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:=======================>      79%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     82%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    84%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   87%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 201s and 973 generations, 341466 statements, best individual has fitness: 260.0
* Generated before the refinement 69 tests with total length 268
statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", (-1), arg2)
statement is: getOverburnLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler overburnLatchPort = robot.getOverburnLatchPort()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", (-1), robotScoreKeeper);
robot.getOverburnLatchPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Bender", 2, robotScoreKeeper);
        robot.getOverburnLatchPort();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Bender", 2, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getOverburnLatchPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getOverburnLatchPort() target is: robot method is: getOverburnLatchPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getOverburnLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Bender";
int _int = 2;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getOverburnLatchPort();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1213795105, arg2)
statement is: getTurret()Lnet/virtualinfinity/atrobots/hardware/turret/Turret; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.turret.Turret
statement code is: Turret turret = robot.getTurret()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 1213795105, copyOf);
robot.getTurret();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        Robot robot = new Robot("John Doe", 1234567890, copyOf);
        robot.getTurret();
    }
}
statement is: // Improved test data:
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))) target is: FinalRobotScore method is: copyOf(RobotScoreKeeper)
Matched Method is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore;
statement is: Robot robot = new Robot("John Doe", 1234567890, copyOf), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTurret(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTurret() target is: robot method is: getTurret()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: getTurret()Lnet/virtualinfinity/atrobots/hardware/turret/Turret;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "John Doe";
int _int = 1234567890;
Robot robot = new Robot(string, _int, copyOf);
((Robot) string).getTurret();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction", (-582), arg2)
statement is: getLastDamageGiven()Lnet/virtualinfinity/atrobots/measures/Duration; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Duration
statement code is: Duration lastDamageGiven = robot.getLastDamageGiven()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction", (-582), robotScoreKeeper);
robot.getLastDamageGiven();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(100);
        Robot robot = new Robot("net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction", 20, robotScoreKeeper);
        robot.getLastDamageGiven();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction", 20, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getLastDamageGiven(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getLastDamageGiven() target is: robot method is: getLastDamageGiven()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: getLastDamageGiven()Lnet/virtualinfinity/atrobots/measures/Duration;
TestCase is: String string = "net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction";
int _int = 20;
Robot robot = new Robot(string, _int, (RobotScore) string);
((Robot) _int).getLastDamageGiven();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1, arg2)
statement is: getAimTurretPort()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler aimTurretPort = robot.getAimTurretPort()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1, robotScoreKeeper);
robot.getAimTurretPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Name", 1, robotScoreKeeper);
        robot.getAimTurretPort();
        // Improved test data
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Bender Bending Rodriguez", 1, robotScoreKeeper);
        robot.getAimTurretPort();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Name", 1, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getAimTurretPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getAimTurretPort() target is: robot method is: getAimTurretPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getAimTurretPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
statement is: // Improved test data
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Bender Bending Rodriguez", 1, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getAimTurretPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getAimTurretPort() target is: robot method is: getAimTurretPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 8
Matched Method is: getAimTurretPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Name";
int _int = 1;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getAimTurretPort();
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Bender Bending Rodriguez";
int _int = 1;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getAimTurretPort();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("+ckL;^&'9Y.,m?k", 0, arg2)
statement is: net.virtualinfinity.atrobots.ArenaObjectVisitorAdaptor()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.ArenaObjectVisitorAdaptor
statement code is: ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor()
statement is: accept(Lnet/virtualinfinity/atrobots/ArenaObjectVisitor;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.accept(arg0)
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("+ckL;^&'9Y.,m?k", 0, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
robot.accept(arenaObjectVisitorAdaptor);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Spartacus", 0, robotScoreKeeper);
        ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
        robot.accept(arenaObjectVisitorAdaptor);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Spartacus", 0, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.accept(arenaObjectVisitorAdaptor), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.accept(arenaObjectVisitorAdaptor) target is: robot method is: accept(ArenaObjectVisitorAdaptor)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: accept(Lnet/virtualinfinity/atrobots/ArenaObjectVisitor;)V
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Spartacus";
int _int = 0;
Robot robot = new Robot(string, _int, robotScoreKeeper);
ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor = new ArenaObjectVisitorAdaptor();
((Robot) string).accept(arenaObjectVisitorAdaptor);

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 958, arg2)
statement is: getSpeed()Lnet/virtualinfinity/atrobots/arena/Speed; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.arena.Speed
statement code is: Speed speed = robot.getSpeed()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 958, robotScoreKeeper);
robot.getSpeed();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Jarvis", 958, robotScoreKeeper);
        robot.getSpeed();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Jarvis", 958, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getSpeed(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getSpeed() target is: robot method is: getSpeed()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getSpeed()Lnet/virtualinfinity/atrobots/arena/Speed;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Jarvis";
int _int = 958;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getSpeed();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 2146022023, arg2)
statement is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.addRobotListener(arg0)
statement is: armorDepleted()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.armorDepleted()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 2146022023, robotScoreKeeper);
robot.addRobotListener(robotScoreKeeper);
robot.armorDepleted();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Gigantor 9000", 2146022023, robotScoreKeeper);
        robot.addRobotListener(robotScoreKeeper);
        robot.armorDepleted(50);
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Gigantor 9000", 2146022023, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.addRobotListener(robotScoreKeeper), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.addRobotListener(robotScoreKeeper) target is: robot method is: addRobotListener(RobotScoreKeeper)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: addRobotListener(Lnet/virtualinfinity/atrobots/robot/RobotListener;)V
statement is: robot.armorDepleted(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.armorDepleted(50) target is: robot method is: armorDepleted(int)
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Gigantor 9000";
int _int = 2146022023;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).addRobotListener(robotScoreKeeper);

statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("dc9}=+C= 5(;P*1w", 2154, (RobotScore) null)
statement is: getHeading()Lnet/virtualinfinity/atrobots/arena/Heading; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.arena.Heading
statement code is: Heading heading = robot.getHeading()
test data is: Robot robot = new Robot("dc9}=+C= 5(;P*1w", 2154, (RobotScore) null);
robot.getHeading();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String expectedHeading = "North";
        assertEquals(expectedHeading, robot.getHeading());
    }
}
statement is: String expectedHeading = "North", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedHeading, robot.getHeading()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedHeading, robot.getHeading()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "North"
TestCase is: String string = "North";

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 4404, arg2)
statement is: getDesiredHeading()Lnet/virtualinfinity/atrobots/arena/Heading; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.arena.Heading
statement code is: Heading desiredHeading = robot.getDesiredHeading()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 4404, robotScoreKeeper);
robot.getDesiredHeading();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Scorpio", 4404, robotScoreKeeper);
        robot.getDesiredHeading();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Scorpio", 4404, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getDesiredHeading(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getDesiredHeading() target is: robot method is: getDesiredHeading()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getDesiredHeading()Lnet/virtualinfinity/atrobots/arena/Heading;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Scorpio";
int _int = 4404;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getDesiredHeading();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1610612736, arg2)
statement is: getTotalDeaths()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalDeaths = robot.getTotalDeaths()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1610612736, robotScoreKeeper);
robot.getTotalDeaths();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper scoreKeeper = new RobotScoreKeeper();
        Robot bender = new Robot("Bender", 100, scoreKeeper);
        bender.getTotalDeaths();
    }
}
statement is: RobotScoreKeeper scoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot bender = new Robot("Bender", 100, scoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bender.getTotalDeaths(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: bender.getTotalDeaths() target is: bender method is: getTotalDeaths()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getTotalDeaths()I
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Bender";
int _int = 100;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getTotalDeaths();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1374, arg2)
statement is: net.virtualinfinity.atrobots.hardware.armor.Armor(D)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.hardware.armor.Armor
statement code is: Armor armor = new Armor(3805.566)
statement is: setArmor(Lnet/virtualinfinity/atrobots/hardware/armor/Armor;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robot.setArmor(arg0)
statement is: createSpecificSnapshot()Lnet/virtualinfinity/atrobots/snapshots/ArenaObjectSnapshot; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.snapshots.ArenaObjectSnapshot
statement code is: ArenaObjectSnapshot createSpecificSnapshot = robot.createSpecificSnapshot()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1374, robotScoreKeeper);
Armor armor = new Armor(3805.566);
robot.setArmor(armor);
robot.createSpecificSnapshot();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Robot robot = new Robot("Black Widow", 1374, robotScoreKeeper);
        Armor armor = new Armor(3805.567);
        robot.setArmor(armor);
        robot.createSpecificSnapshot();
    }
}
statement is: Robot robot = new Robot("Black Widow", 1374, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Armor armor = new Armor(3805.567), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.setArmor(armor), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.setArmor(armor) target is: robot method is: setArmor(Armor)
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: setArmor(Lnet/virtualinfinity/atrobots/hardware/armor/Armor;)V
statement is: robot.createSpecificSnapshot(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.createSpecificSnapshot() target is: robot method is: createSpecificSnapshot()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 2
Matched Method is: createSpecificSnapshot()Lnet/virtualinfinity/atrobots/snapshots/ArenaObjectSnapshot;
TestCase is: String string = "Black Widow";
int _int = 1374;
Robot robot = new Robot(string, _int, (RobotScore) string);
double _double = 3805.567;
Armor armor = new Armor(_double);
((Robot) _int).setArmor(armor);
((Robot) _int).createSpecificSnapshot();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1374, arg2)
statement is: createSpecificSnapshot()Lnet/virtualinfinity/atrobots/snapshots/ArenaObjectSnapshot; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.snapshots.ArenaObjectSnapshot
statement code is: ArenaObjectSnapshot createSpecificSnapshot = robot.createSpecificSnapshot()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("", 1374, robotScoreKeeper);
robot.createSpecificSnapshot();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("Wall-E", 1374, robotScoreKeeper);
        robot.createSpecificSnapshot();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("Wall-E", 1374, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.createSpecificSnapshot(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.createSpecificSnapshot() target is: robot method is: createSpecificSnapshot()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: createSpecificSnapshot()Lnet/virtualinfinity/atrobots/snapshots/ArenaObjectSnapshot;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "Wall-E";
int _int = 1374;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).createSpecificSnapshot();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("e,", 1, arg2)
statement is: getTransponder()Lnet/virtualinfinity/atrobots/hardware/transponder/Transponder; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.transponder.Transponder
statement code is: Transponder transponder = robot.getTransponder()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("e,", 1, robotScoreKeeper);
robot.getTransponder();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("EVA", 1, robotScoreKeeper);
        robot.getTransponder();
        // Test Data:
        // * robotName: "EVA"
        // * robotLevel: 1
        // * robotScoreKeeper: a valid instance of RobotScoreKeeper class }}
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("EVA", 1, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getTransponder(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getTransponder() target is: robot method is: getTransponder()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getTransponder()Lnet/virtualinfinity/atrobots/hardware/transponder/Transponder;
statement is: // Test Data:, class spoon.support.reflect.code.CtCommentImpl
statement is: // * robotName: "EVA", class spoon.support.reflect.code.CtCommentImpl
statement is: // * robotLevel: 1, class spoon.support.reflect.code.CtCommentImpl
statement is: // * robotScoreKeeper: a valid instance of RobotScoreKeeper class }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "EVA";
int _int = 1;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getTransponder();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("e,", 1, arg2)
statement is: getThrottle()Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.throttle.Throttle
statement code is: Throttle throttle = robot.getThrottle()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("e,", 1, robotScoreKeeper);
robot.getThrottle();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("e,", 1, robotScoreKeeper);
        robot.getThrottle();// Returns the current throttle value of the robot }}

    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("e,", 1, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getThrottle()// Returns the current throttle value of the robot }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getThrottle()// Returns the current throttle value of the robot }}
 target is: robot method is: getThrottle()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getThrottle()Lnet/virtualinfinity/atrobots/hardware/throttle/Throttle;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "e,";
int _int = 1;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getThrottle();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction", (-582), arg2)
statement is: getHardwareBus()Lnet/virtualinfinity/atrobots/computer/HardwareBus; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.computer.HardwareBus
statement code is: HardwareBus hardwareBus = robot.getHardwareBus()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction", (-582), robotScoreKeeper);
robot.getHardwareBus();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction", 100, robotScoreKeeper);
        robot.getHardwareBus();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction", 100, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getHardwareBus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getHardwareBus() target is: robot method is: getHardwareBus()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getHardwareBus()Lnet/virtualinfinity/atrobots/computer/HardwareBus;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "net.virtualinfinity.atrobots.computer.AbstractConditionalJumpInstruction";
int _int = 100;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getHardwareBus();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("T>Y\"abU8h$&", 192, arg2)
statement is: getMineLayer()Lnet/virtualinfinity/atrobots/hardware/mines/MineLayer; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.hardware.mines.MineLayer
statement code is: MineLayer mineLayer = robot.getMineLayer()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("T>Y\"abU8h$&", 192, robotScoreKeeper);
robot.getMineLayer();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("T>Y\"abU8h$&", 192, robotScoreKeeper);
        robot.getMineLayer();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("T>Y\"abU8h$&", 192, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getMineLayer(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getMineLayer() target is: robot method is: getMineLayer()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 3
Matched Method is: getMineLayer()Lnet/virtualinfinity/atrobots/hardware/mines/MineLayer;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "T>Y\"abU8h$&";
int _int = 192;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getMineLayer();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.robot.FinalRobotScore
statement code is: FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(arg0)
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("", 1213795105, arg2)
statement is: getRoundKills()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int roundKills = robot.getRoundKills()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
Robot robot = new Robot("", 1213795105, copyOf);
robot.getRoundKills();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper)));
        Robot robot = new Robot("John Doe", 1234567890, copyOf);
        robot.getRoundKills();
    }
}
statement is: // Improved test data for the code snippet
RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FinalRobotScore copyOf = ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FinalRobotScore) (FinalRobotScore.copyOf(robotScoreKeeper))) target is: FinalRobotScore method is: copyOf(RobotScoreKeeper)
Matched Method is: copyOf(Lnet/virtualinfinity/atrobots/robot/RobotScore;)Lnet/virtualinfinity/atrobots/robot/RobotScore;
statement is: Robot robot = new Robot("John Doe", 1234567890, copyOf), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getRoundKills(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getRoundKills() target is: robot method is: getRoundKills()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.robot.Robotindex is: 4
Matched Method is: getRoundKills()I
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
FinalRobotScore copyOf = (FinalRobotScore)FinalRobotScore.copyOf(robotScoreKeeper);
String string = "John Doe";
int _int = 1234567890;
Robot robot = new Robot(string, _int, copyOf);
((Robot) string).getRoundKills();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("v#(R|", 0, arg2)
statement is: getShutdownLevelLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.ports.PortHandler
statement code is: PortHandler shutdownLevelLatchPort = robot.getShutdownLevelLatchPort()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("v#(R|", 0, robotScoreKeeper);
robot.getShutdownLevelLatchPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
        Robot robot = new Robot("v#(R|", 0, robotScoreKeeper);
        // Improved test data
        Robot robot = new Robot("v#(R|", 100, robotScoreKeeper);
        robot.getShutdownLevelLatchPort();
    }
}
statement is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Robot robot = new Robot("v#(R|", 0, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
Robot robot = new Robot("v#(R|", 100, robotScoreKeeper), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robot.getShutdownLevelLatchPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robot.getShutdownLevelLatchPort() target is: robot method is: getShutdownLevelLatchPort()
source statement: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.robot.Robotindex is: 6
Matched Method is: getShutdownLevelLatchPort()Lnet/virtualinfinity/atrobots/ports/PortHandler;
TestCase is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
String string = "v#(R|";
int _int = 0;
Robot robot = new Robot(string, _int, robotScoreKeeper);
String string = "v#(R|";
int _int = 100;
Robot robot = new Robot(string, _int, robotScoreKeeper);
((Robot) string).getShutdownLevelLatchPort();

statement is: net.virtualinfinity.atrobots.robot.RobotScoreKeeper()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.RobotScoreKeeper
statement code is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper()
statement is: net.virtualinfinity.atrobots.robot.Robot(Ljava/lang/String;ILnet/virtualinfinity/atrobots/robot/RobotScore;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.robot.Robot
statement code is: Robot robot = new Robot("e,", 1, arg2)
statement is: getTotalTies()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int totalTies = robot.getTotalTies()
test data is: RobotScoreKeeper robotScoreKeeper = new RobotScoreKeeper();
Robot robot = new Robot("e,", 1, robotScoreKeeper);
robot.getTotalTies();

* Computation finished
