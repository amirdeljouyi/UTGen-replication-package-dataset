* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/86_at-robots2-j/evosuite-files/evosuite.properties
* Connecting to master process on port 16671
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:40:51.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:40:51.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:40:51.252 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:40:51.289 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 175
* Using seed 1710423648805
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 85 / 175
[Progress:>                             0%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][MASTER] 13:40:59.375 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         14%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:=====>                        19%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       20%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:========>                     29%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   34%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  37%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:============>                 43%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                44%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                45%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:=============>                46%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               47%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               48%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              51%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             54%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:========================>          71%][Progress:=================>            59%] [Cov:========================>          71%][Progress:=================>            59%] [Cov:========================>          71%][Progress:=================>            59%] [Cov:========================>          71%][Progress:=================>            59%] [Cov:========================>          71%][Progress:=================>            59%] [Cov:========================>          71%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           60%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:==============================>    87%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%]
* Search finished after 201s and 1698 generations, 672066 statements, best individual has fitness: 2.0
* Generated before the refinement 16 tests with total length 110
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setShowName(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowName(false)
statement is: isShowName()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showName = robotRenderer.isShowName()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer renderer = new RobotRenderer();
        renderer.setShowName("show_name");
        renderer.isShowName("John Doe");
    }
}
statement is: RobotRenderer renderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: renderer.setShowName("show_name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: renderer.setShowName("show_name") target is: renderer method is: setShowName(java.lang.String)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowName(Z)V
statement is: renderer.isShowName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: renderer.isShowName("John Doe") target is: renderer method is: isShowName(java.lang.String)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
String string = "show_name";
robotRenderer.setShowName((boolean) string);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setFillShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setFillShield(false)
statement is: isFillShield()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean fillShield = robotRenderer.isFillShield()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setFillShield(true);
        robotRenderer.isFillShield();
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setFillShield(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setFillShield(true) target is: robotRenderer method is: setFillShield(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setFillShield(Z)V
statement is: robotRenderer.isFillShield(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isFillShield() target is: robotRenderer method is: isFillShield()
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: isFillShield()Z
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = true;
robotRenderer.setFillShield(_boolean);
robotRenderer.isFillShield();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke()
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setRenderDead(false);
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(((Stroke) (null))).when(graphics2D).getStroke();
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();
        linkedHashSet.add(1);
        linkedHashSet.add(2);
        linkedHashSet.add(3);
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setRenderDead(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(false) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(((Stroke) (null))).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((Stroke) (null))).when(graphics2D).getStroke() target is: doReturn(((Stroke) (null))).when(graphics2D) method is: getStroke()
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedHashSet.add(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(1) target is: linkedHashSet method is: add(int)
statement is: linkedHashSet.add(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(2) target is: linkedHashSet method is: add(int)
statement is: linkedHashSet.add(3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(3) target is: linkedHashSet method is: add(int)
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
robotRenderer.setRenderDead(_boolean);
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: setDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setDead(true)
statement is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0)
statement is: createCartesian(DD)Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector createCartesian = Vector.createCartesian(128.0, 128.0)
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = linkedHashSet.add(arg0)
statement is: mock(interface java.awt.Stroke) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.awt.Stroke
statement code is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer())
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        robotSnapshot.setDead(true);// This value indicates whether the robot is dead or alive

        AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(100.0, 50.0);// This value represents the position of the robot in a two-dimensional space

        Vector createCartesian = Vector.createCartesian(128.0, 128.0);// This value represents the heading (direction) of the robot

        robotSnapshot.setPositionVector(createCartesian);// This method sets the position vector of the robot

        robotSnapshot.setHeading(fromCartesian);// This method sets the heading of the robot

        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();// This value represents a set of integers that are used to render the robot

        RobotRenderer robotRenderer = new RobotRenderer();// This class is responsible for rendering the robot in a graphics context

        Integer integer = new Integer(0);// This value represents an integer that is used in the test scenario

        linkedHashSet.add(integer);// This method adds an integer to the set of integers used to render the robot

        Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());// This value represents a mock object for the Stroke class that is used in the test scenario

        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());// This value represents a mock object for the Graphics2D class that is used in the test scenario

        doReturn(stroke).when(graphics2D).getStroke();// This method sets up the mock object to return a specific Stroke object when called

        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));// This method renders the robot in the graphics context using the mock objects }}

    }
}
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setDead(true)// This value indicates whether the robot is dead or alive
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setDead(true)// This value indicates whether the robot is dead or alive
 target is: robotSnapshot method is: setDead(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setDead(Z)V
statement is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(100.0, 50.0)// This value represents the position of the robot in a two-dimensional space
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromCartesian(100.0, 50.0) target is: AbsoluteAngle method is: fromCartesian(double,double)
Matched Method is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
statement is: Vector createCartesian = Vector.createCartesian(128.0, 128.0)// This value represents the heading (direction) of the robot
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Vector.createCartesian(128.0, 128.0) target is: Vector method is: createCartesian(double,double)
Matched Method is: createCartesian(DD)Lnet/virtualinfinity/atrobots/measures/Vector;
statement is: robotSnapshot.setPositionVector(createCartesian)// This method sets the position vector of the robot
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(createCartesian)// This method sets the position vector of the robot
 target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: robotSnapshot.setHeading(fromCartesian)// This method sets the heading of the robot
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromCartesian)// This method sets the heading of the robot
 target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()// This value represents a set of integers that are used to render the robot
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RobotRenderer robotRenderer = new RobotRenderer()// This class is responsible for rendering the robot in a graphics context
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Integer integer = new Integer(0)// This value represents an integer that is used in the test scenario
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedHashSet.add(integer)// This method adds an integer to the set of integers used to render the robot
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(integer)// This method adds an integer to the set of integers used to render the robot
 target is: linkedHashSet method is: add(java.lang.Integer)
source statement: java.util.LinkedHashSet()V callee: VariableReference: Statement 6, type java.util.LinkedHashSet<java.lang.Integer>index is: 11
Matched Method is: add(Ljava/lang/Object;)Z
statement is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer())// This value represents a mock object for the Stroke class that is used in the test scenario
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Stroke.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Stroke argument is: Stroke.class
Matched Method is: mock(interface java.awt.Stroke)
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer())// This value represents a mock object for the Graphics2D class that is used in the test scenario
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Stroke argument is: Graphics2D.class
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(stroke).when(graphics2D).getStroke()// This method sets up the mock object to return a specific Stroke object when called
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(stroke).when(graphics2D).getStroke()// This method sets up the mock object to return a specific Stroke object when called
 target is: doReturn(stroke).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)))// This method renders the robot in the graphics context using the mock objects }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)))// This method renders the robot in the graphics context using the mock objects }}
 target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 7, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 12
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotSnapshot robotSnapshot = new RobotSnapshot();
boolean _boolean = true;
robotSnapshot.setDead(_boolean);
double _double = 100.0;
double _double = 50.0;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
double _double = 128.0;
double _double = 128.0;
Vector createCartesian = Vector.createCartesian(_double, _double);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
int _int = 0;
Integer integer = new Integer(_int);
((Set) _double).add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) _double).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setShowStatusBars(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowStatusBars(false)
statement is: isShowStatusBars()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showStatusBars = robotRenderer.isShowStatusBars()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowStatusBars(true);
        assertTrue(robotRenderer.isShowStatusBars());
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowStatusBars(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(true) target is: robotRenderer method is: setShowStatusBars(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setShowStatusBars(Z)V
statement is: assertTrue(robotRenderer.isShowStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(robotRenderer.isShowStatusBars()) target is:  method is: assertTrue(<unknown>)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = true;
robotRenderer.setShowStatusBars(_boolean);

statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0)
statement is: createCartesian(DD)Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector createCartesian = Vector.createCartesian(128.0, 128.0)
statement is: setActiveShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setActiveShield(true)
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: mock(interface java.awt.Stroke) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.awt.Stroke
statement code is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer())
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(384.0, 256.0);
        Vector createCartesian = Vector.createCartesian(192.0, 256.0);
        robotSnapshot.setActiveShield(true);
        robotSnapshot.setPositionVector(createCartesian);
        robotSnapshot.setHeading(fromCartesian);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();
        linkedHashSet.add(456);
        RobotRenderer robotRenderer = new RobotRenderer();
        Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(stroke).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, linkedHashSet);
    }
}
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(384.0, 256.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromCartesian(384.0, 256.0) target is: AbsoluteAngle method is: fromCartesian(double,double)
Matched Method is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
statement is: Vector createCartesian = Vector.createCartesian(192.0, 256.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Vector.createCartesian(192.0, 256.0) target is: Vector method is: createCartesian(double,double)
Matched Method is: createCartesian(DD)Lnet/virtualinfinity/atrobots/measures/Vector;
statement is: robotSnapshot.setActiveShield(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setActiveShield(true) target is: robotSnapshot method is: setActiveShield(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setActiveShield(Z)V
statement is: robotSnapshot.setPositionVector(createCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(createCartesian) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: robotSnapshot.setHeading(fromCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromCartesian) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedHashSet.add(456), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(456) target is: linkedHashSet method is: add(int)
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Stroke.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Stroke argument is: Stroke.class
Matched Method is: mock(interface java.awt.Stroke)
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Stroke argument is: Graphics2D.class
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(stroke).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(stroke).when(graphics2D).getStroke() target is: doReturn(stroke).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, linkedHashSet), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, linkedHashSet) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,LinkedHashSet)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 7, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 12
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotSnapshot robotSnapshot = new RobotSnapshot();
double _double = 384.0;
double _double = 256.0;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
double _double = 192.0;
double _double = 256.0;
Vector createCartesian = Vector.createCartesian(_double, _double);
boolean _boolean = true;
robotSnapshot.setActiveShield(_boolean);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) _boolean).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer())
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: setDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setDead(true)
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
robotRenderer.setRenderDead(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        robotSnapshot.setDead(true);
        robotRenderer.setRenderDead(false);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();
        linkedHashSet.add(1);// The robot is dead and should not be rendered

        linkedHashSet.add(2);// The robot is alive and should be rendered

        linkedHashSet.add(3);// The robot is alive and should be rendered

        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setDead(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setDead(true) target is: robotSnapshot method is: setDead(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 2
Matched Method is: setDead(Z)V
statement is: robotRenderer.setRenderDead(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(false) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedHashSet.add(1)// The robot is dead and should not be rendered
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(1)// The robot is dead and should not be rendered
 target is: linkedHashSet method is: add(int)
statement is: linkedHashSet.add(2)// The robot is alive and should be rendered
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(2)// The robot is alive and should be rendered
 target is: linkedHashSet method is: add(int)
statement is: linkedHashSet.add(3)// The robot is alive and should be rendered
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(3)// The robot is alive and should be rendered
 target is: linkedHashSet method is: add(int)
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
boolean _boolean = true;
robotSnapshot.setDead(_boolean);
boolean _boolean = false;
robotRenderer.setRenderDead(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221))
statement is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setTurretHeading(arg0)
statement is: toVector(D)Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector vector = absoluteAngle.toVector((-4.785644442750221))
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: setShowStatusBars(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowStatusBars(false)
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.setShowStatusBars(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(-4.785644442750221, -4.785644442750221);
        robotSnapshot.setTurretHeading(fromCartesian);
        Vector vector = fromCartesian.toVector(-4.785644442750221);
        robotSnapshot.setPositionVector(vector);
        robotSnapshot.setHeading(fromCartesian);
        RobotRenderer robotRenderer = new RobotRenderer();
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        robotRenderer.setShowStatusBars(false);
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(((FontMetrics) (null))).when(graphics2D).getFontMetrics();
        doReturn(((Stroke) (null))).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(-4.785644442750221, -4.785644442750221), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromCartesian(-4.785644442750221, -4.785644442750221) target is: AbsoluteAngle method is: fromCartesian(double,double)
Matched Method is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: robotSnapshot.setTurretHeading(fromCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setTurretHeading(fromCartesian) target is: robotSnapshot method is: setTurretHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: Vector vector = fromCartesian.toVector(-4.785644442750221), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromCartesian.toVector(-4.785644442750221) target is: fromCartesian method is: toVector(double)
source statement: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.measures.AbsoluteAngleindex is: 3
Matched Method is: toVector(D)Lnet/virtualinfinity/atrobots/measures/Vector;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: robotSnapshot.setPositionVector(vector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(vector) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: robotSnapshot.setHeading(fromCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromCartesian) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowStatusBars(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(false) target is: robotRenderer method is: setShowStatusBars(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 6, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 9
Matched Method is: setShowStatusBars(Z)V
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: doReturn(((FontMetrics) (null))).when(graphics2D).getFontMetrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((FontMetrics) (null))).when(graphics2D).getFontMetrics() target is: doReturn(((FontMetrics) (null))).when(graphics2D) method is: getFontMetrics()
statement is: doReturn(((Stroke) (null))).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(((Stroke) (null))).when(graphics2D).getStroke() target is: doReturn(((Stroke) (null))).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 6, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 9
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotSnapshot robotSnapshot = new RobotSnapshot();
double _double = null;
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
robotSnapshot.setTurretHeading(fromCartesian);
double _double = null;
Vector vector = ((AbsoluteAngle) _double).toVector(_double);
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
boolean _boolean = false;
((RobotRenderer) vector).setShowStatusBars(_boolean);
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) vector).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: mock(interface java.awt.Stroke) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.awt.Stroke
statement code is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer())
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke()
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: org.evosuite.testcase.statements.FieldStatement@23582ffb type is: class org.evosuite.testcase.statements.FieldStatement return type class net.virtualinfinity.atrobots.measures.Temperature
statement code is: Temperature temperature = Temperature.BASE_TEMPERATURE
statement is: setTemperature(Lnet/virtualinfinity/atrobots/measures/Temperature;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setTemperature(arg0)
statement is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221))
statement is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setTurretHeading(arg0)
statement is: toVector(D)Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector vector = absoluteAngle.toVector((-4.785644442750221))
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setShowName(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setShowName(false)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(stroke).when(graphics2D).getStroke();
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        Temperature temperature = Temperature.BASE_TEMPERATURE;// Changed from a primitive value to a more descriptive example (e.g., "30 degrees Celsius")

        robotSnapshot.setTemperature(temperature);
        AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(-4.785644442750221, -4.785644442750221);// Changed from a primitive value to a more descriptive example (e.g., "30 degrees Celsius")

        robotSnapshot.setTurretHeading(fromCartesian);
        Vector vector = fromCartesian.toVector(-4.785644442750221);// Changed from a primitive value to a more descriptive example (e.g., "30 degrees Celsius")

        robotSnapshot.setPositionVector(vector);
        robotSnapshot.setHeading(fromCartesian);
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowName(false);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();// Changed from a primitive value to a more descriptive example (e.g., "A set containing the numbers 1, 2, and 3")

        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Stroke.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Stroke argument is: Stroke.class
Matched Method is: mock(interface java.awt.Stroke)
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Stroke argument is: Graphics2D.class
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(stroke).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(stroke).when(graphics2D).getStroke() target is: doReturn(stroke).when(graphics2D) method is: getStroke()
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Temperature temperature = Temperature.BASE_TEMPERATURE// Changed from a primitive value to a more descriptive example (e.g., "30 degrees Celsius")
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Temperature.BASE_TEMPERATURE is Temperature
CtField is: public static net.virtualinfinity.atrobots.measures.Temperature net.virtualinfinity.atrobots.measures.Temperature.BASE_TEMPERATURE Temperature BASE_TEMPERATURE
statement is: robotSnapshot.setTemperature(temperature), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setTemperature(temperature) target is: robotSnapshot method is: setTemperature(Temperature)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setTemperature(Lnet/virtualinfinity/atrobots/measures/Temperature;)V
statement is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(-4.785644442750221, -4.785644442750221)// Changed from a primitive value to a more descriptive example (e.g., "30 degrees Celsius")
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromCartesian(-4.785644442750221, -4.785644442750221) target is: AbsoluteAngle method is: fromCartesian(double,double)
Matched Method is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: robotSnapshot.setTurretHeading(fromCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setTurretHeading(fromCartesian) target is: robotSnapshot method is: setTurretHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: Vector vector = fromCartesian.toVector(-4.785644442750221)// Changed from a primitive value to a more descriptive example (e.g., "30 degrees Celsius")
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromCartesian.toVector(-4.785644442750221) target is: fromCartesian method is: toVector(double)
source statement: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; callee: VariableReference: Statement 5, type net.virtualinfinity.atrobots.measures.AbsoluteAngleindex is: 8
Matched Method is: toVector(D)Lnet/virtualinfinity/atrobots/measures/Vector;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: robotSnapshot.setPositionVector(vector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(vector) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: robotSnapshot.setHeading(fromCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromCartesian) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 3
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowName(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowName(false) target is: robotRenderer method is: setShowName(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 10, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 14
Matched Method is: setShowName(Z)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()// Changed from a primitive value to a more descriptive example (e.g., "A set containing the numbers 1, 2, and 3")
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 10, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 14
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
((RobotSnapshot) graphics2D).setTemperature(temperature);
double _double = null;
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
((RobotSnapshot) graphics2D).setTurretHeading(fromCartesian);
double _double = null;
Vector vector = ((AbsoluteAngle) _void).toVector(_double);
((ArenaObjectSnapshot) graphics2D).setPositionVector(vector);
((RobotSnapshot) graphics2D).setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
((RobotRenderer) _double).setShowName(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
((RobotRenderer) _double).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0)
statement is: createCartesian(DD)Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector createCartesian = Vector.createCartesian(128.0, 128.0)
statement is: setActiveShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setActiveShield(true)
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: mock(interface java.awt.Stroke) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.awt.Stroke
statement code is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer())
statement is: setFillShield(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setFillShield(false)
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(-50.0, -50.0);
        Vector createCartesian = Vector.createCartesian(128.0, 128.0);
        robotSnapshot.setActiveShield(true);
        robotSnapshot.setPositionVector(createCartesian);
        robotSnapshot.setHeading(fromCartesian);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();
        linkedHashSet.add(2405);
        linkedHashSet.add(135);
        linkedHashSet.add(270);
        RobotRenderer robotRenderer = new RobotRenderer();
        Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
        robotRenderer.setFillShield(false);
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(stroke).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(-50.0, -50.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromCartesian(-50.0, -50.0) target is: AbsoluteAngle method is: fromCartesian(double,double)
Matched Method is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: Vector createCartesian = Vector.createCartesian(128.0, 128.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Vector.createCartesian(128.0, 128.0) target is: Vector method is: createCartesian(double,double)
Matched Method is: createCartesian(DD)Lnet/virtualinfinity/atrobots/measures/Vector;
statement is: robotSnapshot.setActiveShield(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setActiveShield(true) target is: robotSnapshot method is: setActiveShield(boolean)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setActiveShield(Z)V
statement is: robotSnapshot.setPositionVector(createCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(createCartesian) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: robotSnapshot.setHeading(fromCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromCartesian) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 0
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedHashSet.add(2405), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(2405) target is: linkedHashSet method is: add(int)
statement is: linkedHashSet.add(135), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(135) target is: linkedHashSet method is: add(int)
statement is: linkedHashSet.add(270), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedHashSet.add(270) target is: linkedHashSet method is: add(int)
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Stroke.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Stroke argument is: Stroke.class
Matched Method is: mock(interface java.awt.Stroke)
statement is: robotRenderer.setFillShield(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setFillShield(false) target is: robotRenderer method is: setFillShield(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 7, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 12
Matched Method is: setFillShield(Z)V
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Stroke argument is: Graphics2D.class
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(stroke).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(stroke).when(graphics2D).getStroke() target is: doReturn(stroke).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 7, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 12
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotSnapshot robotSnapshot = new RobotSnapshot();
double _double = null;
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
double _double = 128.0;
double _double = 128.0;
Vector createCartesian = Vector.createCartesian(_double, _double);
boolean _boolean = true;
robotSnapshot.setActiveShield(_boolean);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
boolean _boolean = false;
((RobotRenderer) _boolean).setFillShield(_boolean);
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) _boolean).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isFillShield()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean fillShield = robotRenderer.isFillShield()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isFillShield(true);// Testing with a boolean value of true to check if the shield is filled or not

        // Improved test data:
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isFillShield(false);// Testing with a boolean value of false to check if the shield is unfilled or not }}

    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isFillShield(true)// Testing with a boolean value of true to check if the shield is filled or not
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isFillShield(true)// Testing with a boolean value of true to check if the shield is filled or not
 target is: robotRenderer method is: isFillShield(boolean)
statement is: // Improved test data:
RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isFillShield(false)// Testing with a boolean value of false to check if the shield is unfilled or not }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isFillShield(false)// Testing with a boolean value of false to check if the shield is unfilled or not }}
 target is: robotRenderer method is: isFillShield(boolean)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isShowStatusBars()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showStatusBars = robotRenderer.isShowStatusBars()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setShowStatusBars(true);
        assertTrue(robotRenderer.isShowStatusBars());
        // Test with a false value
        robotRenderer.setShowStatusBars(false);
        assertFalse(robotRenderer.isShowStatusBars());
        // Test with an invalid value (a string)
        robotRenderer.setShowStatusBars("invalid");
        assertFalse(robotRenderer.isShowStatusBars());
        // Test with a null value
        robotRenderer.setShowStatusBars(null);
        assertFalse(robotRenderer.isShowStatusBars());
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setShowStatusBars(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setShowStatusBars(true) target is: robotRenderer method is: setShowStatusBars(boolean)
statement is: assertTrue(robotRenderer.isShowStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(robotRenderer.isShowStatusBars()) target is:  method is: assertTrue(<unknown>)
statement is: // Test with a false value
robotRenderer.setShowStatusBars(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test with a false value
robotRenderer.setShowStatusBars(false) target is: robotRenderer method is: setShowStatusBars(boolean)
statement is: assertFalse(robotRenderer.isShowStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(robotRenderer.isShowStatusBars()) target is:  method is: assertFalse(<unknown>)
statement is: // Test with an invalid value (a string)
robotRenderer.setShowStatusBars("invalid"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test with an invalid value (a string)
robotRenderer.setShowStatusBars("invalid") target is: robotRenderer method is: setShowStatusBars(java.lang.String)
statement is: assertFalse(robotRenderer.isShowStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(robotRenderer.isShowStatusBars()) target is:  method is: assertFalse(<unknown>)
statement is: // Test with a null value
robotRenderer.setShowStatusBars(null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test with a null value
robotRenderer.setShowStatusBars(null) target is: robotRenderer method is: setShowStatusBars(<unknown>)
statement is: assertFalse(robotRenderer.isShowStatusBars()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(robotRenderer.isShowStatusBars()) target is:  method is: assertFalse(<unknown>)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isRenderDead()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean renderDead = robotRenderer.isRenderDead()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        /* dead: true */
        robotRenderer.isRenderDead();
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: /* dead: true */
robotRenderer.isRenderDead(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: /* dead: true */
robotRenderer.isRenderDead() target is: robotRenderer method is: isRenderDead()
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: isRenderDead()Z
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: isShowName()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean showName = robotRenderer.isShowName()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.isShowName("true");
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.isShowName("true"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.isShowName("true") target is: robotRenderer method is: isShowName(java.lang.String)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: setRenderDead(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.setRenderDead(false)
statement is: isRenderDead()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean renderDead = robotRenderer.isRenderDead()
test data is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        robotRenderer.setRenderDead(false);
        assertFalse(robotRenderer.isRenderDead());
        robotRenderer.setRenderDead(true);
        assertTrue(robotRenderer.isRenderDead());
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotRenderer.setRenderDead(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(false) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: assertFalse(robotRenderer.isRenderDead()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(robotRenderer.isRenderDead()) target is:  method is: assertFalse(<unknown>)
statement is: robotRenderer.setRenderDead(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.setRenderDead(true) target is: robotRenderer method is: setRenderDead(boolean)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: setRenderDead(Z)V
statement is: assertTrue(robotRenderer.isRenderDead()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(robotRenderer.isRenderDead()) target is:  method is: assertTrue(<unknown>)
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
robotRenderer.setRenderDead(_boolean);
boolean _boolean = true;
robotRenderer.setRenderDead(_boolean);

statement is: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.gui.renderers.RobotRenderer
statement code is: RobotRenderer robotRenderer = new RobotRenderer()
statement is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.AbsoluteAngle
statement code is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-1675.028559764417), (-1675.028559764417))
statement is: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.virtualinfinity.atrobots.snapshots.RobotSnapshot
statement code is: RobotSnapshot robotSnapshot = new RobotSnapshot()
statement is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setTurretHeading(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@23582ffb type is: class org.evosuite.testcase.statements.FieldStatement return type class net.virtualinfinity.atrobots.measures.Temperature
statement code is: Temperature temperature = Temperature.BASE_TEMPERATURE
statement is: setTemperature(Lnet/virtualinfinity/atrobots/measures/Temperature;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setTemperature(arg0)
statement is: toVector(D)Lnet/virtualinfinity/atrobots/measures/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type class net.virtualinfinity.atrobots.measures.Vector
statement code is: Vector vector = absoluteAngle.toVector((-1032.948907))
statement is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setPositionVector(arg0)
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setName("")
statement is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotSnapshot.setHeading(arg0)
statement is: java.util.LinkedHashSet()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedHashSet<java.lang.Integer>
statement code is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>()
statement is: mock(class java.awt.geom.Rectangle2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.geom.Rectangle2D
statement code is: Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(rectangle2D).getWidth()
statement is: mock(class java.awt.FontMetrics) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.FontMetrics
statement code is: FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class))
statement is: mock(interface java.awt.Stroke) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface java.awt.Stroke
statement code is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer())
statement is: mock(class java.awt.Graphics2D) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class java.awt.Graphics2D
statement code is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke()
statement is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: robotRenderer.render(arg0, arg1, (Set<Integer>) arg2)
test data is: RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-1675.028559764417), (-1675.028559764417));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
Vector vector = fromCartesian.toVector((-1032.948907));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setName("");
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(rectangle2D).getWidth();
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RobotRenderer robotRenderer = new RobotRenderer();
        AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(-1675.028559764417, -1675.028559764417);
        RobotSnapshot robotSnapshot = new RobotSnapshot();
        robotSnapshot.setTurretHeading(fromCartesian);
        Temperature temperature = Temperature.BASE_TEMPERATURE;
        robotSnapshot.setTemperature(temperature);
        Vector vector = fromCartesian.toVector(-1032.948907);
        robotSnapshot.setPositionVector(vector);
        robotSnapshot.setName("");
        robotSnapshot.setHeading(fromCartesian);
        LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
        Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
        doReturn(0.0).when(rectangle2D).getWidth();
        FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
        doReturn(rectangle2D).when(fontMetrics).getStringBounds("Robot 1", any(Graphics.class));
        Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
        Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
        doReturn(fontMetrics).when(graphics2D).getFontMetrics();
        doReturn(stroke).when(graphics2D).getStroke();
        robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet)));
    }
}
statement is: RobotRenderer robotRenderer = new RobotRenderer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(-1675.028559764417, -1675.028559764417), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AbsoluteAngle.fromCartesian(-1675.028559764417, -1675.028559764417) target is: AbsoluteAngle method is: fromCartesian(double,double)
Matched Method is: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: RobotSnapshot robotSnapshot = new RobotSnapshot(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: robotSnapshot.setTurretHeading(fromCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setTurretHeading(fromCartesian) target is: robotSnapshot method is: setTurretHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 4
Matched Method is: setTurretHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: Temperature temperature = Temperature.BASE_TEMPERATURE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Temperature.BASE_TEMPERATURE is Temperature
CtField is: public static net.virtualinfinity.atrobots.measures.Temperature net.virtualinfinity.atrobots.measures.Temperature.BASE_TEMPERATURE Temperature BASE_TEMPERATURE
statement is: robotSnapshot.setTemperature(temperature), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setTemperature(temperature) target is: robotSnapshot method is: setTemperature(Temperature)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 4
Matched Method is: setTemperature(Lnet/virtualinfinity/atrobots/measures/Temperature;)V
statement is: Vector vector = fromCartesian.toVector(-1032.948907), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromCartesian.toVector(-1032.948907) target is: fromCartesian method is: toVector(double)
source statement: fromCartesian(DD)Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle; callee: VariableReference: Statement 1, type net.virtualinfinity.atrobots.measures.AbsoluteAngleindex is: 3
Matched Method is: toVector(D)Lnet/virtualinfinity/atrobots/measures/Vector;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: robotSnapshot.setPositionVector(vector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setPositionVector(vector) target is: robotSnapshot method is: setPositionVector(Vector)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 4
Matched Method is: setPositionVector(Lnet/virtualinfinity/atrobots/measures/Vector;)V
statement is: robotSnapshot.setName(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setName("") target is: robotSnapshot method is: setName(java.lang.String)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: robotSnapshot.setHeading(fromCartesian), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotSnapshot.setHeading(fromCartesian) target is: robotSnapshot method is: setHeading(AbsoluteAngle)
source statement: net.virtualinfinity.atrobots.snapshots.RobotSnapshot()V callee: VariableReference: Statement 2, type net.virtualinfinity.atrobots.snapshots.RobotSnapshotindex is: 4
Matched Method is: setHeading(Lnet/virtualinfinity/atrobots/measures/AbsoluteAngle;)V
statement is: LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Rectangle2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Rectangle2D argument is: Rectangle2D.class
Matched Method is: mock(class java.awt.geom.Rectangle2D)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(0.0).when(rectangle2D).getWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(0.0).when(rectangle2D).getWidth() target is: doReturn(0.0).when(rectangle2D) method is: getWidth()
statement is: FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(FontMetrics.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Rectangle2D argument is: FontMetrics.class
target name is: FontMetrics argument is: FontMetrics.class
Matched Method is: mock(class java.awt.FontMetrics)
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: doReturn(rectangle2D).when(fontMetrics).getStringBounds("Robot 1", any(Graphics.class)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(rectangle2D).when(fontMetrics).getStringBounds("Robot 1", any(Graphics.class)) target is: doReturn(rectangle2D).when(fontMetrics) method is: getStringBounds(java.lang.String)
statement is: Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Stroke.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Rectangle2D argument is: Stroke.class
target name is: FontMetrics argument is: Stroke.class
target name is: Stroke argument is: Stroke.class
Matched Method is: mock(interface java.awt.Stroke)
statement is: Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Graphics2D.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Rectangle2D argument is: Graphics2D.class
target name is: FontMetrics argument is: Graphics2D.class
target name is: Stroke argument is: Graphics2D.class
target name is: Graphics2D argument is: Graphics2D.class
Matched Method is: mock(class java.awt.Graphics2D)
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: doReturn(fontMetrics).when(graphics2D).getFontMetrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(fontMetrics).when(graphics2D).getFontMetrics() target is: doReturn(fontMetrics).when(graphics2D) method is: getFontMetrics()
statement is: doReturn(stroke).when(graphics2D).getStroke(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn(stroke).when(graphics2D).getStroke() target is: doReturn(stroke).when(graphics2D) method is: getStroke()
statement is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: robotRenderer.render(graphics2D, robotSnapshot, ((Set<Integer>) (linkedHashSet))) target is: robotRenderer method is: render(Graphics2D,RobotSnapshot,Set)
source statement: net.virtualinfinity.atrobots.gui.renderers.RobotRenderer()V callee: VariableReference: Statement 0, type net.virtualinfinity.atrobots.gui.renderers.RobotRendererindex is: 0
Matched Method is: render(Ljava/awt/Graphics2D;Lnet/virtualinfinity/atrobots/snapshots/RobotSnapshot;Ljava/util/Set;)V
TestCase is: RobotRenderer robotRenderer = new RobotRenderer();
double _double = null;
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((RobotSnapshot) _double).setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
((RobotSnapshot) _double).setTemperature(temperature);
double _double = null;
Vector vector = ((AbsoluteAngle) _double).toVector(_double);
((ArenaObjectSnapshot) _double).setPositionVector(vector);
String string = "";
((RobotSnapshot) _double).setName(string);
((RobotSnapshot) _double).setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
double _double = null;
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(_double).when(rectangle2D).getWidth();
Rectangle2D rectangle2D = null;
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

* test suite isTestSuite: 32
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 5: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
robotRenderer.setRenderDead(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.setShowStatusBars(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 8: 
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 9: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-1675.028559764417), (-1675.028559764417));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
Vector vector = fromCartesian.toVector((-1032.948907));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setName("");
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(rectangle2D).getWidth();
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 16: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName((boolean) "show_name");

Test 17: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(true);
robotRenderer.isFillShield();

Test 18: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 19: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(100.0, 50.0);
double _double = 128.0;
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Integer integer = new Integer(0);
((Set)128.0).add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) _double).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 20: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(true);

Test 21: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(384.0, 256.0);
Vector createCartesian = Vector.createCartesian(192.0, 256.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
((RobotRenderer)true).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 22: 
RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
robotRenderer.setRenderDead(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 23: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((double) (Double) null, (double) (Double) null);
robotSnapshot.setTurretHeading(fromCartesian);
double _double = null;
Vector vector = ((AbsoluteAngle) _double).toVector(_double);
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
boolean _boolean = false;
((RobotRenderer) vector).setShowStatusBars(_boolean);
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) vector).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 24: 
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
((RobotSnapshot) graphics2D).setTemperature(temperature);
double _double = null;
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
((RobotSnapshot) graphics2D).setTurretHeading(fromCartesian);
double _double = null;
Vector vector = ((AbsoluteAngle) _void).toVector(_double);
((ArenaObjectSnapshot) graphics2D).setPositionVector(vector);
((RobotSnapshot) graphics2D).setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
((RobotRenderer) _double).setShowName(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
((RobotRenderer) _double).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 25: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((double) (Double) null, (double) (Double) null);
double _double = 128.0;
double _double = 128.0;
Vector createCartesian = Vector.createCartesian(_double, _double);
boolean _boolean = true;
robotSnapshot.setActiveShield(_boolean);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
boolean _boolean = false;
((RobotRenderer) _boolean).setFillShield(_boolean);
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) _boolean).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 26: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotRenderer robotRenderer = new RobotRenderer();

Test 27: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 28: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();

Test 29: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 30: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.setRenderDead(true);

Test 31: 
RobotRenderer robotRenderer = new RobotRenderer();
double _double = null;
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((double) (Double) null, (double) (Double) null);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((RobotSnapshot) _double).setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
((RobotSnapshot) _double).setTemperature(temperature);
double _double = null;
Vector vector = ((AbsoluteAngle) _double).toVector(_double);
((ArenaObjectSnapshot) _double).setPositionVector(vector);
String string = "";
((RobotSnapshot) _double).setName(string);
((RobotSnapshot) _double).setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
double _double = null;
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(_double).when(rectangle2D).getWidth();
Rectangle2D rectangle2D = null;
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);


* Generated after the refinement and before minimization 32 tests with total length 240
* test suite isTestSuite: 32
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 5: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
robotRenderer.setRenderDead(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.setShowStatusBars(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 8: 
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 9: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-1675.028559764417), (-1675.028559764417));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
Vector vector = fromCartesian.toVector((-1032.948907));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setName("");
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(rectangle2D).getWidth();
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 16: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName((boolean) "show_name");

Test 17: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(true);
robotRenderer.isFillShield();

Test 18: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 19: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(100.0, 50.0);
double _double = 128.0;
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Integer integer = new Integer(0);
((Set)128.0).add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) _double).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 20: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(true);

Test 21: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(384.0, 256.0);
Vector createCartesian = Vector.createCartesian(192.0, 256.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
((RobotRenderer)true).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 22: 
RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
robotRenderer.setRenderDead(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 23: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((double) (Double) null, (double) (Double) null);
robotSnapshot.setTurretHeading(fromCartesian);
double _double = null;
Vector vector = ((AbsoluteAngle) _double).toVector(_double);
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
boolean _boolean = false;
((RobotRenderer) vector).setShowStatusBars(_boolean);
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) vector).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 24: 
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
((RobotSnapshot) graphics2D).setTemperature(temperature);
double _double = null;
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(_double, _double);
((RobotSnapshot) graphics2D).setTurretHeading(fromCartesian);
double _double = null;
Vector vector = ((AbsoluteAngle) _void).toVector(_double);
((ArenaObjectSnapshot) graphics2D).setPositionVector(vector);
((RobotSnapshot) graphics2D).setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
boolean _boolean = false;
((RobotRenderer) _double).setShowName(_boolean);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
((RobotRenderer) _double).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 25: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((double) (Double) null, (double) (Double) null);
double _double = 128.0;
double _double = 128.0;
Vector createCartesian = Vector.createCartesian(_double, _double);
boolean _boolean = true;
robotSnapshot.setActiveShield(_boolean);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
boolean _boolean = false;
((RobotRenderer) _boolean).setFillShield(_boolean);
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
((RobotRenderer) _boolean).render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

Test 26: 
RobotRenderer robotRenderer = new RobotRenderer();
RobotRenderer robotRenderer = new RobotRenderer();

Test 27: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 28: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();

Test 29: 
RobotRenderer robotRenderer = new RobotRenderer();

Test 30: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.setRenderDead(true);

Test 31: 
RobotRenderer robotRenderer = new RobotRenderer();
double _double = null;
double _double = null;
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((double) (Double) null, (double) (Double) null);
RobotSnapshot robotSnapshot = new RobotSnapshot();
((RobotSnapshot) _double).setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
((RobotSnapshot) _double).setTemperature(temperature);
double _double = null;
Vector vector = ((AbsoluteAngle) _double).toVector(_double);
((ArenaObjectSnapshot) _double).setPositionVector(vector);
String string = "";
((RobotSnapshot) _double).setName(string);
((RobotSnapshot) _double).setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
double _double = null;
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(_double).when(rectangle2D).getWidth();
Rectangle2D rectangle2D = null;
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
FontMetrics fontMetrics = null;
Stroke stroke = null;
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);


* Minimizing test suite
* test suite isTestSuite: 16
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 2: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.setShowStatusBars(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 5: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
robotRenderer.setRenderDead(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 8: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-1675.028559764417), (-1675.028559764417));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
Vector vector = fromCartesian.toVector((-1032.948907));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setName("");
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(rectangle2D).getWidth();
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 83
* Number of covered goals: 83
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Generated 16 tests with total length 110
* Resulting test suite's coverage: 99% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean showName = robotRenderer.isShowName();
assertTrue(robotRenderer.isRenderDead());
assertTrue(robotRenderer.isShowStatusBars());
assertTrue(robotRenderer.isFillShield());
assertTrue(showName);


** It was a parseable test case! 
refined test name is: testRobotRendererMethods
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isShowName());

robotRenderer.setShowName(false);
boolean showName = robotRenderer.isShowName();
assertFalse(showName);


** It was a parseable test case! 
refined test name is: testRendererShouldNotShowNameByDefault
* Compiling Tests
refined test name is: testRendererShouldNotShowNameByDefault
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D arg0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(arg0).getStroke();
RobotSnapshot arg1 = new RobotSnapshot();
LinkedHashSet<Integer> arg2 = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render(arg0, arg1, (Set<Integer>) arg2);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.snapshots.ArenaObjectSnapshot", e);
}


** It was a parseable test case! 
refined test name is: testRenderNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean fillShield = robotRenderer.isFillShield();
assertTrue(robotRenderer.isShowName());
assertTrue(fillShield);
assertTrue(robotRenderer.isRenderDead());
assertTrue(robotRenderer.isShowStatusBars());


** It was a parseable test case! 
refined test name is: testRenderRobotWithShieldAndName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isRenderDead());

Graphics2D arg0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot arg1 = new RobotSnapshot();
arg1.setDead(true);
robotRenderer.setRenderDead(false);
assertFalse(robotRenderer.isRenderDead());

LinkedHashSet<Integer> arg2 = new LinkedHashSet<Integer>();
robotRenderer.render(arg0, arg1, (Set<Integer>) arg2);
assertTrue(robotRenderer.isFillShield());


** It was a parseable test case! 
refined test name is: testRenderMethodSetsFillShieldProperty
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean showStatusBars = robotRenderer.isShowStatusBars();
assertTrue(robotRenderer.isFillShield());
assertTrue(showStatusBars);
assertTrue(robotRenderer.isRenderDead());
assertTrue(robotRenderer.isShowName());


** It was a parseable test case! 
refined test name is: testRenderRobotWithAllParametersSetToTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
boolean renderDead = robotRenderer.isRenderDead();
assertTrue(robotRenderer.isFillShield());
assertTrue(robotRenderer.isShowStatusBars());
assertTrue(renderDead);
assertTrue(robotRenderer.isShowName());


** It was a parseable test case! 
refined test name is: testRobotRendererProperties
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isFillShield());

robotRenderer.setFillShield(false);
boolean fillShield = robotRenderer.isFillShield();
assertFalse(fillShield);


** It was a parseable test case! 
refined test name is: testSetFillShieldToFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isRenderDead());

robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
assertTrue(robotRenderer.isFillShield());


** It was a parseable test case! 
refined test name is: testRenderDeadAndFillShieldFlags
* Compiling Tests
refined test name is: testRenderDeadAndFillShieldFlags
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: RobotRenderer robotRenderer = new RobotRenderer();
assertTrue(robotRenderer.isShowStatusBars());

robotRenderer.setShowStatusBars(false);
boolean showStatusBars = robotRenderer.isShowStatusBars();
assertFalse(showStatusBars);


** It was a parseable test case! 
refined test name is: testIsShowStatusBarsDefault
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:27:00.329 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:00.390 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:00.475 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:00.477 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:27:00.556 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:00.557 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:27:00.613 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:00.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:27:00.722 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:00.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:27:00.794 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:00.795 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:27:00.867 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:00.868 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:27:00.956 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:00.957 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:01.015 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:01.017 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:27:01.098 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:01.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
[MASTER] 15:27:01.283 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:01.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
[MASTER] 15:27:01.533 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:01.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
[MASTER] 15:27:01.946 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 16
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 2: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 5: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
robotRenderer.setRenderDead(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 7: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.setShowStatusBars(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 8: 
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 9: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-1675.028559764417), (-1675.028559764417));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
Vector vector = fromCartesian.toVector((-1032.948907));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setName("");
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(rectangle2D).getWidth();
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

* Minimizing test suite
[MASTER] 15:27:12.421 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 16
Test 0: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowName();
Test 1: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
robotRenderer.isShowName();
Test 2: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.setShowStatusBars(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((FontMetrics) null).when(graphics2D).getFontMetrics();
doReturn((Stroke) null).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.virtualinfinity.atrobots.gui.renderers.RobotRenderer", e);
}

Test 3: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setFillShield(false);
robotRenderer.isFillShield();
Test 4: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn((Stroke) null).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Integer integer = new Integer(0);
linkedHashSet.add(integer);
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 6: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isFillShield();
Test 7: 
RobotRenderer robotRenderer = new RobotRenderer();
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setDead(true);
robotRenderer.setRenderDead(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 8: 
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
RobotSnapshot robotSnapshot = new RobotSnapshot();
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-4.785644442750221), (-4.785644442750221));
robotSnapshot.setTurretHeading(fromCartesian);
Vector vector = fromCartesian.toVector((-4.785644442750221));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setHeading(fromCartesian);
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowName(false);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
Test 9: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
RobotSnapshot robotSnapshot = new RobotSnapshot();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian(128.0, 128.0);
Vector createCartesian = Vector.createCartesian(128.0, 128.0);
robotSnapshot.setActiveShield(true);
robotSnapshot.setPositionVector(createCartesian);
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
RobotRenderer robotRenderer = new RobotRenderer();
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
robotRenderer.setFillShield(false);
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(stroke).when(graphics2D).getStroke();
// Undeclared exception!
try { 
  robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isShowStatusBars();
Test 12: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.isRenderDead();
Test 13: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setRenderDead(false);
robotRenderer.isRenderDead();
Test 14: 
RobotRenderer robotRenderer = new RobotRenderer();
robotRenderer.setShowStatusBars(false);
robotRenderer.isShowStatusBars();
Test 15: 
RobotRenderer robotRenderer = new RobotRenderer();
AbsoluteAngle fromCartesian = AbsoluteAngle.fromCartesian((-1675.028559764417), (-1675.028559764417));
RobotSnapshot robotSnapshot = new RobotSnapshot();
robotSnapshot.setTurretHeading(fromCartesian);
Temperature temperature = Temperature.BASE_TEMPERATURE;
robotSnapshot.setTemperature(temperature);
Vector vector = fromCartesian.toVector((-1032.948907));
robotSnapshot.setPositionVector(vector);
robotSnapshot.setName("");
robotSnapshot.setHeading(fromCartesian);
LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<Integer>();
Rectangle2D rectangle2D = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(rectangle2D).getWidth();
FontMetrics fontMetrics = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
doReturn(rectangle2D).when(fontMetrics).getStringBounds(anyString() , any(java.awt.Graphics.class));
Stroke stroke = mock(Stroke.class, new ViolatedAssumptionAnswer());
Graphics2D graphics2D = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
doReturn(fontMetrics).when(graphics2D).getFontMetrics();
doReturn(stroke).when(graphics2D).getStroke();
robotRenderer.render(graphics2D, robotSnapshot, (Set<Integer>) linkedHashSet);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 83
* Number of covered goals: 83
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Generated 16 tests with total length 110
* Resulting test suite's coverage: 99% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:27:12.514 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
[MASTER] 15:27:18.988 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:20.771 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:20.782 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:20.920 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:20.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:21.016 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.017 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:21.108 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.109 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:21.204 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.205 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:21.317 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.318 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:21.417 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:21.552 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.555 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:21.626 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.627 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:27:21.670 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.671 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 15:27:21.869 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:21.870 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 15:27:22.189 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4585664301967623508.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:27:22.190 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4585664301967623508.jar
[MASTER] 15:27:22.192 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing tests to file
* Writing JUnit test case 'RobotRenderer_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
* Writing JUnit test case 'RobotRenderer_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
* Done!

* Computation finished
