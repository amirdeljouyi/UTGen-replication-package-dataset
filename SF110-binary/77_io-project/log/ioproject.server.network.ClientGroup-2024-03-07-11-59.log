* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: ioproject.server.network.ClientGroup
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/77_io-project/evosuite-files/evosuite.properties
* Connecting to master process on port 16000
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:59:14.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:59:14.814 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:59:14.815 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:59:14.856 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class ioproject.server.network.ClientGroup
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 222
* Using seed 1709812753565
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 83 / 222
[Progress:>                             0%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:=========================>         74%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:============================>      81%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:===>                          10%] [Cov:=============================>     85%][Progress:====>                         15%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=============>                46%] [Cov:=============================>     85%][Progress:==============>               49%] [Cov:=============================>     85%][Progress:==============>               49%] [Cov:==============================>    87%][Progress:===============>              52%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:====================>         69%] [Cov:==============================>    87%][Progress:======================>       74%] [Cov:==============================>    87%][Progress:======================>       74%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   90%][Progress:==============================100%] [Cov:===============================>   91%]
* Search finished after 101s and 33 generations, 28244 statements, best individual has fitness: 18.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 66
* Number of covered goals: 61
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 53
* Number of covered goals: 53
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 76%
* Total number of goals: 25
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 66
* Number of covered goals: 59
* Generated 23 tests with total length 111
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 51%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.net.SocketPermission: 
         resolve localhost: 5
* Writing tests to file
* Writing JUnit test case 'ClientGroup_ESTest' to evosuite-tests
* Done!

* Computation finished
