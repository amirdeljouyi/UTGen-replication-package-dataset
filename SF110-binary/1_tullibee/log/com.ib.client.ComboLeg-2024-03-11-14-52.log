* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.ib.client.ComboLeg
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/1_tullibee/evosuite-files/evosuite.properties
* Connecting to master process on port 8745
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.ib.client.ComboLeg
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 71
* Using seed 1710168745719
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 21 / 71
[Progress:>                             0%] [Cov:===============================>   91%][Progress:>                             0%] [Cov:================================>  94%][Progress:>                             0%] [Cov:==================================>98%][Progress:>                             0%] [Cov:==================================>98%][Progress:>                             0%] [Cov:==================================>98%][Progress:>                             0%] [Cov:==================================>98%][Progress:>                             0%] [Cov:===================================100%]
* Search finished after 2s and 6 generations, 4246 statements, best individual has fitness: 0.0
* Generated before the refinement 10 tests with total length 31
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;IILjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg(1, (-2075), (String) null, (String) null, 3, (-967), "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, (-2075), (String) null, (String) null, 3, (-967), "");
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        ComboLeg comboLeg = new ComboLeg(1, -2075, null, null, 3, -967, "");
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg = new ComboLeg(1, -2075, null, null, 3, -967, ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;IILjava/lang/String;)V callee: VariableReference: Statement 1, type com.ib.client.ComboLegindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
int _int = 1;
int _int = 3;
String string = "";
ComboLeg comboLeg = new ComboLeg(_int, _int, string, (String) null, 3, (-967), "");
((ComboLeg) _int).equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        comboLeg.setConId("AAPL");// use a more descriptive value for ConId

        comboLeg.setRatio(2);
        comboLeg.setAction("BUY");
        comboLeg.setExchange("New York Stock Exchange");
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.setConId("AAPL")// use a more descriptive value for ConId
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setConId("AAPL")// use a more descriptive value for ConId
 target is: comboLeg method is: setConId(java.lang.String)
statement is: comboLeg.setRatio(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setRatio(2) target is: comboLeg method is: setRatio(int)
statement is: comboLeg.setAction("BUY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setAction("BUY") target is: comboLeg method is: setAction(java.lang.String)
statement is: comboLeg.setExchange("New York Stock Exchange"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setExchange("New York Stock Exchange") target is: comboLeg method is: setExchange(java.lang.String)
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals((Object) null)
test data is: ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    private int conId;

    private double ratio;

    private char exchange;

    private String legPrice;

    private boolean isBasket;

    private boolean isSold;

    public  ComboLeg(int conId, double ratio, char exchange, String legPrice, boolean isBasket, boolean isSold) {
        this.conId = conId;
        this.ratio = ratio;
        this.exchange = exchange;
        this.legPrice = legPrice;
        this.isBasket = isBasket;
        this.isSold = isSold;
    }

    public int getConId() {
        return conId;
    }

    public void setConId(int conId) {
        this.conId = conId;
    }

    public double getRatio() {
        return ratio;
    }

    public void setRatio(double ratio) {
        this.ratio = ratio;
    }

    public char getExchange() {
        return exchange;
    }

    public void setExchange(char exchange) {
        this.exchange = exchange;
    }

    public String getLegPrice() {
        return legPrice;
    }

    public void setLegPrice(String legPrice) {
        this.legPrice = legPrice;
    }

    public boolean isBasket() {
        return isBasket;
    }

    public void setBasket(boolean isBasket) {
        this.isBasket = isBasket;
    }

    public boolean isSold() {
        return isSold;
    }

    public void setSold(boolean isSold) {
        this.isSold = isSold;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof ComboLeg)) {
            return false;
        }
        ComboLeg that = ((ComboLeg) (o));
        return (((((getConId() == that.getConId()) && (Double.compare(that.getRatio(), getRatio()) == 0)) && (getExchange() == that.getExchange())) && Objects.equals(getLegPrice(), that.getLegPrice())) && (isBasket() == that.isBasket())) && (isSold() == that.isSold());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getConId(), getRatio(), getExchange(), getLegPrice(), isBasket(), isSold());
    }
}
statement is: this.conId = conId, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.ratio = ratio, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.exchange = exchange, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.legPrice = legPrice, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.isBasket = isBasket, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.isSold = isSold, class spoon.support.reflect.code.CtAssignmentImpl
statement is: if (this == o) {
    return true;
}, class spoon.support.reflect.code.CtIfImpl
statement is: if (!(o instanceof ComboLeg)) {
    return false;
}, class spoon.support.reflect.code.CtIfImpl
statement is: ComboLeg that = ((ComboLeg) (o)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtVariableReadImpl
IT HAS NOT BEEN SUPPORTED YET: ((ComboLeg) (o))
statement is: return (((((getConId() == that.getConId()) && (Double.compare(that.getRatio(), getRatio()) == 0)) && (getExchange() == that.getExchange())) && Objects.equals(getLegPrice(), that.getLegPrice())) && (isBasket() == that.isBasket())) && (isSold() == that.isSold()), class spoon.support.reflect.code.CtReturnImpl
statement is: return conId, class spoon.support.reflect.code.CtReturnImpl
statement is: return exchange, class spoon.support.reflect.code.CtReturnImpl
statement is: return legPrice, class spoon.support.reflect.code.CtReturnImpl
statement is: return ratio, class spoon.support.reflect.code.CtReturnImpl
statement is: return Objects.hash(getConId(), getRatio(), getExchange(), getLegPrice(), isBasket(), isSold()), class spoon.support.reflect.code.CtReturnImpl
statement is: return isBasket, class spoon.support.reflect.code.CtReturnImpl
statement is: return isSold, class spoon.support.reflect.code.CtReturnImpl
statement is: this.isBasket = isBasket, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.conId = conId, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.exchange = exchange, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.legPrice = legPrice, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.ratio = ratio, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.isSold = isSold, class spoon.support.reflect.code.CtAssignmentImpl
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        comboLeg.setShortSaleSlot(1);
        comboLeg.setDesignatedLocation(true);
        comboLeg.setExemptCode(2);
        comboLeg.setOptOutSmartRouting(false);
        comboLeg.setLotType(" ");
        comboLeg.setSmaMultiplierLimit(100);
        comboLeg.setConId(2000);
        comboLeg.setRatio(2);
        comboLeg.setAction("BUY");
        comboLeg.setExerciseStyle(" ");
        comboLeg.setVolatilityOrderType(" ");
        comboLeg.setVolatility(!true);
        comboLeg.setDeltaNeutralOrderType(" ");
        comboLeg.setDeltaNeutral(null);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.setShortSaleSlot(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setShortSaleSlot(1) target is: comboLeg method is: setShortSaleSlot(int)
statement is: comboLeg.setDesignatedLocation(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setDesignatedLocation(true) target is: comboLeg method is: setDesignatedLocation(boolean)
statement is: comboLeg.setExemptCode(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setExemptCode(2) target is: comboLeg method is: setExemptCode(int)
statement is: comboLeg.setOptOutSmartRouting(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setOptOutSmartRouting(false) target is: comboLeg method is: setOptOutSmartRouting(boolean)
statement is: comboLeg.setLotType(" "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setLotType(" ") target is: comboLeg method is: setLotType(java.lang.String)
statement is: comboLeg.setSmaMultiplierLimit(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setSmaMultiplierLimit(100) target is: comboLeg method is: setSmaMultiplierLimit(int)
statement is: comboLeg.setConId(2000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setConId(2000) target is: comboLeg method is: setConId(int)
statement is: comboLeg.setRatio(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setRatio(2) target is: comboLeg method is: setRatio(int)
statement is: comboLeg.setAction("BUY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setAction("BUY") target is: comboLeg method is: setAction(java.lang.String)
statement is: comboLeg.setExerciseStyle(" "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setExerciseStyle(" ") target is: comboLeg method is: setExerciseStyle(java.lang.String)
statement is: comboLeg.setVolatilityOrderType(" "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setVolatilityOrderType(" ") target is: comboLeg method is: setVolatilityOrderType(java.lang.String)
statement is: comboLeg.setVolatility(!true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setVolatility(!true) target is: comboLeg method is: setVolatility(boolean)
statement is: comboLeg.setDeltaNeutralOrderType(" "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setDeltaNeutralOrderType(" ") target is: comboLeg method is: setDeltaNeutralOrderType(java.lang.String)
statement is: comboLeg.setDeltaNeutral(null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setDeltaNeutral(null) target is: comboLeg method is: setDeltaNeutral(<unknown>)
TestCase is: ComboLeg comboLeg = new ComboLeg();

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;IILjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, ((String) (null)));
        comboLeg.equals(comboLeg);
        // Improved test data:
        ComboLeg comboLeg1 = new ComboLeg(0, 2, "BUY", "S", 0, 1, "IBKR");
        ComboLeg comboLeg2 = new ComboLeg(1, 3, "SELL", "S", 0, 1.5, "TRADEKING");
        comboLeg1.equals(comboLeg2);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: // Improved test data:
ComboLeg comboLeg1 = new ComboLeg(0, 2, "BUY", "S", 0, 1, "IBKR"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg2 = new ComboLeg(1, 3, "SELL", "S", 0, 1.5, "TRADEKING"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg1.equals(comboLeg2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg1.equals(comboLeg2) target is: comboLeg1 method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
int _int = 0;
int _int = 2;
String string = "";
String string = "";
int _int = 0;
int _int = 1;
ComboLeg comboLeg = new ComboLeg(_int, _int, string, string, _int, _int, (String) null);
comboLeg.equals(comboLeg);
int _int = 0;
int _int = 2;
String string = "BUY";
String string = "S";
int _int = 0;
int _int = 1;
String string = "IBKR";
ComboLeg comboLeg = new ComboLeg(_int, _int, string, string, _int, _int, string);
int _int = 1;
int _int = 3;
String string = "SELL";
String string = "S";
int _int = 0;
double _double = 1.5;
String string = "TRADEKING";
ComboLeg comboLeg = new ComboLeg(_int, _int, string, string, _int, (int) _double, string);
comboLeg.equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg("Buy", "Sell", "IBM", 100, 5.5);
        ComboLeg comboLeg2 = new ComboLeg("Sell", "Buy", "GOOG", 100, 5.5);
        comboLeg.equals(comboLeg2);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg("Buy", "Sell", "IBM", 100, 5.5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg2 = new ComboLeg("Sell", "Buy", "GOOG", 100, 5.5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg2) target is: comboLeg method is: equals(ComboLeg)
TestCase is: String string = "Buy";
String string = "Sell";
String string = "IBM";
int _int = 100;
double _double = 5.5;
ComboLeg comboLeg = new ComboLeg((int) string, (int) string, string, (String) _int, (int) _double);
String string = "Sell";
String string = "Buy";
String string = "GOOG";
int _int = 100;
double _double = 5.5;
ComboLeg comboLeg = new ComboLeg((int) string, (int) string, string, (String) _int, (int) _double);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: org.evosuite.testcase.statements.AssignmentStatement@47969b6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: comboLeg.m_shortSaleSlot = 3
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_shortSaleSlot = 3;
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg1 = new ComboLeg();
        comboLeg1.m_shortSaleSlot = 3;
        ComboLeg comboLeg2 = new ComboLeg();
        comboLeg2.m_shortSaleSlot = 4;
        comboLeg1.equals(comboLeg2);
    }
}
statement is: ComboLeg comboLeg1 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg1.m_shortSaleSlot = 3, class spoon.support.reflect.code.CtAssignmentImpl
statement is: ComboLeg comboLeg2 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg2.m_shortSaleSlot = 4, class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg1.equals(comboLeg2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg1.equals(comboLeg2) target is: comboLeg1 method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: org.evosuite.testcase.statements.AssignmentStatement@87a71c76 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: comboLeg.m_action = "O"
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "O";
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the ComboLeg class
        ComboLeg comboLeg1 = new ComboLeg();
        comboLeg1.m_action = "O";// open position

        comboLeg1.equals(comboLeg1);
        ComboLeg comboLeg2 = new ComboLeg();
        comboLeg2.m_action = "C";// close position

        comboLeg2.equals(comboLeg2);
        ComboLeg comboLeg3 = new ComboLeg();
        comboLeg3.m_action = "S";// short sell

        comboLeg3.equals(comboLeg3);
        ComboLeg comboLeg4 = new ComboLeg();
        comboLeg4.m_action = "B";// buy

        comboLeg4.equals(comboLeg4);
    }
}
statement is: // Improved test data for the ComboLeg class
ComboLeg comboLeg1 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg1.m_action = "O"// open position
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg1.equals(comboLeg1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg1.equals(comboLeg1) target is: comboLeg1 method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: ComboLeg comboLeg2 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg2.m_action = "C"// close position
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg2.equals(comboLeg2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg2.equals(comboLeg2) target is: comboLeg2 method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 2
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: ComboLeg comboLeg3 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg3.m_action = "S"// short sell
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg3.equals(comboLeg3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg3.equals(comboLeg3) target is: comboLeg3 method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: ComboLeg comboLeg4 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg4.m_action = "B"// buy
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg4.equals(comboLeg4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg4.equals(comboLeg4) target is: comboLeg4 method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 6
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;IILjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, "*sVEZGHnSgC0+$7uo8", 0, 0, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, "*sVEZGHnSgC0+$7uo8", 0, 0, (String) null);
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "*sVEZGHnSgC0+$7uo8", 0, 0, "SPY");
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "*sVEZGHnSgC0+$7uo8", 0, 0, "SPY"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
int _int = 0;
int _int = 0;
String string = "SPY";
String string = "*sVEZGHnSgC0+$7uo8";
int _int = 0;
int _int = 0;
String string = "SPY";
ComboLeg comboLeg = new ComboLeg(_int, _int, string, string, _int, _int, string);
comboLeg.equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: org.evosuite.testcase.statements.AssignmentStatement@ce2dbe0d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: comboLeg.m_designatedLocation = "{"
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "{";
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        comboLeg.m_designatedLocation = "LONDON";
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.m_designatedLocation = "LONDON", class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

* test suite isTestSuite: 19
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, (-2075), (String) null, (String) null, 3, (-967), "");
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_shortSaleSlot = 3;
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "O";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, "*sVEZGHnSgC0+$7uo8", 0, 0, (String) null);
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "{";
comboLeg.equals(comboLeg);
Test 10: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, 3, "", (String) null, 3, (-967), "");
((ComboLeg)1).equals(comboLeg);

Test 11: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 12: 
ComboLeg comboLeg = new ComboLeg();

Test 13: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg(0, 2, "BUY", "S", 0, 1, "IBKR");
ComboLeg comboLeg = new ComboLeg(1, 3, "SELL", "S", 0, (int) 1.5, "TRADEKING");
comboLeg.equals(comboLeg);

Test 14: 
ComboLeg comboLeg = new ComboLeg((int) "Buy", (int) "Sell", "IBM", (String) 100, (int) 5.5);
String string = "Sell";
String string = "Buy";
String string = "GOOG";
int _int = 100;
double _double = 5.5;
ComboLeg comboLeg = new ComboLeg((int) string, (int) string, string, (String) _int, (int) _double);

Test 15: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 16: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 17: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "*sVEZGHnSgC0+$7uo8", 0, 0, "SPY");
comboLeg.equals(comboLeg);

Test 18: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);


* Generated after the refinement and before minimization 19 tests with total length 66
* test suite isTestSuite: 19
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, (-2075), (String) null, (String) null, 3, (-967), "");
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_shortSaleSlot = 3;
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "O";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, "*sVEZGHnSgC0+$7uo8", 0, 0, (String) null);
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "{";
comboLeg.equals(comboLeg);
Test 10: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, 3, "", (String) null, 3, (-967), "");
((ComboLeg)1).equals(comboLeg);

Test 11: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 12: 
ComboLeg comboLeg = new ComboLeg();

Test 13: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg(0, 2, "BUY", "S", 0, 1, "IBKR");
ComboLeg comboLeg = new ComboLeg(1, 3, "SELL", "S", 0, (int) 1.5, "TRADEKING");
comboLeg.equals(comboLeg);

Test 14: 
ComboLeg comboLeg = new ComboLeg((int) "Buy", (int) "Sell", "IBM", (String) 100, (int) 5.5);
String string = "Sell";
String string = "Buy";
String string = "GOOG";
int _int = 100;
double _double = 5.5;
ComboLeg comboLeg = new ComboLeg((int) string, (int) string, string, (String) _int, (int) _double);

Test 15: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 16: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 17: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "*sVEZGHnSgC0+$7uo8", 0, 0, "SPY");
comboLeg.equals(comboLeg);

Test 18: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, (-2075), (String) null, (String) null, 3, (-967), "");
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_shortSaleSlot = 3;
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "*sVEZGHnSgC0+$7uo8", 0, 0, "SPY");
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, "*sVEZGHnSgC0+$7uo8", 0, 0, (String) null);
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "{";
comboLeg.equals(comboLeg);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Generated 10 tests with total length 30
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 65%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
ComboLeg arg0 = new ComboLeg();
boolean equals = comboLeg.equals(arg0);
assertEquals(0, arg0.m_shortSaleSlot);
assertEquals(0, arg0.m_ratio);
assertTrue(equals);
assertEquals(0, arg0.m_openClose);
assertEquals(0, arg0.m_conId);


** It was a parseable test case! 
refined test name is: testEqualsWhenComboLegsAreEqualReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg arg0 = new ComboLeg();
boolean equals = arg0.equals(arg0);
assertEquals(0, arg0.m_openClose);
assertEquals(0, arg0.m_conId);
assertEquals(0, arg0.m_ratio);
assertEquals(0, arg0.m_shortSaleSlot);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testComboLegEqualityIsReflexive
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
boolean equals = comboLeg.equals((Object) null);
assertEquals(0, comboLeg.m_shortSaleSlot);
assertEquals(0, comboLeg.m_openClose);
assertEquals(0, comboLeg.m_ratio);
assertFalse(equals);
assertEquals(0, comboLeg.m_conId);


** It was a parseable test case! 
refined test name is: testComboLegNotEqualToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg arg0 = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, (-2075), (String) null, (String) null, 3, (-967), "");
boolean equals = comboLeg.equals(arg0);
assertEquals(1, comboLeg.m_conId);
assertEquals(0, arg0.m_conId);
assertFalse(equals);
assertEquals((-967), comboLeg.m_shortSaleSlot);
assertEquals((-2075), comboLeg.m_ratio);
assertEquals(3, comboLeg.m_openClose);
assertEquals(0, arg0.m_openClose);


** It was a parseable test case! 
refined test name is: testEqualsMethodDifferentConIds
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
ComboLeg arg0 = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
boolean equals = comboLeg.equals(arg0);
assertFalse(equals);
assertEquals(2, arg0.m_ratio);
assertEquals(1, arg0.m_shortSaleSlot);
assertEquals(0, comboLeg.m_shortSaleSlot);
assertEquals(0, comboLeg.m_ratio);
assertEquals(0, arg0.m_conId);
assertEquals(0, arg0.m_openClose);


** It was a parseable test case! 
refined test name is: testComboLegEqualityAndFields
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
ComboLeg arg0 = new ComboLeg(0, 0, (String) null, (String) null, 3);
boolean equals = comboLeg.equals(arg0);
assertEquals(0, arg0.m_conId);
assertEquals(3, arg0.m_openClose);
assertFalse(arg0.equals((Object)comboLeg));
assertEquals(0, arg0.m_ratio);
assertEquals(0, arg0.m_shortSaleSlot);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testComboLegEqualsWithDifferentOpenClose
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
ComboLeg arg0 = new ComboLeg();
assertEquals(0, arg0.m_shortSaleSlot);

arg0.m_shortSaleSlot = 3;
boolean equals = comboLeg.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsDifferentShortSaleSlotReturnsFalse
* Compiling Tests
refined test name is: testShortSaleSlotSetAndGet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
ComboLeg arg0 = new ComboLeg(0, 0, "SPY", "*sVEZGHnSgC0+$7uo8", 0, 0, "SPY");
comboLeg.equals(arg0);
assertEquals(0, arg0.m_openClose);
assertEquals(0, arg0.m_ratio);
assertEquals(0, arg0.m_conId);
assertEquals(0, arg0.m_shortSaleSlot);
assertEquals(0, comboLeg.m_ratio);


** It was a parseable test case! 
refined test name is: testComboLegEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
ComboLeg arg0 = new ComboLeg(0, 0, (String) null, "*sVEZGHnSgC0+$7uo8", 0, 0, (String) null);
boolean equals = comboLeg.equals(arg0);
assertFalse(arg0.equals((Object)comboLeg));
assertFalse(equals);
assertEquals(0, arg0.m_ratio);
assertEquals(0, arg0.m_shortSaleSlot);
assertEquals(0, arg0.m_conId);
assertEquals(0, arg0.m_openClose);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentRatioAndShortSaleSlots
* Compiling Tests
refined test name is: testComboLegEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
ComboLeg arg0 = new ComboLeg();
assertTrue(arg0.equals((Object)comboLeg));

comboLeg.m_designatedLocation = "{";
boolean equals = comboLeg.equals(arg0);
assertFalse(arg0.equals((Object)comboLeg));
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testNotEqualWithDifferentDesignatedLocations
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:56:56.394 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:56:56.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:56:56.463 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:56:56.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:56.521 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:56:56.522 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:56.568 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:56:56.568 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:56.625 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:56:56.625 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:56.699 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:56:56.700 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:56.751 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:56:56.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:56.910 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:56:56.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:56.953 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:56:56.954 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:56.993 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:56:56.994 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 6 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
[MASTER] 14:56:57.083 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:56:57.084 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
[MASTER] 14:56:57.170 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:56:57.171 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:56:57.233 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 10
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(3, 1, "", "", 1, (-2075), (String) null);
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_shortSaleSlot = 3;
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "O";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, "*sVEZGHnSgC0+$7uo8", 0, 0, (String) null);
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "{";
comboLeg.equals(comboLeg);

* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(3, 1, "", "", 1, (-2075), (String) null);
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 2, "", "", 0, 1, (String) null);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_shortSaleSlot = 3;
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "O";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, "*sVEZGHnSgC0+$7uo8", 0, 0, (String) null);
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "{";
comboLeg.equals(comboLeg);

[MASTER] 14:56:57.926 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Generated 10 tests with total length 31
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:56:57.960 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 14:57:00.418 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:00.988 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:00.989 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:01.043 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.045 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:01.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:01.210 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.211 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:01.243 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.244 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:01.285 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
[MASTER] 14:57:01.316 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.317 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:01.366 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.367 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:01.406 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.406 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:57:01.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 14:57:01.575 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 14:57:01.660 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3842595885533463777.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:57:01.660 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3842595885533463777.jar
* Writing tests to file
[MASTER] 14:57:01.662 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ComboLeg_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
* Writing JUnit test case 'ComboLeg_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
* Done!

* Computation finished
