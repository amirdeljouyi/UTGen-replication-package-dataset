* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.ib.client.ExecutionFilter
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/1_tullibee/evosuite-files/evosuite.properties
* Connecting to master process on port 19552
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.ib.client.ExecutionFilter
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 65
* Using seed 1710168121408
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 21 / 65
[Progress:>                             0%] [Cov:==========================>        75%][Progress:>                             0%] [Cov:==========================>        76%][Progress:>                             0%] [Cov:================================>  92%][Progress:>                             1%] [Cov:=================================> 96%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:===================================100%]
* Search finished after 1s and 6 generations, 4110 statements, best individual has fitness: 0.0
* Generated before the refinement 10 tests with total length 30
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ExecutionFilter executionFilter = new ExecutionFilter(0, "ABC-1234", "Test Suite Name", "2022-02-25 14:30:00", "2022-02-25 15:30:00", "Passed", "");
        executionFilter.equals(executionFilter);
    }
}
statement is: ExecutionFilter executionFilter = new ExecutionFilter(0, "ABC-1234", "Test Suite Name", "2022-02-25 14:30:00", "2022-02-25 15:30:00", "Passed", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals(ExecutionFilter)
source statement: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.ib.client.ExecutionFilterindex is: 7
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 0;
String string = "ABC-1234";
String string = "Test Suite Name";
String string = "2022-02-25 14:30:00";
String string = "2022-02-25 15:30:00";
String string = "Passed";
String string = "";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, string);
((ExecutionFilter) _int).equals(executionFilter);

statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, (String) null, (String) null, "kOEO#[XS:e`", "kOEO#[XS:e`", (String) null, "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals((Object) null)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, (String) null, (String) null, "kOEO#[XS:e`", "kOEO#[XS:e`", (String) null, "");
executionFilter.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ExecutionFilter executionFilter = new ExecutionFilter(0, "John Doe", "john.doe@example.com", "password123", "password123", "", "");
        executionFilter.equals(((Object) (null)));
    }
}
statement is: ExecutionFilter executionFilter = new ExecutionFilter(0, "John Doe", "john.doe@example.com", "password123", "password123", "", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: executionFilter.equals(((Object) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(((Object) (null))) target is: executionFilter method is: equals(java.lang.Object)
source statement: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.ib.client.ExecutionFilterindex is: 7
Matched Method is: equals(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int _int = 0;
String string = "John Doe";
String string = "john.doe@example.com";
String string = "password123";
String string = "password123";
String string = "";
String string = "";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, string);
String string = null;
((ExecutionFilter) _int).equals(string);

statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "")
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ExecutionFilter executionFilter = new ExecutionFilter(1234567890, "John Doe", "johndoe@example.com", "+1 555-555-5555", "johndoe@example.com", ((String) (null)), "");
        ExecutionFilter executionFilter = new ExecutionFilter(1234567890, "John Doe", "johndoe@example.com", "+1 555-555-5555", "johndoe@example.com", ((String) (null)), "");
        executionFilter.equals(executionFilter);
    }
}
statement is: ExecutionFilter executionFilter = new ExecutionFilter(1234567890, "John Doe", "johndoe@example.com", "+1 555-555-5555", "johndoe@example.com", ((String) (null)), ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ExecutionFilter executionFilter = new ExecutionFilter(1234567890, "John Doe", "johndoe@example.com", "+1 555-555-5555", "johndoe@example.com", ((String) (null)), ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals(ExecutionFilter)
source statement: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.ib.client.ExecutionFilterindex is: 13
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 1234567890;
String string = "John Doe";
String string = "johndoe@example.com";
String string = "+1 555-555-5555";
String string = "johndoe@example.com";
String string = "";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, "");
int _int = 1234567890;
String string = "John Doe";
String string = "johndoe@example.com";
String string = "+1 555-555-5555";
String string = "johndoe@example.com";
String string = "";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, "");
((ExecutionFilter) _int).equals(executionFilter);

statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-")
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter((-1), "dxilo&", "IMI!R>|", "dxilo&", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter((-1), "dxilo&", "IMI!R>|", "dxilo&", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy");
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "username123", "!:n=L8+k", "h-");
        ExecutionFilter executionFilter = new ExecutionFilter(-1, "username123", "IMI!R>|", "username123", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b\u007f)diy");
        executionFilter.equals(executionFilter);
    }
}
statement is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "username123", "!:n=L8+k", "h-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ExecutionFilter executionFilter = new ExecutionFilter(-1, "username123", "IMI!R>|", "username123", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b\u007f)diy"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals(ExecutionFilter)
source statement: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.ib.client.ExecutionFilterindex is: 14
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 0;
String string = "pc/G(C@a";
String string = "";
String string = "";
String string = "username123";
String string = "!:n=L8+k";
String string = "h-";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, string);
String string = "username123";
String string = "IMI!R>|";
String string = "username123";
String string = "C~_9k<Yw :v>:_u";
String string = "P m}*";
String string = ">u]aa?u?\b)diy";
ExecutionFilter executionFilter = new ExecutionFilter((int) string, string, string, string, string, string, string);
((ExecutionFilter) _int).equals(executionFilter);

statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null)
statement is: com.ib.client.ExecutionFilter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter();
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ExecutionFilter executionFilter = new ExecutionFilter(0, "John", "Doe", "john@example.com", "+1234567890", "jdoe");
        executionFilter.equals(executionFilter);
    }
}
statement is: ExecutionFilter executionFilter = new ExecutionFilter(0, "John", "Doe", "john@example.com", "+1234567890", "jdoe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals(ExecutionFilter)
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-")
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
        ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");
        executionFilter.equals(executionFilter);
    }
}
statement is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals(ExecutionFilter)
TestCase is: int _int = 0;
String string = "pc/G(C@a";
String string = "";
String string = "";
String string = "dxilo&";
String string = "!:n=L8+k";
String string = "h-";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, string);
int _int = 0;
String string = "pc/G(C@a";
String string = "!:n=L8+k";
String string = "P m}*";
String string = "";
String string = "!:n=L8+k";
String string = "dxilo&";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, string);

statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "")
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", (String) null, "", (String) null, "dxILO&")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", (String) null, "", (String) null, "dxILO&");
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        executionFilter = new ExecutionFilter(0, "John Doe", "2022-01-01 12:00:00", "ACME Corp", "1234 Main St.", "", "");
        executionFilter.equals(executionFilter);
    }
}
statement is: executionFilter = new ExecutionFilter(0, "John Doe", "2022-01-01 12:00:00", "ACME Corp", "1234 Main St.", "", ""), class spoon.support.reflect.code.CtAssignmentImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals()
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null)
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "d", (String) null, "dxILO&")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "d", (String) null, "dxILO&");
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ExecutionFilter executionFilter = new ExecutionFilter(0, "Alice", "Bob", "Douglas", "", "", ((String) (null)));
        ExecutionFilter executionFilter = new ExecutionFilter(0, "Jane", "John", "James", "d", "e", ((String) (null)), "dxILO&");
        executionFilter.equals(executionFilter);
    }
}
statement is: ExecutionFilter executionFilter = new ExecutionFilter(0, "Alice", "Bob", "Douglas", "", "", ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ExecutionFilter executionFilter = new ExecutionFilter(0, "Jane", "John", "James", "d", "e", ((String) (null)), "dxILO&"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals(ExecutionFilter)
source statement: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.ib.client.ExecutionFilterindex is: 6
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 0;
String string = "Alice";
String string = "Bob";
String string = "Douglas";
String string = "";
String string = "";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, (String) null);
((ExecutionFilter) _int).equals(executionFilter);

statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "")
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "")
statement is: org.evosuite.testcase.statements.AssignmentStatement@134c783 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: executionFilter.m_exchange = ""
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        executionFilter.m_exchange = "NYSE";
        executionFilter.equals(executionFilter);
    }
}
statement is: executionFilter.m_exchange = "NYSE", class spoon.support.reflect.code.CtAssignmentImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals()
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "")
statement is: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ExecutionFilter
statement code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "dxILO&")
statement is: org.evosuite.testcase.statements.AssignmentStatement@897bc855 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: executionFilter.m_exchange = ""
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = executionFilter.equals(arg0)
test data is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "dxILO&");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ExecutionFilter executionFilter = new ExecutionFilter(-1, "2022-01-01", "2022-01-31", "ABC", "XYZ", "", "");
        ExecutionFilter executionFilter = new ExecutionFilter(42, "2022-01-01", "2022-01-31", "ABC", "XYZ", ((String) (null)), "dxILO&");
        executionFilter.m_exchange = "NASDAQ";
        executionFilter.equals(executionFilter);
    }
}
statement is: ExecutionFilter executionFilter = new ExecutionFilter(-1, "2022-01-01", "2022-01-31", "ABC", "XYZ", "", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ExecutionFilter executionFilter = new ExecutionFilter(42, "2022-01-01", "2022-01-31", "ABC", "XYZ", ((String) (null)), "dxILO&"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: executionFilter.m_exchange = "NASDAQ", class spoon.support.reflect.code.CtAssignmentImpl
statement is: executionFilter.equals(executionFilter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: executionFilter.equals(executionFilter) target is: executionFilter method is: equals(ExecutionFilter)
source statement: com.ib.client.ExecutionFilter(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.ib.client.ExecutionFilterindex is: 13
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "2022-01-01";
String string = "2022-01-31";
String string = "ABC";
String string = "XYZ";
String string = "";
String string = "";
ExecutionFilter executionFilter = new ExecutionFilter((int) string, string, string, string, string, string, "");
int _int = 42;
String string = "2022-01-01";
String string = "2022-01-31";
String string = "ABC";
String string = "XYZ";
String string = "dxILO&";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, "");
string.equals(executionFilter);

* test suite isTestSuite: 17
Test 0: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
executionFilter.equals(executionFilter);

Test 1: 
ExecutionFilter executionFilter = new ExecutionFilter(0, (String) null, (String) null, "kOEO#[XS:e`", "kOEO#[XS:e`", (String) null, "");
executionFilter.equals((Object) null);
Test 2: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.equals(executionFilter);
Test 3: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter((-1), "dxilo&", "IMI!R>|", "dxilo&", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy");
executionFilter.equals(executionFilter);
Test 4: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter();
executionFilter.equals(executionFilter);
Test 5: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");
executionFilter.equals(executionFilter);
Test 6: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", (String) null, "", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 7: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "d", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 8: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);
Test 9: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "dxILO&");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);
Test 10: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "ABC-1234", "Test Suite Name", "2022-02-25 14:30:00", "2022-02-25 15:30:00", "Passed", "");
((ExecutionFilter)0).equals(executionFilter);

Test 11: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "John Doe", "john.doe@example.com", "password123", "password123", "", "");
((ExecutionFilter)0).equals((Object) null);

Test 12: 
ExecutionFilter executionFilter = new ExecutionFilter(1234567890, "John Doe", "johndoe@example.com", "+1 555-555-5555", "johndoe@example.com", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(1234567890, "John Doe", "johndoe@example.com", "+1 555-555-5555", "johndoe@example.com", "", "");
((ExecutionFilter)1234567890).equals(executionFilter);

Test 13: 
int _int = 0;
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "username123", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter((int) "username123", "IMI!R>|", "username123", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy", "h-");
((ExecutionFilter) _int).equals(executionFilter);

Test 14: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");

Test 15: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "Alice", "Bob", "Douglas", "", "", (String) null);
((ExecutionFilter)0).equals(executionFilter);

Test 16: 
String string = "2022-01-01";
ExecutionFilter executionFilter = new ExecutionFilter((int) "2022-01-01", "2022-01-31", "ABC", "XYZ", "", "", "");
int _int = 42;
String string = "2022-01-01";
String string = "2022-01-31";
String string = "ABC";
String string = "XYZ";
String string = "dxILO&";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, "");
string.equals(executionFilter);


* Generated after the refinement and before minimization 17 tests with total length 55
* test suite isTestSuite: 17
Test 0: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
executionFilter.equals(executionFilter);

Test 1: 
ExecutionFilter executionFilter = new ExecutionFilter(0, (String) null, (String) null, "kOEO#[XS:e`", "kOEO#[XS:e`", (String) null, "");
executionFilter.equals((Object) null);
Test 2: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.equals(executionFilter);
Test 3: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter((-1), "dxilo&", "IMI!R>|", "dxilo&", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy");
executionFilter.equals(executionFilter);
Test 4: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter();
executionFilter.equals(executionFilter);
Test 5: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");
executionFilter.equals(executionFilter);
Test 6: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", (String) null, "", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 7: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "d", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 8: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);
Test 9: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "dxILO&");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);
Test 10: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "ABC-1234", "Test Suite Name", "2022-02-25 14:30:00", "2022-02-25 15:30:00", "Passed", "");
((ExecutionFilter)0).equals(executionFilter);

Test 11: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "John Doe", "john.doe@example.com", "password123", "password123", "", "");
((ExecutionFilter)0).equals((Object) null);

Test 12: 
ExecutionFilter executionFilter = new ExecutionFilter(1234567890, "John Doe", "johndoe@example.com", "+1 555-555-5555", "johndoe@example.com", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(1234567890, "John Doe", "johndoe@example.com", "+1 555-555-5555", "johndoe@example.com", "", "");
((ExecutionFilter)1234567890).equals(executionFilter);

Test 13: 
int _int = 0;
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "username123", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter((int) "username123", "IMI!R>|", "username123", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy", "h-");
((ExecutionFilter) _int).equals(executionFilter);

Test 14: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");

Test 15: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "Alice", "Bob", "Douglas", "", "", (String) null);
((ExecutionFilter)0).equals(executionFilter);

Test 16: 
String string = "2022-01-01";
ExecutionFilter executionFilter = new ExecutionFilter((int) "2022-01-01", "2022-01-31", "ABC", "XYZ", "", "", "");
int _int = 42;
String string = "2022-01-01";
String string = "2022-01-31";
String string = "ABC";
String string = "XYZ";
String string = "dxILO&";
ExecutionFilter executionFilter = new ExecutionFilter(_int, string, string, string, string, string, "");
string.equals(executionFilter);


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
executionFilter.equals(executionFilter);

Test 1: 
ExecutionFilter executionFilter = new ExecutionFilter(0, (String) null, (String) null, "kOEO#[XS:e`", "kOEO#[XS:e`", (String) null, "");
executionFilter.equals((Object) null);
Test 2: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.equals(executionFilter);
Test 3: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter((-1), "dxilo&", "IMI!R>|", "dxilo&", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy");
executionFilter.equals(executionFilter);
Test 4: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter();
executionFilter.equals(executionFilter);
Test 5: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");
executionFilter.equals(executionFilter);
Test 6: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", (String) null, "", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 7: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "d", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 8: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);
Test 9: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "dxILO&");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Generated 10 tests with total length 30
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 41%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter arg0 = new ExecutionFilter(0, "", "", "", "", "", "");
boolean equals = arg0.equals(arg0);
assertTrue(equals);
assertEquals(0, arg0.m_clientId);


** It was a parseable test case! 
refined test name is: testEqualsSameInstance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter executionFilter = new ExecutionFilter(0, (String) null, (String) null, "kOEO#[XS:e`", "kOEO#[XS:e`", (String) null, "");
boolean equals = executionFilter.equals((Object) null);
assertFalse(equals);
assertEquals(0, executionFilter.m_clientId);


** It was a parseable test case! 
refined test name is: testExecutionFilterEqualsWithNullArgument
* Compiling Tests
refined test name is: testEqualsWithNullArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter arg0 = new ExecutionFilter(0, "", "", "", "", (String) null, "");
boolean equals = executionFilter.equals(arg0);
assertEquals(0, arg0.m_clientId);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsMethodWithDifferentClientIdFieldValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter arg0 = new ExecutionFilter((-1), "dxilo&", "IMI!R>|", "dxilo&", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy");
boolean equals = executionFilter.equals(arg0);
assertFalse(equals);
assertEquals((-1), arg0.m_clientId);


** It was a parseable test case! 
refined test name is: testNotEqualWithSameClientId
* Compiling Tests
refined test name is: testExecutionFilterEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter arg0 = new ExecutionFilter();
boolean equals = executionFilter.equals(arg0);
assertFalse(equals);
assertEquals(0, executionFilter.m_clientId);
assertEquals(0, arg0.m_clientId);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentClientId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter arg0 = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");
boolean equals = executionFilter.equals(arg0);
assertEquals(0, executionFilter.m_clientId);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentClientId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter arg0 = new ExecutionFilter(0, "", "", (String) null, "", (String) null, "dxILO&");
boolean equals = executionFilter.equals(arg0);
assertFalse(equals);
assertEquals(0, arg0.m_clientId);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentClientIds
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter arg0 = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "d", (String) null, "dxILO&");
boolean equals = executionFilter.equals(arg0);
assertFalse(equals);
assertEquals(0, arg0.m_clientId);


** It was a parseable test case! 
refined test name is: testEqualswithEqualInstances
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter arg0 = new ExecutionFilter(0, "", "", "", "", (String) null, "");
arg0.m_exchange = "";
boolean equals = executionFilter.equals(arg0);
assertEquals(0, arg0.m_clientId);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualFiltersWithDifferentExchangeProperty
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter arg0 = new ExecutionFilter(0, "", "", "", "", (String) null, "dxILO&");
arg0.m_exchange = "";
boolean equals = executionFilter.equals(arg0);
assertEquals(0, arg0.m_clientId);
assertFalse(arg0.equals((Object)executionFilter));
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentExchangeReturnsFalse
* Compiling Tests
refined test name is: testEqualsWithModifiedExchangeShouldReturnFalse
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:44:40.827 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:40.843 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:40.884 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 14:44:40.885 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
[MASTER] 14:44:40.923 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:40.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:40.969 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:40.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:44:41.014 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:41.015 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:44:41.055 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:41.056 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:44:41.096 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:41.097 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:44:41.144 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:41.145 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:44:41.188 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:41.189 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:41.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:41.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 9 called: 2 to improve: false
[MASTER] 14:44:41.365 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:41.366 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
[MASTER] 14:44:41.516 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:41.517 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
[MASTER] 14:44:41.651 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 10
Test 0: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
executionFilter.equals(executionFilter);

Test 1: 
ExecutionFilter executionFilter = new ExecutionFilter(0, (String) null, (String) null, "kOEO#[XS:e`", "kOEO#[XS:e`", (String) null, "");
executionFilter.equals((Object) null);
Test 2: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.equals(executionFilter);
Test 3: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter((-1), "dxilo&", "IMI!R>|", "dxilo&", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy");
executionFilter.equals(executionFilter);
Test 4: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter();
executionFilter.equals(executionFilter);
Test 5: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");
executionFilter.equals(executionFilter);
Test 6: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", (String) null, "", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 7: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "d", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 8: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);
Test 9: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "dxILO&");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);

* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
executionFilter.equals(executionFilter);

Test 1: 
ExecutionFilter executionFilter = new ExecutionFilter(0, (String) null, (String) null, "kOEO#[XS:e`", "kOEO#[XS:e`", (String) null, "");
executionFilter.equals((Object) null);
Test 2: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.equals(executionFilter);
Test 3: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter((-1), "dxilo&", "IMI!R>|", "dxilo&", "C~_9k<Yw :v>:_u", "P m}*", ">u]aa?u?\b)diy");
executionFilter.equals(executionFilter);
Test 4: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter();
executionFilter.equals(executionFilter);
Test 5: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "", "", "dxilo&", "!:n=L8+k", "h-");
ExecutionFilter executionFilter = new ExecutionFilter(0, "pc/G(C@a", "!:n=L8+k", "P m}*", "", "!:n=L8+k", "dxilo&");
executionFilter.equals(executionFilter);
Test 6: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", (String) null, "", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 7: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "", "`>D.JR..C)-Mr6U@`", (String) null);
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "`>D.JR..C)-Mr6U@`", "d", (String) null, "dxILO&");
executionFilter.equals(executionFilter);
Test 8: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);
Test 9: 
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", "", "");
ExecutionFilter executionFilter = new ExecutionFilter(0, "", "", "", "", (String) null, "dxILO&");
executionFilter.m_exchange = "";
executionFilter.equals(executionFilter);

[MASTER] 14:44:42.668 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Generated 10 tests with total length 30
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:44:42.703 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
[MASTER] 14:44:44.058 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.333 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.334 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.362 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.363 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.391 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.392 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.422 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.422 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.452 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.452 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.483 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.484 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.514 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.514 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.545 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.547 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.579 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.579 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:44:44.611 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.611 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 14:44:44.734 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.734 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 14:44:44.871 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5091985953476793619.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:44:44.872 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5091985953476793619.jar
* Writing tests to file
[MASTER] 14:44:44.874 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ExecutionFilter_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
* Writing JUnit test case 'ExecutionFilter_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
* Done!

* Computation finished
