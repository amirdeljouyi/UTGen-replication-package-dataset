* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.ib.client.ComboLeg
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/1_tullibee/evosuite-files/evosuite.properties
* Connecting to master process on port 6368
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.ib.client.ComboLeg
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 71
* Using seed 1710168286319
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 21 / 71
[Progress:>                             0%] [Cov:==============================>    88%][Progress:>                             0%] [Cov:================================>  93%][Progress:>                             0%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             1%] [Cov:==================================>98%][Progress:>                             2%] [Cov:==================================>98%][Progress:>                             2%] [Cov:==================================>98%][Progress:>                             2%] [Cov:==================================>98%][Progress:>                             2%] [Cov:==================================>98%][Progress:>                             2%] [Cov:==================================>98%][Progress:>                             2%] [Cov:===================================100%]
* Search finished after 3s and 19 generations, 9588 statements, best individual has fitness: 0.0
* Generated before the refinement 10 tests with total length 31
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before
        ComboLeg comboLeg = new ComboLeg();
        ComboLeg comboLeg = new ComboLeg();
        comboLeg.equals(comboLeg);
        // After
        ComboLeg comboLeg1 = new ComboLeg("BUY", 100, "ABC", 50, "DEF");
        ComboLeg comboLeg2 = new ComboLeg("SELL", 200, "GHI", 100, "JKL");
        comboLeg1.equals(new ComboLeg("BUY", 100, "ABC", 50, "DEF"));
    }
}
statement is: // Before
ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: // After
ComboLeg comboLeg1 = new ComboLeg("BUY", 100, "ABC", 50, "DEF"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg2 = new ComboLeg("SELL", 200, "GHI", 100, "JKL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg1.equals(new ComboLeg("BUY", 100, "ABC", 50, "DEF")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg1.equals(new ComboLeg("BUY", 100, "ABC", 50, "DEF")) target is: comboLeg1 method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
ComboLeg comboLeg = null;
comboLeg.equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        comboLeg.setConId(75463918);
        comboLeg.setRatio(2);
        comboLeg.setAction("BUY");
        comboLeg.setExchange("NASDAQ OH");
        comboLeg.setOpenClose("O");
        comboLeg.setShortSaleSlot(0);
        comboLeg.setDesignatedLocation("NASDAQ OH");
        comboLeg.setExemptCode(3);
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.setConId(75463918), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setConId(75463918) target is: comboLeg method is: setConId(int)
statement is: comboLeg.setRatio(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setRatio(2) target is: comboLeg method is: setRatio(int)
statement is: comboLeg.setAction("BUY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setAction("BUY") target is: comboLeg method is: setAction(java.lang.String)
statement is: comboLeg.setExchange("NASDAQ OH"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setExchange("NASDAQ OH") target is: comboLeg method is: setExchange(java.lang.String)
statement is: comboLeg.setOpenClose("O"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setOpenClose("O") target is: comboLeg method is: setOpenClose(java.lang.String)
statement is: comboLeg.setShortSaleSlot(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setShortSaleSlot(0) target is: comboLeg method is: setShortSaleSlot(int)
statement is: comboLeg.setDesignatedLocation("NASDAQ OH"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setDesignatedLocation("NASDAQ OH") target is: comboLeg method is: setDesignatedLocation(java.lang.String)
statement is: comboLeg.setExemptCode(3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.setExemptCode(3) target is: comboLeg method is: setExemptCode(int)
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals((Object) null)
test data is: ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg leg1 = new ComboLeg(1, 2, "BUY", 3, 4);
        ComboLeg leg2 = new ComboLeg(1, 2, "BUY", 3, 4);
        ComboLeg leg3 = new ComboLeg(1, 2, "SELL", 3, 4);
        assertTrue(leg1.equals(leg2));
        assertFalse(leg1.equals(leg3));
    }
}
statement is: ComboLeg leg1 = new ComboLeg(1, 2, "BUY", 3, 4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg leg2 = new ComboLeg(1, 2, "BUY", 3, 4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg leg3 = new ComboLeg(1, 2, "SELL", 3, 4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertTrue(leg1.equals(leg2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(leg1.equals(leg2)) target is:  method is: assertTrue(<unknown>)
statement is: assertFalse(leg1.equals(leg3)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(leg1.equals(leg3)) target is:  method is: assertFalse(<unknown>)
statement is: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg((-1008), 3375, "", "", (-1008))
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg((-1008), 3375, "", "", (-1008));
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg(394, 2550, "B", "C", 394);
        ComboLeg comboLeg = new ComboLeg();
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(394, 2550, "B", "C", 394), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;I)V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 5
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 394;
int _int = 2550;
String string = "B";
String string = "C";
int _int = 394;
ComboLeg comboLeg = new ComboLeg(_int, _int, string, string, _int);
ComboLeg comboLeg = new ComboLeg();
((ComboLeg) _int).equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg(0, 3, (String) null, (String) null, 0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 3, (String) null, (String) null, 0);
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        ComboLeg comboLeg = new ComboLeg(1, 3, "Call", "Put", 0);
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg = new ComboLeg(1, 3, "Call", "Put", 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;I)V callee: VariableReference: Statement 1, type com.ib.client.ComboLegindex is: 6
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
int _int = 1;
int _int = 3;
String string = "Call";
String string = "Put";
int _int = 0;
ComboLeg comboLeg = new ComboLeg(_int, _int, string, string, _int);
((ComboLeg) _int).equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        ComboLeg comboLeg = new ComboLeg(0, 0, "Call", "Jan 2023", 3);
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg = new ComboLeg(0, 0, "Call", "Jan 2023", 3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;I)V callee: VariableReference: Statement 1, type com.ib.client.ComboLegindex is: 6
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
int _int = 0;
int _int = 0;
String string = "Call";
String string = "Jan 2023";
int _int = 3;
ComboLeg comboLeg = new ComboLeg(_int, _int, string, string, _int);
((ComboLeg) _int).equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;IILjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 0, (-147), (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 0, (-147), (String) null);
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "GOOGL", 100, -247.0, null);
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "GOOGL", 100, -247.0, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg(IILjava/lang/String;Ljava/lang/String;IILjava/lang/String;)V callee: VariableReference: Statement 1, type com.ib.client.ComboLegindex is: 6
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
int _int = 0;
int _int = 0;
String string = "SPY";
String string = "GOOGL";
int _int = 100;
ComboLeg comboLeg = new ComboLeg(_int, _int, string, string, _int, (-147), (String) null);
((ComboLeg) _int).equals(comboLeg);

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: org.evosuite.testcase.statements.AssignmentStatement@d54790f8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: comboLeg.m_action = "com.ib.client.ComboLeg"
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "com.ib.client.ComboLeg";
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        comboLeg.m_action = "BUY 100 shares of XYZ stock at $50 per share, with a price limit of $60 and an all-or-none trade";
        comboLeg.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.m_action = "BUY 100 shares of XYZ stock at $50 per share, with a price limit of $60 and an all-or-none trade", class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg.equals(comboLeg) target is: comboLeg method is: equals(ComboLeg)
TestCase is: ComboLeg comboLeg = new ComboLeg();

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: org.evosuite.testcase.statements.AssignmentStatement@9c7d015d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: comboLeg.m_exchange = "[J`q`PcR_7%??1VTDEv"
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
comboLeg.m_exchange = "[J`q`PcR_7%??1VTDEv";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg1 = new ComboLeg();
        comboLeg1.m_exchange = "NYSE";
        comboLeg1.m_action = "BUY";
        comboLeg1.m_ratio = 10;
        ComboLeg comboLeg2 = new ComboLeg();
        comboLeg2.m_exchange = "NASDAQ";
        comboLeg2.m_action = "SELL";
        comboLeg2.m_ratio = 20;
        ComboLeg comboLeg3 = new ComboLeg();
        comboLeg3.m_exchange = "NYSE";
        comboLeg3.m_action = "BUY";
        comboLeg3.m_ratio = 10;
        assertFalse(comboLeg1.equals(comboLeg2));
        assertTrue(comboLeg1.equals(comboLeg3));
    }
}
statement is: ComboLeg comboLeg1 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg1.m_exchange = "NYSE", class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg1.m_action = "BUY", class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg1.m_ratio = 10, class spoon.support.reflect.code.CtAssignmentImpl
statement is: ComboLeg comboLeg2 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg2.m_exchange = "NASDAQ", class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg2.m_action = "SELL", class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg2.m_ratio = 20, class spoon.support.reflect.code.CtAssignmentImpl
statement is: ComboLeg comboLeg3 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg3.m_exchange = "NYSE", class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg3.m_action = "BUY", class spoon.support.reflect.code.CtAssignmentImpl
statement is: comboLeg3.m_ratio = 10, class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertFalse(comboLeg1.equals(comboLeg2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(comboLeg1.equals(comboLeg2)) target is:  method is: assertFalse(<unknown>)
statement is: assertTrue(comboLeg1.equals(comboLeg3)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(comboLeg1.equals(comboLeg3)) target is:  method is: assertTrue(<unknown>)
TestCase is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();

statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: org.evosuite.testcase.statements.AssignmentStatement@579607ad type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: comboLeg.m_designatedLocation = "H(cZi0\"~-ojN-3zi"
statement is: com.ib.client.ComboLeg()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.ib.client.ComboLeg
statement code is: ComboLeg comboLeg = new ComboLeg()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = comboLeg.equals(arg0)
test data is: ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "H(cZi0\"~-ojN-3zi";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ComboLeg comboLeg = new ComboLeg();
        comboLeg.m_designatedLocation = "New York";
        ComboLeg comboLeg2 = new ComboLeg();
        comboLeg2.equals(comboLeg);
    }
}
statement is: ComboLeg comboLeg = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg.m_designatedLocation = "New York", class spoon.support.reflect.code.CtAssignmentImpl
statement is: ComboLeg comboLeg2 = new ComboLeg(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: comboLeg2.equals(comboLeg), class spoon.support.reflect.code.CtInvocationImpl
invocation is: comboLeg2.equals(comboLeg) target is: comboLeg2 method is: equals(ComboLeg)
source statement: com.ib.client.ComboLeg()V callee: VariableReference: Statement 0, type com.ib.client.ComboLegindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

* test suite isTestSuite: 19
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg((-1008), 3375, "", "", (-1008));
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 3, (String) null, (String) null, 0);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 0, (-147), (String) null);
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "com.ib.client.ComboLeg";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_exchange = "[J`q`PcR_7%??1VTDEv";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "H(cZi0\"~-ojN-3zi";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 10: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
comboLeg.equals((Object) null);

Test 11: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 12: 
ComboLeg comboLeg = new ComboLeg(394, 2550, "B", "C", 394);
ComboLeg comboLeg = new ComboLeg();
((ComboLeg)394).equals(comboLeg);

Test 13: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, 3, "Call", "Put", 0);
((ComboLeg)1).equals(comboLeg);

Test 14: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, "Call", "Jan 2023", 3);
((ComboLeg)0).equals(comboLeg);

Test 15: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "GOOGL", 100, (-147), (String) null);
((ComboLeg)0).equals(comboLeg);

Test 16: 
ComboLeg comboLeg = new ComboLeg();

Test 17: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();

Test 18: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);


* Generated after the refinement and before minimization 19 tests with total length 56
* test suite isTestSuite: 19
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg((-1008), 3375, "", "", (-1008));
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 3, (String) null, (String) null, 0);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 0, (-147), (String) null);
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "com.ib.client.ComboLeg";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_exchange = "[J`q`PcR_7%??1VTDEv";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "H(cZi0\"~-ojN-3zi";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 10: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
comboLeg.equals((Object) null);

Test 11: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 12: 
ComboLeg comboLeg = new ComboLeg(394, 2550, "B", "C", 394);
ComboLeg comboLeg = new ComboLeg();
((ComboLeg)394).equals(comboLeg);

Test 13: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(1, 3, "Call", "Put", 0);
((ComboLeg)1).equals(comboLeg);

Test 14: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, "Call", "Jan 2023", 3);
((ComboLeg)0).equals(comboLeg);

Test 15: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, "SPY", "GOOGL", 100, (-147), (String) null);
((ComboLeg)0).equals(comboLeg);

Test 16: 
ComboLeg comboLeg = new ComboLeg();

Test 17: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();

Test 18: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg((-1008), 3375, "", "", (-1008));
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 3, (String) null, (String) null, 0);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 0, (-147), (String) null);
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "com.ib.client.ComboLeg";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_exchange = "[J`q`PcR_7%??1VTDEv";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "H(cZi0\"~-ojN-3zi";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Generated 10 tests with total length 31
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 69%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
ComboLeg arg0 = new ComboLeg();
boolean equals = comboLeg.equals(arg0);
assertEquals(0, arg0.m_shortSaleSlot);
assertEquals(0, arg0.m_ratio);
assertTrue(equals);
assertEquals(0, arg0.m_conId);
assertEquals(0, arg0.m_openClose);


** It was a parseable test case! 
refined test name is: testComboLegEqualsDifferentValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg arg0 = new ComboLeg();
boolean equals = arg0.equals(arg0);
assertTrue(equals);
assertEquals(0, arg0.m_ratio);
assertEquals(0, arg0.m_shortSaleSlot);
assertEquals(0, arg0.m_conId);
assertEquals(0, arg0.m_openClose);


** It was a parseable test case! 
refined test name is: testComboLegEquality
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
boolean equals = comboLeg.equals((Object) null);
assertEquals(0, comboLeg.m_conId);
assertEquals(0, comboLeg.m_openClose);
assertEquals(0, comboLeg.m_ratio);
assertEquals(0, comboLeg.m_shortSaleSlot);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testComboLegNullEquality
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg((-1008), 3375, "", "", (-1008));
ComboLeg arg0 = new ComboLeg();
boolean equals = comboLeg.equals(arg0);
assertEquals((-1008), comboLeg.m_openClose);
assertEquals((-1008), comboLeg.m_conId);
assertFalse(equals);
assertEquals(0, comboLeg.m_shortSaleSlot);
assertEquals(3375, comboLeg.m_ratio);


** It was a parseable test case! 
refined test name is: testComboLegEqualsSameInstance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg arg0 = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 3, (String) null, (String) null, 0);
boolean equals = comboLeg.equals(arg0);
assertEquals(0, comboLeg.m_conId);
assertFalse(equals);
assertEquals(0, comboLeg.m_shortSaleSlot);
assertEquals(0, comboLeg.m_openClose);
assertEquals(3, comboLeg.m_ratio);
assertFalse(arg0.equals((Object)comboLeg));


** It was a parseable test case! 
refined test name is: testComboLegEquality
* Compiling Tests
refined test name is: testComboLegEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg arg0 = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
boolean equals = comboLeg.equals(arg0);
assertEquals(3, comboLeg.m_openClose);
assertFalse(equals);
assertEquals(0, comboLeg.m_shortSaleSlot);
assertEquals(0, comboLeg.m_conId);
assertEquals(0, comboLeg.m_ratio);
assertFalse(arg0.equals((Object)comboLeg));


** It was a parseable test case! 
refined test name is: testComboLegEquality
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg arg0 = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 0, (-147), (String) null);
boolean equals = comboLeg.equals(arg0);
assertEquals(0, comboLeg.m_openClose);
assertFalse(equals);
assertEquals(0, comboLeg.m_conId);
assertEquals((-147), comboLeg.m_shortSaleSlot);
assertFalse(arg0.equals((Object)comboLeg));
assertEquals(0, comboLeg.m_ratio);


** It was a parseable test case! 
refined test name is: testComboLegCreationAndEquality
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg arg0 = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
assertTrue(comboLeg.equals((Object)arg0));

comboLeg.m_action = "com.ib.client.ComboLeg";
boolean equals = comboLeg.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testComboLegEqualityWithDifferentActionFields
* Compiling Tests
refined test name is: testComboLegEquality
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
comboLeg.m_exchange = "[J`q`PcR_7%??1VTDEv";
ComboLeg arg0 = new ComboLeg();
boolean equals = comboLeg.equals(arg0);
assertEquals(0, arg0.m_openClose);
assertEquals(0, arg0.m_ratio);
assertFalse(arg0.equals((Object)comboLeg));
assertFalse(equals);
assertEquals(0, arg0.m_shortSaleSlot);


** It was a parseable test case! 
refined test name is: testComboLegEquality
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "H(cZi0\"~-ojN-3zi";
ComboLeg arg0 = new ComboLeg();
boolean equals = comboLeg.equals(arg0);
assertEquals(0, arg0.m_conId);
assertEquals(0, arg0.m_ratio);
assertEquals(0, arg0.m_openClose);
assertFalse(arg0.equals((Object)comboLeg));
assertFalse(equals);
assertEquals(0, arg0.m_shortSaleSlot);


** It was a parseable test case! 
refined test name is: testComboLegEquals
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:49:44.703 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:49:44.747 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:49:44.803 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:44.804 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:49:44.844 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:44.845 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:49:44.891 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:44.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:49:44.936 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:44.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 14:49:44.988 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:44.989 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
* Compiling Tests
[MASTER] 14:49:45.045 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:45.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:45.098 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:45.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:49:45.142 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:45.144 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:49:45.190 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:45.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
[MASTER] 14:49:45.387 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:45.388 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
[MASTER] 14:49:45.660 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:45.661 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
[MASTER] 14:49:45.716 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 10
Test 0: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 3: 
ComboLeg comboLeg = new ComboLeg((-1008), 3375, "", "", (-1008));
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 3, (String) null, (String) null, 0);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 0, (-147), (String) null);
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "com.ib.client.ComboLeg";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_exchange = "[J`q`PcR_7%??1VTDEv";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "H(cZi0\"~-ojN-3zi";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ComboLeg comboLeg = new ComboLeg((-1008), 3375, "", "", (-1008));
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

Test 1: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 2: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 3: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals((Object) null);
Test 4: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 3, (String) null, (String) null, 0);
comboLeg.equals(comboLeg);
Test 5: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 3);
comboLeg.equals(comboLeg);
Test 6: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg(0, 0, (String) null, (String) null, 0, (-147), (String) null);
comboLeg.equals(comboLeg);
Test 7: 
ComboLeg comboLeg = new ComboLeg();
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_action = "com.ib.client.ComboLeg";
comboLeg.equals(comboLeg);
Test 8: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_exchange = "[J`q`PcR_7%??1VTDEv";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);
Test 9: 
ComboLeg comboLeg = new ComboLeg();
comboLeg.m_designatedLocation = "H(cZi0\"~-ojN-3zi";
ComboLeg comboLeg = new ComboLeg();
comboLeg.equals(comboLeg);

[MASTER] 14:49:46.025 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Generated 10 tests with total length 31
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:49:46.060 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 68%
* Compiling and checking tests
[MASTER] 14:49:48.156 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:48.784 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:48.785 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:48.846 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:48.848 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:48.907 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:48.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:48.970 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:48.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:49.040 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:49.041 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:49.102 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:49.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:49.165 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:49.166 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:49.220 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:49.222 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:49.270 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:49.271 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:49:49.320 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:49.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 14:49:49.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:49.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 14:49:49.669 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar7423513158329665160.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:49:49.671 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7423513158329665160.jar
* Writing tests to file
[MASTER] 14:49:49.679 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ComboLeg_ESTest' to evosuite-tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
* Writing JUnit test case 'ComboLeg_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
* Done!

* Computation finished
