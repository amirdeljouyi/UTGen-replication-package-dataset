* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: net.sf.sugar.fspath.cli.FSPathExplorer
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/60_sugar/evosuite-files/evosuite.properties
* Connecting to master process on port 2953
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:38:20.333 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:38:20.334 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:38:20.337 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:38:20.337 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:38:20.339 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:38:20.340 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:38:20.340 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:38:20.344 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:38:20.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 03:38:20.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:38:20.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:38:20.376 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:38:20.384 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:38:20.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:38:20.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class net.sf.sugar.fspath.cli.FSPathExplorer
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 184
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1709264298725
* Starting evolution
* Initial Number of Goals in DynaMOSA = 51 / 184
[Progress:>                             0%] [Cov:=======================>           67%][Progress:>                             0%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             2%] [Cov:=========================>         72%][Progress:=>                            4%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:===>                          12%] [Cov:=========================>         72%][Progress:====>                         14%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:======>                       21%] [Cov:=========================>         72%][Progress:======>                       23%] [Cov:=========================>         72%][Progress:=======>                      24%] [Cov:==========================>        75%][Progress:=======>                      26%] [Cov:==========================>        75%][Progress:========>                     29%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:==========>                   35%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:================>             54%] [Cov:============================>      80%][Progress:================>             56%] [Cov:============================>      80%][Progress:=================>            59%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:==========================>   87%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 102s and 40 generations, 15250 statements, best individual has fitness: 46.0
* Generated before the refinement 10 tests with total length 55
statement is: net.sf.sugar.fspath.cli.FSPathExplorer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sf.sugar.fspath.cli.FSPathExplorer
statement code is: FSPathExplorer fSPathExplorer = new FSPathExplorer()
statement is: org.evosuite.testcase.statements.ArrayStatement@262fab4b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d93b163e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "cGnh/k;1/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e1486b00 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "cGnh/k;1/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@19d3b31c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "cGnh/k;1/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@805211fb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "cGnh/k;1/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@975ec85c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "cGnh/k;1/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@652b5921 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "cGnh/k;1/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@96ed6c79 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = "-p"
statement is: configureExplorer([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fSPathExplorer.configureExplorer(arg0)
test data is: FSPathExplorer fSPathExplorer = new FSPathExplorer();
String[] stringArray = new String[7];
stringArray[0] = "cGnh/k;1/";
stringArray[1] = "cGnh/k;1/";
stringArray[2] = "cGnh/k;1/";
stringArray[3] = "cGnh/k;1/";
stringArray[4] = "cGnh/k;1/";
stringArray[5] = "cGnh/k;1/";
stringArray[6] = "-p";
fSPathExplorer.configureExplorer(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FSPathExplorer fSPathExplorer = new FSPathExplorer();
        String[] stringArray = new String[7];
        stringArray[0] = "path/to/file1.txt";
        stringArray[1] = "path/to/file2.txt";
        stringArray[2] = "path/to/directory";
        stringArray[3] = "path/to/another/file.txt";
        stringArray[4] = "path/to/a/nested/directory";
        stringArray[5] = "path/to/a/nested/file.txt";
        stringArray[6] = "-p";
        fSPathExplorer.configureExplorer(stringArray);
    }
}
statement is: FSPathExplorer fSPathExplorer = new FSPathExplorer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "path/to/file1.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"path/to/file1.txt" Ct is: stringArray[0] = "path/to/file1.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "path/to/file2.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"path/to/file2.txt" Ct is: stringArray[1] = "path/to/file2.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "path/to/directory", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"path/to/directory" Ct is: stringArray[2] = "path/to/directory"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "path/to/another/file.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"path/to/another/file.txt" Ct is: stringArray[3] = "path/to/another/file.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "path/to/a/nested/directory", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"path/to/a/nested/directory" Ct is: stringArray[4] = "path/to/a/nested/directory"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "path/to/a/nested/file.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"path/to/a/nested/file.txt" Ct is: stringArray[5] = "path/to/a/nested/file.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "-p", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-p" Ct is: stringArray[6] = "-p"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: fSPathExplorer.configureExplorer(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fSPathExplorer.configureExplorer(stringArray) target is: fSPathExplorer method is: configureExplorer(java.lang.String[])
source statement: net.sf.sugar.fspath.cli.FSPathExplorer()V callee: VariableReference: Statement 0, type net.sf.sugar.fspath.cli.FSPathExplorerindex is: 0
Matched Method is: configureExplorer([Ljava/lang/String;)V
TestCase is: FSPathExplorer fSPathExplorer = new FSPathExplorer();
String[] stringArray = new String[7];
String string = "path/to/file1.txt";
stringArray[0] = string;
String string = "path/to/file2.txt";
stringArray[1] = string;
String string = "path/to/directory";
stringArray[2] = string;
String string = "path/to/another/file.txt";
stringArray[3] = string;
String string = "path/to/a/nested/directory";
stringArray[4] = string;
String string = "path/to/a/nested/file.txt";
stringArray[5] = string;
String string = "-p";
stringArray[6] = string;
fSPathExplorer.configureExplorer(stringArray);

statement is: showHelp()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: FSPathExplorer.showHelp()
test data is: FSPathExplorer.showHelp();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FSPathExplorer explorer = new FSPathExplorer();
        explorer.showHelp("Invalid path", "The specified path is invalid.");
    }
}
statement is: FSPathExplorer explorer = new FSPathExplorer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: explorer.showHelp("Invalid path", "The specified path is invalid."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: explorer.showHelp("Invalid path", "The specified path is invalid.") target is: explorer method is: showHelp(java.lang.String,java.lang.String)
statement is: org.evosuite.testcase.statements.ArrayStatement@c1c9ea99 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@306b32 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-path"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: FSPathExplorer.main(arg0)
test data is: String[] stringArray = new String[2];
stringArray[0] = "-path";
FSPathExplorer.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "-path";
        stringArray[1] = "/home/user/Documents/test_data.txt";
        FSPathExplorer.main(stringArray);
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-path", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-path" Ct is: stringArray[0] = "-path"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "/home/user/Documents/test_data.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/home/user/Documents/test_data.txt" Ct is: stringArray[1] = "/home/user/Documents/test_data.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: FSPathExplorer.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FSPathExplorer.main(stringArray) target is: FSPathExplorer method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
TestCase is: String[] stringArray = new String[2];
String string = "-path";
stringArray[0] = string;
String string = "/home/user/Documents/test_data.txt";
stringArray[0] = string;
FSPathExplorer.main(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@5a429a58 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@805c0c90 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ",O;97Y yLd=QJ&pz"
statement is: org.evosuite.testcase.statements.AssignmentStatement@cceb7a5f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "L&v}P;i]xG9<'"
statement is: org.evosuite.testcase.statements.AssignmentStatement@881c4176 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "absolutePath"
statement is: org.evosuite.testcase.statements.AssignmentStatement@3de14f45 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "h$bc(4Xo=UEE%SUZ"
statement is: org.evosuite.testcase.statements.AssignmentStatement@4c73cdc5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "isHidden"
statement is: org.evosuite.testcase.statements.AssignmentStatement@13e82c36 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "unable to change to "
statement is: org.evosuite.testcase.statements.AssignmentStatement@dfbea049 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = "-f"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: FSPathExplorer.main(arg0)
test data is: String[] stringArray = new String[9];
stringArray[0] = ",O;97Y yLd=QJ&pz";
stringArray[1] = "L&v}P;i]xG9<'";
stringArray[2] = "absolutePath";
stringArray[3] = "h$bc(4Xo=UEE%SUZ";
stringArray[4] = "isHidden";
stringArray[5] = "unable to change to ";
stringArray[6] = "-f";
FSPathExplorer.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[9];
        stringArray[0] = "C:\\Windows\\System32";// absolute path to a system directory

        stringArray[1] = "C:\\Users\\Public";// absolute path to a user's public directory

        stringArray[2] = "absolutePath";// string literal with the value "absolutePath"

        stringArray[3] = "h$bc(4Xo=UEE%SUZ";// string literal with a random value

        stringArray[4] = "isHidden";// string literal with the value "isHidden"

        stringArray[5] = "unable to change to ";// string literal with the value "unable to change to "

        stringArray[6] = "-f";// string literal with the value "-f"

        FSPathExplorer.main(stringArray);
    }
}
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "C:\\Windows\\System32"// absolute path to a system directory
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Windows\\System32" Ct is: stringArray[0] = "C:\\Windows\\System32"// absolute path to a system directory

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "C:\\Users\\Public"// absolute path to a user's public directory
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:\\Users\\Public" Ct is: stringArray[1] = "C:\\Users\\Public"// absolute path to a user's public directory

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "absolutePath"// string literal with the value "absolutePath"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"absolutePath" Ct is: stringArray[2] = "absolutePath"// string literal with the value "absolutePath"

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "h$bc(4Xo=UEE%SUZ"// string literal with a random value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"h$bc(4Xo=UEE%SUZ" Ct is: stringArray[3] = "h$bc(4Xo=UEE%SUZ"// string literal with a random value

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "isHidden"// string literal with the value "isHidden"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"isHidden" Ct is: stringArray[4] = "isHidden"// string literal with the value "isHidden"

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "unable to change to "// string literal with the value "unable to change to "
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"unable to change to " Ct is: stringArray[5] = "unable to change to "// string literal with the value "unable to change to "

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "-f"// string literal with the value "-f"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-f" Ct is: stringArray[6] = "-f"// string literal with the value "-f"

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: FSPathExplorer.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FSPathExplorer.main(stringArray) target is: FSPathExplorer method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
TestCase is: String[] stringArray = new String[9];
String string = "C:\\Windows\\System32";
stringArray[0] = string;
String string = "C:\\Users\\Public";
stringArray[1] = string;
String string = "absolutePath";
stringArray[2] = string;
String string = "h$bc(4Xo=UEE%SUZ";
stringArray[3] = string;
String string = "isHidden";
stringArray[4] = string;
String string = "unable to change to ";
stringArray[5] = string;
String string = "-f";
stringArray[6] = string;
FSPathExplorer.main(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@bda91a33 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a6d48b0b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "6u"
statement is: org.evosuite.testcase.statements.AssignmentStatement@7a510881 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "("
statement is: org.evosuite.testcase.statements.AssignmentStatement@db018eb9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "1/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e2070c22 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "-find"
statement is: org.evosuite.testcase.statements.AssignmentStatement@52eed6a6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "1/"
statement is: org.evosuite.testcase.statements.AssignmentStatement@6346983c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "6u"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: FSPathExplorer.main(arg0)
test data is: String[] stringArray = new String[6];
stringArray[0] = "6u";
stringArray[1] = "(";
stringArray[2] = "1/";
stringArray[3] = "-find";
stringArray[4] = "1/";
stringArray[5] = "6u";
FSPathExplorer.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "8c3-10-2";// This is a valid file path for a text file with the contents "1/find 1/ 6u"

        stringArray[1] = "-i";
        stringArray[2] = "-v";
        stringArray[3] = "-n";
        stringArray[4] = "-f";
        stringArray[5] = "8c3-10-2";// This is the same file path as above, which is used to specify the output file name.

        FSPathExplorer.main(stringArray);
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "8c3-10-2"// This is a valid file path for a text file with the contents "1/find 1/ 6u"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"8c3-10-2" Ct is: stringArray[0] = "8c3-10-2"// This is a valid file path for a text file with the contents "1/find 1/ 6u"

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "-i", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-i" Ct is: stringArray[1] = "-i"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "-v", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-v" Ct is: stringArray[2] = "-v"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "-n", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-n" Ct is: stringArray[3] = "-n"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "-f", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-f" Ct is: stringArray[4] = "-f"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "8c3-10-2"// This is the same file path as above, which is used to specify the output file name.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"8c3-10-2" Ct is: stringArray[5] = "8c3-10-2"// This is the same file path as above, which is used to specify the output file name.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: FSPathExplorer.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FSPathExplorer.main(stringArray) target is: FSPathExplorer method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
TestCase is: String[] stringArray = new String[6];
String string = "8c3-10-2";
stringArray[0] = string;
String string = "-i";
stringArray[1] = string;
String string = "-v";
stringArray[2] = string;
String string = "-n";
stringArray[3] = string;
String string = "-f";
stringArray[4] = string;
String string = "8c3-10-2";
stringArray[5] = string;
FSPathExplorer.main(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@6b7b355e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2fa5104c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "a("
statement is: org.evosuite.testcase.statements.AssignmentStatement@6fb74d70 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "S"
statement is: org.evosuite.testcase.statements.AssignmentStatement@fa229bfc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "k:B:v"
statement is: org.evosuite.testcase.statements.AssignmentStatement@15425405 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "-p"
statement is: org.evosuite.testcase.statements.AssignmentStatement@cf44d4fe type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "X"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e1d9ea1e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "C5,t"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e4256d71 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[6] = "net.sf.sugar.fspath.FSPathFactory"
statement is: org.evosuite.testcase.statements.AssignmentStatement@b1d0ab5b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[7] = "ua@Fs8]"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: FSPathExplorer.main(arg0)
test data is: String[] stringArray = new String[8];
stringArray[0] = "a(";
stringArray[1] = "S";
stringArray[2] = "k:B:v";
stringArray[3] = "-p";
stringArray[4] = "X";
stringArray[5] = "C5,t";
stringArray[6] = "net.sf.sugar.fspath.FSPathFactory";
stringArray[7] = "ua@Fs8]";
FSPathExplorer.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[8];
        stringArray[0] = "a(S:B:v)";
        stringArray[1] = "-pXC5,t";
        stringArray[2] = "net.sf.sugar.fspath.FSPathFactory";
        stringArray[3] = "ua@Fs8]";
        FSPathExplorer.main(stringArray);
    }
}
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "a(S:B:v)", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"a(S:B:v)" Ct is: stringArray[0] = "a(S:B:v)"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "-pXC5,t", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-pXC5,t" Ct is: stringArray[1] = "-pXC5,t"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "net.sf.sugar.fspath.FSPathFactory", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"net.sf.sugar.fspath.FSPathFactory" Ct is: stringArray[2] = "net.sf.sugar.fspath.FSPathFactory"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "ua@Fs8]", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"ua@Fs8]" Ct is: stringArray[3] = "ua@Fs8]"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: FSPathExplorer.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FSPathExplorer.main(stringArray) target is: FSPathExplorer method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
TestCase is: String[] stringArray = new String[8];
String string = "a(S:B:v)";
stringArray[0] = string;
String string = "-pXC5,t";
stringArray[1] = string;
String string = "net.sf.sugar.fspath.FSPathFactory";
stringArray[2] = string;
String string = "ua@Fs8]";
stringArray[3] = string;
FSPathExplorer.main(stringArray);

statement is: addInputLine(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: SystemInUtil.addInputLine("cGnh/k;1/")
statement is: org.evosuite.testcase.statements.ArrayStatement@2bb242c4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@21df5a56 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "!w30)6_L\"wrH6B%T6:P"
statement is: org.evosuite.testcase.statements.AssignmentStatement@71e0020e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "!`"
statement is: org.evosuite.testcase.statements.AssignmentStatement@a45c6b35 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "={"
statement is: org.evosuite.testcase.statements.AssignmentStatement@b9b26189 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "[P3F_6d({f*U$`bho"
statement is: org.evosuite.testcase.statements.AssignmentStatement@85d61d47 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "={"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: FSPathExplorer.main(arg0)
test data is: SystemInUtil.addInputLine("cGnh/k;1/");
String[] stringArray = new String[5];
stringArray[0] = "!w30)6_L\"wrH6B%T6:P";
stringArray[1] = "!`";
stringArray[2] = "={";
stringArray[3] = "[P3F_6d({f*U$`bho";
stringArray[4] = "={";
FSPathExplorer.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SystemInUtil.addInputLine("cGnh/k;1/");
        String[] stringArray = new String[5];
        stringArray[0] = "C:/Users/John Doe";
        stringArray[1] = "!`";
        stringArray[2] = "={";
        stringArray[3] = "[P3F_6d({f*U$`bho";
        stringArray[4] = "={";
        FSPathExplorer.main(stringArray);
    }
}
statement is: SystemInUtil.addInputLine("cGnh/k;1/"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("cGnh/k;1/") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "C:/Users/John Doe", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C:/Users/John Doe" Ct is: stringArray[0] = "C:/Users/John Doe"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@c0adbcb2
statement is: stringArray[1] = "!`", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"!`" Ct is: stringArray[1] = "!`"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@bc7d5768
statement is: stringArray[2] = "={", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"={" Ct is: stringArray[2] = "={"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@ca73e9ce
statement is: stringArray[3] = "[P3F_6d({f*U$`bho", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"[P3F_6d({f*U$`bho" Ct is: stringArray[3] = "[P3F_6d({f*U$`bho"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@6c8406c3
statement is: stringArray[4] = "={", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"={" Ct is: stringArray[4] = "={"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@4a87d77b
statement is: FSPathExplorer.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FSPathExplorer.main(stringArray) target is: FSPathExplorer method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
* this is vulnerable: String string = "C:/Users/John Doe"
* this is vulnerable: String string = "!`"
* this is vulnerable: String string = "={"
* this is vulnerable: String string = "[P3F_6d({f*U$`bho"
* this is vulnerable: String string = "={"
TestCase is: String string = "cGnh/k;1/";
SystemInUtil.addInputLine(string);
String[] stringArray = new String[5];
String string = "C:/Users/John Doe";
String string = "!`";
String string = "={";
String string = "[P3F_6d({f*U$`bho";
String string = "={";
FSPathExplorer.main(stringArray);

statement is: addInputLine(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: SystemInUtil.addInputLine("pwd")
statement is: net.sf.sugar.fspath.cli.FSPathExplorer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sf.sugar.fspath.cli.FSPathExplorer
statement code is: FSPathExplorer fSPathExplorer = new FSPathExplorer()
statement is: start()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fSPathExplorer.start()
test data is: SystemInUtil.addInputLine("pwd");
FSPathExplorer fSPathExplorer = new FSPathExplorer();
fSPathExplorer.start();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SystemInUtil.addInputLine("pwd");
        FSPathExplorer fSPathExplorer = new FSPathExplorer();
        fSPathExplorer.start();
        // Set up a test directory with some files and subdirectories
        File testDir = new File("/tmp/test_dir");
        testDir.mkdirs();
        new File(testDir, "file1.txt").createNewFile();
        new File(testDir, "subdir1/file2.txt").createNewFile();
        new File(testDir, "subdir2/file3.txt").createNewFile();
        // Create a test file system explorer with the test directory as its root
        FSPathExplorer fSPathExplorer = new FSPathExplorer(testDir);
        fSPathExplorer.start();
    }
}
statement is: SystemInUtil.addInputLine("pwd"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("pwd") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: FSPathExplorer fSPathExplorer = new FSPathExplorer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fSPathExplorer.start(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fSPathExplorer.start() target is: fSPathExplorer method is: start()
source statement: net.sf.sugar.fspath.cli.FSPathExplorer()V callee: VariableReference: Statement 1, type net.sf.sugar.fspath.cli.FSPathExplorerindex is: 2
Matched Method is: start()V
statement is: // Set up a test directory with some files and subdirectories
File testDir = new File("/tmp/test_dir"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: testDir.mkdirs(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: testDir.mkdirs() target is: testDir method is: mkdirs()
statement is: new File(testDir, "file1.txt").createNewFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: new File(testDir, "file1.txt").createNewFile() target is: new File(testDir, "file1.txt") method is: createNewFile()
statement is: new File(testDir, "subdir1/file2.txt").createNewFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: new File(testDir, "subdir1/file2.txt").createNewFile() target is: new File(testDir, "subdir1/file2.txt") method is: createNewFile()
statement is: new File(testDir, "subdir2/file3.txt").createNewFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: new File(testDir, "subdir2/file3.txt").createNewFile() target is: new File(testDir, "subdir2/file3.txt") method is: createNewFile()
statement is: // Create a test file system explorer with the test directory as its root
FSPathExplorer fSPathExplorer = new FSPathExplorer(testDir), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fSPathExplorer.start(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fSPathExplorer.start() target is: fSPathExplorer method is: start()
source statement: net.sf.sugar.fspath.cli.FSPathExplorer()V callee: VariableReference: Statement 1, type net.sf.sugar.fspath.cli.FSPathExplorerindex is: 2
Matched Method is: start()V
TestCase is: String string = "pwd";
SystemInUtil.addInputLine(string);
FSPathExplorer fSPathExplorer = new FSPathExplorer();
((FSPathExplorer) _void).start();
((FSPathExplorer) _void).start();

statement is: net.sf.sugar.fspath.cli.FSPathExplorer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class net.sf.sugar.fspath.cli.FSPathExplorer
statement code is: FSPathExplorer fSPathExplorer = new FSPathExplorer()
statement is: createFSPath()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fSPathExplorer.createFSPath()
test data is: FSPathExplorer fSPathExplorer = new FSPathExplorer();
fSPathExplorer.createFSPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FSPathExplorer fSPathExplorer = new FSPathExplorer();
        fSPathExplorer.createFSPath("C:\\Users\\JohnDoe\\Documents");
    }
}
statement is: FSPathExplorer fSPathExplorer = new FSPathExplorer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fSPathExplorer.createFSPath("C:\\Users\\JohnDoe\\Documents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fSPathExplorer.createFSPath("C:\\Users\\JohnDoe\\Documents") target is: fSPathExplorer method is: createFSPath(java.lang.String)
TestCase is: FSPathExplorer fSPathExplorer = new FSPathExplorer();

statement is: showWelcome()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: FSPathExplorer.showWelcome()
test data is: FSPathExplorer.showWelcome();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FSPathExplorer.showWelcome("Welcome to FSPathExplorer!", "Please enter a valid path.");
    }
}
statement is: FSPathExplorer.showWelcome("Welcome to FSPathExplorer!", "Please enter a valid path."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FSPathExplorer.showWelcome("Welcome to FSPathExplorer!", "Please enter a valid path.") target is: FSPathExplorer method is: showWelcome(java.lang.String,java.lang.String)
* test suite isTestSuite: 18
Test 0: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();
String[] stringArray = new String[7];
stringArray[0] = "cGnh/k;1/";
stringArray[1] = "cGnh/k;1/";
stringArray[2] = "cGnh/k;1/";
stringArray[3] = "cGnh/k;1/";
stringArray[4] = "cGnh/k;1/";
stringArray[5] = "cGnh/k;1/";
stringArray[6] = "-p";
// Undeclared exception!
try { 
  fSPathExplorer.configureExplorer(stringArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 7
   //
   verifyException("net.sf.sugar.fspath.cli.FSPathExplorer", e);
}

Test 1: 
FSPathExplorer.showHelp();
Test 2: 
String[] stringArray = new String[2];
stringArray[0] = "-path";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 3: 
String[] stringArray = new String[9];
stringArray[0] = ",O;97Y yLd=QJ&pz";
stringArray[1] = "L&v}P;i]xG9<'";
stringArray[2] = "absolutePath";
stringArray[3] = "h$bc(4Xo=UEE%SUZ";
stringArray[4] = "isHidden";
stringArray[5] = "unable to change to ";
stringArray[6] = "-f";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 4: 
String[] stringArray = new String[6];
stringArray[0] = "6u";
stringArray[1] = "(";
stringArray[2] = "1/";
stringArray[3] = "-find";
stringArray[4] = "1/";
stringArray[5] = "6u";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
String[] stringArray = new String[8];
stringArray[0] = "a(";
stringArray[1] = "S";
stringArray[2] = "k:B:v";
stringArray[3] = "-p";
stringArray[4] = "X";
stringArray[5] = "C5,t";
stringArray[6] = "net.sf.sugar.fspath.FSPathFactory";
stringArray[7] = "ua@Fs8]";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: InstantiationError");

} catch(InstantiationError e) {
   //
   // the java.io.File specified must be a Directory
   //
   verifyException("net.sf.sugar.fspath.DefaultFSPath", e);
}

Test 6: 
SystemInUtil.addInputLine("cGnh/k;1/");
String[] stringArray = new String[5];
stringArray[0] = "!w30)6_L\"wrH6B%T6:P";
stringArray[1] = "!`";
stringArray[2] = "={";
stringArray[3] = "[P3F_6d({f*U$`bho";
stringArray[4] = "={";
// Undeclared exception!
FSPathExplorer.main(stringArray);
Test 7: 
SystemInUtil.addInputLine("pwd");
FSPathExplorer fSPathExplorer = new FSPathExplorer();
// Undeclared exception!
try { 
  fSPathExplorer.start();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();
fSPathExplorer.createFSPath();
Test 9: 
FSPathExplorer.showWelcome();
Test 10: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();
String[] stringArray = new String[7];
stringArray[0] = "path/to/file1.txt";
stringArray[1] = "path/to/file2.txt";
stringArray[2] = "path/to/directory";
stringArray[3] = "path/to/another/file.txt";
stringArray[4] = "path/to/a/nested/directory";
stringArray[5] = "path/to/a/nested/file.txt";
stringArray[6] = "-p";
fSPathExplorer.configureExplorer(stringArray);

Test 11: 
String[] stringArray = new String[2];
stringArray[0] = "-path";
stringArray[0] = "/home/user/Documents/test_data.txt";
FSPathExplorer.main(stringArray);

Test 12: 
String[] stringArray = new String[9];
stringArray[0] = "C:WindowsSystem32";
stringArray[1] = "C:UsersPublic";
stringArray[2] = "absolutePath";
stringArray[3] = "h$bc(4Xo=UEE%SUZ";
stringArray[4] = "isHidden";
stringArray[5] = "unable to change to ";
stringArray[6] = "-f";
FSPathExplorer.main(stringArray);

Test 13: 
String[] stringArray = new String[6];
stringArray[0] = "8c3-10-2";
stringArray[1] = "-i";
stringArray[2] = "-v";
stringArray[3] = "-n";
stringArray[4] = "-f";
stringArray[5] = "8c3-10-2";
FSPathExplorer.main(stringArray);

Test 14: 
String[] stringArray = new String[8];
stringArray[0] = "a(S:B:v)";
stringArray[1] = "-pXC5,t";
stringArray[2] = "net.sf.sugar.fspath.FSPathFactory";
stringArray[3] = "ua@Fs8]";
FSPathExplorer.main(stringArray);

Test 15: 
SystemInUtil.addInputLine("cGnh/k;1/");
String[] stringArray = new String[5];
FSPathExplorer.main(stringArray);

Test 16: 
SystemInUtil.addInputLine("pwd");
FSPathExplorer fSPathExplorer = new FSPathExplorer();
((FSPathExplorer)null).start();
((FSPathExplorer) _void).start();

Test 17: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();


* Generated after the refinement and before minimization 18 tests with total length 100
* test suite isTestSuite: 18
Test 0: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();
String[] stringArray = new String[7];
stringArray[0] = "cGnh/k;1/";
stringArray[1] = "cGnh/k;1/";
stringArray[2] = "cGnh/k;1/";
stringArray[3] = "cGnh/k;1/";
stringArray[4] = "cGnh/k;1/";
stringArray[5] = "cGnh/k;1/";
stringArray[6] = "-p";
// Undeclared exception!
try { 
  fSPathExplorer.configureExplorer(stringArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 7
   //
   verifyException("net.sf.sugar.fspath.cli.FSPathExplorer", e);
}

Test 1: 
FSPathExplorer.showHelp();
Test 2: 
String[] stringArray = new String[2];
stringArray[0] = "-path";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 3: 
String[] stringArray = new String[9];
stringArray[0] = ",O;97Y yLd=QJ&pz";
stringArray[1] = "L&v}P;i]xG9<'";
stringArray[2] = "absolutePath";
stringArray[3] = "h$bc(4Xo=UEE%SUZ";
stringArray[4] = "isHidden";
stringArray[5] = "unable to change to ";
stringArray[6] = "-f";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 4: 
String[] stringArray = new String[6];
stringArray[0] = "6u";
stringArray[1] = "(";
stringArray[2] = "1/";
stringArray[3] = "-find";
stringArray[4] = "1/";
stringArray[5] = "6u";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
String[] stringArray = new String[8];
stringArray[0] = "a(";
stringArray[1] = "S";
stringArray[2] = "k:B:v";
stringArray[3] = "-p";
stringArray[4] = "X";
stringArray[5] = "C5,t";
stringArray[6] = "net.sf.sugar.fspath.FSPathFactory";
stringArray[7] = "ua@Fs8]";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: InstantiationError");

} catch(InstantiationError e) {
   //
   // the java.io.File specified must be a Directory
   //
   verifyException("net.sf.sugar.fspath.DefaultFSPath", e);
}

Test 6: 
SystemInUtil.addInputLine("cGnh/k;1/");
String[] stringArray = new String[5];
stringArray[0] = "!w30)6_L\"wrH6B%T6:P";
stringArray[1] = "!`";
stringArray[2] = "={";
stringArray[3] = "[P3F_6d({f*U$`bho";
stringArray[4] = "={";
// Undeclared exception!
FSPathExplorer.main(stringArray);
Test 7: 
SystemInUtil.addInputLine("pwd");
FSPathExplorer fSPathExplorer = new FSPathExplorer();
// Undeclared exception!
try { 
  fSPathExplorer.start();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();
fSPathExplorer.createFSPath();
Test 9: 
FSPathExplorer.showWelcome();
Test 10: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();
String[] stringArray = new String[7];
stringArray[0] = "path/to/file1.txt";
stringArray[1] = "path/to/file2.txt";
stringArray[2] = "path/to/directory";
stringArray[3] = "path/to/another/file.txt";
stringArray[4] = "path/to/a/nested/directory";
stringArray[5] = "path/to/a/nested/file.txt";
stringArray[6] = "-p";
fSPathExplorer.configureExplorer(stringArray);

Test 11: 
String[] stringArray = new String[2];
stringArray[0] = "-path";
stringArray[0] = "/home/user/Documents/test_data.txt";
FSPathExplorer.main(stringArray);

Test 12: 
String[] stringArray = new String[9];
stringArray[0] = "C:WindowsSystem32";
stringArray[1] = "C:UsersPublic";
stringArray[2] = "absolutePath";
stringArray[3] = "h$bc(4Xo=UEE%SUZ";
stringArray[4] = "isHidden";
stringArray[5] = "unable to change to ";
stringArray[6] = "-f";
FSPathExplorer.main(stringArray);

Test 13: 
String[] stringArray = new String[6];
stringArray[0] = "8c3-10-2";
stringArray[1] = "-i";
stringArray[2] = "-v";
stringArray[3] = "-n";
stringArray[4] = "-f";
stringArray[5] = "8c3-10-2";
FSPathExplorer.main(stringArray);

Test 14: 
String[] stringArray = new String[8];
stringArray[0] = "a(S:B:v)";
stringArray[1] = "-pXC5,t";
stringArray[2] = "net.sf.sugar.fspath.FSPathFactory";
stringArray[3] = "ua@Fs8]";
FSPathExplorer.main(stringArray);

Test 15: 
SystemInUtil.addInputLine("cGnh/k;1/");
String[] stringArray = new String[5];
FSPathExplorer.main(stringArray);

Test 16: 
SystemInUtil.addInputLine("pwd");
FSPathExplorer fSPathExplorer = new FSPathExplorer();
((FSPathExplorer)null).start();
((FSPathExplorer) _void).start();

Test 17: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();
String[] stringArray = new String[7];
stringArray[0] = "path/to/file1.txt";
stringArray[1] = "path/to/file2.txt";
stringArray[2] = "path/to/directory";
stringArray[3] = "path/to/another/file.txt";
stringArray[4] = "path/to/a/nested/directory";
stringArray[5] = "path/to/a/nested/file.txt";
stringArray[6] = "-p";
// Undeclared exception!
try { 
  fSPathExplorer.configureExplorer(stringArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 7
   //
   verifyException("net.sf.sugar.fspath.cli.FSPathExplorer", e);
}

Test 1: 
FSPathExplorer.showHelp();
Test 2: 
String[] stringArray = new String[6];
stringArray[0] = "8c3-10-2";
stringArray[1] = "-i";
stringArray[2] = "-v";
stringArray[3] = "-n";
stringArray[4] = "-f";
stringArray[5] = "8c3-10-2";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
String[] stringArray = new String[2];
stringArray[0] = "-path";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 4: 
String[] stringArray = new String[6];
stringArray[0] = "6u";
stringArray[1] = "(";
stringArray[2] = "1/";
stringArray[3] = "-find";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 5: 
String[] stringArray = new String[8];
stringArray[0] = "a(";
stringArray[1] = "S";
stringArray[2] = "k:B:v";
stringArray[3] = "-p";
stringArray[4] = "X";
stringArray[5] = "C5,t";
stringArray[6] = "net.sf.sugar.fspath.FSPathFactory";
stringArray[7] = "ua@Fs8]";
// Undeclared exception!
try { 
  FSPathExplorer.main(stringArray);
  fail("Expecting exception: InstantiationError");

} catch(InstantiationError e) {
   //
   // the java.io.File specified must be a Directory
   //
   verifyException("net.sf.sugar.fspath.DefaultFSPath", e);
}

Test 6: 
SystemInUtil.addInputLine("pwd");
FSPathExplorer fSPathExplorer = new FSPathExplorer();
// Undeclared exception!
try { 
  fSPathExplorer.start();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
SystemInUtil.addInputLine("cGnh/k;1/");
String[] stringArray = new String[5];
stringArray[0] = "!w30)6_L\"wrH6B%T6:P";
stringArray[1] = "!`";
stringArray[2] = "={";
stringArray[3] = "[P3F_6d({f*U$`bho";
stringArray[4] = "={";
// Undeclared exception!
FSPathExplorer.main(stringArray);
Test 8: 
FSPathExplorer fSPathExplorer = new FSPathExplorer();
fSPathExplorer.createFSPath();
Test 9: 
FSPathExplorer.showWelcome();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 71%
* Total number of goals: 51
* Number of covered goals: 36
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 75
* Number of covered goals: 59
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 51
* Number of covered goals: 36
* Generated 10 tests with total length 52
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FSPathExplorer fSPathExplorer = new FSPathExplorer();
String[] arg0 = new String[7];
arg0[0] = "path/to/file1.txt";
arg0[1] = "path/to/file2.txt";
arg0[2] = "path/to/directory";
arg0[3] = "path/to/another/file.txt";
arg0[4] = "path/to/a/nested/directory";
arg0[5] = "path/to/a/nested/file.txt";
arg0[6] = "-p";
// Undeclared exception!
try { 
  fSPathExplorer.configureExplorer(arg0);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 7
   //
   verifyException("net.sf.sugar.fspath.cli.FSPathExplorer", e);
}


** It was a parseable test case! 
refined test name is: testConfigureExplorerWithTooManyArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FSPathExplorer.showHelp();

** It was a parseable test case! 
refined test name is: testShowHelpDisplaysMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[6];
arg0[0] = "8c3-10-2";
arg0[1] = "-i";
arg0[2] = "-v";
arg0[3] = "-n";
arg0[4] = "-f";
arg0[5] = "8c3-10-2";
// Undeclared exception!
try { 
  FSPathExplorer.main(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.sf.sugar.fspath.cli.FSPathExplorer", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputArgs
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[2];
arg0[0] = "-path";
// Undeclared exception!
try { 
  FSPathExplorer.main(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}


** It was a parseable test case! 
refined test name is: testMainWithNullPathArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[6];
arg0[0] = "6u";
arg0[1] = "(";
arg0[2] = "1/";
arg0[3] = "-find";
// Undeclared exception!
try { 
  FSPathExplorer.main(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}


** It was a parseable test case! 
refined test name is: testInvalidArgumentsThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[8];
arg0[0] = "a(";
arg0[1] = "S";
arg0[2] = "k:B:v";
arg0[3] = "-p";
arg0[4] = "X";
arg0[5] = "C5,t";
arg0[6] = "net.sf.sugar.fspath.FSPathFactory";
arg0[7] = "ua@Fs8]";
// Undeclared exception!
try { 
  FSPathExplorer.main(arg0);
  fail("Expecting exception: InstantiationError");

} catch(InstantiationError e) {
   //
   // the java.io.File specified must be a Directory
   //
   verifyException("net.sf.sugar.fspath.DefaultFSPath", e);
}


** It was a parseable test case! 
refined test name is: testInstantiationErrorOnNonDirectoryFileSpecified
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SystemInUtil.addInputLine("pwd");
FSPathExplorer fSPathExplorer = new FSPathExplorer();
// Undeclared exception!
try { 
  fSPathExplorer.start();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("net.sf.sugar.fspath.cli.FSPathExplorer", e);
}


** It was a parseable test case! 
refined test name is: testStartMethodWithValidInputDoesNotThrowNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SystemInUtil.addInputLine("cGnh/k;1/");
String[] arg0 = new String[5];
arg0[0] = "!w30)6_L\"wrH6B%T6:P";
arg0[1] = "!`";
arg0[2] = "={";
arg0[3] = "[P3F_6d({f*U$`bho";
arg0[4] = "={";
// Undeclared exception!
FSPathExplorer.main(arg0);

** It was a parseable test case! 
refined test name is: testThrowExceptionOnInvalidArguments
source code formatter error: 38:60: error: illegal start of type testCode is: /*
 * This file was automatically generated by UTestGen and EvoSuite
 * Fri Mar 01 03:42:05 GMT 2024
 */

package net.sf.sugar.fspath.cli;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sugar.fspath.cli.FSPathExplorer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FSPathExplorer_15_tmp__ESTest extends FSPathExplorer_15_tmp__ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testThrowExceptionOnInvalidArguments() throws Throwable  {
      // Given a set of input arguments for the FSPathExplorer program
      String[] args = new String[5];
      args[0] = "!w30)6_L\"wrH6B%T6:P";
      args[1] = "!`";
      args[2] = "={";
      args[3] = "[P3F_6d({f*U$`bho";
      args[4] = "={";
      
      // When the FSPathExplorer program is run with these input arguments
      try {
      FSPathExplorer.main(args);
      } catch (Exception e) {
      // Then an exception should be thrown to indicate that the input arguments are invalid
      assertTrue(e instanceof IllegalArgumentException);}});]}
  }
}

* Compiling Tests
refined test name is: testInvalidInputArgumentsThrowsException
source code formatter error: 38:60: error: illegal start of type testCode is: /*
 * This file was automatically generated by UTestGen and EvoSuite
 * Fri Mar 01 03:42:10 GMT 2024
 */

package net.sf.sugar.fspath.cli;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sugar.fspath.cli.FSPathExplorer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FSPathExplorer_16_tmp__ESTest extends FSPathExplorer_16_tmp__ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testInvalidInputArgumentsThrowsException() throws Throwable  {
      // Given a set of input arguments for the FSPathExplorer program
      String[] args = new String[5];
      args[0] = "!w30)6_L\"wrH6B%T6:P";
      args[1] = "!`";
      args[2] = "={";
      args[3] = "[P3F_6d({f*U$`bho";
      args[4] = "={";
      
      // When the FSPathExplorer program is run with these input arguments
      try {
      FSPathExplorer.main(args);
      } catch (Exception e) {
      // Then an exception should be thrown to indicate that the input arguments are invalid
      assertTrue(e instanceof IllegalArgumentException);}});]}
  }
}

* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FSPathExplorer fSPathExplorer = new FSPathExplorer();
fSPathExplorer.createFSPath();

** It was a parseable test case! 
refined test name is: testCreateFSPathValidAndNonEmptyPathCreated
* Compiling Tests
refined test name is: testCreateFSPathValidAndNonEmptyPath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FSPathExplorer.showWelcome();

** It was a parseable test case! 
refined test name is: testDisplayWelcomeMessage
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:23.475 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:42:23.499 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:23.562 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:42:23.564 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:23.628 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:23.629 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
[MASTER] 03:42:23.693 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:42:23.694 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:23.758 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:23.759 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
[MASTER] 03:42:23.824 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:23.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
[MASTER] 03:42:23.887 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:23.888 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:42:24.768 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:42:24.771 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:42:24.859 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:42:24.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:24.941 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:42:24.943 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
** Write a test suite: 7 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
[MASTER] 03:42:25.893 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:42:25.895 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
[MASTER] 03:42:26.907 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar4884716161119595642.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:42:26.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4884716161119595642.jar
* Writing tests to file
* Writing JUnit test case 'FSPathExplorer_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
* Done!

* Computation finished
