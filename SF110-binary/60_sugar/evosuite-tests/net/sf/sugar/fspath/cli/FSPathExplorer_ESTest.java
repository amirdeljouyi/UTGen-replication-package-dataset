/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Tue Mar 12 18:47:34 GMT 2024
 */

package net.sf.sugar.fspath.cli;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sugar.fspath.cli.FSPathExplorer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FSPathExplorer_ESTest extends FSPathExplorer_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testStartThrowsNullPointerException() throws Throwable  {
      // Test that FSPathExplorer throws NullPointerException when start() method is called with no arguments
      FSPathExplorer fSPathExplorer = new FSPathExplorer();
      try {
      fSPathExplorer.start(); // this call should throw a NullPointerException
      fail("Expected exception: NullPointerException");
      } catch (NullPointerException e) {
      // the start() method was called without any arguments, which is not allowed
      assertTrue(e.getMessage().contains("IllegalArgumentException"));}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testShowWelcome() throws Throwable  {
      // rollbacked to evosuite
      FSPathExplorer.showWelcome();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreateFSPath() throws Throwable  {
      // rollbacked to evosuite
      FSPathExplorer fSPathExplorer = new FSPathExplorer();
      fSPathExplorer.createFSPath();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainThrowsTooManyResourcesException() throws Throwable  {
      // rollbacked to evosuite
      SystemInUtil.addInputLine("-f");
      String[] arg0 = new String[6];
      arg0[0] = "-f";
      arg0[1] = "-f";
      arg0[2] = "-f";
      arg0[3] = "-f";
      arg0[4] = "-f";
      arg0[5] = "8#OxL4w:ml";
      // Undeclared exception!
      FSPathExplorer.main(arg0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain() throws Throwable  {
      // rollbacked to evosuite
      String[] arg0 = new String[0];
      SystemInUtil.addInputLine("exit");
      FSPathExplorer.main(arg0);
      assertEquals(0, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainThrowsNullPointerException() throws Throwable  {
      // Given
      String[] args = new String[2];
      args[0] = "-p";
      
      // When
      FSPathExplorer.main(args);
      
      // Then
      // Expecting exception: NullPointerException
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainThrowsInstantiationError() throws Throwable  {
      // Given: The FSPathExplorer class is being used to explore the contents of a file system path specified as an argument
      String[] arg0 = new String[8];
      arg0[0] = "/home/user/Documents";
      arg0[1] = "-path";
      arg0[2] = "example.txt";
      arg0[3] = "example2.docx";
      arg0[4] = "/home/user/Documents";
      arg0[5] = "example3.pdf";
      arg0[6] = "/home/user/Downloads";
      arg0[7] = "example4.txt";
      
      // When: The FSPathExplorer class is called with the file system path argument and an exception is expected to be thrown
      try {
      FSPathExplorer.main(arg0);
      fail("Expecting exception: InstantiationError");
      } catch (InstantiationError e) {
      // Then: The java.io.File specified must be a Directory
      verifyException("net.sf.sugar.fspath.DefaultFSPath", e);}
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testShowHelp() throws Throwable  {
      // No Comments were added
      FSPathExplorer.showHelp();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testConfigureExplorerThrowsNullPointerException() throws Throwable  {
      // Arrange
      FSPathExplorer fSPathExplorer = new FSPathExplorer();
      String[] arg0 = new String[7];
      arg0[0] = "Attributes : (see javadoc for java.io.File for more info)";
      arg0[1] = "-find";
      
      // Act and Assert
      try {
      fSPathExplorer.configureExplorer(arg0);
      fail("Expected NullPointerException");
      } catch (NullPointerException e) {
      assertEquals("Expecting exception: NullPointerException", e.getMessage());}
  }
}
