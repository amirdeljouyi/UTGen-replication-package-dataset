* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: bcry.bcGenerator
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/72_battlecry/evosuite-files/evosuite.properties
* Connecting to master process on port 7689
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:40:36.887 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:40:36.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:40:36.903 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:40:37.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 02:40:37.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 02:40:37.055 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 02:40:40.311 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 02:40:40.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 02:40:40.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 02:40:40.388 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 02:40:40.388 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 02:40:40.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 02:40:40.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 02:40:40.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 02:40:40.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 02:40:40.409 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 02:40:40.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class bcry.bcGenerator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 855
* Using seed 1710297631146
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 135 / 855
[Progress:>                             0%] [Cov:========>                          25%][Progress:>                             0%] [Cov:========>                          25%][Progress:>                             1%] [Cov:========>                          25%][Progress:>                             1%] [Cov:=========>                         28%][Progress:>                             1%] [Cov:=========>                         28%][Progress:>                             1%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            4%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:====>                         14%] [Cov:===================>               57%][Progress:====>                         16%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:=======================>           68%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   35%] [Cov:========================>          70%][Progress:===========>                  37%] [Cov:========================>          70%][Progress:===========>                  38%] [Cov:========================>          70%][Progress:============>                 40%] [Cov:========================>          70%][Progress:============>                 42%] [Cov:========================>          70%][Progress:============>                 43%] [Cov:========================>          70%][Progress:=============>                45%] [Cov:========================>          70%][Progress:=============>                46%] [Cov:========================>          70%][Progress:==============>               48%] [Cov:========================>          70%][Progress:===============>              50%] [Cov:========================>          70%][Progress:===============>              52%] [Cov:========================>          70%][Progress:===============>              53%] [Cov:========================>          70%][Progress:================>             55%] [Cov:========================>          70%][Progress:================>             56%] [Cov:========================>          70%][Progress:=================>            58%] [Cov:========================>          70%][Progress:=================>            59%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           63%] [Cov:========================>          70%][Progress:===================>          65%] [Cov:========================>          70%][Progress:====================>         67%] [Cov:========================>          70%][Progress:====================>         68%] [Cov:========================>          70%][Progress:=====================>        70%] [Cov:========================>          70%][Progress:=====================>        72%] [Cov:========================>          70%][Progress:======================>       75%] [Cov:========================>          70%][Progress:======================>       76%] [Cov:========================>          70%][Progress:=======================>      78%] [Cov:========================>          70%][Progress:========================>     80%] [Cov:========================>          70%][Progress:========================>     82%] [Cov:========================>          70%][Progress:========================>     83%] [Cov:========================>          70%][Progress:=========================>    85%] [Cov:========================>          70%][Progress:==========================>   87%] [Cov:========================>          70%][Progress:==========================>   89%] [Cov:========================>          70%][Progress:===========================>  91%] [Cov:========================>          70%][Progress:===========================>  93%] [Cov:========================>          70%][Progress:============================> 94%] [Cov:========================>          70%][Progress:=============================>97%] [Cov:========================>          70%][Progress:==============================100%] [Cov:========================>          70%]
* Search finished after 202s and 151 generations, 76612 statements, best individual has fitness: 226.0
* Generated before the refinement 13 tests with total length 68
statement is: org.evosuite.testcase.statements.ArrayStatement@f2c0fd6d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("DEMO", "DEMO", arg2)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-1454))
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1454));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, null);
        bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
        Random.setNextRandom(-1454);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        _bcGenerator.getLyrics();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Random.setNextRandom(-1454), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(-1454) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 4, type bcry.bcGeneratorindex is: 5
Matched Method is: getLyrics()Ljava/util/List;
TestCase is: String string = "DEMO";
String string = "DEMO";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
((bcGenerator) _void).getLyrics();

statement is: org.evosuite.testcase.statements.ArrayStatement@9921fdd1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[4]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("DEMO", "DEMO", arg2)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-1127))
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[4];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1127));
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true, false };
        bcVoice _bcVoice = new bcVoice(booleanArray, null);
        bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        Random.setNextRandom(-1127);
        _bcGenerator.getLyrics();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true, false }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[4] isAssignment: false Array: new boolean[]{ true, false, true, false } Elements: [true, false, true, false]
lengths: [4] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Random.setNextRandom(-1127), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(-1127) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 3, type bcry.bcGeneratorindex is: 3
Matched Method is: getLyrics()Ljava/util/List;
TestCase is: String string = "DEMO";
String string = "DEMO";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

statement is: org.evosuite.testcase.statements.ArrayStatement@721109d6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("DEMO", "DEMO", arg2)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-1348))
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1348));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
        Random.setNextRandom(-1348);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        _bcGenerator.getLyrics();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Random.setNextRandom(-1348), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(-1348) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 4, type bcry.bcGeneratorindex is: 5
Matched Method is: getLyrics()Ljava/util/List;
TestCase is: String string = "DEMO";
String string = "DEMO";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
((bcGenerator) _void).getLyrics();

statement is: org.evosuite.testcase.statements.ArrayStatement@beed1704 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("DEMO", "DEMO", arg2)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom(3387)
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom(3387);
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        Random.setNextRandom(3387);
        String expectedLyrics = "Your move!";
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Random.setNextRandom(3387), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(3387) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
statement is: String expectedLyrics = "Your move!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "Your move!"
TestCase is: String string = "DEMO";
String string = "DEMO";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = 3387;
Random.setNextRandom(_int);
String string = "Your move!";

statement is: org.evosuite.testcase.statements.ArrayStatement@6a991814 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("DEMO", "DEMO", arg2)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-1087588642))
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588642));
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        Random.setNextRandom(-1087588642);
        _bcGenerator.getLyrics();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Random.setNextRandom(-1087588642), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(-1087588642) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 3, type bcry.bcGeneratorindex is: 3
Matched Method is: getLyrics()Ljava/util/List;
TestCase is: String string = "DEMO";
String string = "DEMO";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

statement is: org.evosuite.testcase.statements.ArrayStatement@a18158f6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("DEMO", "DEMO", arg2)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-1087588629))
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588629));
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        Random.setNextRandom(-1087588629);
        _bcGenerator.getLyrics();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Random.setNextRandom(-1087588629), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(-1087588629) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 3, type bcry.bcGeneratorindex is: 3
Matched Method is: getLyrics()Ljava/util/List;
TestCase is: String string = "DEMO";
String string = "DEMO";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

statement is: org.evosuite.testcase.statements.ArrayStatement@5852f51b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("DEMO", "DEMO", arg2)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-1085549150))
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1085549150));
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        Random.setNextRandom(-1085549150);
        _bcGenerator.getLyrics();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Random.setNextRandom(-1085549150), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(-1085549150) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 3, type bcry.bcGeneratorindex is: 3
Matched Method is: getLyrics()Ljava/util/List;
TestCase is: String string = "DEMO";
String string = "DEMO";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null)
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        bcGenerator _bcGenerator = new bcGenerator(new bcModule("The Beatles", "Abbey Road"), new bcVoice("John Lennon", Gender.MALE));
        _bcGenerator.getLyrics();
    }
}
statement is: bcGenerator _bcGenerator = new bcGenerator(new bcModule("The Beatles", "Abbey Road"), new bcVoice("John Lennon", Gender.MALE)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 0, type bcry.bcGeneratorindex is: 0
Matched Method is: getLyrics()Ljava/util/List;
TestCase is: bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
_bcGenerator.getLyrics();

statement is: org.evosuite.testcase.statements.ArrayStatement@230fe88c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;Lbcry/bcDictionary;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", arg2, (bcDictionary) null)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, ((bcDictionary) (null)));
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        String lyrics = _bcGenerator.getLyrics();
        assertEquals("The lyrics are not as expected.", "This is a test of the emergency broadcast system.", lyrics);
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, ((bcDictionary) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String lyrics = _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 3, type bcry.bcGeneratorindex is: 3
Matched Method is: getLyrics()Ljava/util/List;
statement is: assertEquals("The lyrics are not as expected.", "This is a test of the emergency broadcast system.", lyrics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("The lyrics are not as expected.", "This is a test of the emergency broadcast system.", lyrics) target is:  method is: assertEquals(java.lang.String,java.lang.String,java.lang.String)
TestCase is: String string = "LoIYVF{aJL7_[>b_}Qs";
String string = "LoIYVF{aJL7_[>b_}Qs";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getLyrics();

statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null)
statement is: getModuleInfo()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: _bcGenerator.getModuleInfo()
test data is: bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
_bcGenerator.getModuleInfo();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        // Replace the null values with more descriptive examples
        bcModule bcModule = new bcModule("Sample Module", "1.0");
        bcVoice bcVoice = new bcVoice("Sample Voice", "Female", "US English");
        _bcGenerator = new bcGenerator(bcModule, bcVoice);
        _bcGenerator.getModuleInfo();
    }
}
statement is: // Improved test data
// Replace the null values with more descriptive examples
bcModule bcModule = new bcModule("Sample Module", "1.0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcVoice bcVoice = new bcVoice("Sample Voice", "Female", "US English"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _bcGenerator = new bcGenerator(bcModule, bcVoice), class spoon.support.reflect.code.CtAssignmentImpl
statement is: _bcGenerator.getModuleInfo(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getModuleInfo() target is: _bcGenerator method is: getModuleInfo()
statement is: org.evosuite.testcase.statements.ArrayStatement@e17d3c69 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("DEMO", "Lw'y", arg2)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: getModuleInfo()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: _bcGenerator.getModuleInfo()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "Lw'y", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("DEMO", "Lw'y", _bcVoice);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        _bcGenerator.getModuleInfo();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("DEMO", "Lw'y", _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _bcGenerator.getModuleInfo(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getModuleInfo() target is: _bcGenerator method is: getModuleInfo()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 3, type bcry.bcGeneratorindex is: 3
Matched Method is: getModuleInfo()V
TestCase is: String string = "DEMO";
String string = "Lw'y";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getModuleInfo();

statement is: org.evosuite.testcase.statements.ArrayStatement@401a4d60 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;Lbcry/bcDictionary;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", arg2, (bcDictionary) null)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: getModuleInfo()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: _bcGenerator.getModuleInfo()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, ((bcDictionary) (null)));
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        _bcGenerator.getModuleInfo();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, ((bcDictionary) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _bcGenerator.getModuleInfo(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getModuleInfo() target is: _bcGenerator method is: getModuleInfo()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 3, type bcry.bcGeneratorindex is: 3
Matched Method is: getModuleInfo()V
TestCase is: String string = "LoIYVF{aJL7_[>b_}Qs";
String string = "LoIYVF{aJL7_[>b_}Qs";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getModuleInfo();

statement is: org.evosuite.testcase.statements.ArrayStatement@1b961aa type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Z
statement code is: boolean[] booleanArray = new boolean[3]
statement is: bcry.bcVoice([ZLbcry/battlecryGUI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcVoice
statement code is: bcVoice _bcVoice = new bcVoice(arg0, (battlecryGUI) null)
statement is: bcry.bcModule(Ljava/lang/String;Ljava/lang/String;Lbcry/bcVoice;Lbcry/bcDictionary;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcModule
statement code is: bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", arg2, (bcDictionary) null)
statement is: org.evosuite.testcase.statements.ArrayStatement@cc433fd5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: sing([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: _bcVoice.sing(arg0)
statement is: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bcry.bcGenerator
statement code is: bcGenerator _bcGenerator = new bcGenerator(arg0, arg1)
statement is: getLyrics()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List lyrics = _bcGenerator.getLyrics()
test data is: boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
String[] stringArray = new String[5];
_bcVoice.sing(stringArray);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        boolean[] booleanArray = new boolean[]{ true, false, true };
        bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null)));
        bcModule _bcModule = new bcModule("The Rainbow's End", "The Rainbow's End", _bcVoice, ((bcDictionary) (null)));
        String[] stringArray = new String[]{ "A Game of Thrones", "A Clash of Kings", "A Storm of Swords" };
        _bcVoice.sing(stringArray);
        bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
        _bcGenerator.getLyrics();
    }
}
statement is: boolean[] booleanArray = new boolean[]{ true, false, true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [3] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new boolean[]{ true, false, true } Elements: [true, false, true]
lengths: [5] []
statement is: bcVoice _bcVoice = new bcVoice(booleanArray, ((battlecryGUI) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: bcry.bcVoice([ZLbcry/battlecryGUI;)V
statement is: bcModule _bcModule = new bcModule("The Rainbow's End", "The Rainbow's End", _bcVoice, ((bcDictionary) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[]{ "A Game of Thrones", "A Clash of Kings", "A Storm of Swords" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: boolean[] booleanArray = new boolean[3] isAssignment: false Array: new String[]{ "A Game of Thrones", "A Clash of Kings", "A Storm of Swords" } Elements: ["A Game of Thrones", "A Clash of Kings", "A Storm of Swords"]
lengths: [3] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "A Game of Thrones", "A Clash of Kings", "A Storm of Swords" } Elements: ["A Game of Thrones", "A Clash of Kings", "A Storm of Swords"]
lengths: [5] []
statement is: _bcVoice.sing(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcVoice.sing(stringArray) target is: _bcVoice method is: sing(java.lang.String[])
source statement: String string = "The Rainbow's End" callee: VariableReference: Statement 1, type bcry.bcVoiceindex is: 0
statement is: bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: _bcGenerator.getLyrics(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: _bcGenerator.getLyrics() target is: _bcGenerator method is: getLyrics()
source statement: bcry.bcGenerator(Lbcry/bcModule;Lbcry/bcVoice;)V callee: VariableReference: Statement 5, type bcry.bcGeneratorindex is: 3
Matched Method is: getLyrics()Ljava/util/List;
TestCase Could not be added: getLyrics()Ljava/util/List;
TestCase is: String string = "The Rainbow's End";
String string = "The Rainbow's End";
bcModule _bcModule = new bcModule(string, string, (bcVoice) string, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);

* test suite isTestSuite: 25
Test 0: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1454));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 1: 
boolean[] booleanArray = new boolean[4];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1127));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 2: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1348));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 3: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom(3387);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 4: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588642));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 5: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588629));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 6: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1085549150));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 7: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getLyrics();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 8: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();
Test 9: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getModuleInfo();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 10: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "Lw'y", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 11: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 12: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
String[] stringArray = new String[5];
_bcVoice.sing(stringArray);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();
Test 13: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
int _int = null;
Random.setNextRandom(_int);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
((bcGenerator) _void).getLyrics();

Test 14: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

Test 15: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
int _int = null;
Random.setNextRandom(_int);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
((bcGenerator) _void).getLyrics();

Test 16: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = 3387;
Random.setNextRandom(_int);

Test 17: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

Test 18: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

Test 19: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

Test 20: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
_bcGenerator.getLyrics();

Test 21: 
String string = "LoIYVF{aJL7_[>b_}Qs";
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", (bcVoice) "LoIYVF{aJL7_[>b_}Qs", (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getLyrics();

Test 22: 
String string = "Lw'y";
bcModule _bcModule = new bcModule("DEMO", "Lw'y", (bcVoice) "Lw'y");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getModuleInfo();

Test 23: 
String string = "LoIYVF{aJL7_[>b_}Qs";
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", (bcVoice) "LoIYVF{aJL7_[>b_}Qs", (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getModuleInfo();

Test 24: 
String string = "The Rainbow's End";
bcModule _bcModule = new bcModule("The Rainbow's End", "The Rainbow's End", (bcVoice) "The Rainbow's End", (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);


* Generated after the refinement and before minimization 25 tests with total length 126
* test suite isTestSuite: 25
Test 0: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1454));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 1: 
boolean[] booleanArray = new boolean[4];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1127));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 2: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1348));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 3: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom(3387);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 4: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588642));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 5: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588629));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 6: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1085549150));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 7: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getLyrics();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 8: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();
Test 9: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getModuleInfo();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 10: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "Lw'y", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 11: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 12: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
String[] stringArray = new String[5];
_bcVoice.sing(stringArray);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();
Test 13: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
int _int = null;
Random.setNextRandom(_int);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
((bcGenerator) _void).getLyrics();

Test 14: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

Test 15: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
int _int = null;
Random.setNextRandom(_int);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
((bcGenerator) _void).getLyrics();

Test 16: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = 3387;
Random.setNextRandom(_int);

Test 17: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

Test 18: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

Test 19: 
String string = "DEMO";
bcModule _bcModule = new bcModule("DEMO", "DEMO", (bcVoice) "DEMO");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
int _int = null;
Random.setNextRandom(_int);
_bcGenerator.getLyrics();

Test 20: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
_bcGenerator.getLyrics();

Test 21: 
String string = "LoIYVF{aJL7_[>b_}Qs";
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", (bcVoice) "LoIYVF{aJL7_[>b_}Qs", (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getLyrics();

Test 22: 
String string = "Lw'y";
bcModule _bcModule = new bcModule("DEMO", "Lw'y", (bcVoice) "Lw'y");
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getModuleInfo();

Test 23: 
String string = "LoIYVF{aJL7_[>b_}Qs";
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", (bcVoice) "LoIYVF{aJL7_[>b_}Qs", (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);
_bcGenerator.getModuleInfo();

Test 24: 
String string = "The Rainbow's End";
bcModule _bcModule = new bcModule("The Rainbow's End", "The Rainbow's End", (bcVoice) "The Rainbow's End", (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, (bcVoice) string);


* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getLyrics();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 1: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1454));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 2: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1348));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 3: 
boolean[] booleanArray = new boolean[4];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1127));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 4: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom(3387);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 5: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588642));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 6: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588629));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 7: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1085549150));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 8: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();
Test 9: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getModuleInfo();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 10: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "Lw'y", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 11: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 12: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
String[] stringArray = new String[5];
_bcVoice.sing(stringArray);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 281
* Number of covered goals: 195
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 83%
* Total number of goals: 284
* Number of covered goals: 236
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 281
* Number of covered goals: 193
* Generated 13 tests with total length 68
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getLyrics();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}


** It was a parseable test case! 
refined test name is: testGetLyricsWithNullModuleAndVoiceParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getModuleInfo();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}


** It was a parseable test case! 
refined test name is: testGetModuleInfoWithNullArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:29:43.210 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar1343766541131193374.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:29:43.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1343766541131193374.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:29:43.470 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar1343766541131193374.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:29:43.472 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1343766541131193374.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:29:43.566 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar1343766541131193374.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:29:43.568 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1343766541131193374.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:29:43.671 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar1343766541131193374.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:29:43.672 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1343766541131193374.jar
[MASTER] 03:29:45.006 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 13
Test 0: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1454));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 1: 
boolean[] booleanArray = new boolean[4];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1127));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 2: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1348));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 3: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom(3387);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 4: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588642));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 5: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588629));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 6: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1085549150));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 7: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getLyrics();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 8: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();
Test 9: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getModuleInfo();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 10: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "Lw'y", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 11: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 12: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
String[] stringArray = new String[5];
_bcVoice.sing(stringArray);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();

* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getLyrics();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1454));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 2: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
Random.setNextRandom((-1348));
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 3: 
boolean[] booleanArray = new boolean[4];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1127));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 4: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom(3387);
// Undeclared exception!
_bcGenerator.getLyrics();
Test 5: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588642));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 6: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1087588629));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 7: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "DEMO", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
Random.setNextRandom((-1085549150));
// Undeclared exception!
_bcGenerator.getLyrics();
Test 8: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();
Test 9: 
bcGenerator _bcGenerator = new bcGenerator((bcModule) null, (bcVoice) null);
// Undeclared exception!
try { 
  _bcGenerator.getModuleInfo();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("bcry.bcGenerator", e);
}

Test 10: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("DEMO", "Lw'y", _bcVoice);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 11: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getModuleInfo();
Test 12: 
boolean[] booleanArray = new boolean[3];
bcVoice _bcVoice = new bcVoice(booleanArray, (battlecryGUI) null);
bcModule _bcModule = new bcModule("LoIYVF{aJL7_[>b_}Qs", "LoIYVF{aJL7_[>b_}Qs", _bcVoice, (bcDictionary) null);
String[] stringArray = new String[5];
_bcVoice.sing(stringArray);
bcGenerator _bcGenerator = new bcGenerator(_bcModule, _bcVoice);
_bcGenerator.getLyrics();

[MASTER] 03:29:56.389 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 281
* Number of covered goals: 195
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 83%
* Total number of goals: 284
* Number of covered goals: 236
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 6
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 281
* Number of covered goals: 193
* Generated 13 tests with total length 68
* Resulting test suite's coverage: 71% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:29:57.064 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 03:30:30.398 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:30:32.670 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar1343766541131193374.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:30:32.672 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1343766541131193374.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:30:32.740 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar1343766541131193374.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:30:32.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1343766541131193374.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
[MASTER] 03:30:32.804 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar1343766541131193374.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:30:32.805 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1343766541131193374.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
[MASTER] 03:30:32.907 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar1343766541131193374.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:30:32.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1343766541131193374.jar
* Writing tests to file
[MASTER] 03:30:32.912 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'bcGenerator_ESTest' to evosuite-tests
* Writing JUnit test case 'bcGenerator_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
* Done!

* Computation finished
