* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: httpanalyzer.HttpAnalyzerView
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/32_httpanalyzer/evosuite-files/evosuite.properties
* Connecting to master process on port 18608
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:20:30.200 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:20:30.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:20:30.230 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:20:31.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:20:31.347 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:20:31.349 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:20:32.618 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:20:32.887 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:20:32.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:20:32.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:20:32.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:20:32.889 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:20:32.889 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:20:32.890 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:20:32.891 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:20:32.918 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 01:20:32.930 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class httpanalyzer.HttpAnalyzerView
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1388
* Using seed 1710206420138
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 843 / 1388
[Progress:>                             3%] [Cov:=>                                 3%][Progress:=>                            6%] [Cov:=>                                 3%][Progress:==>                           8%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          11%] [Cov:=>                                 3%][Progress:===>                          12%] [Cov:=>                                 3%][Progress:===>                          13%] [Cov:=>                                 3%][Progress:====>                         15%] [Cov:=>                                 3%][Progress:====>                         16%] [Cov:=>                                 3%][Progress:=====>                        17%] [Cov:=>                                 3%][Progress:=====>                        18%] [Cov:=>                                 3%][Progress:=====>                        19%] [Cov:=>                                 3%][Progress:======>                       21%] [Cov:=>                                 3%][Progress:======>                       22%] [Cov:=>                                 3%][Progress:=======>                      24%] [Cov:=>                                 3%][Progress:=======>                      25%] [Cov:=>                                 3%][Progress:=======>                      26%] [Cov:=>                                 3%][Progress:========>                     27%] [Cov:=>                                 3%][Progress:========>                     29%] [Cov:=>                                 3%][Progress:=========>                    30%] [Cov:=>                                 3%][Progress:=========>                    31%] [Cov:=>                                 3%][Progress:=========>                    32%] [Cov:=>                                 3%][MASTER] 01:21:07.550 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:=========>                    33%] [Cov:=>                                 3%][Progress:==========>                   34%] [Cov:=>                                 3%][Progress:==========>                   36%] [Cov:=>                                 3%][Progress:===========>                  37%] [Cov:=>                                 3%][Progress:===========>                  38%] [Cov:=>                                 3%][Progress:===========>                  39%] [Cov:=>                                 3%][Progress:============>                 40%] [Cov:=>                                 3%][Progress:============>                 41%] [Cov:=>                                 3%][Progress:============>                 42%] [Cov:=>                                 3%][Progress:============>                 43%] [Cov:=>                                 3%][Progress:=============>                45%] [Cov:=>                                 3%][MASTER] 01:21:20.487 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:=============>                46%] [Cov:=>                                 3%][Progress:==============>               48%] [Cov:=>                                 3%][Progress:==============>               49%] [Cov:=>                                 3%][Progress:===============>              50%] [Cov:=>                                 3%][Progress:===============>              51%] [Cov:=>                                 3%][Progress:===============>              52%] [Cov:=>                                 3%][Progress:===============>              53%] [Cov:=>                                 3%][Progress:================>             54%] [Cov:=>                                 3%][Progress:================>             55%] [Cov:=>                                 3%][Progress:================>             56%] [Cov:=>                                 3%][Progress:=================>            57%] [Cov:=>                                 3%][Progress:=================>            58%] [Cov:=>                                 3%][Progress:==================>           60%] [Cov:=>                                 3%][Progress:==================>           61%] [Cov:=>                                 3%][Progress:==================>           62%] [Cov:=>                                 3%][Progress:==================>           63%] [Cov:=>                                 3%][Progress:===================>          65%] [Cov:=>                                 3%][Progress:===================>          66%] [Cov:=>                                 3%][Progress:====================>         68%] [Cov:=>                                 3%][Progress:====================>         69%] [Cov:=>                                 3%][Progress:=====================>        70%] [Cov:=>                                 3%][Progress:=====================>        71%] [Cov:=>                                 3%][Progress:=====================>        72%] [Cov:=>                                 3%][Progress:=====================>        73%] [Cov:=>                                 3%][Progress:======================>       74%] [Cov:=>                                 3%][Progress:======================>       75%] [Cov:=>                                 3%][Progress:======================>       76%] [Cov:=>                                 3%][Progress:=======================>      77%] [Cov:=>                                 3%][Progress:=======================>      79%] [Cov:=>                                 3%][Progress:========================>     81%] [Cov:=>                                 3%][Progress:========================>     82%] [Cov:=>                                 3%][Progress:========================>     83%] [Cov:=>                                 3%][Progress:=========================>    84%] [Cov:=>                                 3%][Progress:=========================>    85%] [Cov:=>                                 3%][Progress:==========================>   87%] [Cov:=>                                 3%][Progress:==========================>   88%] [Cov:=>                                 3%][Progress:==========================>   89%] [Cov:=>                                 3%][Progress:===========================>  91%] [Cov:=>                                 3%][Progress:===========================>  92%] [Cov:=>                                 3%][Progress:===========================>  93%] [Cov:=>                                 3%][Progress:============================> 94%] [Cov:=>                                 3%][Progress:============================> 95%] [Cov:=>                                 3%][Progress:============================> 96%] [Cov:=>                                 3%][Progress:=============================>98%] [Cov:=>                                 3%][Progress:=============================>99%] [Cov:=>                                 3%][Progress:==============================100%] [Cov:=>                                 3%][Progress:==============================100%] [Cov:=>                                 3%]
* Search finished after 102s and 79 generations, 7840 statements, best individual has fitness: 1264.0
* Generated before the refinement 1 tests with total length 2
statement is: getApplication()Lhttpanalyzer/HttpAnalyzerApp; type is: class org.evosuite.testcase.statements.MethodStatement return type class httpanalyzer.HttpAnalyzerApp
statement code is: HttpAnalyzerApp application = HttpAnalyzerApp.getApplication()
statement is: httpanalyzer.HttpAnalyzerView(Lorg/jdesktop/application/SingleFrameApplication;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class httpanalyzer.HttpAnalyzerView
statement code is: HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(arg0)
test data is: HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(application);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
        HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(application);
        // Add more descriptive test data here
        Integer portNumber = 8080;// change this to a more descriptive value, e.g. 8080

        String hostName = "example.com";// change this to a more descriptive value, e.g. "example.com"

        String uriPath = "/path/to/resource";// change this to a more descriptive value, e.g. "/path/to/resource"

        String httpMethod = "GET";// change this to a more descriptive value, e.g. "GET"

        httpAnalyzerView.setPortNumber(portNumber);
        httpAnalyzerView.setHostName(hostName);
        httpAnalyzerView.setUriPath(uriPath);
        httpAnalyzerView.setHttpMethod(httpMethod);
    }
}
statement is: HttpAnalyzerApp application = HttpAnalyzerApp.getApplication(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: HttpAnalyzerApp.getApplication() target is: HttpAnalyzerApp method is: getApplication()
Matched Method is: getApplication()Lhttpanalyzer/HttpAnalyzerApp;
statement is: HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(application), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Add more descriptive test data here
Integer portNumber = 8080// change this to a more descriptive value, e.g. 8080
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String hostName = "example.com"// change this to a more descriptive value, e.g. "example.com"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String uriPath = "/path/to/resource"// change this to a more descriptive value, e.g. "/path/to/resource"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String httpMethod = "GET"// change this to a more descriptive value, e.g. "GET"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: httpAnalyzerView.setPortNumber(portNumber), class spoon.support.reflect.code.CtInvocationImpl
invocation is: httpAnalyzerView.setPortNumber(portNumber) target is: httpAnalyzerView method is: setPortNumber(java.lang.Integer)
statement is: httpAnalyzerView.setHostName(hostName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: httpAnalyzerView.setHostName(hostName) target is: httpAnalyzerView method is: setHostName(java.lang.String)
statement is: httpAnalyzerView.setUriPath(uriPath), class spoon.support.reflect.code.CtInvocationImpl
invocation is: httpAnalyzerView.setUriPath(uriPath) target is: httpAnalyzerView method is: setUriPath(java.lang.String)
statement is: httpAnalyzerView.setHttpMethod(httpMethod), class spoon.support.reflect.code.CtInvocationImpl
invocation is: httpAnalyzerView.setHttpMethod(httpMethod) target is: httpAnalyzerView method is: setHttpMethod(java.lang.String)
* this is vulnerable: int _int = 8080
* this is vulnerable: String string = "example.com"
* this is vulnerable: String string = "/path/to/resource"
* this is vulnerable: String string = "GET"
TestCase is: HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(application);
int _int = 8080;
String string = "example.com";
String string = "/path/to/resource";
String string = "GET";

* test suite isTestSuite: 2
Test 0: 
HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(application);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}

Test 1: 
HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(application);


* Generated after the refinement and before minimization 2 tests with total length 4
* test suite isTestSuite: 2
Test 0: 
HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(application);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}

Test 1: 
HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(application);


* Minimizing test suite
* test suite isTestSuite: 1
Test 0: 
HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(application);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 2%
* Total number of goals: 200
* Number of covered goals: 3
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 12%
* Total number of goals: 960
* Number of covered goals: 118
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 16
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 8%
* Total number of goals: 12
* Number of covered goals: 1
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 2%
* Total number of goals: 200
* Number of covered goals: 3
* Generated 1 tests with total length 2
* Resulting test suite's coverage: 3% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HttpAnalyzerApp arg0 = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(arg0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


** It was a parseable test case! 
refined test name is: testViewCreationthrowsHeadlessException
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:23:19.506 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7201488811150363775.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:23:19.534 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7201488811150363775.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:23:19.643 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7201488811150363775.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:23:19.644 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7201488811150363775.jar
[MASTER] 01:23:19.745 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 1
Test 0: 
HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(application);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


* Minimizing test suite
* test suite isTestSuite: 1
Test 0: 
HttpAnalyzerApp application = HttpAnalyzerApp.getApplication();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(application);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


[MASTER] 01:23:20.348 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 2%
* Total number of goals: 136
* Number of covered goals: 3
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 13%
* Total number of goals: 885
* Number of covered goals: 118
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 16
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 8%
* Total number of goals: 12
* Number of covered goals: 1
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 2%
* Total number of goals: 136
* Number of covered goals: 3
* Generated 1 tests with total length 2
* Resulting test suite's coverage: 3% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 01:23:20.437 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 01:23:25.542 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:23:25.792 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7201488811150363775.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:23:25.793 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7201488811150363775.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:23:25.877 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7201488811150363775.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:23:25.878 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7201488811150363775.jar
* Writing tests to file
[MASTER] 01:23:25.885 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'HttpAnalyzerView_ESTest' to evosuite-tests
* Writing JUnit test case 'HttpAnalyzerView_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Done!

* Computation finished
