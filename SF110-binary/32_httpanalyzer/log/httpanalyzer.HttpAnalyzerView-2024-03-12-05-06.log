* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: httpanalyzer.HttpAnalyzerView
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/32_httpanalyzer/evosuite-files/evosuite.properties
* Connecting to master process on port 6019
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:07:05.853 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:07:05.860 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:07:05.862 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:07:06.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 05:07:06.898 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 05:07:06.902 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 05:07:07.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 05:07:08.127 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 05:07:08.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 05:07:08.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 05:07:08.130 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 05:07:08.131 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 05:07:08.132 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 05:07:08.133 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 05:07:08.134 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 05:07:08.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 05:07:08.224 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class httpanalyzer.HttpAnalyzerView
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1388
* Using seed 1710220017324
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 843 / 1388
[Progress:>                             1%] [Cov:=>                                 3%][Progress:>                             3%] [Cov:=>                                 3%][Progress:=>                            4%] [Cov:=>                                 3%][Progress:=>                            5%] [Cov:=>                                 3%][Progress:=>                            6%] [Cov:=>                                 3%][Progress:=>                            6%] [Cov:=>                                 3%][Progress:==>                           7%] [Cov:=>                                 3%][Progress:==>                           8%] [Cov:=>                                 3%][Progress:==>                           8%] [Cov:=>                                 3%][Progress:==>                           9%] [Cov:=>                                 3%][Progress:==>                           9%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          11%] [Cov:=>                                 3%][Progress:===>                          12%] [Cov:=>                                 3%][Progress:===>                          12%] [Cov:=>                                 3%][Progress:===>                          13%] [Cov:=>                                 3%][Progress:====>                         14%] [Cov:=>                                 3%][Progress:====>                         14%] [Cov:=>                                 3%][Progress:====>                         15%] [Cov:=>                                 3%][Progress:====>                         16%] [Cov:=>                                 3%][Progress:====>                         16%] [Cov:=>                                 3%][Progress:=====>                        17%] [Cov:=>                                 3%][Progress:=====>                        18%] [Cov:=>                                 3%][Progress:=====>                        18%] [Cov:=>                                 3%][Progress:=====>                        19%] [Cov:=>                                 3%][Progress:======>                       20%] [Cov:=>                                 3%][Progress:======>                       20%] [Cov:=>                                 3%][Progress:======>                       21%] [Cov:=>                                 3%][Progress:======>                       22%] [Cov:=>                                 3%][Progress:======>                       22%] [Cov:=>                                 3%][Progress:======>                       23%] [Cov:=>                                 3%][Progress:======>                       23%] [Cov:=>                                 3%][MASTER] 05:07:57.534 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 05:07:57.555 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:=======>                      24%] [Cov:=>                                 3%][Progress:=======>                      25%] [Cov:=>                                 3%][Progress:=======>                      25%] [Cov:=>                                 3%][Progress:=======>                      26%] [Cov:=>                                 3%][Progress:========>                     27%] [Cov:=>                                 3%][Progress:========>                     27%] [Cov:=>                                 3%][Progress:========>                     28%] [Cov:=>                                 3%][Progress:========>                     28%] [Cov:=>                                 3%][Progress:========>                     29%] [Cov:=>                                 3%][Progress:=========>                    30%] [Cov:=>                                 3%][Progress:=========>                    30%] [Cov:=>                                 3%][Progress:=========>                    31%] [Cov:=>                                 3%][Progress:=========>                    31%] [Cov:=>                                 3%][Progress:=========>                    32%] [Cov:=>                                 3%][Progress:=========>                    33%] [Cov:=>                                 3%][Progress:=========>                    33%] [Cov:=>                                 3%][Progress:==========>                   34%] [Cov:=>                                 3%][Progress:==========>                   35%] [Cov:=>                                 3%][Progress:==========>                   35%] [Cov:=>                                 3%][Progress:==========>                   36%] [Cov:=>                                 3%][Progress:==========>                   36%] [Cov:=>                                 3%][Progress:===========>                  37%] [Cov:=>                                 3%][Progress:===========>                  38%] [Cov:=>                                 3%][Progress:===========>                  39%] [Cov:=>                                 3%][Progress:===========>                  39%] [Cov:=>                                 3%][Progress:===========>                  39%] [Cov:=>                                 3%][Progress:============>                 40%] [Cov:=>                                 3%][Progress:============>                 40%] [Cov:=>                                 3%][Progress:============>                 41%] [Cov:=>                                 3%][Progress:============>                 42%] [Cov:=>                                 3%][Progress:============>                 42%] [Cov:=>                                 3%][Progress:============>                 43%] [Cov:=>                                 3%][Progress:============>                 43%] [Cov:=>                                 3%][Progress:=============>                44%] [Cov:=>                                 3%][Progress:=============>                45%] [Cov:=>                                 3%][Progress:=============>                46%] [Cov:=>                                 3%][Progress:=============>                46%] [Cov:=>                                 3%][Progress:==============>               47%] [Cov:=>                                 3%][Progress:==============>               48%] [Cov:=>                                 3%][Progress:==============>               48%] [Cov:=>                                 3%][Progress:==============>               49%] [Cov:=>                                 3%][MASTER] 05:08:49.066 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowSorter<M> : Type points to itself
[Progress:===============>              50%] [Cov:=>                                 3%][Progress:===============>              50%] [Cov:=>                                 3%][Progress:===============>              51%] [Cov:=>                                 3%][Progress:===============>              52%] [Cov:=>                                 3%][Progress:===============>              52%] [Cov:=>                                 3%][Progress:===============>              53%] [Cov:=>                                 3%][Progress:===============>              53%] [Cov:=>                                 3%][Progress:================>             54%] [Cov:=>                                 3%][Progress:================>             55%] [Cov:=>                                 3%][Progress:================>             56%] [Cov:=>                                 3%][Progress:================>             56%] [Cov:=>                                 3%][Progress:================>             56%] [Cov:=>                                 3%][Progress:=================>            57%] [Cov:=>                                 3%][Progress:=================>            57%] [Cov:=>                                 3%][Progress:=================>            58%] [Cov:=>                                 3%][Progress:=================>            59%] [Cov:=>                                 3%][Progress:=================>            59%] [Cov:=>                                 3%][Progress:==================>           60%] [Cov:=>                                 3%][Progress:==================>           61%] [Cov:=>                                 3%][Progress:==================>           61%] [Cov:=>                                 3%][Progress:==================>           62%] [Cov:=>                                 3%][Progress:==================>           62%] [Cov:=>                                 3%][Progress:==================>           63%] [Cov:=>                                 3%][Progress:==================>           63%] [Cov:=>                                 3%][Progress:===================>          64%] [Cov:=>                                 3%][Progress:===================>          65%] [Cov:=>                                 3%][Progress:===================>          65%] [Cov:=>                                 3%][Progress:===================>          66%] [Cov:=>                                 3%][Progress:===================>          66%] [Cov:=>                                 3%][Progress:====================>         67%] [Cov:=>                                 3%][Progress:====================>         68%] [Cov:=>                                 3%][Progress:====================>         68%] [Cov:=>                                 3%][Progress:====================>         69%] [Cov:=>                                 3%][Progress:====================>         69%] [Cov:=>                                 3%][Progress:=====================>        70%] [Cov:=>                                 3%][Progress:=====================>        71%] [Cov:=>                                 3%][Progress:=====================>        71%] [Cov:=>                                 3%][Progress:=====================>        72%] [Cov:=>                                 3%][Progress:=====================>        73%] [Cov:=>                                 3%][Progress:=====================>        73%] [Cov:=>                                 3%][Progress:======================>       74%] [Cov:=>                                 3%][Progress:======================>       74%] [Cov:=>                                 3%][Progress:======================>       75%] [Cov:=>                                 3%][Progress:======================>       76%] [Cov:=>                                 3%][Progress:======================>       76%] [Cov:=>                                 3%][Progress:=======================>      77%] [Cov:=>                                 3%][Progress:=======================>      78%] [Cov:=>                                 3%][Progress:=======================>      78%] [Cov:=>                                 3%][Progress:=======================>      79%] [Cov:=>                                 3%][Progress:=======================>      79%] [Cov:=>                                 3%][Progress:========================>     80%] [Cov:=>                                 3%][Progress:========================>     80%] [Cov:=>                                 3%][Progress:========================>     81%] [Cov:=>                                 3%][Progress:========================>     82%] [Cov:=>                                 3%][Progress:========================>     82%] [Cov:=>                                 3%][Progress:========================>     83%] [Cov:=>                                 3%][Progress:========================>     83%] [Cov:=>                                 3%][Progress:=========================>    84%] [Cov:=>                                 3%][Progress:=========================>    85%] [Cov:=>                                 3%][Progress:=========================>    85%] [Cov:=>                                 3%][Progress:=========================>    86%] [Cov:=>                                 3%][Progress:==========================>   87%] [Cov:=>                                 3%][Progress:==========================>   87%] [Cov:=>                                 3%][Progress:==========================>   88%] [Cov:=>                                 3%][Progress:==========================>   88%] [Cov:=>                                 3%][Progress:==========================>   89%] [Cov:=>                                 3%][Progress:==========================>   89%] [Cov:=>                                 3%][Progress:===========================>  90%] [Cov:=>                                 3%][Progress:===========================>  90%] [Cov:=>                                 3%][Progress:===========================>  91%] [Cov:=>                                 3%][Progress:===========================>  92%] [Cov:=>                                 3%][Progress:===========================>  93%] [Cov:=>                                 3%][Progress:===========================>  93%] [Cov:=>                                 3%][Progress:===========================>  93%] [Cov:=>                                 3%][Progress:============================> 94%] [Cov:=>                                 3%][Progress:============================> 94%] [Cov:=>                                 3%][Progress:============================> 95%] [Cov:=>                                 3%][Progress:============================> 95%] [Cov:=>                                 3%][Progress:============================> 96%] [Cov:=>                                 3%][Progress:============================> 96%] [Cov:=>                                 3%][Progress:=============================>97%] [Cov:=>                                 3%][Progress:=============================>98%] [Cov:=>                                 3%][Progress:=============================>98%] [Cov:=>                                 3%][Progress:=============================>99%] [Cov:=>                                 3%][Progress:=============================>99%] [Cov:=>                                 3%][Progress:==============================100%] [Cov:=>                                 3%]
* Search finished after 201s and 159 generations, 17417 statements, best individual has fitness: 1264.0
* Generated before the refinement 1 tests with total length 2
statement is: httpanalyzer.HttpAnalyzerApp()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class httpanalyzer.HttpAnalyzerApp
statement code is: HttpAnalyzerApp httpAnalyzerApp = new HttpAnalyzerApp()
statement is: httpanalyzer.HttpAnalyzerView(Lorg/jdesktop/application/SingleFrameApplication;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class httpanalyzer.HttpAnalyzerView
statement code is: HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(arg0)
test data is: HttpAnalyzerApp httpAnalyzerApp = new HttpAnalyzerApp();
HttpAnalyzerView httpAnalyzerView = new HttpAnalyzerView(httpAnalyzerApp);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        // Create a mock HTTP request and response to test the analysis of the request headers
        HttpServletRequest httpRequest = Mockito.mock(HttpServletRequest.class);
        Mockito.when(httpRequest.getHeader("User-Agent")).thenReturn("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36");
        Mockito.when(httpRequest.getHeader("Accept-Language")).thenReturn("en-US,en;q=0.5");
        Mockito.when(httpRequest.getHeader("Origin")).thenReturn("https://www.example.com");
        Mockito.when(httpRequest.getMethod()).thenReturn("GET");
        // Create a mock HTTP response to test the analysis of the response headers
        HttpServletResponse httpResponse = Mockito.mock(HttpServletResponse.class);
        Mockito.when(httpResponse.getHeader("Content-Type")).thenReturn("text/html; charset=UTF-8");
        Mockito.when(httpResponse.getStatus()).thenReturn(200);
        // Create a mock HTTP session to test the analysis of the session data
        HttpSession httpSession = Mockito.mock(HttpSession.class);
        Mockito.when(httpSession.getAttribute("user")).thenReturn(new User());
        // Call the method under test with the mock objects
        httpAnalyzerApp.analyzeRequest(httpRequest, httpResponse, httpSession);
    }
}
statement is: // Improved test data for the above code snippet
// Create a mock HTTP request and response to test the analysis of the request headers
HttpServletRequest httpRequest = Mockito.mock(HttpServletRequest.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.mock(HttpServletRequest.class) target is: Mockito method is: mock(java.lang.Class)
statement is: Mockito.when(httpRequest.getHeader("User-Agent")).thenReturn("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.when(httpRequest.getHeader("User-Agent")).thenReturn("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36") target is: Mockito.when(httpRequest.getHeader("User-Agent")) method is: thenReturn(java.lang.String)
statement is: Mockito.when(httpRequest.getHeader("Accept-Language")).thenReturn("en-US,en;q=0.5"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.when(httpRequest.getHeader("Accept-Language")).thenReturn("en-US,en;q=0.5") target is: Mockito.when(httpRequest.getHeader("Accept-Language")) method is: thenReturn(java.lang.String)
statement is: Mockito.when(httpRequest.getHeader("Origin")).thenReturn("https://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.when(httpRequest.getHeader("Origin")).thenReturn("https://www.example.com") target is: Mockito.when(httpRequest.getHeader("Origin")) method is: thenReturn(java.lang.String)
statement is: Mockito.when(httpRequest.getMethod()).thenReturn("GET"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.when(httpRequest.getMethod()).thenReturn("GET") target is: Mockito.when(httpRequest.getMethod()) method is: thenReturn(java.lang.String)
statement is: // Create a mock HTTP response to test the analysis of the response headers
HttpServletResponse httpResponse = Mockito.mock(HttpServletResponse.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.mock(HttpServletResponse.class) target is: Mockito method is: mock(java.lang.Class)
statement is: Mockito.when(httpResponse.getHeader("Content-Type")).thenReturn("text/html; charset=UTF-8"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.when(httpResponse.getHeader("Content-Type")).thenReturn("text/html; charset=UTF-8") target is: Mockito.when(httpResponse.getHeader("Content-Type")) method is: thenReturn(java.lang.String)
statement is: Mockito.when(httpResponse.getStatus()).thenReturn(200), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.when(httpResponse.getStatus()).thenReturn(200) target is: Mockito.when(httpResponse.getStatus()) method is: thenReturn(int)
statement is: // Create a mock HTTP session to test the analysis of the session data
HttpSession httpSession = Mockito.mock(HttpSession.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.mock(HttpSession.class) target is: Mockito method is: mock(java.lang.Class)
statement is: Mockito.when(httpSession.getAttribute("user")).thenReturn(new User()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.when(httpSession.getAttribute("user")).thenReturn(new User()) target is: Mockito.when(httpSession.getAttribute("user")) method is: thenReturn(User)
statement is: // Call the method under test with the mock objects
httpAnalyzerApp.analyzeRequest(httpRequest, httpResponse, httpSession), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Call the method under test with the mock objects
httpAnalyzerApp.analyzeRequest(httpRequest, httpResponse, httpSession) target is: httpAnalyzerApp method is: analyzeRequest(HttpServletRequest,HttpServletResponse,HttpSession)
* test suite isTestSuite: 1
Test 0: 
HttpAnalyzerApp httpAnalyzerApp = new HttpAnalyzerApp();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(httpAnalyzerApp);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


* Generated after the refinement and before minimization 1 tests with total length 2
* test suite isTestSuite: 1
Test 0: 
HttpAnalyzerApp httpAnalyzerApp = new HttpAnalyzerApp();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(httpAnalyzerApp);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


* Minimizing test suite
* test suite isTestSuite: 1
Test 0: 
HttpAnalyzerApp httpAnalyzerApp = new HttpAnalyzerApp();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(httpAnalyzerApp);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 2%
* Total number of goals: 200
* Number of covered goals: 3
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 12%
* Total number of goals: 960
* Number of covered goals: 118
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 16
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 8%
* Total number of goals: 12
* Number of covered goals: 1
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 2%
* Total number of goals: 200
* Number of covered goals: 3
* Generated 1 tests with total length 2
* Resulting test suite's coverage: 3% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HttpAnalyzerApp arg0 = new HttpAnalyzerApp();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(arg0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


** It was a parseable test case! 
refined test name is: testCreateHttpAnalyzerViewWithNullParentComponent
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:11:28.244 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar6159812619210122870.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:11:28.261 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6159812619210122870.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:11:28.354 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar6159812619210122870.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:11:28.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6159812619210122870.jar
[MASTER] 05:11:28.428 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 1
Test 0: 
HttpAnalyzerApp httpAnalyzerApp = new HttpAnalyzerApp();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(httpAnalyzerApp);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


* Minimizing test suite
* test suite isTestSuite: 1
Test 0: 
HttpAnalyzerApp httpAnalyzerApp = new HttpAnalyzerApp();
HttpAnalyzerView httpAnalyzerView = null;
try {
  httpAnalyzerView = new HttpAnalyzerView(httpAnalyzerApp);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
}


[MASTER] 05:11:29.020 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 2%
* Total number of goals: 136
* Number of covered goals: 3
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 13%
* Total number of goals: 885
* Number of covered goals: 118
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 16
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 8%
* Total number of goals: 12
* Number of covered goals: 1
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 2%
* Total number of goals: 136
* Number of covered goals: 3
* Generated 1 tests with total length 2
* Resulting test suite's coverage: 3% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 05:11:29.130 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 05:11:35.474 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:11:35.738 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar6159812619210122870.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:11:35.739 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6159812619210122870.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:11:35.850 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar6159812619210122870.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:11:35.851 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6159812619210122870.jar
* Writing tests to file
[MASTER] 05:11:35.852 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'HttpAnalyzerView_ESTest' to evosuite-tests
* Writing JUnit test case 'HttpAnalyzerView_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Done!

* Computation finished
