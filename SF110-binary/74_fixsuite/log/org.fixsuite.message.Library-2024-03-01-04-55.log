* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: org.fixsuite.message.Library
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/74_fixsuite/evosuite-files/evosuite.properties
* Connecting to master process on port 11940
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.fixsuite.message.Library
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 136
* Using seed 1709268903830
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 49 / 136
[Progress:========>                     27%] [Cov:===============>                   45%][Progress:=================>            57%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 103s and 5 generations, 3339 statements, best individual has fitness: 57.0
* Generated before the refinement 5 tests with total length 14
statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: getDictionaries()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<org.fixsuite.message.info.DictionaryInfo>
statement code is: List<DictionaryInfo> dictionaries = library.getDictionaries()
test data is: Library library = new Library();
library.getDictionaries();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        library.getDictionaries("John", "Smith");
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: library.getDictionaries("John", "Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: library.getDictionaries("John", "Smith") target is: library method is: getDictionaries(java.lang.String,java.lang.String)
TestCase is: Library library = new Library();

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: getDictionary(Ljava/lang/String;)Lorg/fixsuite/message/info/DictionaryInfo; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.fixsuite.message.info.DictionaryInfo
statement code is: DictionaryInfo dictionary = library.getDictionary("")
test data is: Library library = new Library();
library.getDictionary("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        library.getDictionary("Java");
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: library.getDictionary("Java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: library.getDictionary("Java") target is: library method is: getDictionary(java.lang.String)
source statement: org.fixsuite.message.Library()V callee: VariableReference: Statement 0, type org.fixsuite.message.Libraryindex is: 0
Matched Method is: getDictionary(Ljava/lang/String;)Lorg/fixsuite/message/info/DictionaryInfo;
TestCase is: Library library = new Library();
String string = "Java";
library.getDictionary(string);

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: loadFromDirectory(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean loadFromDirectory = library.loadFromDirectory("Supplied directory is empty.")
test data is: Library library = new Library();
library.loadFromDirectory("Supplied directory is empty.");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        library.loadFromDirectory("C:\\Users\\User\\Desktop\\Testing");// Improved test data: Using a realistic directory path to load the library from a non-empty directory. }}

    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: library.loadFromDirectory("C:\\Users\\User\\Desktop\\Testing")// Improved test data: Using a realistic directory path to load the library from a non-empty directory. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: library.loadFromDirectory("C:\\Users\\User\\Desktop\\Testing")// Improved test data: Using a realistic directory path to load the library from a non-empty directory. }}
 target is: library method is: loadFromDirectory(java.lang.String)
source statement: org.fixsuite.message.Library()V callee: VariableReference: Statement 0, type org.fixsuite.message.Libraryindex is: 0
Matched Method is: loadFromDirectory(Ljava/lang/String;)Z
TestCase is: Library library = new Library();
String string = "C:\\Users\\User\\Desktop\\Testing";
library.loadFromDirectory(string);

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: loadFromDirectory(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean loadFromDirectory = library.loadFromDirectory("Supplied directory is empty.")
test data is: Library library = new Library();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.");
FileSystemHandling.createFolder(evoSuiteFile);
library.loadFromDirectory("Supplied directory is empty.");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("C:\\Temp\\");
        FileSystemHandling.createFolder(evoSuiteFile);
        library.loadFromDirectory("C:\\Temp\\");
        FileSystemHandling.deleteFile(evoSuiteFile);
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("C:\\Temp\\"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: library.loadFromDirectory("C:\\Temp\\"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: library.loadFromDirectory("C:\\Temp\\") target is: library method is: loadFromDirectory(java.lang.String)
source statement: org.fixsuite.message.Library()V callee: VariableReference: Statement 0, type org.fixsuite.message.Libraryindex is: 0
Matched Method is: loadFromDirectory(Ljava/lang/String;)Z
statement is: FileSystemHandling.deleteFile(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.deleteFile(evoSuiteFile) target is: FileSystemHandling method is: deleteFile(EvoSuiteFile)
TestCase is: Library library = new Library();
EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "C:\\Temp\\";
library.loadFromDirectory(string);

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: loadFromDirectory(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean loadFromDirectory = library.loadFromDirectory("")
test data is: Library library = new Library();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.");
FileSystemHandling.createFolder(evoSuiteFile);
library.loadFromDirectory("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.");
        FileSystemHandling.createFolder(evoSuiteFile);
        library.loadFromDirectory("/path/to/a/non-empty/directory");
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: library.loadFromDirectory("/path/to/a/non-empty/directory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: library.loadFromDirectory("/path/to/a/non-empty/directory") target is: library method is: loadFromDirectory(java.lang.String)
source statement: org.fixsuite.message.Library()V callee: VariableReference: Statement 0, type org.fixsuite.message.Libraryindex is: 0
Matched Method is: loadFromDirectory(Ljava/lang/String;)Z
TestCase is: Library library = new Library();
EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "/path/to/a/non-empty/directory";
library.loadFromDirectory(string);

* test suite isTestSuite: 10
Test 0: 
Library library = new Library();
library.getDictionaries();
Test 1: 
Library library = new Library();
library.getDictionary("");
Test 2: 
Library library = new Library();
library.loadFromDirectory("Supplied directory is empty.");
Test 3: 
Library library = new Library();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.");
FileSystemHandling.createFolder(evoSuiteFile);
library.loadFromDirectory("Supplied directory is empty.");
Test 4: 
Library library = new Library();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.");
FileSystemHandling.createFolder(evoSuiteFile);
library.loadFromDirectory("");
Test 5: 
Library library = new Library();

Test 6: 
Library library = new Library();
library.getDictionary("Java");

Test 7: 
Library library = new Library();
library.loadFromDirectory("C:UsersUserDesktopTesting");

Test 8: 
Library library = new Library();
FileSystemHandling.createFolder((EvoSuiteFile) null);
library.loadFromDirectory("C:Temp");

Test 9: 
Library library = new Library();
FileSystemHandling.createFolder((EvoSuiteFile) null);
library.loadFromDirectory("/path/to/a/non-empty/directory");


* Generated after the refinement and before minimization 10 tests with total length 25
* test suite isTestSuite: 10
Test 0: 
Library library = new Library();
library.getDictionaries();
Test 1: 
Library library = new Library();
library.getDictionary("");
Test 2: 
Library library = new Library();
library.loadFromDirectory("Supplied directory is empty.");
Test 3: 
Library library = new Library();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.");
FileSystemHandling.createFolder(evoSuiteFile);
library.loadFromDirectory("Supplied directory is empty.");
Test 4: 
Library library = new Library();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.");
FileSystemHandling.createFolder(evoSuiteFile);
library.loadFromDirectory("");
Test 5: 
Library library = new Library();

Test 6: 
Library library = new Library();
library.getDictionary("Java");

Test 7: 
Library library = new Library();
library.loadFromDirectory("C:UsersUserDesktopTesting");

Test 8: 
Library library = new Library();
FileSystemHandling.createFolder((EvoSuiteFile) null);
library.loadFromDirectory("C:Temp");

Test 9: 
Library library = new Library();
FileSystemHandling.createFolder((EvoSuiteFile) null);
library.loadFromDirectory("/path/to/a/non-empty/directory");


* Minimizing test suite
* test suite isTestSuite: 5
Test 0: 
Library library = new Library();
library.getDictionaries();
Test 1: 
Library library = new Library();
library.getDictionary("Java");
Test 2: 
Library library = new Library();
library.loadFromDirectory("C:UsersUserDesktopTesting");
Test 3: 
Library library = new Library();
library.loadFromDirectory("");
Test 4: 
Library library = new Library();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Supplied directory is empty.");
FileSystemHandling.createFolder(evoSuiteFile);
library.loadFromDirectory("");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 49%
* Total number of goals: 35
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 51
* Number of covered goals: 36
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 11
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 49%
* Total number of goals: 35
* Number of covered goals: 17
* Generated 5 tests with total length 12
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Library library = new Library();
List<DictionaryInfo> dictionaries = library.getDictionaries();
assertEquals(0, dictionaries.size());


** It was a parseable test case! 
refined test name is: testGetDictionariesEmptyLibrary
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Library library = new Library();
DictionaryInfo dictionary = library.getDictionary("Java");
assertNull(dictionary);


** It was a parseable test case! 
refined test name is: testGetDictionaryForExistingDictionaryName
* Compiling Tests
refined test name is: testGetDictionaryInfo
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Library library = new Library();
boolean loadFromDirectory = library.loadFromDirectory("C:UsersUserDesktopTesting");
assertFalse(loadFromDirectory);


** It was a parseable test case! 
refined test name is: testLoadFromValidDirectoryPath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Library library = new Library();
boolean loadFromDirectory = library.loadFromDirectory("");
assertFalse(loadFromDirectory);


** It was a parseable test case! 
refined test name is: testLoadFromDirectory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Library library = new Library();
EvoSuiteFile arg0 = new EvoSuiteFile("Supplied directory is empty.");
FileSystemHandling.createFolder(arg0);
boolean loadFromDirectory = library.loadFromDirectory("");
assertTrue(loadFromDirectory);


** It was a parseable test case! 
refined test name is: testLoadFromEmptyDirectory
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:07.642 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7516720718048415947.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:07.666 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7516720718048415947.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:58:07.738 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7516720718048415947.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:07.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7516720718048415947.jar
[MASTER] 04:58:08.422 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7516720718048415947.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:08.425 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7516720718048415947.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:08.981 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7516720718048415947.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:08.984 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7516720718048415947.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:09.606 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7516720718048415947.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:09.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7516720718048415947.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
[MASTER] 04:58:11.019 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7516720718048415947.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:11.022 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7516720718048415947.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
[MASTER] 04:58:12.355 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7516720718048415947.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:12.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7516720718048415947.jar
* Writing tests to file
* Writing JUnit test case 'Library_ESTest' to evosuite-tests
** Write a test suite: 3 called: 0 to improve: false
* Done!

* Computation finished
