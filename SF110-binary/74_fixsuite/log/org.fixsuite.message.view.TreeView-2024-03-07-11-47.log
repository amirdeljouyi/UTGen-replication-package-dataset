* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: org.fixsuite.message.view.TreeView
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/74_fixsuite/evosuite-files/evosuite.properties
* Connecting to master process on port 7806
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:47:38.245 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:47:38.246 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:47:38.263 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:47:38.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:47:38.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:47:38.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 11:47:39.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 11:47:39.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 11:47:39.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 11:47:39.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 11:47:39.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 11:47:39.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 11:47:39.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 11:47:39.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 11:47:39.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 11:47:39.217 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 11:47:39.222 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.fixsuite.message.view.TreeView
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 306
* Using seed 1709812056689
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 109 / 306
[Progress:>                             1%] [Cov:==================>                54%][Progress:>                             3%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  38%] [Cov:=====================>             61%][Progress:===========>                  39%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][MASTER] 11:49:07.023 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 101s and 113 generations, 51504 statements, best individual has fitness: 169.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 72
* Number of covered goals: 24
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 155
* Number of covered goals: 86
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 86%
* Total number of goals: 7
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 32%
* Total number of goals: 72
* Number of covered goals: 23
* Generated 6 tests with total length 30
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'TreeView_ESTest' to evosuite-tests
* Done!

* Computation finished
