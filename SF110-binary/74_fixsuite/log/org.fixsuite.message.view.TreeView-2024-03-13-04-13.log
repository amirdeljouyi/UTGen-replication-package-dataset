* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.fixsuite.message.view.TreeView
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/74_fixsuite/evosuite-files/evosuite.properties
* Connecting to master process on port 7911
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:13:30.371 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:13:30.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:13:30.418 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:13:30.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:13:30.460 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:13:30.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:13:32.320 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 04:13:32.401 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 04:13:32.402 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 04:13:32.402 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 04:13:32.403 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 04:13:32.404 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 04:13:32.404 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 04:13:32.405 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 04:13:32.406 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 04:13:32.427 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 04:13:32.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.fixsuite.message.view.TreeView
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 306
* Using seed 1710303207597
* Starting evolution
* Initial Number of Goals in DynaMOSA = 109 / 306
[Progress:>                             2%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:===>                          10%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          12%] [Cov:=====================>             61%][Progress:===>                          13%] [Cov:=====================>             61%][Progress:====>                         14%] [Cov:=====================>             61%][Progress:====>                         15%] [Cov:=====================>             61%][Progress:====>                         16%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        17%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        18%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:========>                     29%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    32%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   34%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:==========>                   36%] [Cov:=====================>             61%][Progress:===========>                  37%] [Cov:=====================>             61%][Progress:===========>                  38%] [Cov:=====================>             61%][Progress:===========>                  39%] [Cov:=====================>             61%][Progress:===========>                  39%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:==================>           60%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          65%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:====================>         67%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             61%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        72%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       74%] [Cov:=====================>             61%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:=======================>      79%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     82%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][MASTER] 04:16:40.539 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 04:16:40.581 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:===========================>  93%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 201s and 146 generations, 79826 statements, best individual has fitness: 169.0
* Generated before the refinement 6 tests with total length 32
statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.view.TreeView
statement code is: TreeView treeView = new TreeView(arg0)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIICI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, 0, 1791L, 0, 0, '5', 0)
statement is: keyTyped(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: treeView.keyTyped(arg0)
test data is: Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyTyped(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        TreeView treeView = new TreeView(library);
        KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'A', 0);
        treeView.keyTyped(keyEvent);
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TreeView treeView = new TreeView(library), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'A', 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: treeView.keyTyped(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeView.keyTyped(keyEvent) target is: treeView method is: keyTyped(KeyEvent)
source statement: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V callee: VariableReference: Statement 1, type org.fixsuite.message.view.TreeViewindex is: 1
Matched Method is: keyTyped(Ljava/awt/event/KeyEvent;)V
TestCase is: Library library = new Library();
TreeView treeView = new TreeView(library);
int _int = 0;
long _long = 1791L;
int _int = 0;
int _int = 0;
char _char = 'A';
int _int = 0;
KeyEvent keyEvent = new KeyEvent(treeView, _int, _long, _int, _int, _char, _int);
treeView.keyTyped(keyEvent);

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.view.TreeView
statement code is: TreeView treeView = new TreeView(arg0)
statement is: javax.swing.tree.DefaultMutableTreeNode(Ljava/lang/Object;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.tree.DefaultMutableTreeNode
statement code is: DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(arg0, true)
statement is: javax.swing.JTree(Ljavax/swing/tree/TreeNode;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTree
statement code is: JTree jTree = new JTree(arg0, true)
statement is: defaultManager()Ljavax/swing/MenuSelectionManager; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.MenuSelectionManager
statement code is: MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager()
statement is: org.evosuite.testcase.statements.ArrayStatement@bb9208f9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.MenuElement;
statement code is: MenuElement[] menuElementArray = new MenuElement[2]
statement is: javax.swing.event.MenuKeyEvent(Ljava/awt/Component;IJIIC[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.event.MenuKeyEvent
statement code is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, 300, (-1), (-7066), 10, '.', arg6, arg7)
statement is: keyReleased(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: treeView.keyReleased(arg0)
test data is: Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyReleased(menuKeyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        TreeView treeView = new TreeView(library);
        DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode("Book1", true);
        JTree jTree = new JTree(defaultMutableTreeNode, true);
        MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
        MenuElement[] menuElementArray = new MenuElement[]{ new DefaultMutableTreeNode("Chapter1"), new DefaultMutableTreeNode("Chapter2") };
        MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, -1, -7066, 10, '.', menuElementArray, defaultManager);
        treeView.keyReleased(menuKeyEvent);
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TreeView treeView = new TreeView(library), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode("Book1", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTree jTree = new JTree(defaultMutableTreeNode, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: MenuSelectionManager.defaultManager() target is: MenuSelectionManager method is: defaultManager()
Matched Method is: defaultManager()Ljavax/swing/MenuSelectionManager;
statement is: MenuElement[] menuElementArray = new MenuElement[]{ new DefaultMutableTreeNode("Chapter1"), new DefaultMutableTreeNode("Chapter2") }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: MenuElement[] menuElementArray = new MenuElement[2] isAssignment: false Array: new MenuElement[]{ new DefaultMutableTreeNode("Chapter1"), new DefaultMutableTreeNode("Chapter2") } Elements: [new DefaultMutableTreeNode("Chapter1"), new DefaultMutableTreeNode("Chapter2")]
lengths: [2] []
statement is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, -1, -7066, 10, '.', menuElementArray, defaultManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: treeView.keyReleased(menuKeyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeView.keyReleased(menuKeyEvent) target is: treeView method is: keyReleased(MenuKeyEvent)
source statement: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V callee: VariableReference: Statement 1, type org.fixsuite.message.view.TreeViewindex is: 1
Matched Method is: keyReleased(Ljava/awt/event/KeyEvent;)V
TestCase is: Library library = new Library();
TreeView treeView = new TreeView(library);
String string = "Book1";
boolean _boolean = true;
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(string, _boolean);
MenuElement[] menuElementArray = true;
JTree jTree = new JTree(defaultMutableTreeNode, arg1);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
int _int = 300;
int _int = 10;
char _char = '.';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, _int, _int, _char, (int) defaultManager, '.', menuElementArray, (MenuSelectionManager) defaultMutableTreeNode);
treeView.keyReleased(menuKeyEvent);

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.view.TreeView
statement code is: TreeView treeView = new TreeView(arg0)
statement is: javax.swing.tree.DefaultMutableTreeNode(Ljava/lang/Object;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.tree.DefaultMutableTreeNode
statement code is: DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(arg0, true)
statement is: javax.swing.JTree(Ljavax/swing/tree/TreeNode;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JTree
statement code is: JTree jTree = new JTree(arg0, true)
statement is: defaultManager()Ljavax/swing/MenuSelectionManager; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.MenuSelectionManager
statement code is: MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager()
statement is: org.evosuite.testcase.statements.ArrayStatement@a1123a50 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljavax.swing.MenuElement;
statement code is: MenuElement[] menuElementArray = new MenuElement[2]
statement is: javax.swing.event.MenuKeyEvent(Ljava/awt/Component;IJIIC[Ljavax/swing/MenuElement;Ljavax/swing/MenuSelectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.event.MenuKeyEvent
statement code is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, 300, (-1), (-7066), 10, '.', arg6, arg7)
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: treeView.keyPressed(arg0)
test data is: Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyPressed(menuKeyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        TreeView treeView = new TreeView(library);
        DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
        JTree jTree = new JTree(defaultMutableTreeNode, true);
        MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
        MenuElement[] menuElementArray = new MenuElement[2];
        MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, -1, -7066, 10, '.', menuElementArray, defaultManager);
        treeView.keyPressed(menuKeyEvent);
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TreeView treeView = new TreeView(library), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTree jTree = new JTree(defaultMutableTreeNode, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: MenuSelectionManager.defaultManager() target is: MenuSelectionManager method is: defaultManager()
Matched Method is: defaultManager()Ljavax/swing/MenuSelectionManager;
statement is: MenuElement[] menuElementArray = new MenuElement[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: MenuElement[] menuElementArray = new MenuElement[2] isAssignment: false Array: new MenuElement[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljavax.swing.MenuElement; MenuElement[]
statement is: MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, -1, -7066, 10, '.', menuElementArray, defaultManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: treeView.keyPressed(menuKeyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeView.keyPressed(menuKeyEvent) target is: treeView method is: keyPressed(MenuKeyEvent)
source statement: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V callee: VariableReference: Statement 1, type org.fixsuite.message.view.TreeViewindex is: 1
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: Library library = new Library();
TreeView treeView = new TreeView(library);
boolean _boolean = true;
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, _boolean);
boolean _boolean = true;
MenuElement[] menuElementArray = new JTree(defaultMutableTreeNode, _boolean);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
int _int = 300;
int _int = 10;
char _char = '.';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(arg0, _int, _int, _char, (int) menuElementArray, (char) defaultManager, menuElementArray, (MenuSelectionManager) _boolean);
treeView.keyPressed(menuKeyEvent);

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.view.TreeView
statement code is: TreeView treeView = new TreeView(arg0)
statement is: valueChanged(Ljavax/swing/event/TreeSelectionEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: treeView.valueChanged((TreeSelectionEvent) null)
test data is: Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.valueChanged((TreeSelectionEvent) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        TreeView treeView = new TreeView(library);
        treeView.valueChanged(((TreeSelectionEvent) (null)));
        treeView.setExpandedState(true);
        treeView.getRoot().addChild("New Child");
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TreeView treeView = new TreeView(library), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: treeView.valueChanged(((TreeSelectionEvent) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeView.valueChanged(((TreeSelectionEvent) (null))) target is: treeView method is: valueChanged(TreeSelectionEvent)
source statement: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V callee: VariableReference: Statement 1, type org.fixsuite.message.view.TreeViewindex is: 1
Matched Method is: valueChanged(Ljavax/swing/event/TreeSelectionEvent;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: treeView.setExpandedState(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeView.setExpandedState(true) target is: treeView method is: setExpandedState(boolean)
statement is: treeView.getRoot().addChild("New Child"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeView.getRoot().addChild("New Child") target is: treeView.getRoot() method is: addChild(java.lang.String)
TestCase is: Library library = new Library();
TreeView treeView = new TreeView(library);
TreeSelectionEvent treeSelectionEvent = null;
treeView.valueChanged(treeSelectionEvent);

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.view.TreeView
statement code is: TreeView treeView = new TreeView(arg0)
statement is: javax.swing.text.StyledEditorKit$BoldAction()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.StyledEditorKit$BoldAction
statement code is: StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction()
statement is: java.awt.event.ActionEvent(Ljava/lang/Object;ILjava/lang/String;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.ActionEvent
statement code is: ActionEvent actionEvent = new ActionEvent(arg0, (-7066), "", 150)
statement is: actionPerformed(Ljava/awt/event/ActionEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: treeView.actionPerformed(arg0)
test data is: Library library = new Library();
TreeView treeView = new TreeView(library);
StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction();
ActionEvent actionEvent = new ActionEvent(styledEditorKit_BoldAction, (-7066), "", 150);
treeView.actionPerformed(actionEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        TreeView treeView = new TreeView(library);
        StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction();
        ActionEvent actionEvent = new ActionEvent(styledEditorKit_BoldAction, 0, "");
        treeView.actionPerformed(actionEvent);
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TreeView treeView = new TreeView(library), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ActionEvent actionEvent = new ActionEvent(styledEditorKit_BoldAction, 0, ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: treeView.actionPerformed(actionEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeView.actionPerformed(actionEvent) target is: treeView method is: actionPerformed(ActionEvent)
source statement: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V callee: VariableReference: Statement 1, type org.fixsuite.message.view.TreeViewindex is: 1
Matched Method is: actionPerformed(Ljava/awt/event/ActionEvent;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Library library = new Library();
TreeView treeView = new TreeView(library);
ActionEvent actionEvent = null;
treeView.actionPerformed(actionEvent);

statement is: org.fixsuite.message.Library()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.Library
statement code is: Library library = new Library()
statement is: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.fixsuite.message.view.TreeView
statement code is: TreeView treeView = new TreeView(arg0)
statement is: java.awt.event.KeyEvent(Ljava/awt/Component;IJIICI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.KeyEvent
statement code is: KeyEvent keyEvent = new KeyEvent(arg0, 0, 1791L, 0, 0, '5', 0)
statement is: keyPressed(Ljava/awt/event/KeyEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: treeView.keyPressed(arg0)
test data is: Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyPressed(keyEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Library library = new Library();
        TreeView treeView = new TreeView(library);
        KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'S', 0);// changed the value of '5' to 'S'

        treeView.keyPressed(keyEvent);
    }
}
statement is: Library library = new Library(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TreeView treeView = new TreeView(library), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'S', 0)// changed the value of '5' to 'S'
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: treeView.keyPressed(keyEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: treeView.keyPressed(keyEvent) target is: treeView method is: keyPressed(KeyEvent)
source statement: org.fixsuite.message.view.TreeView(Lorg/fixsuite/message/Library;)V callee: VariableReference: Statement 1, type org.fixsuite.message.view.TreeViewindex is: 1
Matched Method is: keyPressed(Ljava/awt/event/KeyEvent;)V
TestCase is: Library library = new Library();
TreeView treeView = new TreeView(library);
int _int = 0;
long _long = 1791L;
int _int = 0;
int _int = 0;
char _char = 'S';
int _int = 0;
KeyEvent keyEvent = new KeyEvent(treeView, _int, _long, _int, _int, _char, _int);
treeView.keyPressed(keyEvent);

* test suite isTestSuite: 12
Test 0: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyTyped(keyEvent);
Test 1: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyReleased(menuKeyEvent);
Test 2: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyPressed(menuKeyEvent);
Test 3: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.valueChanged((TreeSelectionEvent) null);
Test 4: 
Library library = new Library();
TreeView treeView = new TreeView(library);
StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction();
ActionEvent actionEvent = new ActionEvent(styledEditorKit_BoldAction, (-7066), "", 150);
treeView.actionPerformed(actionEvent);
Test 5: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyPressed(keyEvent);
Test 6: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'A', 0);
treeView.keyTyped(keyEvent);

Test 7: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode("Book1", true);
Boolean booleanArray = true;
JTree jTree = new JTree(defaultMutableTreeNode, (boolean) (Boolean) null);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
int _int = 300;
int _int = 10;
char _char = '.';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, _int, _int, _char, (int) defaultManager, '.', (MenuElement[]) booleanArray, (MenuSelectionManager) defaultMutableTreeNode);
treeView.keyReleased(menuKeyEvent);

Test 8: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTreeArray = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent((Component) null, 300, 10, '.', (int) menuElementArray, (char) defaultManager, (MenuElement[]) jTreeArray, (MenuSelectionManager) true);
treeView.keyPressed(menuKeyEvent);

Test 9: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.valueChanged((TreeSelectionEvent) null);

Test 10: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.actionPerformed((ActionEvent) null);

Test 11: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'S', 0);
treeView.keyPressed(keyEvent);


* Generated after the refinement and before minimization 12 tests with total length 65
* test suite isTestSuite: 12
Test 0: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyTyped(keyEvent);
Test 1: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyReleased(menuKeyEvent);
Test 2: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyPressed(menuKeyEvent);
Test 3: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.valueChanged((TreeSelectionEvent) null);
Test 4: 
Library library = new Library();
TreeView treeView = new TreeView(library);
StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction();
ActionEvent actionEvent = new ActionEvent(styledEditorKit_BoldAction, (-7066), "", 150);
treeView.actionPerformed(actionEvent);
Test 5: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyPressed(keyEvent);
Test 6: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'A', 0);
treeView.keyTyped(keyEvent);

Test 7: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode("Book1", true);
Boolean booleanArray = true;
JTree jTree = new JTree(defaultMutableTreeNode, (boolean) (Boolean) null);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
int _int = 300;
int _int = 10;
char _char = '.';
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, _int, _int, _char, (int) defaultManager, '.', (MenuElement[]) booleanArray, (MenuSelectionManager) defaultMutableTreeNode);
treeView.keyReleased(menuKeyEvent);

Test 8: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTreeArray = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent((Component) null, 300, 10, '.', (int) menuElementArray, (char) defaultManager, (MenuElement[]) jTreeArray, (MenuSelectionManager) true);
treeView.keyPressed(menuKeyEvent);

Test 9: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.valueChanged((TreeSelectionEvent) null);

Test 10: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.actionPerformed((ActionEvent) null);

Test 11: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'S', 0);
treeView.keyPressed(keyEvent);


* Minimizing test suite
* test suite isTestSuite: 6
Test 0: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'A', 0);
treeView.keyTyped(keyEvent);
Test 1: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyReleased(menuKeyEvent);
Test 2: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyPressed(menuKeyEvent);
Test 3: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.valueChanged((TreeSelectionEvent) null);
Test 4: 
Library library = new Library();
TreeView treeView = new TreeView(library);
StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction();
ActionEvent actionEvent = new ActionEvent(styledEditorKit_BoldAction, (-7066), "", 150);
treeView.actionPerformed(actionEvent);
Test 5: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, 'S', 0);
treeView.keyPressed(keyEvent);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 72
* Number of covered goals: 24
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 155
* Number of covered goals: 86
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 86%
* Total number of goals: 7
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 32%
* Total number of goals: 72
* Number of covered goals: 23
* Generated 6 tests with total length 32
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Library arg0 = new Library();
TreeView treeView = new TreeView(arg0);
treeView.valueChanged((TreeSelectionEvent) null);
assertFalse(treeView.isFocusTraversalPolicySet());


** It was a parseable test case! 
refined test name is: testValueChangeShouldNotSetFocusTraversalPolicy
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:20:45.461 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar907535384391618767.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:20:45.486 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907535384391618767.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:20:45.574 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar907535384391618767.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:20:45.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907535384391618767.jar
[MASTER] 04:20:46.294 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 6
Test 0: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyTyped(keyEvent);
Test 1: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyReleased(menuKeyEvent);
Test 2: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyPressed(menuKeyEvent);
Test 3: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.valueChanged((TreeSelectionEvent) null);
Test 4: 
Library library = new Library();
TreeView treeView = new TreeView(library);
StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction();
ActionEvent actionEvent = new ActionEvent(styledEditorKit_BoldAction, (-7066), "", 150);
treeView.actionPerformed(actionEvent);
Test 5: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyPressed(keyEvent);

* Minimizing test suite
* test suite isTestSuite: 6
Test 0: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyTyped(keyEvent);
Test 1: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyReleased(menuKeyEvent);
Test 2: 
Library library = new Library();
TreeView treeView = new TreeView(library);
DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode(treeView, true);
JTree jTree = new JTree(defaultMutableTreeNode, true);
MenuSelectionManager defaultManager = MenuSelectionManager.defaultManager();
MenuElement[] menuElementArray = new MenuElement[2];
MenuKeyEvent menuKeyEvent = new MenuKeyEvent(jTree, 300, (-1), (-7066), 10, '.', menuElementArray, defaultManager);
treeView.keyPressed(menuKeyEvent);
Test 3: 
Library library = new Library();
TreeView treeView = new TreeView(library);
treeView.valueChanged((TreeSelectionEvent) null);
Test 4: 
Library library = new Library();
TreeView treeView = new TreeView(library);
StyledEditorKit.BoldAction styledEditorKit_BoldAction = new StyledEditorKit.BoldAction();
ActionEvent actionEvent = new ActionEvent(styledEditorKit_BoldAction, (-7066), "", 150);
treeView.actionPerformed(actionEvent);
Test 5: 
Library library = new Library();
TreeView treeView = new TreeView(library);
KeyEvent keyEvent = new KeyEvent(treeView, 0, 1791L, 0, 0, '5', 0);
treeView.keyPressed(keyEvent);

[MASTER] 04:20:48.901 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 72
* Number of covered goals: 24
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 155
* Number of covered goals: 86
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 86%
* Total number of goals: 7
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 32%
* Total number of goals: 72
* Number of covered goals: 23
* Generated 6 tests with total length 32
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 04:20:48.973 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 04:20:59.129 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:20:59.778 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar907535384391618767.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:20:59.779 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907535384391618767.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:20:59.852 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar907535384391618767.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:20:59.853 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907535384391618767.jar
* Writing tests to file
[MASTER] 04:20:59.855 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'TreeView_ESTest' to evosuite-tests
* Writing JUnit test case 'TreeView_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Done!

* Computation finished
