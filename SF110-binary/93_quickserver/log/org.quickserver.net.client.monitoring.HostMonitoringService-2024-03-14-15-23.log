* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.quickserver.net.client.monitoring.HostMonitoringService
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/93_quickserver/evosuite-files/evosuite.properties
* Connecting to master process on port 2465
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:24:05.248 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:24:05.260 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:24:05.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:24:05.289 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:24:05.292 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:24:05.294 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:24:05.297 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:24:05.298 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:24:05.301 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:24:05.303 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:24:05.304 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:24:05.310 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:24:05.314 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:24:05.370 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:24:05.372 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class org.quickserver.net.client.monitoring.HostMonitoringService
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 324
* Using seed 1710429841397
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 112 / 324
[Progress:>                             1%] [Cov:=====================>             62%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            65%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:==========================>        77%][Progress:>                             2%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:===========================>       78%][Progress:>                             3%] [Cov:===========================>       78%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           7%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:==>                           9%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][Progress:===>                          10%] [Cov:=============================>     83%][MASTER] 15:24:27.934 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:===>                          13%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         14%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         15%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:====>                         16%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        17%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     84%][Progress:=====>                        18%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       20%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       22%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:======>                       23%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      24%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      25%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:=======>                      26%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     27%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    30%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    31%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    32%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:=========>                    33%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   34%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   35%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:==========>                   36%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  37%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  38%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:===========>                  39%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 42%] [Cov:=============================>     85%][Progress:============>                 43%] [Cov:=============================>     85%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    87%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         67%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         68%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:====================>         69%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        70%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        71%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        72%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:=====================>        73%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       74%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       75%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:======================>       76%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      77%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      78%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:=======================>      79%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     80%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     81%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   90%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%]
* Search finished after 201s and 1375 generations, 612426 statements, best individual has fitness: 26.0
* Generated before the refinement 18 tests with total length 107
statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: getHostMonitor()Lorg/quickserver/net/client/monitoring/HostMonitor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.quickserver.net.client.monitoring.HostMonitor
statement code is: HostMonitor hostMonitor = hostMonitoringService.getHostMonitor()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getHostMonitor();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        hostMonitoringService.getHostMonitor(100, "Test", true);
    }
}
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.getHostMonitor(100, "Test", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getHostMonitor(100, "Test", true) target is: hostMonitoringService method is: getHostMonitor(int,java.lang.String,boolean)
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();

statement is: monitor(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(false)
test data is: HostMonitoringService.monitor(false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        1.0 = $missing$;
        HostMonitoringService.monitor(true);// This change makes the test data more descriptive and representative of the situation being tested.

        2.0 = $missing$;
        HostMonitoringService.monitor("Production");// This change makes the test data more descriptive and representative of the situation being tested.

        3.0 = $missing$;
        HostMonitoringService.monitor(10);// This change makes the test data more descriptive and representative of the situation being tested. }}

    }
}
statement is: 1.0 = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: HostMonitoringService.monitor(true)// This change makes the test data more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(true)// This change makes the test data more descriptive and representative of the situation being tested.
 target is: HostMonitoringService method is: monitor(boolean)
Matched Method is: monitor(Z)V
statement is: 2.0 = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: HostMonitoringService.monitor("Production")// This change makes the test data more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor("Production")// This change makes the test data more descriptive and representative of the situation being tested.
 target is: HostMonitoringService method is: monitor(java.lang.String)
Matched Method is: monitor(Z)V
statement is: 3.0 = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: HostMonitoringService.monitor(10)// This change makes the test data more descriptive and representative of the situation being tested. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(10)// This change makes the test data more descriptive and representative of the situation being tested. }}
 target is: HostMonitoringService method is: monitor(int)
Matched Method is: monitor(Z)V
TestCase is: boolean _boolean = true;
HostMonitoringService.monitor(_boolean);
String string = "Production";
HostMonitoringService.monitor((boolean) string);
int _int = 10;
HostMonitoringService.monitor((boolean) _int);

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: getListnersList()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List listnersList = hostMonitoringService.getListnersList()
statement is: monitor()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor()
statement is: setIntervalInSec(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setIntervalInSec((-4))
statement is: getHostList()Lorg/quickserver/net/client/HostList; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.net.client.HostList
statement code is: HostList hostList = hostMonitoringService.getHostList()
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: getIntervalInSec()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int intervalInSec = hostMonitoringService.getIntervalInSec()
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: setCurrentTimeMillis(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: System.setCurrentTimeMillis(0L)
statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(true, "=<%No\"TH8wX}@0opDbo")
statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(false, "=<%No\"TH8wX}@0opDbo")
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getListnersList();
HostMonitoringService.monitor();
hostMonitoringService.setIntervalInSec((-4));
hostMonitoringService.getHostList();
HostMonitoringService.getSize();
hostMonitoringService.getIntervalInSec();
HostMonitoringService.getSize();
System.setCurrentTimeMillis(0L);
HostMonitoringService.monitor(true, "=<%No\"TH8wX}@0opDbo");
HostMonitoringService.monitor(false, "=<%No\"TH8wX}@0opDbo");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        hostMonitoringService.getListnersList();
        hostMonitoringService.monitor();
        hostMonitoringService.setIntervalInSec(4);
        hostMonitoringService.getHostList();
        hostMonitoringService.getSize();
        hostMonitoringService.getIntervalInSec();
        hostMonitoringService.getSize();
        System.setCurrentTimeMillis(1000L);
        hostMonitoringService.monitor(true, "https://www.example.com");
        hostMonitoringService.monitor(false, "https://www.example.com");
    }
}
statement is: // Improved test data
HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.getListnersList(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getListnersList() target is: hostMonitoringService method is: getListnersList()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: getListnersList()Ljava/util/List;
statement is: hostMonitoringService.monitor(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.monitor() target is: hostMonitoringService method is: monitor()
Matched Method is: monitor()V
statement is: hostMonitoringService.setIntervalInSec(4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setIntervalInSec(4) target is: hostMonitoringService method is: setIntervalInSec(int)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: setIntervalInSec(I)V
statement is: hostMonitoringService.getHostList(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getHostList() target is: hostMonitoringService method is: getHostList()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: getHostList()Lorg/quickserver/net/client/HostList;
statement is: hostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getSize() target is: hostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: hostMonitoringService.getIntervalInSec(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getIntervalInSec() target is: hostMonitoringService method is: getIntervalInSec()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: getIntervalInSec()I
statement is: hostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getSize() target is: hostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: System.setCurrentTimeMillis(1000L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.setCurrentTimeMillis(1000L) target is: System method is: setCurrentTimeMillis(long)
Matched Method is: setCurrentTimeMillis(J)V
statement is: hostMonitoringService.monitor(true, "https://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.monitor(true, "https://www.example.com") target is: hostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
statement is: hostMonitoringService.monitor(false, "https://www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.monitor(false, "https://www.example.com") target is: hostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getListnersList();
HostMonitoringService.monitor();
int _int = 4;
hostMonitoringService.setIntervalInSec(_int);
hostMonitoringService.getHostList();
HostMonitoringService.getSize();
hostMonitoringService.getIntervalInSec();
HostMonitoringService.getSize();
long _long = 1000L;
System.setCurrentTimeMillis(_long);
boolean _boolean = true;
String string = "https://www.example.com";
HostMonitoringService.monitor(_boolean, string);
boolean _boolean = false;
String string = "https://www.example.com";
HostMonitoringService.monitor(_boolean, string);

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: add(Lorg/quickserver/net/client/monitoring/HostMonitoringService;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.add(arg0)
statement is: add(Lorg/quickserver/net/client/monitoring/HostMonitoringService;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.add(arg0)
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.add(hostMonitoringService);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        hostMonitoringService.setId(1L);
        hostMonitoringService.setName("Production Host Monitoring Service");
        hostMonitoringService.setDescription("This is the production host monitoring service for our web application.");
        hostMonitoringService.setStatus(ACTIVE);
        hostMonitoringService.addHost("example1.com", 80, "HTTP");
        hostMonitoringService.addHost("www.example2.com", 443, "HTTPS");
        hostMonitoringService.addHost("api.example3.com", 8080, "API");
        hostMonitoringService.setFrequency(15);// in minutes

        hostMonitoringService.setTimeout(10);// in seconds }}

    }
}
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.setId(1L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setId(1L) target is: hostMonitoringService method is: setId(long)
statement is: hostMonitoringService.setName("Production Host Monitoring Service"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setName("Production Host Monitoring Service") target is: hostMonitoringService method is: setName(java.lang.String)
statement is: hostMonitoringService.setDescription("This is the production host monitoring service for our web application."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setDescription("This is the production host monitoring service for our web application.") target is: hostMonitoringService method is: setDescription(java.lang.String)
statement is: hostMonitoringService.setStatus(ACTIVE), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setStatus(ACTIVE) target is: hostMonitoringService method is: setStatus()
statement is: hostMonitoringService.addHost("example1.com", 80, "HTTP"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.addHost("example1.com", 80, "HTTP") target is: hostMonitoringService method is: addHost(java.lang.String,int,java.lang.String)
statement is: hostMonitoringService.addHost("www.example2.com", 443, "HTTPS"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.addHost("www.example2.com", 443, "HTTPS") target is: hostMonitoringService method is: addHost(java.lang.String,int,java.lang.String)
statement is: hostMonitoringService.addHost("api.example3.com", 8080, "API"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.addHost("api.example3.com", 8080, "API") target is: hostMonitoringService method is: addHost(java.lang.String,int,java.lang.String)
statement is: hostMonitoringService.setFrequency(15)// in minutes
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setFrequency(15)// in minutes
 target is: hostMonitoringService method is: setFrequency(int)
statement is: hostMonitoringService.setTimeout(10)// in seconds }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setTimeout(10)// in seconds }}
 target is: hostMonitoringService method is: setTimeout(int)
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();

statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(true, (String) null)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(false, "s};GY")
statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: mock(interface org.quickserver.net.client.monitoring.HostStateListener) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.quickserver.net.client.monitoring.HostStateListener
statement code is: HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer())
statement is: addHostStateListner(Lorg/quickserver/net/client/monitoring/HostStateListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.addHostStateListner(arg0)
statement is: monitor(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor("s};GY")
statement is: getLastCheckedOn()Ljava/util/Date; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.util.Date
statement code is: Date lastCheckedOn = hostMonitoringService.getLastCheckedOn()
statement is: mock(interface org.quickserver.net.client.monitoring.HostStateListener) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.quickserver.net.client.monitoring.HostStateListener
statement code is: HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer())
statement is: addHostStateListner(Lorg/quickserver/net/client/monitoring/HostStateListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.addHostStateListner(arg0)
statement is: setNextCheckOn(Ljava/util/Date;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setNextCheckOn((Date) null)
statement is: clear()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.clear()
statement is: getListnersList()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List listnersList = hostMonitoringService.getListnersList()
statement is: remove(Lorg/quickserver/net/client/monitoring/HostMonitoringService;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean remove = HostMonitoringService.remove(arg0)
statement is: setCurrentTimeMillis(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: System.setCurrentTimeMillis(0L)
statement is: getListnersList()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List listnersList = hostMonitoringService.getListnersList()
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom(17)
statement is: setCurrentTimeMillis(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: System.setCurrentTimeMillis((-932L))
statement is: getListnersList()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List listnersList = hostMonitoringService.getListnersList()
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
test data is: HostMonitoringService.monitor(true, (String) null);
HostMonitoringService.getSize();
HostMonitoringService.monitor(false, "s};GY");
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
HostMonitoringService.monitor("s};GY");
hostMonitoringService.getLastCheckedOn();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
hostMonitoringService.setNextCheckOn((Date) null);
HostMonitoringService.clear();
hostMonitoringService.getListnersList();
HostMonitoringService.remove(hostMonitoringService);
System.setCurrentTimeMillis(0L);
hostMonitoringService.getListnersList();
HostMonitoringService.getSize();
HostMonitoringService.getSize();
Random.setNextRandom(17);
System.setCurrentTimeMillis((-932L));
hostMonitoringService.getListnersList();
HostMonitoringService.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService.monitor(true, ((String) (null)));
        HostMonitoringService.getSize();
        HostMonitoringService.monitor(false, "s};GY");
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
        hostMonitoringService.addHostStateListner(hostStateListener);
        HostMonitoringService.monitor("s};GY");
        hostMonitoringService.getLastCheckedOn();
        HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
        hostMonitoringService.addHostStateListner(hostStateListener);
        hostMonitoringService.setNextCheckOn(((Date) (null)));
        HostMonitoringService.clear();
        hostMonitoringService.getListnersList();
        HostMonitoringService.remove(hostMonitoringService);
        System.setCurrentTimeMillis(0L);
        hostMonitoringService.getListnersList();
        HostMonitoringService.getSize();
        HostMonitoringService.getSize();
        Random.setNextRandom(17);
        System.setCurrentTimeMillis(-932L);
        hostMonitoringService.getListnersList();
        HostMonitoringService.getSize();
    }
}
statement is: HostMonitoringService.monitor(true, ((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(true, ((String) (null))) target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: HostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.getSize() target is: HostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: HostMonitoringService.monitor(false, "s};GY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(false, "s};GY") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(HostStateListener.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: HostStateListener argument is: HostStateListener.class
Matched Method is: mock(interface org.quickserver.net.client.monitoring.HostStateListener)
statement is: hostMonitoringService.addHostStateListner(hostStateListener), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.addHostStateListner(hostStateListener) target is: hostMonitoringService method is: addHostStateListner(HostStateListener)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
Matched Method is: addHostStateListner(Lorg/quickserver/net/client/monitoring/HostStateListener;)V
statement is: HostMonitoringService.monitor("s};GY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor("s};GY") target is: HostMonitoringService method is: monitor(java.lang.String)
Matched Method is: monitor(Ljava/lang/String;)V
statement is: hostMonitoringService.getLastCheckedOn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getLastCheckedOn() target is: hostMonitoringService method is: getLastCheckedOn()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
Matched Method is: getLastCheckedOn()Ljava/util/Date;
statement is: HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(HostStateListener.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: HostStateListener argument is: HostStateListener.class
Matched Method is: mock(interface org.quickserver.net.client.monitoring.HostStateListener)
statement is: hostMonitoringService.addHostStateListner(hostStateListener), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.addHostStateListner(hostStateListener) target is: hostMonitoringService method is: addHostStateListner(HostStateListener)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
Matched Method is: addHostStateListner(Lorg/quickserver/net/client/monitoring/HostStateListener;)V
statement is: hostMonitoringService.setNextCheckOn(((Date) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setNextCheckOn(((Date) (null))) target is: hostMonitoringService method is: setNextCheckOn(Date)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
Matched Method is: setNextCheckOn(Ljava/util/Date;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: HostMonitoringService.clear(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.clear() target is: HostMonitoringService method is: clear()
Matched Method is: clear()V
statement is: hostMonitoringService.getListnersList(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getListnersList() target is: hostMonitoringService method is: getListnersList()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
Matched Method is: getListnersList()Ljava/util/List;
statement is: HostMonitoringService.remove(hostMonitoringService), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.remove(hostMonitoringService) target is: HostMonitoringService method is: remove(HostMonitoringService)
Matched Method is: remove(Lorg/quickserver/net/client/monitoring/HostMonitoringService;)Z
statement is: System.setCurrentTimeMillis(0L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.setCurrentTimeMillis(0L) target is: System method is: setCurrentTimeMillis(long)
Matched Method is: setCurrentTimeMillis(J)V
statement is: hostMonitoringService.getListnersList(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getListnersList() target is: hostMonitoringService method is: getListnersList()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
Matched Method is: getListnersList()Ljava/util/List;
statement is: HostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.getSize() target is: HostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: HostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.getSize() target is: HostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: Random.setNextRandom(17), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(17) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
statement is: System.setCurrentTimeMillis(-932L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.setCurrentTimeMillis(-932L) target is: System method is: setCurrentTimeMillis(long)
Matched Method is: setCurrentTimeMillis(J)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: hostMonitoringService.getListnersList(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getListnersList() target is: hostMonitoringService method is: getListnersList()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 3, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 7
Matched Method is: getListnersList()Ljava/util/List;
statement is: HostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.getSize() target is: HostMonitoringService method is: getSize()
Matched Method is: getSize()I
TestCase is: boolean _boolean = true;
String string = null;
HostMonitoringService.monitor(_boolean, string);
int size = HostMonitoringService.getSize();
boolean _boolean = false;
String string = "s};GY";
HostMonitoringService.monitor(_boolean, string);
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
((HostMonitoringService) size).addHostStateListner(hostStateListener);
String string = "s};GY";
HostMonitoringService.monitor(string);
((HostMonitoringService) size).getLastCheckedOn();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
((HostMonitoringService) size).addHostStateListner(hostStateListener);
Date date = null;
((HostMonitoringService) size).setNextCheckOn(date);
HostMonitoringService.clear();
((HostMonitoringService) size).getListnersList();
HostMonitoringService.remove(hostMonitoringService);
long _long = 0L;
System.setCurrentTimeMillis(_long);
((HostMonitoringService) size).getListnersList();
HostMonitoringService.getSize();
HostMonitoringService.getSize();
int _int = 17;
Random.setNextRandom(_int);
long _long = null;
System.setCurrentTimeMillis(_long);
((HostMonitoringService) size).getListnersList();
HostMonitoringService.getSize();

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228))
statement is: setNextCheckOn(Ljava/util/Date;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setNextCheckOn(arg0)
statement is: monitor()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor()
statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: getNextCheckOn()Ljava/util/Date; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.util.Date
statement code is: Date nextCheckOn = hostMonitoringService.getNextCheckOn()
statement is: setNextCheckOn(Ljava/util/Date;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setNextCheckOn((Date) null)
statement is: getLastCheckedOn()Ljava/util/Date; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.util.Date
statement code is: Date lastCheckedOn = hostMonitoringService.getLastCheckedOn()
statement is: org.quickserver.net.client.HostList(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.HostList
statement code is: HostList hostList = new HostList("org.quickserver.net.client.Hos4")
statement is: java.util.LinkedList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedList<org.quickserver.net.client.monitoring.HostMonitoringService>
statement code is: LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setNextCheckOn(mockDate);
HostMonitoringService.monitor();
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getNextCheckOn();
hostMonitoringService.setNextCheckOn((Date) null);
hostMonitoringService.getLastCheckedOn();
HostList hostList = new HostList("org.quickserver.net.client.Hos4");
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        MockDate mockDate = new MockDate(new Date());
        hostMonitoringService.setNextCheckOn(mockDate);
        HostMonitoringService.monitor();
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        hostMonitoringService.getNextCheckOn();
        hostMonitoringService.setNextCheckOn(((Date) (null)));
        hostMonitoringService.getLastCheckedOn();
        HostList hostList = new HostList("host1", "host2", "host3");
        LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
        linkedList.add(new HostMonitoringService("host1", mockDate, mockDate));
        linkedList.add(new HostMonitoringService("host2", mockDate, mockDate));
        linkedList.add(new HostMonitoringService("host3", mockDate, mockDate));
    }
}
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockDate mockDate = new MockDate(new Date()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.setNextCheckOn(mockDate), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setNextCheckOn(mockDate) target is: hostMonitoringService method is: setNextCheckOn(MockDate)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: setNextCheckOn(Ljava/util/Date;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: HostMonitoringService.monitor(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor() target is: HostMonitoringService method is: monitor()
Matched Method is: monitor()V
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.getNextCheckOn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getNextCheckOn() target is: hostMonitoringService method is: getNextCheckOn()
statement is: hostMonitoringService.setNextCheckOn(((Date) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setNextCheckOn(((Date) (null))) target is: hostMonitoringService method is: setNextCheckOn(Date)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 4
Matched Method is: setNextCheckOn(Ljava/util/Date;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: hostMonitoringService.getLastCheckedOn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getLastCheckedOn() target is: hostMonitoringService method is: getLastCheckedOn()
statement is: HostList hostList = new HostList("host1", "host2", "host3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedList.add(new HostMonitoringService("host1", mockDate, mockDate)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedList.add(new HostMonitoringService("host1", mockDate, mockDate)) target is: linkedList method is: add(HostMonitoringService)
statement is: linkedList.add(new HostMonitoringService("host2", mockDate, mockDate)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedList.add(new HostMonitoringService("host2", mockDate, mockDate)) target is: linkedList method is: add(HostMonitoringService)
statement is: linkedList.add(new HostMonitoringService("host3", mockDate, mockDate)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedList.add(new HostMonitoringService("host3", mockDate, mockDate)) target is: linkedList method is: add(HostMonitoringService)
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = null;
hostMonitoringService.setNextCheckOn(mockDate);
HostMonitoringService.monitor();
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = null;
hostMonitoringService.setNextCheckOn(mockDate);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: java.util.LinkedList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedList<java.lang.Object>
statement code is: LinkedList<Object> linkedList = new LinkedList<Object>()
statement is: setListnersList(Ljava/util/List;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setListnersList(arg0)
statement is: getListnersList()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<E>
statement code is: List listnersList = hostMonitoringService.getListnersList()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
LinkedList<Object> linkedList = new LinkedList<Object>();
hostMonitoringService.setListnersList(linkedList);
hostMonitoringService.getListnersList();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        LinkedList<Object> linkedList = new LinkedList<>();
        linkedList.add("Server1");
        linkedList.add("Server2");
        hostMonitoringService.setListnersList(linkedList);
        System.out.println(hostMonitoringService.getListnersList());
    }
}
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LinkedList<Object> linkedList = new LinkedList<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: linkedList.add("Server1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedList.add("Server1") target is: linkedList method is: add(java.lang.String)
statement is: linkedList.add("Server2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: linkedList.add("Server2") target is: linkedList method is: add(java.lang.String)
statement is: hostMonitoringService.setListnersList(linkedList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setListnersList(linkedList) target is: hostMonitoringService method is: setListnersList(LinkedList)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: setListnersList(Ljava/util/List;)V
statement is: System.out.println(hostMonitoringService.getListnersList()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(hostMonitoringService.getListnersList()) target is: System.out method is: println(char[])
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
LinkedList<Object> linkedList = new LinkedList<Object>();
hostMonitoringService.setListnersList(linkedList);

statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(false, (String) null)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-2))
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-2485))
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-6))
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom(65)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: setCurrentTimeMillis(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: System.setCurrentTimeMillis(3633L)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom(65)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(true, (String) null)
statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(true, ",6;LjIb{<rfkvzV@JR\"")
test data is: HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2485));
Random.setNextRandom((-6));
Random.setNextRandom(65);
HostMonitoringService.getSize();
System.setCurrentTimeMillis(3633L);
Random.setNextRandom(65);
HostMonitoringService.getSize();
HostMonitoringService.monitor(true, (String) null);
HostMonitoringService.monitor(true, ",6;LjIb{<rfkvzV@JR\"");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService.monitor(false, "The quick brown fox jumps over the lazy dog.");
        Random.setNextRandom(1234);
        Random.setNextRandom(-9876);
        Random.setNextRandom(0);
        HostMonitoringService.getSize();
        System.setCurrentTimeMillis(3633L);
        Random.setNextRandom(65);
        HostMonitoringService.getSize();
        HostMonitoringService.monitor(true, "The quick brown fox jumps over the lazy dog.");
        HostMonitoringService.monitor(true, "The quick brown fox jumps over the lazy dog.");
    }
}
statement is: HostMonitoringService.monitor(false, "The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(false, "The quick brown fox jumps over the lazy dog.") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
statement is: Random.setNextRandom(1234), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(1234) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
statement is: Random.setNextRandom(-9876), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(-9876) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Random.setNextRandom(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(0) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
statement is: HostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.getSize() target is: HostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: System.setCurrentTimeMillis(3633L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.setCurrentTimeMillis(3633L) target is: System method is: setCurrentTimeMillis(long)
Matched Method is: setCurrentTimeMillis(J)V
statement is: Random.setNextRandom(65), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(65) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
statement is: HostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.getSize() target is: HostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: HostMonitoringService.monitor(true, "The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(true, "The quick brown fox jumps over the lazy dog.") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
statement is: HostMonitoringService.monitor(true, "The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(true, "The quick brown fox jumps over the lazy dog.") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
TestCase is: boolean _boolean = false;
String string = "The quick brown fox jumps over the lazy dog.";
HostMonitoringService.monitor(_boolean, string);
int _int = 1234;
Random.setNextRandom(_int);
int _int = null;
Random.setNextRandom(_int);
int _int = 0;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
long _long = 3633L;
System.setCurrentTimeMillis(_long);
int _int = 65;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
boolean _boolean = true;
String string = "The quick brown fox jumps over the lazy dog.";
HostMonitoringService.monitor(_boolean, string);
boolean _boolean = true;
String string = "The quick brown fox jumps over the lazy dog.";
HostMonitoringService.monitor(_boolean, string);

statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(false, "6{~b;83|(O;5B'c[?B")
test data is: HostMonitoringService.monitor(false, "6{~b;83|(O;5B'c[?B");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Replace "false" with a more meaningful value that indicates whether the host is online or offline
        HostMonitoringService.monitor(true, "6{~b;83|(O;5B'c[?B");
        // Replace "6{~b;83|(O;5B'c[?B" with a more descriptive and representative string that represents the host name or IP address being monitored
        HostMonitoringService.monitor(true, "example.com");
        // Replace "true" with a more meaningful value that indicates whether the host is currently experiencing issues or not
        HostMonitoringService.monitor(false, "example.com");
    }
}
statement is: // Replace "false" with a more meaningful value that indicates whether the host is online or offline
HostMonitoringService.monitor(true, "6{~b;83|(O;5B'c[?B"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Replace "false" with a more meaningful value that indicates whether the host is online or offline
HostMonitoringService.monitor(true, "6{~b;83|(O;5B'c[?B") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
statement is: // Replace "6{~b;83|(O;5B'c[?B" with a more descriptive and representative string that represents the host name or IP address being monitored
HostMonitoringService.monitor(true, "example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Replace "6{~b;83|(O;5B'c[?B" with a more descriptive and representative string that represents the host name or IP address being monitored
HostMonitoringService.monitor(true, "example.com") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
statement is: // Replace "true" with a more meaningful value that indicates whether the host is currently experiencing issues or not
HostMonitoringService.monitor(false, "example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Replace "true" with a more meaningful value that indicates whether the host is currently experiencing issues or not
HostMonitoringService.monitor(false, "example.com") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
TestCase is: boolean _boolean = true;
String string = "6{~b;83|(O;5B'c[?B";
HostMonitoringService.monitor(_boolean, string);
boolean _boolean = true;
String string = "example.com";
HostMonitoringService.monitor(_boolean, string);
boolean _boolean = false;
String string = "example.com";
HostMonitoringService.monitor(_boolean, string);

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: org.quickserver.net.client.HostList(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.HostList
statement code is: HostList hostList = new HostList("org.quickserver.net.client.Host")
statement is: org.quickserver.net.client.Host(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.Host
statement code is: Host host = new Host("org.quickserver.net.client.Host")
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: host.setName("org.quickserver.net.client.Host")
statement is: addDefault(Lorg/quickserver/net/client/Host;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostList.addDefault(arg0)
statement is: java.util.LinkedList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.LinkedList<org.quickserver.net.client.monitoring.HostMonitoringService>
statement code is: LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>()
statement is: add(Lorg/quickserver/net/client/HostList;Lorg/quickserver/net/client/monitoring/HostMonitor;ILjava/util/List;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.add(arg0, (HostMonitor) null, 2668, (List) arg3)
statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(false, "org.quickserver.net.client.Host")
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("org.quickserver.net.client.Host");
Host host = new Host("org.quickserver.net.client.Host");
host.setName("org.quickserver.net.client.Host");
hostList.addDefault(host);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
HostMonitoringService.add(hostList, (HostMonitor) null, 2668, (List) linkedList);
HostMonitoringService.monitor(false, "org.quickserver.net.client.Host");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        HostList hostList = new HostList("localhost");
        Host host = new Host("192.168.0.1");
        host.setName("My Local Machine");
        hostList.addDefault(host);
        LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
        HostMonitoringService.add(hostList, ((HostMonitor) (null)), 2668, ((List) (linkedList)));
        HostMonitoringService.monitor(false, "192.168.0.1");
    }
}
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HostList hostList = new HostList("localhost"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Host host = new Host("192.168.0.1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: host.setName("My Local Machine"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: host.setName("My Local Machine") target is: host method is: setName(java.lang.String)
source statement: org.quickserver.net.client.Host(Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.quickserver.net.client.Hostindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: hostList.addDefault(host), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostList.addDefault(host) target is: hostList method is: addDefault(Host)
source statement: org.quickserver.net.client.HostList(Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.quickserver.net.client.HostListindex is: 2
Matched Method is: addDefault(Lorg/quickserver/net/client/Host;)V
statement is: LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HostMonitoringService.add(hostList, ((HostMonitor) (null)), 2668, ((List) (linkedList))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.add(hostList, ((HostMonitor) (null)), 2668, ((List) (linkedList))) target is: HostMonitoringService method is: add(HostList,HostMonitor,int,List)
Matched Method is: add(Lorg/quickserver/net/client/HostList;Lorg/quickserver/net/client/monitoring/HostMonitor;ILjava/util/List;)V
i 3 Parameters size() 3 Num of Method Parameters: 4
statement is: HostMonitoringService.monitor(false, "192.168.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(false, "192.168.0.1") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
String string = "localhost";
HostList hostList = new HostList(string);
String string = "192.168.0.1";
Host host = new Host(string);
String string = "My Local Machine";
hostList.setName(string);
((HostList) string).addDefault(host);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
int _int = 2668;
LinkedList<HostMonitoringService> linkedList = null;
HostMonitoringService.add(hostList, (HostMonitor) _int, linkedList, (List) linkedList);
boolean _boolean = false;
String string = "192.168.0.1";
HostMonitoringService.monitor(_boolean, string);

statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(false, (String) null)
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-2))
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-2))
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-22))
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-79))
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: setCurrentTimeMillis(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: System.setCurrentTimeMillis((-79))
statement is: setNextRandom(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Random.setNextRandom((-22))
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = HostMonitoringService.getSize()
statement is: monitor(ZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.monitor(false, ",6;LjIb{<rfkvzV@JR\"")
test data is: HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2));
Random.setNextRandom((-22));
Random.setNextRandom((-79));
HostMonitoringService.getSize();
System.setCurrentTimeMillis((-79));
Random.setNextRandom((-22));
HostMonitoringService.getSize();
HostMonitoringService.monitor(false, ",6;LjIb{<rfkvzV@JR\"");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService.monitor(false, "0123456789abcdefghijklmnopqrstuvwxyz");
        Random.setNextRandom(((int) (1234)));
        Random.setNextRandom(((double) (1.234)));
        Random.setNextRandom("This is a test string.");
        Random.setNextRandom('c');
        HostMonitoringService.getSize();
        System.setCurrentTimeMillis(1597780660000L);
        Random.setNextRandom(((int) (2345)));
        HostMonitoringService.getSize();
        HostMonitoringService.monitor(false, "This is another test string.");
    }
}
statement is: HostMonitoringService.monitor(false, "0123456789abcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(false, "0123456789abcdefghijklmnopqrstuvwxyz") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
statement is: Random.setNextRandom(((int) (1234))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(((int) (1234))) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
statement is: Random.setNextRandom(((double) (1.234))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(((double) (1.234))) target is: Random method is: setNextRandom(double)
Matched Method is: setNextRandom(I)V
statement is: Random.setNextRandom("This is a test string."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom("This is a test string.") target is: Random method is: setNextRandom(java.lang.String)
Matched Method is: setNextRandom(I)V
statement is: Random.setNextRandom('c'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom('c') target is: Random method is: setNextRandom(char)
Matched Method is: setNextRandom(I)V
statement is: HostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.getSize() target is: HostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: System.setCurrentTimeMillis(1597780660000L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.setCurrentTimeMillis(1597780660000L) target is: System method is: setCurrentTimeMillis(long)
Matched Method is: setCurrentTimeMillis(J)V
statement is: Random.setNextRandom(((int) (2345))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Random.setNextRandom(((int) (2345))) target is: Random method is: setNextRandom(int)
Matched Method is: setNextRandom(I)V
statement is: HostMonitoringService.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.getSize() target is: HostMonitoringService method is: getSize()
Matched Method is: getSize()I
statement is: HostMonitoringService.monitor(false, "This is another test string."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.monitor(false, "This is another test string.") target is: HostMonitoringService method is: monitor(boolean,java.lang.String)
Matched Method is: monitor(ZLjava/lang/String;)V
TestCase is: boolean _boolean = false;
String string = "0123456789abcdefghijklmnopqrstuvwxyz";
HostMonitoringService.monitor(_boolean, string);
int _int = 1234;
Random.setNextRandom(_int);
double _double = 1.234;
Random.setNextRandom((int) _double);
String string = "This is a test string.";
Random.setNextRandom((int) string);
char _char = 'c';
Random.setNextRandom(_char);
HostMonitoringService.getSize();
long _long = 1597780660000L;
System.setCurrentTimeMillis(_long);
int _int = 2345;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
boolean _boolean = false;
String string = "This is another test string.";
HostMonitoringService.monitor(_boolean, string);

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: org.quickserver.net.client.HostList(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.HostList
statement code is: HostList hostList = new HostList("*YEn^~j#Q,9")
statement is: setHostList(Lorg/quickserver/net/client/HostList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setHostList(arg0)
statement is: getHostList()Lorg/quickserver/net/client/HostList; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.net.client.HostList
statement code is: HostList hostList = hostMonitoringService.getHostList()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("*YEn^~j#Q,9");
hostMonitoringService.setHostList(hostList);
hostMonitoringService.getHostList();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        HostList hostList = new HostList("192.168.0.1, 192.168.0.2, 192.168.0.3");
        hostMonitoringService.setHostList(hostList);
        hostMonitoringService.getHostList();
    }
}
statement is: // Improved test data
HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HostList hostList = new HostList("192.168.0.1, 192.168.0.2, 192.168.0.3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.setHostList(hostList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setHostList(hostList) target is: hostMonitoringService method is: setHostList(HostList)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: setHostList(Lorg/quickserver/net/client/HostList;)V
statement is: hostMonitoringService.getHostList(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getHostList() target is: hostMonitoringService method is: getHostList()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: getHostList()Lorg/quickserver/net/client/HostList;
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
String string = "192.168.0.1, 192.168.0.2, 192.168.0.3";
HostList hostList = new HostList(string);
hostMonitoringService.setHostList(hostList);
hostMonitoringService.getHostList();

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: org.quickserver.net.client.monitoring.impl.SocketMonitor()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.impl.SocketMonitor
statement code is: SocketMonitor socketMonitor = new SocketMonitor()
statement is: setHostMonitor(Lorg/quickserver/net/client/monitoring/HostMonitor;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setHostMonitor(arg0)
statement is: getHostMonitor()Lorg/quickserver/net/client/monitoring/HostMonitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.net.client.monitoring.impl.SocketMonitor
statement code is: SocketMonitor hostMonitor = (SocketMonitor)hostMonitoringService.getHostMonitor()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
SocketMonitor socketMonitor = new SocketMonitor();
hostMonitoringService.setHostMonitor(socketMonitor);
hostMonitoringService.getHostMonitor();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        HostMonitoringService hostMonitoringService = new HostMonitoringService("192.168.0.1", 80);
        SocketMonitor socketMonitor = new SocketMonitor(5, TimeUnit.SECONDS);
        hostMonitoringService.setHostMonitor(socketMonitor);
        assertEquals(socketMonitor, hostMonitoringService.getHostMonitor());
    }
}
statement is: // Improved test data
HostMonitoringService hostMonitoringService = new HostMonitoringService("192.168.0.1", 80), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SocketMonitor socketMonitor = new SocketMonitor(5, TimeUnit.SECONDS), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.setHostMonitor(socketMonitor), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setHostMonitor(socketMonitor) target is: hostMonitoringService method is: setHostMonitor(SocketMonitor)
statement is: assertEquals(socketMonitor, hostMonitoringService.getHostMonitor()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(socketMonitor, hostMonitoringService.getHostMonitor()) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: setIntervalInSec(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setIntervalInSec(65)
statement is: getIntervalInSec()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int intervalInSec = hostMonitoringService.getIntervalInSec()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec(65);
hostMonitoringService.getIntervalInSec();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        hostMonitoringService.setIntervalInSec(10);
        Assert.assertEquals(10, hostMonitoringService.getIntervalInSec());
    }
}
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.setIntervalInSec(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setIntervalInSec(10) target is: hostMonitoringService method is: setIntervalInSec(int)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: setIntervalInSec(I)V
statement is: Assert.assertEquals(10, hostMonitoringService.getIntervalInSec()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertEquals(10, hostMonitoringService.getIntervalInSec()) target is: Assert method is: assertEquals(int)
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
int _int = 10;
hostMonitoringService.setIntervalInSec(_int);

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: getIntervalInSec()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int intervalInSec = hostMonitoringService.getIntervalInSec()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getIntervalInSec();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        HostMonitoringService hostMonitoringService = new HostMonitoringService(10);// interval in seconds

        hostMonitoringService.getIntervalInSec();
    }
}
statement is: // Improved test data
HostMonitoringService hostMonitoringService = new HostMonitoringService(10)// interval in seconds
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.getIntervalInSec(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getIntervalInSec() target is: hostMonitoringService method is: getIntervalInSec()
statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228))
statement is: setLastCheckedOn(Ljava/util/Date;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setLastCheckedOn(arg0)
statement is: getLastCheckedOn()Ljava/util/Date; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate lastCheckedOn = (MockDate)hostMonitoringService.getLastCheckedOn()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setLastCheckedOn(mockDate);
hostMonitoringService.getLastCheckedOn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        MockDate mockDate = new MockDate(2018, 11, 6, 7, 30);
        hostMonitoringService.setLastCheckedOn(mockDate);
        hostMonitoringService.getLastCheckedOn();
    }
}
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockDate mockDate = new MockDate(2018, 11, 6, 7, 30), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.setLastCheckedOn(mockDate), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setLastCheckedOn(mockDate) target is: hostMonitoringService method is: setLastCheckedOn(MockDate)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: setLastCheckedOn(Ljava/util/Date;)V
statement is: hostMonitoringService.getLastCheckedOn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getLastCheckedOn() target is: hostMonitoringService method is: getLastCheckedOn()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: getLastCheckedOn()Ljava/util/Date;
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
int _int = 2018;
int _int = 11;
int _int = 6;
int _int = 7;
int _int = 30;
MockDate mockDate = new MockDate(_int, _int, _int, _int, _int);
hostMonitoringService.setLastCheckedOn(mockDate);
hostMonitoringService.getLastCheckedOn();

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228))
statement is: setNextCheckOn(Ljava/util/Date;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: hostMonitoringService.setNextCheckOn(arg0)
statement is: getNextCheckOn()Ljava/util/Date; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate nextCheckOn = (MockDate)hostMonitoringService.getNextCheckOn()
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setNextCheckOn(mockDate);
hostMonitoringService.getNextCheckOn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        MockDate mockDate = new MockDate(1990, 12, 31, 23, 59);
        hostMonitoringService.setNextCheckOn(mockDate);
        hostMonitoringService.getNextCheckOn();
    }
}
statement is: HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockDate mockDate = new MockDate(1990, 12, 31, 23, 59), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.setNextCheckOn(mockDate), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setNextCheckOn(mockDate) target is: hostMonitoringService method is: setNextCheckOn(MockDate)
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: setNextCheckOn(Ljava/util/Date;)V
statement is: hostMonitoringService.getNextCheckOn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.getNextCheckOn() target is: hostMonitoringService method is: getNextCheckOn()
source statement: org.quickserver.net.client.monitoring.HostMonitoringService()V callee: VariableReference: Statement 0, type org.quickserver.net.client.monitoring.HostMonitoringServiceindex is: 0
Matched Method is: getNextCheckOn()Ljava/util/Date;
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
int _int = 1990;
int _int = 12;
int _int = 31;
int _int = 23;
int _int = 59;
MockDate mockDate = new MockDate(_int, _int, _int, _int, _int);
hostMonitoringService.setNextCheckOn(mockDate);
hostMonitoringService.getNextCheckOn();

statement is: org.quickserver.net.client.monitoring.HostMonitoringService()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.client.monitoring.HostMonitoringService
statement code is: HostMonitoringService hostMonitoringService = new HostMonitoringService()
statement is: add(Lorg/quickserver/net/client/monitoring/HostMonitoringService;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: HostMonitoringService.add(arg0)
statement is: remove(Lorg/quickserver/net/client/monitoring/HostMonitoringService;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean remove = HostMonitoringService.remove(arg0)
test data is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.remove(hostMonitoringService);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        HostMonitoringService hostMonitoringService = new HostMonitoringService();
        hostMonitoringService.setId(12345);
        hostMonitoringService.setHostName("example.com");
        hostMonitoringService.setStatus(UP);
        HostMonitoringService.add(hostMonitoringService);
        HostMonitoringService.remove(hostMonitoringService);
    }
}
statement is: // Improved test data
HostMonitoringService hostMonitoringService = new HostMonitoringService(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hostMonitoringService.setId(12345), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setId(12345) target is: hostMonitoringService method is: setId(int)
statement is: hostMonitoringService.setHostName("example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setHostName("example.com") target is: hostMonitoringService method is: setHostName(java.lang.String)
statement is: hostMonitoringService.setStatus(UP), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hostMonitoringService.setStatus(UP) target is: hostMonitoringService method is: setStatus()
statement is: HostMonitoringService.add(hostMonitoringService), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.add(hostMonitoringService) target is: HostMonitoringService method is: add(HostMonitoringService)
Matched Method is: add(Lorg/quickserver/net/client/monitoring/HostMonitoringService;)V
statement is: HostMonitoringService.remove(hostMonitoringService), class spoon.support.reflect.code.CtInvocationImpl
invocation is: HostMonitoringService.remove(hostMonitoringService) target is: HostMonitoringService method is: remove(HostMonitoringService)
Matched Method is: remove(Lorg/quickserver/net/client/monitoring/HostMonitoringService;)Z
TestCase is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.remove(hostMonitoringService);

* test suite isTestSuite: 34
Test 0: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getHostMonitor();
Test 1: 
HostMonitoringService.monitor(false);
Test 2: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getListnersList();
HostMonitoringService.monitor();
hostMonitoringService.setIntervalInSec((-4));
hostMonitoringService.getHostList();
HostMonitoringService.getSize();
hostMonitoringService.getIntervalInSec();
HostMonitoringService.getSize();
System.setCurrentTimeMillis(0L);
HostMonitoringService.monitor(true, "=<%No\"TH8wX}@0opDbo");
HostMonitoringService.monitor(false, "=<%No\"TH8wX}@0opDbo");
Test 3: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.add(hostMonitoringService);
Test 4: 
HostMonitoringService.monitor(true, (String) null);
HostMonitoringService.getSize();
HostMonitoringService.monitor(false, "s};GY");
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
HostMonitoringService.monitor("s};GY");
hostMonitoringService.getLastCheckedOn();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
hostMonitoringService.setNextCheckOn((Date) null);
HostMonitoringService.clear();
hostMonitoringService.getListnersList();
HostMonitoringService.remove(hostMonitoringService);
System.setCurrentTimeMillis(0L);
hostMonitoringService.getListnersList();
HostMonitoringService.getSize();
HostMonitoringService.getSize();
Random.setNextRandom(17);
System.setCurrentTimeMillis((-932L));
hostMonitoringService.getListnersList();
HostMonitoringService.getSize();
Test 5: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setNextCheckOn(mockDate);
HostMonitoringService.monitor();
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getNextCheckOn();
hostMonitoringService.setNextCheckOn((Date) null);
hostMonitoringService.getLastCheckedOn();
HostList hostList = new HostList("org.quickserver.net.client.Hos4");
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
Test 6: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
LinkedList<Object> linkedList = new LinkedList<Object>();
hostMonitoringService.setListnersList(linkedList);
hostMonitoringService.getListnersList();
Test 7: 
HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2485));
Random.setNextRandom((-6));
Random.setNextRandom(65);
HostMonitoringService.getSize();
System.setCurrentTimeMillis(3633L);
Random.setNextRandom(65);
HostMonitoringService.getSize();
HostMonitoringService.monitor(true, (String) null);
HostMonitoringService.monitor(true, ",6;LjIb{<rfkvzV@JR\"");
Test 8: 
HostMonitoringService.monitor(false, "6{~b;83|(O;5B'c[?B");
Test 9: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("org.quickserver.net.client.Host");
Host host = new Host("org.quickserver.net.client.Host");
host.setName("org.quickserver.net.client.Host");
hostList.addDefault(host);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
HostMonitoringService.add(hostList, (HostMonitor) null, 2668, (List) linkedList);
HostMonitoringService.monitor(false, "org.quickserver.net.client.Host");
Test 10: 
HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2));
Random.setNextRandom((-22));
Random.setNextRandom((-79));
HostMonitoringService.getSize();
System.setCurrentTimeMillis((-79));
Random.setNextRandom((-22));
HostMonitoringService.getSize();
HostMonitoringService.monitor(false, ",6;LjIb{<rfkvzV@JR\"");
Test 11: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("*YEn^~j#Q,9");
hostMonitoringService.setHostList(hostList);
hostMonitoringService.getHostList();
Test 12: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
SocketMonitor socketMonitor = new SocketMonitor();
hostMonitoringService.setHostMonitor(socketMonitor);
hostMonitoringService.getHostMonitor();
Test 13: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec(65);
hostMonitoringService.getIntervalInSec();
Test 14: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getIntervalInSec();
Test 15: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setLastCheckedOn(mockDate);
hostMonitoringService.getLastCheckedOn();
Test 16: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setNextCheckOn(mockDate);
hostMonitoringService.getNextCheckOn();
Test 17: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.remove(hostMonitoringService);
Test 18: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();

Test 19: 
HostMonitoringService.monitor(true);
HostMonitoringService.monitor((boolean) "Production");
int _int = 10;
HostMonitoringService.monitor((boolean) _int);

Test 20: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getListnersList();
HostMonitoringService.monitor();
hostMonitoringService.setIntervalInSec(4);
hostMonitoringService.getHostList();
HostMonitoringService.getSize();
hostMonitoringService.getIntervalInSec();
HostMonitoringService.getSize();
System.setCurrentTimeMillis(1000L);
HostMonitoringService.monitor(true, "https://www.example.com");
HostMonitoringService.monitor(false, "https://www.example.com");

Test 21: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();

Test 22: 
HostMonitoringService.monitor(true, (String) null);
int size = HostMonitoringService.getSize();
HostMonitoringService.monitor(false, "s};GY");
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
((HostMonitoringService)1).addHostStateListner(hostStateListener);
String string = "s};GY";
HostMonitoringService.monitor(string);
((HostMonitoringService) size).getLastCheckedOn();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
((HostMonitoringService) size).addHostStateListner(hostStateListener);
Date date = null;
((HostMonitoringService) size).setNextCheckOn(date);
HostMonitoringService.clear();
((HostMonitoringService) size).getListnersList();
HostMonitoringService.remove(hostMonitoringService);
long _long = 0L;
System.setCurrentTimeMillis(_long);
((HostMonitoringService) size).getListnersList();
HostMonitoringService.getSize();
HostMonitoringService.getSize();
int _int = 17;
Random.setNextRandom(_int);
long _long = null;
System.setCurrentTimeMillis(_long);
((HostMonitoringService) size).getListnersList();
HostMonitoringService.getSize();

Test 23: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setNextCheckOn((Date) null);
HostMonitoringService.monitor();
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setNextCheckOn((Date) null);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();

Test 24: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
LinkedList<Object> linkedList = new LinkedList<Object>();
hostMonitoringService.setListnersList(linkedList);

Test 25: 
HostMonitoringService.monitor(false, "The quick brown fox jumps over the lazy dog.");
Random.setNextRandom(1234);
Random.setNextRandom((int) (Integer) null);
int _int = 0;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
long _long = 3633L;
System.setCurrentTimeMillis(_long);
int _int = 65;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
boolean _boolean = true;
String string = "The quick brown fox jumps over the lazy dog.";
HostMonitoringService.monitor(_boolean, string);
boolean _boolean = true;
String string = "The quick brown fox jumps over the lazy dog.";
HostMonitoringService.monitor(_boolean, string);

Test 26: 
HostMonitoringService.monitor(true, "6{~b;83|(O;5B'c[?B");
HostMonitoringService.monitor(true, "example.com");
HostMonitoringService.monitor(false, "example.com");

Test 27: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
String string = "localhost";
HostList hostList = new HostList("localhost");
Host host = new Host("192.168.0.1");
hostList.setName("My Local Machine");
((HostList) string).addDefault(host);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
int _int = 2668;
LinkedList<HostMonitoringService> linkedList = null;
HostMonitoringService.add(hostList, (HostMonitor) _int, linkedList, (List) linkedList);
boolean _boolean = false;
String string = "192.168.0.1";
HostMonitoringService.monitor(_boolean, string);

Test 28: 
HostMonitoringService.monitor(false, "0123456789abcdefghijklmnopqrstuvwxyz");
Random.setNextRandom(1234);
Random.setNextRandom((int) 1.234);
String string = "This is a test string.";
Random.setNextRandom((int) string);
char _char = 'c';
Random.setNextRandom(_char);
HostMonitoringService.getSize();
long _long = 1597780660000L;
System.setCurrentTimeMillis(_long);
int _int = 2345;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
boolean _boolean = false;
String string = "This is another test string.";
HostMonitoringService.monitor(_boolean, string);

Test 29: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("192.168.0.1, 192.168.0.2, 192.168.0.3");
hostMonitoringService.setHostList(hostList);
hostMonitoringService.getHostList();

Test 30: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec(10);

Test 31: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate(2018, 11, 6, 7, 30);
hostMonitoringService.setLastCheckedOn(mockDate);
hostMonitoringService.getLastCheckedOn();

Test 32: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate(1990, 12, 31, 23, 59);
hostMonitoringService.setNextCheckOn(mockDate);
hostMonitoringService.getNextCheckOn();

Test 33: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.remove(hostMonitoringService);


* Generated after the refinement and before minimization 34 tests with total length 226
* test suite isTestSuite: 34
Test 0: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getHostMonitor();
Test 1: 
HostMonitoringService.monitor(false);
Test 2: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getListnersList();
HostMonitoringService.monitor();
hostMonitoringService.setIntervalInSec((-4));
hostMonitoringService.getHostList();
HostMonitoringService.getSize();
hostMonitoringService.getIntervalInSec();
HostMonitoringService.getSize();
System.setCurrentTimeMillis(0L);
HostMonitoringService.monitor(true, "=<%No\"TH8wX}@0opDbo");
HostMonitoringService.monitor(false, "=<%No\"TH8wX}@0opDbo");
Test 3: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.add(hostMonitoringService);
Test 4: 
HostMonitoringService.monitor(true, (String) null);
HostMonitoringService.getSize();
HostMonitoringService.monitor(false, "s};GY");
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
HostMonitoringService.monitor("s};GY");
hostMonitoringService.getLastCheckedOn();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
hostMonitoringService.setNextCheckOn((Date) null);
HostMonitoringService.clear();
hostMonitoringService.getListnersList();
HostMonitoringService.remove(hostMonitoringService);
System.setCurrentTimeMillis(0L);
hostMonitoringService.getListnersList();
HostMonitoringService.getSize();
HostMonitoringService.getSize();
Random.setNextRandom(17);
System.setCurrentTimeMillis((-932L));
hostMonitoringService.getListnersList();
HostMonitoringService.getSize();
Test 5: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setNextCheckOn(mockDate);
HostMonitoringService.monitor();
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getNextCheckOn();
hostMonitoringService.setNextCheckOn((Date) null);
hostMonitoringService.getLastCheckedOn();
HostList hostList = new HostList("org.quickserver.net.client.Hos4");
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
Test 6: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
LinkedList<Object> linkedList = new LinkedList<Object>();
hostMonitoringService.setListnersList(linkedList);
hostMonitoringService.getListnersList();
Test 7: 
HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2485));
Random.setNextRandom((-6));
Random.setNextRandom(65);
HostMonitoringService.getSize();
System.setCurrentTimeMillis(3633L);
Random.setNextRandom(65);
HostMonitoringService.getSize();
HostMonitoringService.monitor(true, (String) null);
HostMonitoringService.monitor(true, ",6;LjIb{<rfkvzV@JR\"");
Test 8: 
HostMonitoringService.monitor(false, "6{~b;83|(O;5B'c[?B");
Test 9: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("org.quickserver.net.client.Host");
Host host = new Host("org.quickserver.net.client.Host");
host.setName("org.quickserver.net.client.Host");
hostList.addDefault(host);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
HostMonitoringService.add(hostList, (HostMonitor) null, 2668, (List) linkedList);
HostMonitoringService.monitor(false, "org.quickserver.net.client.Host");
Test 10: 
HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2));
Random.setNextRandom((-22));
Random.setNextRandom((-79));
HostMonitoringService.getSize();
System.setCurrentTimeMillis((-79));
Random.setNextRandom((-22));
HostMonitoringService.getSize();
HostMonitoringService.monitor(false, ",6;LjIb{<rfkvzV@JR\"");
Test 11: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("*YEn^~j#Q,9");
hostMonitoringService.setHostList(hostList);
hostMonitoringService.getHostList();
Test 12: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
SocketMonitor socketMonitor = new SocketMonitor();
hostMonitoringService.setHostMonitor(socketMonitor);
hostMonitoringService.getHostMonitor();
Test 13: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec(65);
hostMonitoringService.getIntervalInSec();
Test 14: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getIntervalInSec();
Test 15: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setLastCheckedOn(mockDate);
hostMonitoringService.getLastCheckedOn();
Test 16: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setNextCheckOn(mockDate);
hostMonitoringService.getNextCheckOn();
Test 17: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.remove(hostMonitoringService);
Test 18: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();

Test 19: 
HostMonitoringService.monitor(true);
HostMonitoringService.monitor((boolean) "Production");
int _int = 10;
HostMonitoringService.monitor((boolean) _int);

Test 20: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getListnersList();
HostMonitoringService.monitor();
hostMonitoringService.setIntervalInSec(4);
hostMonitoringService.getHostList();
HostMonitoringService.getSize();
hostMonitoringService.getIntervalInSec();
HostMonitoringService.getSize();
System.setCurrentTimeMillis(1000L);
HostMonitoringService.monitor(true, "https://www.example.com");
HostMonitoringService.monitor(false, "https://www.example.com");

Test 21: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();

Test 22: 
HostMonitoringService.monitor(true, (String) null);
int size = HostMonitoringService.getSize();
HostMonitoringService.monitor(false, "s};GY");
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
((HostMonitoringService)1).addHostStateListner(hostStateListener);
String string = "s};GY";
HostMonitoringService.monitor(string);
((HostMonitoringService) size).getLastCheckedOn();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
((HostMonitoringService) size).addHostStateListner(hostStateListener);
Date date = null;
((HostMonitoringService) size).setNextCheckOn(date);
HostMonitoringService.clear();
((HostMonitoringService) size).getListnersList();
HostMonitoringService.remove(hostMonitoringService);
long _long = 0L;
System.setCurrentTimeMillis(_long);
((HostMonitoringService) size).getListnersList();
HostMonitoringService.getSize();
HostMonitoringService.getSize();
int _int = 17;
Random.setNextRandom(_int);
long _long = null;
System.setCurrentTimeMillis(_long);
((HostMonitoringService) size).getListnersList();
HostMonitoringService.getSize();

Test 23: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setNextCheckOn((Date) null);
HostMonitoringService.monitor();
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setNextCheckOn((Date) null);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();

Test 24: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
LinkedList<Object> linkedList = new LinkedList<Object>();
hostMonitoringService.setListnersList(linkedList);

Test 25: 
HostMonitoringService.monitor(false, "The quick brown fox jumps over the lazy dog.");
Random.setNextRandom(1234);
Random.setNextRandom((int) (Integer) null);
int _int = 0;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
long _long = 3633L;
System.setCurrentTimeMillis(_long);
int _int = 65;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
boolean _boolean = true;
String string = "The quick brown fox jumps over the lazy dog.";
HostMonitoringService.monitor(_boolean, string);
boolean _boolean = true;
String string = "The quick brown fox jumps over the lazy dog.";
HostMonitoringService.monitor(_boolean, string);

Test 26: 
HostMonitoringService.monitor(true, "6{~b;83|(O;5B'c[?B");
HostMonitoringService.monitor(true, "example.com");
HostMonitoringService.monitor(false, "example.com");

Test 27: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
String string = "localhost";
HostList hostList = new HostList("localhost");
Host host = new Host("192.168.0.1");
hostList.setName("My Local Machine");
((HostList) string).addDefault(host);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
int _int = 2668;
LinkedList<HostMonitoringService> linkedList = null;
HostMonitoringService.add(hostList, (HostMonitor) _int, linkedList, (List) linkedList);
boolean _boolean = false;
String string = "192.168.0.1";
HostMonitoringService.monitor(_boolean, string);

Test 28: 
HostMonitoringService.monitor(false, "0123456789abcdefghijklmnopqrstuvwxyz");
Random.setNextRandom(1234);
Random.setNextRandom((int) 1.234);
String string = "This is a test string.";
Random.setNextRandom((int) string);
char _char = 'c';
Random.setNextRandom(_char);
HostMonitoringService.getSize();
long _long = 1597780660000L;
System.setCurrentTimeMillis(_long);
int _int = 2345;
Random.setNextRandom(_int);
HostMonitoringService.getSize();
boolean _boolean = false;
String string = "This is another test string.";
HostMonitoringService.monitor(_boolean, string);

Test 29: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("192.168.0.1, 192.168.0.2, 192.168.0.3");
hostMonitoringService.setHostList(hostList);
hostMonitoringService.getHostList();

Test 30: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec(10);

Test 31: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate(2018, 11, 6, 7, 30);
hostMonitoringService.setLastCheckedOn(mockDate);
hostMonitoringService.getLastCheckedOn();

Test 32: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate(1990, 12, 31, 23, 59);
hostMonitoringService.setNextCheckOn(mockDate);
hostMonitoringService.getNextCheckOn();

Test 33: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.remove(hostMonitoringService);


* Minimizing test suite
* test suite isTestSuite: 29
Test 0: 
HostMonitoringService.monitor(true, "6{~b;83|(O;5B'c[?B");
Test 1: 
HostMonitoringService.monitor(true);
Test 2: 
HostMonitoringService.monitor("s};GY");
Test 3: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getListnersList();
Test 4: 
HostMonitoringService.getSize();
Test 5: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.remove(hostMonitoringService);
Test 6: 
HostMonitoringService.clear();
Test 7: 
HostMonitoringService.monitor();
Test 8: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.add(hostMonitoringService);
Test 9: 
HostMonitoringService.monitor(false);
Test 10: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("org.quickserver.net.client.Host");
Host host = new Host("org.quickserver.net.client.Host");
host.setName("org.quickserver.net.client.Host");
hostList.addDefault(host);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
HostMonitoringService.add(hostList, (HostMonitor) null, 2668, (List) linkedList);
HostMonitoringService.monitor(false, "org.quickserver.net.client.Host");
Test 11: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
Test 12: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getNextCheckOn();
Test 13: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getIntervalInSec();
Test 14: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getHostList();
Test 15: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setLastCheckedOn(mockDate);
hostMonitoringService.getLastCheckedOn();
Test 16: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getLastCheckedOn();
Test 17: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate mockDate = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setNextCheckOn(mockDate);
hostMonitoringService.getNextCheckOn();
Test 18: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
SocketMonitor socketMonitor = new SocketMonitor();
hostMonitoringService.setHostMonitor(socketMonitor);
hostMonitoringService.getHostMonitor();
Test 19: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.getHostMonitor();
Test 20: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
LinkedList<Object> linkedList = new LinkedList<Object>();
hostMonitoringService.setListnersList(linkedList);
hostMonitoringService.getListnersList();
Test 21: 
HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2));
Random.setNextRandom((-22));
Random.setNextRandom((-79));
HostMonitoringService.getSize();
System.setCurrentTimeMillis((-79));
Random.setNextRandom((-22));
HostMonitoringService.getSize();
HostMonitoringService.monitor(false, ",6;LjIb{<rfkvzV@JR\"");
Test 22: 
HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2485));
Random.setNextRandom((-6));
Random.setNextRandom(65);
HostMonitoringService.getSize();
System.setCurrentTimeMillis(3633L);
Random.setNextRandom(65);
HostMonitoringService.getSize();
HostMonitoringService.monitor(true, (String) null);
HostMonitoringService.monitor(true, ",6;LjIb{<rfkvzV@JR\"");
Test 23: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("org.quickserver.net.client.Host");
Host host = new Host("org.quickserver.net.client.Host");
host.setName("org.quickserver.net.client.Host");
hostList.addDefault(host);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
HostMonitoringService.monitor(false, "org.quickserver.net.client.Host");
Test 24: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("*YEn^~j#Q,9");
hostMonitoringService.setHostList(hostList);
hostMonitoringService.getHostList();
Test 25: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec((-4));
hostMonitoringService.getIntervalInSec();
Test 26: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec(65);
hostMonitoringService.getIntervalInSec();
Test 27: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener hostStateListener = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
hostMonitoringService.addHostStateListner(hostStateListener);
hostMonitoringService.getListnersList();
Test 28: 
HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitoringService.add(hostMonitoringService);
HostMonitoringService.remove(hostMonitoringService);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 72%
* Total number of goals: 74
* Number of covered goals: 53
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 131
* Number of covered goals: 105
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 86%
* Total number of goals: 22
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 74
* Number of covered goals: 56
* Generated 29 tests with total length 98
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 40%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService.monitor(true, "6{~b;83|(O;5B'c[?B");

** It was a parseable test case! 
refined test name is: testStartMonitoringServiceWithValidConfiguration
* Compiling Tests
refined test name is: testGetValidResponse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService.monitor(true);

** It was a parseable test case! 
refined test name is: testEnableAndMonitorHost
* Compiling Tests
refined test name is: testEnableAndMonitorHost
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService.monitor("s};GY");

** It was a parseable test case! 
refined test name is: testMonitoringServicemonitor
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
List listnersList = hostMonitoringService.getListnersList();
assertNull(listnersList);


** It was a parseable test case! 
refined test name is: testGetListenersListReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int size = HostMonitoringService.getSize();
assertEquals(0, size);


** It was a parseable test case! 
refined test name is: testGetSizeWhenEmptyList
* Compiling Tests
refined test name is: testGetSizeOnEmptyListOfHosts
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService arg0 = new HostMonitoringService();
boolean remove = HostMonitoringService.remove(arg0);
assertFalse(remove);


** It was a parseable test case! 
refined test name is: testRemoveHostReturnsTrue
* Compiling Tests
refined test name is: testRemoveHostFromMonitoringService
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService.clear();

** It was a parseable test case! 
refined test name is: testClearMethodShouldClearAllHostsFromCache
* Compiling Tests
refined test name is: testClearShouldRemoveAllHostsFromCache
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService.monitor();

** It was a parseable test case! 
refined test name is: testMonitoringServiceDetectsDownHost
* Compiling Tests
refined test name is: testDetectHostDown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService arg0 = new HostMonitoringService();
HostMonitoringService.add(arg0);
HostMonitoringService.add(arg0);
assertEquals(1, arg0.getSize());


** It was a parseable test case! 
refined test name is: testAddSameHostTwiceIdempotency
* Compiling Tests
refined test name is: testAddidempotency
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService.monitor(false);

** It was a parseable test case! 
refined test name is: testNotifyRelevantPartiesOnHostRestart
* Compiling Tests
refined test name is: testHostRestartDetection
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
Date nextCheckOn = hostMonitoringService.getNextCheckOn();
assertNull(nextCheckOn);


** It was a parseable test case! 
refined test name is: testGetNextCheckOnWhenNotSetReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
int intervalInSec = hostMonitoringService.getIntervalInSec();
assertEquals(0, intervalInSec);


** It was a parseable test case! 
refined test name is: testGetIntervalInSecReturnsNonZeroValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = hostMonitoringService.getHostList();
assertNull(hostList);


** It was a parseable test case! 
refined test name is: testGetHostListReturnsEmptyListWhenNoActiveHosts
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate arg0 = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setLastCheckedOn(arg0);
Date lastCheckedOn = hostMonitoringService.getLastCheckedOn();
assertEquals("Sun Dec 20 14:52:00 GMT 522", lastCheckedOn.toString());


** It was a parseable test case! 
refined test name is: testGetLastCheckedOnReturnsExpectedDateString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
Date lastCheckedOn = hostMonitoringService.getLastCheckedOn();
assertNull(lastCheckedOn);


** It was a parseable test case! 
refined test name is: testGetLastCheckedOnNoPreviousChecks
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
MockDate arg0 = new MockDate((-2228), (-2228), (-2228), (-2228), (-2228));
hostMonitoringService.setNextCheckOn(arg0);
Date nextCheckOn = hostMonitoringService.getNextCheckOn();
assertEquals("Sun Dec 20 14:52:00 GMT 522", nextCheckOn.toString());


** It was a parseable test case! 
refined test name is: testNextCheckOnDateInPast
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
SocketMonitor arg0 = new SocketMonitor();
hostMonitoringService.setHostMonitor(arg0);
HostMonitor hostMonitor = hostMonitoringService.getHostMonitor();
assertSame(hostMonitor, arg0);


** It was a parseable test case! 
refined test name is: testSetHostMonitor
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostMonitor hostMonitor = hostMonitoringService.getHostMonitor();
assertNull(hostMonitor);


** It was a parseable test case! 
refined test name is: testGetHostMonitorWhenNotInitialized
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
LinkedList<Object> arg0 = new LinkedList<Object>();
hostMonitoringService.setListnersList(arg0);
List listnersList = hostMonitoringService.getListnersList();
assertEquals(0, listnersList.size());


** It was a parseable test case! 
refined test name is: setListenersTest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2));
Random.setNextRandom((-22));
Random.setNextRandom((-79));
HostMonitoringService.getSize();
System.setCurrentTimeMillis((-79));
Random.setNextRandom((-22));
HostMonitoringService.getSize();
HostMonitoringService.monitor(false, ",6;LjIb{<rfkvzV@JR\"");

** It was a parseable test case! 
refined test name is: testGetSizeAfterResetSeed
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService.monitor(false, (String) null);
Random.setNextRandom((-2));
Random.setNextRandom((-2485));
Random.setNextRandom((-6));
Random.setNextRandom(65);
HostMonitoringService.getSize();
System.setCurrentTimeMillis(3633L);
Random.setNextRandom(65);
HostMonitoringService.getSize();
HostMonitoringService.monitor(true, (String) null);
HostMonitoringService.monitor(true, ",6;LjIb{<rfkvzV@JR\"");

** It was a parseable test case! 
refined test name is: testHostCacheSizewhenMaxSizeIsNegativeOrPositive
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList hostList = new HostList("org.quickserver.net.client.Host");
Host arg0 = new Host("org.quickserver.net.client.Host");
arg0.setName("org.quickserver.net.client.Host");
hostList.addDefault(arg0);
LinkedList<HostMonitoringService> linkedList = new LinkedList<HostMonitoringService>();
HostMonitoringService.monitor(false, "org.quickserver.net.client.Host");

** It was a parseable test case! 
refined test name is: testMonitoring
* Compiling Tests
refined test name is: testMonitoringServicemonitorFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostList arg0 = new HostList("*YEn^~j#Q,9");
hostMonitoringService.setHostList(arg0);
HostList hostList = hostMonitoringService.getHostList();
assertSame(hostList, arg0);


** It was a parseable test case! 
refined test name is: testSetHostListValidInputSetsHostList
* Compiling Tests
refined test name is: testSetHostList
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec((-4));
int intervalInSec = hostMonitoringService.getIntervalInSec();
assertEquals((-4), intervalInSec);


** It was a parseable test case! 
refined test name is: testSetInvalidInterval
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
hostMonitoringService.setIntervalInSec(65);
int intervalInSec = hostMonitoringService.getIntervalInSec();
assertEquals(65, intervalInSec);


** It was a parseable test case! 
refined test name is: testSetIntervalInSecUpdatesValueCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService hostMonitoringService = new HostMonitoringService();
HostStateListener arg0 = mock(HostStateListener.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(arg0).toString();
hostMonitoringService.addHostStateListner(arg0);
List listnersList = hostMonitoringService.getListnersList();
assertEquals(1, listnersList.size());


** It was a parseable test case! 
refined test name is: testAddHostStateListener
* Compiling Tests
refined test name is: testAddHostStateListener
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HostMonitoringService arg0 = new HostMonitoringService();
HostMonitoringService.add(arg0);
boolean remove = HostMonitoringService.remove(arg0);
assertTrue(remove);


** It was a parseable test case! 
refined test name is: testRemoveHostSuccess
* Compiling Tests
refined test name is: testRemoveHostFromHostMonitoringService
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:00.028 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:00.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:00.219 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:00.221 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:00.335 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:00.336 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:00.548 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:00.550 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:00.719 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:00.720 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:00.881 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:00.882 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:00.988 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:00.990 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:01.114 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:01.116 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:01.287 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:01.288 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:01.422 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:01.424 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:01.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:01.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:01.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:01.619 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:01.766 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:01.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:01.857 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:01.858 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:01.972 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:01.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:02.080 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:02.081 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:02.194 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:02.195 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:02.352 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:02.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:02.471 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:02.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:02.634 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:02.640 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:02.734 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:02.735 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:02.836 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:02.836 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:02.905 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:02.906 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:03.046 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:03.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:01:03.202 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:03.203 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:03.368 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:03.369 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:01:03.537 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:03.539 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 5 called: 3 to improve: false
** Write a test suite: 6 called: 4 to improve: false
** Write a test suite: 7 called: 5 to improve: false
** Write a test suite: 8 called: 6 to improve: false
** Write a test suite: 9 called: 7 to improve: false
** Write a test suite: 21 called: 8 to improve: false
** Write a test suite: 22 called: 9 to improve: false
** Write a test suite: 25 called: 10 to improve: false
** Write a test suite: 26 called: 11 to improve: false
[MASTER] 19:01:04.450 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:04.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 5 called: 3 to improve: false
** Write a test suite: 17 called: 4 to improve: false
** Write a test suite: 18 called: 5 to improve: false
** Write a test suite: 19 called: 6 to improve: false
** Write a test suite: 20 called: 7 to improve: false
** Write a test suite: 21 called: 8 to improve: false
** Write a test suite: 22 called: 9 to improve: false
** Write a test suite: 25 called: 10 to improve: false
** Write a test suite: 26 called: 11 to improve: false
[MASTER] 19:01:05.438 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar4896087129347013068.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:01:05.454 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4896087129347013068.jar
[MASTER] 19:01:06.452 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
[MASTER] 19:01:08.797 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Computation finished
