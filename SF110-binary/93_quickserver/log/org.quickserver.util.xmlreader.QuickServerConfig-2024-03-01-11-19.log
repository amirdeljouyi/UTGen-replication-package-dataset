* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: org.quickserver.util.xmlreader.QuickServerConfig
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/93_quickserver/evosuite-files/evosuite.properties
* Connecting to master process on port 4777
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:19:47.061 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:19:47.063 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:19:47.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 11:19:47.270 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:19:47.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:19:47.285 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:19:47.746 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.net.SocketOption
[MASTER] 11:19:47.835 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Supplier
* Finished analyzing classpath
* Generating tests for class org.quickserver.util.xmlreader.QuickServerConfig
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 295
* Using seed 1709291984193
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 180 / 295
[Progress:>                             1%] [Cov:==========================>        76%][Progress:>                             1%] [Cov:============================>      81%][Progress:>                             2%] [Cov:============================>      81%][Progress:>                             2%] [Cov:============================>      82%][Progress:>                             2%] [Cov:=============================>     83%][Progress:>                             3%] [Cov:=============================>     83%][Progress:>                             3%] [Cov:=============================>     83%][Progress:>                             3%] [Cov:=============================>     84%][Progress:>                             3%] [Cov:=============================>     84%][Progress:>                             3%] [Cov:=============================>     84%][Progress:>                             3%] [Cov:=============================>     84%][Progress:=>                            4%] [Cov:=============================>     84%][Progress:=>                            4%] [Cov:=============================>     84%][Progress:=>                            4%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     85%][Progress:=>                            5%] [Cov:=============================>     85%][Progress:=>                            5%] [Cov:=============================>     85%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      24%] [Cov:===============================>   89%][Progress:=======>                      25%] [Cov:===============================>   89%][Progress:=======>                      25%] [Cov:===============================>   89%][Progress:=======>                      25%] [Cov:===============================>   89%][Progress:=======>                      25%] [Cov:===============================>   89%][Progress:=======>                      26%] [Cov:===============================>   89%][Progress:=======>                      26%] [Cov:===============================>   89%][Progress:=======>                      26%] [Cov:===============================>   89%][Progress:=======>                      26%] [Cov:===============================>   89%][Progress:========>                     27%] [Cov:===============================>   89%][Progress:========>                     27%] [Cov:===============================>   89%][Progress:========>                     27%] [Cov:===============================>   89%][Progress:========>                     27%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     28%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:========>                     29%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    30%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    31%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    32%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:=========>                    33%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   34%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   35%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:==========>                   36%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  37%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             55%] [Cov:===============================>   89%][Progress:================>             55%] [Cov:===============================>   89%][Progress:================>             55%] [Cov:===============================>   89%][Progress:================>             55%] [Cov:===============================>   89%][Progress:================>             55%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         69%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%]
* Search finished after 101s and 374 generations, 80410 statements, best individual has fitness: 28.0
* Generated before the refinement 42 tests with total length 144
statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.InitServerHooks()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = new InitServerHooks()
statement is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setInitServerHooks(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("2MndQ(x#gv3oT")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("2MndQ(x#gv3oT");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        InitServerHooks initServerHooks = new InitServerHooks();
        quickServerConfig.setInitServerHooks(initServerHooks);
        quickServerConfig.toXML("");// empty string as input }}

    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InitServerHooks initServerHooks = new InitServerHooks(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setInitServerHooks(initServerHooks), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setInitServerHooks(initServerHooks) target is: quickServerConfig method is: setInitServerHooks(InitServerHooks)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V
statement is: quickServerConfig.toXML("")// empty string as input }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("")// empty string as input }}
 target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
String string = "";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.QSAdminServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig()
statement is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setQSAdminServerConfig(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples.
        quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig("localhost", 12345));
        quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples.
quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig("localhost", 12345)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples.
quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig("localhost", 12345)) target is: quickServerConfig method is: setQSAdminServerConfig(QSAdminServerConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = null;
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
String string = "org.quickserver.util.xmlreader.QSAdminServerConfig";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getConfigFile()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String configFile = quickServerConfig.getConfigFile()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        return "server_config.json";
    }
}
statement is: return "server_config.json", class spoon.support.reflect.code.CtReturnImpl
statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.ApplicationConfiguration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration()
statement is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationConfiguration(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("\t<charset>")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("\t<charset>");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
        quickServerConfig.setApplicationConfiguration(applicationConfiguration);
        quickServerConfig.toXML("\t<charset>UTF-8");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationConfiguration(applicationConfiguration), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationConfiguration(applicationConfiguration) target is: quickServerConfig method is: setApplicationConfiguration(ApplicationConfiguration)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V
statement is: quickServerConfig.toXML("\t<charset>UTF-8"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("\t<charset>UTF-8") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
String string = "\t<charset>UTF-8";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = quickServerConfig.toString()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("2MndQ(x#gv3oT")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setSecurityManagerClass(string);
quickServerConfig.toXML("2MndQ(x#gv3oT");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        String string = "com.example.security.CustomSecurityManager";
        quickServerConfig.setSecurityManagerClass(string);
        quickServerConfig.toXML("2MndQ(x#gv3oT");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String string = "com.example.security.CustomSecurityManager", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: quickServerConfig.setSecurityManagerClass(string), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setSecurityManagerClass(string) target is: quickServerConfig method is: setSecurityManagerClass(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setSecurityManagerClass(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("2MndQ(x#gv3oT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("2MndQ(x#gv3oT") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "com.example.security.CustomSecurityManager";
quickServerConfig.setSecurityManagerClass(string);
String string = "2MndQ(x#gv3oT";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass((String) null)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass("</bind-address>\n")
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = quickServerConfig.toString()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("</bind-address>\n");
quickServerConfig.toString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
        quickServerConfig.toString();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager") target is: quickServerConfig method is: setSecurityManagerClass(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setSecurityManagerClass(Ljava/lang/String;)V
statement is: quickServerConfig.toString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toString() target is: quickServerConfig method is: toString()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toString()Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "com.example.security.CustomSecurityManager";
quickServerConfig.setSecurityManagerClass(string);
quickServerConfig.toString();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setBindAddr(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setBindAddr("d'tOe<")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML((String) null)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setBindAddr("d'tOe<");
quickServerConfig.toXML((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setBindAddr("192.168.0.1");
        quickServerConfig.toXML("<server><bind-address>192.168.0.1</bind-address></server>");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setBindAddr("192.168.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setBindAddr("192.168.0.1") target is: quickServerConfig method is: setBindAddr(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setBindAddr(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("<server><bind-address>192.168.0.1</bind-address></server>"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("<server><bind-address>192.168.0.1</bind-address></server>") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "192.168.0.1";
quickServerConfig.setBindAddr(string);
String string = "<server><bind-address>192.168.0.1</bind-address></server>";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.net.qsadmin.CommandHandler()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.qsadmin.CommandHandler
statement code is: CommandHandler commandHandler = new CommandHandler()
statement is: setClientEventHandler(Lorg/quickserver/net/server/ClientEventHandler;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientEventHandler((ClientEventHandler) arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("2MndQ(x#gv3oT")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
CommandHandler commandHandler = new CommandHandler();
quickServerConfig.setClientEventHandler((ClientEventHandler) commandHandler);
quickServerConfig.toXML("2MndQ(x#gv3oT");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        CommandHandler commandHandler = new CommandHandler();
        quickServerConfig.setClientEventHandler(new ClientEventHandler() {
            @Override
            public void handleClientEvent(ClientEvent event) {
                // Handle client event
            }
        });
        quickServerConfig.toXML("8x7dq(w#gv3oT");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CommandHandler commandHandler = new CommandHandler(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientEventHandler(new ClientEventHandler() {
    @Override
    public void handleClientEvent(ClientEvent event) {
        // Handle client event
    }
}), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientEventHandler(new ClientEventHandler() {
    @Override
    public void handleClientEvent(ClientEvent event) {
        // Handle client event
    }
}) target is: quickServerConfig method is: setClientEventHandler(DummyClass$1)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientEventHandler(Lorg/quickserver/net/server/ClientEventHandler;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: quickServerConfig.toXML("8x7dq(w#gv3oT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("8x7dq(w#gv3oT") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
CommandHandler commandHandler = new CommandHandler();
CommandHandler commandHandler = null;
quickServerConfig.setClientEventHandler((ClientEventHandler) commandHandler);
String string = "8x7dq(w#gv3oT";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.net.qsadmin.Data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.qsadmin.Data
statement code is: Data data = new Data()
statement is: setClientData(Lorg/quickserver/net/server/ClientData;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientData((ClientData) arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
Data data = new Data();
quickServerConfig.setClientData((ClientData) data);
quickServerConfig.toXML("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        Data data = new Data();
        data.setClientId(123456);// Replace this with a more meaningful value, e.g., "ABCDE"

        quickServerConfig.setClientData(((ClientData) (data)));
        quickServerConfig.toXML("");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Data data = new Data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: data.setClientId(123456)// Replace this with a more meaningful value, e.g., "ABCDE"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: data.setClientId(123456)// Replace this with a more meaningful value, e.g., "ABCDE"
 target is: data method is: setClientId(int)
statement is: quickServerConfig.setClientData(((ClientData) (data))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientData(((ClientData) (data))) target is: quickServerConfig method is: setClientData(ClientData)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientData(Lorg/quickserver/net/server/ClientData;)V
statement is: quickServerConfig.toXML(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
Data data = new Data();
quickServerConfig.setClientData((ClientData) data);
String string = "";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.ServerHooks()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.ServerHooks
statement code is: ServerHooks serverHooks = new ServerHooks()
statement is: setServerHooks(Lorg/quickserver/util/xmlreader/ServerHooks;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setServerHooks(arg0)
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = quickServerConfig.toString()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setServerHooks(new ServerHooks());
        quickServerConfig.setServerName("My Production Server");
        quickServerConfig.setPortNumber(80);
        quickServerConfig.setConnectionLimit(1000);
        quickServerConfig.setMaximumConnections(2000);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setServerHooks(new ServerHooks()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerHooks(new ServerHooks()) target is: quickServerConfig method is: setServerHooks(ServerHooks)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setServerHooks(Lorg/quickserver/util/xmlreader/ServerHooks;)V
statement is: quickServerConfig.setServerName("My Production Server"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerName("My Production Server") target is: quickServerConfig method is: setServerName(java.lang.String)
statement is: quickServerConfig.setPortNumber(80), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setPortNumber(80) target is: quickServerConfig method is: setPortNumber(int)
statement is: quickServerConfig.setConnectionLimit(1000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setConnectionLimit(1000) target is: quickServerConfig method is: setConnectionLimit(int)
statement is: quickServerConfig.setMaximumConnections(2000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setMaximumConnections(2000) target is: quickServerConfig method is: setMaximumConnections(int)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getSecurityManagerClass()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String securityManagerClass = quickServerConfig.getSecurityManagerClass()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getInitServerHooks()Lorg/quickserver/util/xmlreader/InitServerHooks; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = quickServerConfig.getInitServerHooks()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setServerName("Production Server");
        quickServerConfig.setServerPort(80);
        quickServerConfig.setMaxConnections(10000);
        quickServerConfig.getInitServerHooks();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setServerName("Production Server"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerName("Production Server") target is: quickServerConfig method is: setServerName(java.lang.String)
statement is: quickServerConfig.setServerPort(80), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerPort(80) target is: quickServerConfig method is: setServerPort(int)
statement is: quickServerConfig.setMaxConnections(10000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setMaxConnections(10000) target is: quickServerConfig method is: setMaxConnections(int)
statement is: quickServerConfig.getInitServerHooks(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getInitServerHooks() target is: quickServerConfig method is: getInitServerHooks()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getInitServerHooks()Lorg/quickserver/util/xmlreader/InitServerHooks;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getApplicationJarPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String applicationJarPath = quickServerConfig.getApplicationJarPath()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setApplicationJarPath("/path/to/application.jar");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationJarPath("/path/to/application.jar"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationJarPath("/path/to/application.jar") target is: quickServerConfig method is: setApplicationJarPath(java.lang.String)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getDBObjectPoolConfig()Lorg/quickserver/util/xmlreader/DBObjectPoolConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = quickServerConfig.getDBObjectPoolConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        // Improved test data
        quickServerConfig.setDBObjectPoolConfig(new DBObjectPoolConfig("localhost", 3306, "root", "password", 5));
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
quickServerConfig.setDBObjectPoolConfig(new DBObjectPoolConfig("localhost", 3306, "root", "password", 5)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
quickServerConfig.setDBObjectPoolConfig(new DBObjectPoolConfig("localhost", 3306, "root", "password", 5)) target is: quickServerConfig method is: setDBObjectPoolConfig(DBObjectPoolConfig)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getApplicationConfiguration()Lorg/quickserver/util/xmlreader/ApplicationConfiguration; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = quickServerConfig.getApplicationConfiguration()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setApplicationConfiguration(new ApplicationConfiguration("production", 8080, "myapp"));
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationConfiguration(new ApplicationConfiguration("production", 8080, "myapp")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationConfiguration(new ApplicationConfiguration("production", 8080, "myapp")) target is: quickServerConfig method is: setApplicationConfiguration(ApplicationConfiguration)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getQSAdminServerConfig()Lorg/quickserver/util/xmlreader/QSAdminServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = quickServerConfig.getQSAdminServerConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        quickServerConfig.setQsAdminServerPort(8091);
        quickServerConfig.setQsAdminServerHost("localhost");
        quickServerConfig.setQsAdminServerProtocol("http");
    }
}
statement is: quickServerConfig.setQsAdminServerPort(8091), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setQsAdminServerPort(8091) target is: quickServerConfig method is: setQsAdminServerPort(int)
statement is: quickServerConfig.setQsAdminServerHost("localhost"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setQsAdminServerHost("localhost") target is: quickServerConfig method is: setQsAdminServerHost(java.lang.String)
statement is: quickServerConfig.setQsAdminServerProtocol("http"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setQsAdminServerProtocol("http") target is: quickServerConfig method is: setQsAdminServerProtocol(java.lang.String)
statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setServerBanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setServerBanner("I")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("I");
quickServerConfig.toXML("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        quickServerConfig.setServerBanner("Welcome to the Quick Server");
    }
}
statement is: quickServerConfig.setServerBanner("Welcome to the Quick Server"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerBanner("Welcome to the Quick Server") target is: quickServerConfig method is: setServerBanner(java.lang.String)
statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientCommandHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientCommandHandler("Z\"k+>w.P }>")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("\t<charset>")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("Z\"k+>w.P }>");
quickServerConfig.toXML("\t<charset>");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        // Set the client command handler to a more descriptive value, such as "Hello World!"
        quickServerConfig.setClientCommandHandler("Hello World!");
        // Set the charset to a more descriptive value, such as "UTF-8"
        quickServerConfig.toXML("\t<charset>UTF-8</charset>");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Set the client command handler to a more descriptive value, such as "Hello World!"
quickServerConfig.setClientCommandHandler("Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Set the client command handler to a more descriptive value, such as "Hello World!"
quickServerConfig.setClientCommandHandler("Hello World!") target is: quickServerConfig method is: setClientCommandHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientCommandHandler(Ljava/lang/String;)V
statement is: // Set the charset to a more descriptive value, such as "UTF-8"
quickServerConfig.toXML("\t<charset>UTF-8</charset>"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Set the charset to a more descriptive value, such as "UTF-8"
quickServerConfig.toXML("\t<charset>UTF-8</charset>") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "Hello World!";
quickServerConfig.setClientCommandHandler(string);
String string = "\t<charset>UTF-8</charset>";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientObjectHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientObjectHandler(")")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML(";8lp@U|WIJJFtLk!y")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler(")");
quickServerConfig.toXML(";8lp@U|WIJJFtLk!y");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientObjectHandler("a");
        quickServerConfig.toXML("b");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientObjectHandler("a"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientObjectHandler("a") target is: quickServerConfig method is: setClientObjectHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientObjectHandler(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("b"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("b") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "a";
quickServerConfig.setClientObjectHandler(string);
String string = "b";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientBinaryHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientBinaryHandler("{{M93qUg6M,mb4*HAHZ")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("{{M93qUg6M,mb4*HAHZ");
quickServerConfig.toXML("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        quickServerConfig.setClientBinaryHandler("");// Empty client binary handler value

        quickServerConfig.toXML("");
        quickServerConfig.setClientBinaryHandler("M93qUg6M,mb4*HAHZ");// Improved client binary handler value with a comma in the string

        quickServerConfig.toXML("");
        // }}
    }
}
statement is: quickServerConfig.setClientBinaryHandler("")// Empty client binary handler value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientBinaryHandler("")// Empty client binary handler value
 target is: quickServerConfig method is: setClientBinaryHandler(java.lang.String)
statement is: quickServerConfig.toXML(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("") target is: quickServerConfig method is: toXML(java.lang.String)
statement is: quickServerConfig.setClientBinaryHandler("M93qUg6M,mb4*HAHZ")// Improved client binary handler value with a comma in the string
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientBinaryHandler("M93qUg6M,mb4*HAHZ")// Improved client binary handler value with a comma in the string
 target is: quickServerConfig method is: setClientBinaryHandler(java.lang.String)
statement is: quickServerConfig.toXML(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("") target is: quickServerConfig method is: toXML(java.lang.String)
statement is: // }}, class spoon.support.reflect.code.CtCommentImpl
statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientWriteHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientWriteHandler("!77La.B2")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("!77La.B2")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("!77La.B2");
quickServerConfig.toXML("!77La.B2");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientWriteHandler("my-client-write-handler");
        quickServerConfig.toXML("my-xml-string");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientWriteHandler("my-client-write-handler"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientWriteHandler("my-client-write-handler") target is: quickServerConfig method is: setClientWriteHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientWriteHandler(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("my-xml-string"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("my-xml-string") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "my-client-write-handler";
quickServerConfig.setClientWriteHandler(string);
String string = "my-xml-string";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientAuthenticationHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientAuthenticationHandler("\"X8sR?yh~>#u.")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML((String) null)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientAuthenticationHandler("\"X8sR?yh~>#u.");
quickServerConfig.toXML((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientAuthenticationHandler(new Random().nextString(10));
        quickServerConfig.toXML(((String) (null)));
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientAuthenticationHandler(new Random().nextString(10)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientAuthenticationHandler(new Random().nextString(10)) target is: quickServerConfig method is: setClientAuthenticationHandler()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientAuthenticationHandler(Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: quickServerConfig.toXML(((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(((String) (null))) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = null;
quickServerConfig.setClientAuthenticationHandler(string);
String string = null;
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientExtendedEventHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientExtendedEventHandler("6W")
statement is: org.quickserver.util.xmlreader.DBObjectPoolConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig()
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = dBObjectPoolConfig.toXML("6W")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML(arg0)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("6W");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String xML = dBObjectPoolConfig.toXML("6W");
quickServerConfig.toXML(xML);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientExtendedEventHandler("6W");
        DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
        String xML = dBObjectPoolConfig.toXML("123456789");
        quickServerConfig.toXML(xML);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientExtendedEventHandler("6W"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientExtendedEventHandler("6W") target is: quickServerConfig method is: setClientExtendedEventHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientExtendedEventHandler(Ljava/lang/String;)V
statement is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String xML = dBObjectPoolConfig.toXML("123456789"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.toXML("123456789") target is: dBObjectPoolConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.DBObjectPoolConfig()V callee: VariableReference: Statement 2, type org.quickserver.util.xmlreader.DBObjectPoolConfigindex is: 3
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
statement is: quickServerConfig.toXML(xML), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(xML) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "6W";
quickServerConfig.setClientExtendedEventHandler(string);
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String string = "123456789";
String xML = ((DBObjectPoolConfig) _void).toXML(string);
quickServerConfig.toXML(xML);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setConsoleLoggingFormatter(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("\t<timeout-msg>")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>");
quickServerConfig.toXML("\t<timeout-msg>");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>");
        quickServerConfig.toXML("\t<timeout-msg>");
        // Example of a more descriptive console logging formatter
        quickServerConfig.setConsoleLoggingFormatter("com.example.logging.MyCustomLogger");
        // Example of a more descriptive timeout message
        quickServerConfig.toXML("The server timed out while trying to connect to the database.");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>") target is: quickServerConfig method is: setConsoleLoggingFormatter(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setConsoleLoggingFormatter(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("\t<timeout-msg>"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("\t<timeout-msg>") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
statement is: // Example of a more descriptive console logging formatter
quickServerConfig.setConsoleLoggingFormatter("com.example.logging.MyCustomLogger"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Example of a more descriptive console logging formatter
quickServerConfig.setConsoleLoggingFormatter("com.example.logging.MyCustomLogger") target is: quickServerConfig method is: setConsoleLoggingFormatter(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setConsoleLoggingFormatter(Ljava/lang/String;)V
statement is: // Example of a more descriptive timeout message
quickServerConfig.toXML("The server timed out while trying to connect to the database."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Example of a more descriptive timeout message
quickServerConfig.toXML("The server timed out while trying to connect to the database.") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "\t<security-manager-class>";
quickServerConfig.setConsoleLoggingFormatter(string);
String string = "\t<timeout-msg>";
quickServerConfig.toXML(string);
String string = "com.example.logging.MyCustomLogger";
quickServerConfig.setConsoleLoggingFormatter(string);
String string = "The server timed out while trying to connect to the database.";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.DBObjectPoolConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig()
statement is: setDBObjectPoolConfig(Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setDBObjectPoolConfig(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("!77La.B2")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("!77La.B2");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
        dBObjectPoolConfig.setMaxIdle(10);
        dBObjectPoolConfig.setMinIdle(5);
        dBObjectPoolConfig.setMaxActive(20);
        quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
        quickServerConfig.toXML("!77La.B2");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: dBObjectPoolConfig.setMaxIdle(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.setMaxIdle(10) target is: dBObjectPoolConfig method is: setMaxIdle(int)
statement is: dBObjectPoolConfig.setMinIdle(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.setMinIdle(5) target is: dBObjectPoolConfig method is: setMinIdle(int)
statement is: dBObjectPoolConfig.setMaxActive(20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.setMaxActive(20) target is: dBObjectPoolConfig method is: setMaxActive(int)
statement is: quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig) target is: quickServerConfig method is: setDBObjectPoolConfig(DBObjectPoolConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setDBObjectPoolConfig(Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;)V
statement is: quickServerConfig.toXML("!77La.B2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("!77La.B2") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
String string = "!77La.B2";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.AccessConstraintConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.AccessConstraintConfig
statement code is: AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig()
statement is: setAccessConstraintConfig(Lorg/quickserver/util/xmlreader/AccessConstraintConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setAccessConstraintConfig(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
        accessConstraintConfig.setAllowedIPs(new HashSet<String>() {
            {
                "192.168.0.1" = $missing$;
            }
        });
        quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
        quickServerConfig.toXML("");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: accessConstraintConfig.setAllowedIPs(new HashSet<String>() {
    {
        "192.168.0.1" = $missing$;
    }
}), class spoon.support.reflect.code.CtInvocationImpl
invocation is: accessConstraintConfig.setAllowedIPs(new HashSet<String>() {
    {
        "192.168.0.1" = $missing$;
    }
}) target is: accessConstraintConfig method is: setAllowedIPs(DummyClass$1)
statement is: quickServerConfig.setAccessConstraintConfig(accessConstraintConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setAccessConstraintConfig(accessConstraintConfig) target is: quickServerConfig method is: setAccessConstraintConfig(AccessConstraintConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setAccessConstraintConfig(Lorg/quickserver/util/xmlreader/AccessConstraintConfig;)V
statement is: quickServerConfig.toXML(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
String string = "";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setApplicationJarPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationJarPath("!77La.B2")
statement is: org.quickserver.util.xmlreader.DBObjectPoolConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig()
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = dBObjectPoolConfig.toXML("6W")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML(arg0)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("!77La.B2");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String xML = dBObjectPoolConfig.toXML("6W");
quickServerConfig.toXML(xML);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setApplicationJarPath("/path/to/my_application.jar");
        DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
        String xML = "pool_config";
        quickServerConfig.toXML(xML);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationJarPath("/path/to/my_application.jar"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationJarPath("/path/to/my_application.jar") target is: quickServerConfig method is: setApplicationJarPath(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationJarPath(Ljava/lang/String;)V
statement is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String xML = "pool_config", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: quickServerConfig.toXML(xML), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(xML) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "/path/to/my_application.jar";
quickServerConfig.setApplicationJarPath(string);
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String string = "pool_config";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.ServerHooks()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.ServerHooks
statement code is: ServerHooks serverHooks = new ServerHooks()
statement is: setServerHooks(Lorg/quickserver/util/xmlreader/ServerHooks;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setServerHooks(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        ServerHooks serverHooks = new ServerHooks();
        // Set the hooks for the QuickAuthenticator
        serverHooks.setPreConnect("org.quickserver.net.server.auth.Authenticate");
        serverHooks.setPostAccept("org.quickserver.net.server.auth.Authenticate");
        quickServerConfig.setServerHooks(serverHooks);
        // Set the authentication info for the QuickAuthenticator
        AuthenticationInfo authInfo = new AuthenticationInfo();
        authInfo.addUser("user1", "password".toCharArray());
        authInfo.addUser("user2", "password".toCharArray());
        quickServerConfig.setAuthenticationInfo(authInfo);
        // Convert to XML format
        quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ServerHooks serverHooks = new ServerHooks(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Set the hooks for the QuickAuthenticator
serverHooks.setPreConnect("org.quickserver.net.server.auth.Authenticate"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Set the hooks for the QuickAuthenticator
serverHooks.setPreConnect("org.quickserver.net.server.auth.Authenticate") target is: serverHooks method is: setPreConnect(java.lang.String)
statement is: serverHooks.setPostAccept("org.quickserver.net.server.auth.Authenticate"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: serverHooks.setPostAccept("org.quickserver.net.server.auth.Authenticate") target is: serverHooks method is: setPostAccept(java.lang.String)
statement is: quickServerConfig.setServerHooks(serverHooks), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerHooks(serverHooks) target is: quickServerConfig method is: setServerHooks(ServerHooks)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setServerHooks(Lorg/quickserver/util/xmlreader/ServerHooks;)V
statement is: // Set the authentication info for the QuickAuthenticator
AuthenticationInfo authInfo = new AuthenticationInfo(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: authInfo.addUser("user1", "password".toCharArray()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: authInfo.addUser("user1", "password".toCharArray()) target is: authInfo method is: addUser(java.lang.String,char[])
statement is: authInfo.addUser("user2", "password".toCharArray()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: authInfo.addUser("user2", "password".toCharArray()) target is: authInfo method is: addUser(java.lang.String,char[])
statement is: quickServerConfig.setAuthenticationInfo(authInfo), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setAuthenticationInfo(authInfo) target is: quickServerConfig method is: setAuthenticationInfo(AuthenticationInfo)
statement is: // Convert to XML format
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Convert to XML format
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
String string = "org.quickserver.net.server.QuickAuthenticator";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.ApplicationConfiguration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration()
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object put = applicationConfiguration.put((Object) null, arg1)
statement is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationConfiguration(arg0)
statement is: getApplicationConfiguration()Lorg/quickserver/util/xmlreader/ApplicationConfiguration; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = quickServerConfig.getApplicationConfiguration()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put((Object) null, object);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
        Object object = new Object();
        applicationConfiguration.put("key", object);
        quickServerConfig.setApplicationConfiguration(applicationConfiguration);
        assertEquals("value", quickServerConfig.getApplicationConfiguration());
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: applicationConfiguration.put("key", object), class spoon.support.reflect.code.CtInvocationImpl
invocation is: applicationConfiguration.put("key", object) target is: applicationConfiguration method is: put(java.lang.String,java.lang.Object)
source statement: org.quickserver.util.xmlreader.ApplicationConfiguration()V callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.ApplicationConfigurationindex is: 1
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: quickServerConfig.setApplicationConfiguration(applicationConfiguration), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationConfiguration(applicationConfiguration) target is: quickServerConfig method is: setApplicationConfiguration(ApplicationConfiguration)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V
statement is: assertEquals("value", quickServerConfig.getApplicationConfiguration()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("value", quickServerConfig.getApplicationConfiguration()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
String string = "key";
applicationConfiguration.put(string, object);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.ApplicationConfiguration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration()
statement is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationConfiguration(arg0)
statement is: getApplicationConfiguration()Lorg/quickserver/util/xmlreader/ApplicationConfiguration; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = quickServerConfig.getApplicationConfiguration()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration("https://example.com", "api-key");
        quickServerConfig.setApplicationConfiguration(applicationConfiguration);
        quickServerConfig.getApplicationConfiguration();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration("https://example.com", "api-key"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationConfiguration(applicationConfiguration), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationConfiguration(applicationConfiguration) target is: quickServerConfig method is: setApplicationConfiguration(ApplicationConfiguration)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: quickServerConfig.getApplicationConfiguration(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getApplicationConfiguration() target is: quickServerConfig method is: getApplicationConfiguration()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getApplicationConfiguration()Lorg/quickserver/util/xmlreader/ApplicationConfiguration;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = null;
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();

statement is: org.quickserver.net.server.QuickServer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.server.QuickServer
statement code is: QuickServer quickServer = new QuickServer("")
statement is: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig config = quickServer.getConfig()
statement is: setApplicationJarPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationJarPath("")
statement is: getApplicationJarPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String applicationJarPath = quickServerConfig.getApplicationJarPath()
test data is: QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
config.setApplicationJarPath("");
config.getApplicationJarPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServer quickServer = new QuickServer("localhost");
        QuickServerConfig config = quickServer.getConfig();
        config.setApplicationJarPath("/home/user/app.jar");
        config.setPort(8080);
        String actualJarPath = config.getApplicationJarPath();
        int actualPort = config.getPort();
        assertEquals(actualJarPath, "/home/user/app.jar", "Incorrect application jar path");
        assertEquals(actualPort, 8080, "Incorrect port number");
    }
}
statement is: QuickServer quickServer = new QuickServer("localhost"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: QuickServerConfig config = quickServer.getConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServer.getConfig() target is: quickServer method is: getConfig()
source statement: org.quickserver.net.server.QuickServer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.quickserver.net.server.QuickServerindex is: 1
Matched Method is: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig;
statement is: config.setApplicationJarPath("/home/user/app.jar"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: config.setApplicationJarPath("/home/user/app.jar") target is: config method is: setApplicationJarPath(java.lang.String)
source statement: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 2
Matched Method is: setApplicationJarPath(Ljava/lang/String;)V
statement is: config.setPort(8080), class spoon.support.reflect.code.CtInvocationImpl
invocation is: config.setPort(8080) target is: config method is: setPort(int)
statement is: String actualJarPath = config.getApplicationJarPath(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: config.getApplicationJarPath() target is: config method is: getApplicationJarPath()
source statement: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 2
Matched Method is: getApplicationJarPath()Ljava/lang/String;
statement is: int actualPort = config.getPort(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: config.getPort() target is: config method is: getPort()
statement is: assertEquals(actualJarPath, "/home/user/app.jar", "Incorrect application jar path"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(actualJarPath, "/home/user/app.jar", "Incorrect application jar path") target is:  method is: assertEquals(java.lang.String,java.lang.String,java.lang.String)
statement is: assertEquals(actualPort, 8080, "Incorrect port number"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(actualPort, 8080, "Incorrect port number") target is:  method is: assertEquals(int,int,java.lang.String)
TestCase is: String string = "localhost";
QuickServer quickServer = new QuickServer(string);
((QuickServer) string).getConfig();
String string = "/home/user/app.jar";
quickServer.setApplicationJarPath(string);
quickServer.getApplicationJarPath();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setApplicationJarPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationJarPath("7XD0lh/Ro")
statement is: getApplicationJarPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String applicationJarPath = quickServerConfig.getApplicationJarPath()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("7XD0lh/Ro");
quickServerConfig.getApplicationJarPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setApplicationJarPath("C:\\Users\\John Doe\\Documents\\JavaProjects\\MyProject\\target\\MyProject-1.0.jar");
        quickServerConfig.getApplicationJarPath();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationJarPath("C:\\Users\\John Doe\\Documents\\JavaProjects\\MyProject\\target\\MyProject-1.0.jar"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationJarPath("C:\\Users\\John Doe\\Documents\\JavaProjects\\MyProject\\target\\MyProject-1.0.jar") target is: quickServerConfig method is: setApplicationJarPath(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationJarPath(Ljava/lang/String;)V
statement is: quickServerConfig.getApplicationJarPath(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getApplicationJarPath() target is: quickServerConfig method is: getApplicationJarPath()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getApplicationJarPath()Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "C:\\Users\\John Doe\\Documents\\JavaProjects\\MyProject\\target\\MyProject-1.0.jar";
quickServerConfig.setApplicationJarPath(string);
quickServerConfig.getApplicationJarPath();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setConfigFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setConfigFile("")
statement is: getConfigFile()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String configFile = quickServerConfig.getConfigFile()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setConfigFile("C:\\Users\\User\\Desktop\\config.txt");
        quickServerConfig.getConfigFile();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setConfigFile("C:\\Users\\User\\Desktop\\config.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setConfigFile("C:\\Users\\User\\Desktop\\config.txt") target is: quickServerConfig method is: setConfigFile(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setConfigFile(Ljava/lang/String;)V
statement is: quickServerConfig.getConfigFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getConfigFile() target is: quickServerConfig method is: getConfigFile()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getConfigFile()Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "C:\\Users\\User\\Desktop\\config.txt";
quickServerConfig.setConfigFile(string);
quickServerConfig.getConfigFile();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setConfigFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setConfigFile("7XD0lh/Ro")
statement is: getConfigFile()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String configFile = quickServerConfig.getConfigFile()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("7XD0lh/Ro");
quickServerConfig.getConfigFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setConfigFile("/path/to/config/file");
        quickServerConfig.getConfigFile();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setConfigFile("/path/to/config/file"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setConfigFile("/path/to/config/file") target is: quickServerConfig method is: setConfigFile(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setConfigFile(Ljava/lang/String;)V
statement is: quickServerConfig.getConfigFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getConfigFile() target is: quickServerConfig method is: getConfigFile()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getConfigFile()Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "/path/to/config/file";
quickServerConfig.setConfigFile(string);
quickServerConfig.getConfigFile();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.DBObjectPoolConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig()
statement is: setDBObjectPoolConfig(Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setDBObjectPoolConfig(arg0)
statement is: getDBObjectPoolConfig()Lorg/quickserver/util/xmlreader/DBObjectPoolConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = quickServerConfig.getDBObjectPoolConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
        dBObjectPoolConfig.setMaxTotal(10);
        dBObjectPoolConfig.setMaxIdle(5);
        dBObjectPoolConfig.setMinIdle(2);
        dBObjectPoolConfig.setMaxWaitMillis(10000);
        quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
        quickServerConfig.getDBObjectPoolConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: dBObjectPoolConfig.setMaxTotal(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.setMaxTotal(10) target is: dBObjectPoolConfig method is: setMaxTotal(int)
statement is: dBObjectPoolConfig.setMaxIdle(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.setMaxIdle(5) target is: dBObjectPoolConfig method is: setMaxIdle(int)
statement is: dBObjectPoolConfig.setMinIdle(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.setMinIdle(2) target is: dBObjectPoolConfig method is: setMinIdle(int)
statement is: dBObjectPoolConfig.setMaxWaitMillis(10000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.setMaxWaitMillis(10000) target is: dBObjectPoolConfig method is: setMaxWaitMillis(int)
statement is: quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig) target is: quickServerConfig method is: setDBObjectPoolConfig(DBObjectPoolConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setDBObjectPoolConfig(Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;)V
statement is: quickServerConfig.getDBObjectPoolConfig(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getDBObjectPoolConfig() target is: quickServerConfig method is: getDBObjectPoolConfig()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getDBObjectPoolConfig()Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.InitServerHooks()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = new InitServerHooks()
statement is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setInitServerHooks(arg0)
statement is: getInitServerHooks()Lorg/quickserver/util/xmlreader/InitServerHooks; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = quickServerConfig.getInitServerHooks()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        InitServerHooks initServerHooks = new InitServerHooks(new String[]{ "hook1", "hook2" });
        quickServerConfig.setInitServerHooks(initServerHooks);
        Assertions.assertNotNull(quickServerConfig.getInitServerHooks());
        Assertions.assertEquals(2, quickServerConfig.getInitServerHooks().length);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InitServerHooks initServerHooks = new InitServerHooks(new String[]{ "hook1", "hook2" }), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setInitServerHooks(initServerHooks), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setInitServerHooks(initServerHooks) target is: quickServerConfig method is: setInitServerHooks(InitServerHooks)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Assertions.assertNotNull(quickServerConfig.getInitServerHooks()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assertions.assertNotNull(quickServerConfig.getInitServerHooks()) target is: Assertions method is: assertNotNull()
statement is: Assertions.assertEquals(2, quickServerConfig.getInitServerHooks().length), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assertions.assertEquals(2, quickServerConfig.getInitServerHooks().length) target is: Assertions method is: assertEquals(int)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = null;
quickServerConfig.setInitServerHooks(initServerHooks);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.QSAdminServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig()
statement is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setQSAdminServerConfig(arg0)
statement is: getQSAdminServerConfig()Lorg/quickserver/util/xmlreader/QSAdminServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = quickServerConfig.getQSAdminServerConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        qSAdminServerConfig = new QSAdminServerConfig();
        quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig("192.168.0.1", 9443, "admin", "password"));
        assertEquals("192.168.0.1", quickServerConfig.getQSAdminServerConfig().getHost());
        assertEquals(9443, quickServerConfig.getQSAdminServerConfig().getPort());
        assertEquals("admin", quickServerConfig.getQSAdminServerConfig().getUsername());
        assertEquals("password", quickServerConfig.getQSAdminServerConfig().getPassword());
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: qSAdminServerConfig = new QSAdminServerConfig(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig("192.168.0.1", 9443, "admin", "password")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig("192.168.0.1", 9443, "admin", "password")) target is: quickServerConfig method is: setQSAdminServerConfig(QSAdminServerConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertEquals("192.168.0.1", quickServerConfig.getQSAdminServerConfig().getHost()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("192.168.0.1", quickServerConfig.getQSAdminServerConfig().getHost()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals(9443, quickServerConfig.getQSAdminServerConfig().getPort()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(9443, quickServerConfig.getQSAdminServerConfig().getPort()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals("admin", quickServerConfig.getQSAdminServerConfig().getUsername()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("admin", quickServerConfig.getQSAdminServerConfig().getUsername()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals("password", quickServerConfig.getQSAdminServerConfig().getPassword()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("password", quickServerConfig.getQSAdminServerConfig().getPassword()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = null;
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.QSAdminServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig()
statement is: setTimeout(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: qSAdminServerConfig.setTimeout((-22))
statement is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setQSAdminServerConfig(arg0)
statement is: getQSAdminServerConfig()Lorg/quickserver/util/xmlreader/QSAdminServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = quickServerConfig.getQSAdminServerConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout((-22));
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
        qSAdminServerConfig.setTimeout(30);// Changed the timeout value to a more descriptive example (e.g., 30 seconds)

        quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
        quickServerConfig.getQSAdminServerConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: qSAdminServerConfig.setTimeout(30)// Changed the timeout value to a more descriptive example (e.g., 30 seconds)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: qSAdminServerConfig.setTimeout(30)// Changed the timeout value to a more descriptive example (e.g., 30 seconds)
 target is: qSAdminServerConfig method is: setTimeout(int)
source statement: org.quickserver.util.xmlreader.QSAdminServerConfig()V callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.QSAdminServerConfigindex is: 1
Matched Method is: setTimeout(I)V
statement is: quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig) target is: quickServerConfig method is: setQSAdminServerConfig(QSAdminServerConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V
statement is: quickServerConfig.getQSAdminServerConfig(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getQSAdminServerConfig() target is: quickServerConfig method is: getQSAdminServerConfig()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getQSAdminServerConfig()Lorg/quickserver/util/xmlreader/QSAdminServerConfig;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
int _int = 30;
qSAdminServerConfig.setTimeout(_int);
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.QSAdminServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig()
statement is: setTimeout(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: qSAdminServerConfig.setTimeout(0)
statement is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setQSAdminServerConfig(arg0)
statement is: getQSAdminServerConfig()Lorg/quickserver/util/xmlreader/QSAdminServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = quickServerConfig.getQSAdminServerConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout(0);
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setTimeout(10);
        quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig());
        quickServerConfig.getQSAdminServerConfig().setTimeout(5);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setTimeout(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setTimeout(10) target is: quickServerConfig method is: setTimeout(int)
statement is: quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setQSAdminServerConfig(new QSAdminServerConfig()) target is: quickServerConfig method is: setQSAdminServerConfig(QSAdminServerConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V
statement is: quickServerConfig.getQSAdminServerConfig().setTimeout(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getQSAdminServerConfig().setTimeout(5) target is: quickServerConfig.getQSAdminServerConfig() method is: setTimeout(int)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass("")
statement is: getSecurityManagerClass()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String securityManagerClass = quickServerConfig.getSecurityManagerClass()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass("fO`99tiOuKXg5s")
statement is: getSecurityManagerClass()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String securityManagerClass = quickServerConfig.getSecurityManagerClass()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("fO`99tiOuKXg5s");
quickServerConfig.getSecurityManagerClass();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

* test suite isTestSuite: 80
Test 0: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("2MndQ(x#gv3oT");
Test 1: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig");
Test 2: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
Test 3: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("\t<charset>");
Test 4: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setSecurityManagerClass(string);
quickServerConfig.toXML("2MndQ(x#gv3oT");
Test 5: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
Test 6: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("</bind-address>\n");
quickServerConfig.toString();
Test 7: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setBindAddr("d'tOe<");
quickServerConfig.toXML((String) null);
Test 8: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
CommandHandler commandHandler = new CommandHandler();
quickServerConfig.setClientEventHandler((ClientEventHandler) commandHandler);
quickServerConfig.toXML("2MndQ(x#gv3oT");
Test 9: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
Data data = new Data();
quickServerConfig.setClientData((ClientData) data);
quickServerConfig.toXML("");
Test 10: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toString();
Test 11: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
Test 12: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
Test 13: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
Test 14: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
Test 15: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
Test 16: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
Test 17: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("I");
quickServerConfig.toXML("");
Test 18: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("Z\"k+>w.P }>");
quickServerConfig.toXML("\t<charset>");
Test 19: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler(")");
quickServerConfig.toXML(";8lp@U|WIJJFtLk!y");
Test 20: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("{{M93qUg6M,mb4*HAHZ");
quickServerConfig.toXML("");
Test 21: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("!77La.B2");
quickServerConfig.toXML("!77La.B2");
Test 22: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientAuthenticationHandler("\"X8sR?yh~>#u.");
quickServerConfig.toXML((String) null);
Test 23: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("6W");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
dBObjectPoolConfig.toXML("6W");
quickServerConfig.toXML("6W<db-object-pool>\n6W\t<db-pool-util>null</db-pool-util>\n6W</db-object-pool>\n");
Test 24: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>");
quickServerConfig.toXML("\t<timeout-msg>");
Test 25: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("!77La.B2");
Test 26: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");
Test 27: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("!77La.B2");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
dBObjectPoolConfig.toXML("6W");
quickServerConfig.toXML("6W<db-object-pool>\n6W\t<db-pool-util>null</db-pool-util>\n6W</db-object-pool>\n");
Test 28: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator");
Test 29: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put((Object) null, object);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 30: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 31: 
QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
config.setApplicationJarPath("");
config.getApplicationJarPath();
Test 32: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("7XD0lh/Ro");
quickServerConfig.getApplicationJarPath();
Test 33: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
Test 34: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("7XD0lh/Ro");
quickServerConfig.getConfigFile();
Test 35: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();
Test 36: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();
Test 37: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 38: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout((-22));
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 39: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout(0);
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 40: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();
Test 41: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("fO`99tiOuKXg5s");
quickServerConfig.getSecurityManagerClass();
Test 42: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("");

Test 43: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setQSAdminServerConfig((QSAdminServerConfig) null);
quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig");

Test 44: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("\t<charset>UTF-8");

Test 45: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
quickServerConfig.toXML("2MndQ(x#gv3oT");

Test 46: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 47: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
quickServerConfig.toString();

Test 48: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setBindAddr("192.168.0.1");
quickServerConfig.toXML("<server><bind-address>192.168.0.1</bind-address></server>");

Test 49: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
CommandHandler commandHandler = new CommandHandler();
quickServerConfig.setClientEventHandler((ClientEventHandler) null);
quickServerConfig.toXML("8x7dq(w#gv3oT");

Test 50: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
Data data = new Data();
quickServerConfig.setClientData((ClientData) data);
quickServerConfig.toXML("");

Test 51: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);

Test 52: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 53: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();

Test 54: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 55: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 56: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 57: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("Hello World!");
quickServerConfig.toXML("\t<charset>UTF-8</charset>");

Test 58: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("a");
quickServerConfig.toXML("b");

Test 59: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("my-client-write-handler");
quickServerConfig.toXML("my-xml-string");

Test 60: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientAuthenticationHandler((String) null);
quickServerConfig.toXML((String) null);

Test 61: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("6W");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String xML = ((DBObjectPoolConfig)null).toXML("123456789");
quickServerConfig.toXML(xML);

Test 62: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>");
quickServerConfig.toXML("\t<timeout-msg>");
quickServerConfig.setConsoleLoggingFormatter("com.example.logging.MyCustomLogger");
quickServerConfig.toXML("The server timed out while trying to connect to the database.");

Test 63: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("!77La.B2");

Test 64: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");

Test 65: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/path/to/my_application.jar");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.toXML("pool_config");

Test 66: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator");

Test 67: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put("key", object);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);

Test 68: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationConfiguration((ApplicationConfiguration) null);
quickServerConfig.getApplicationConfiguration();

Test 69: 
QuickServer quickServer = new QuickServer("localhost");
((QuickServer)"localhost").getConfig();
String string = "/home/user/app.jar";
quickServer.setApplicationJarPath(string);
quickServer.getApplicationJarPath();

Test 70: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("C:UsersJohn DoeDocumentsJavaProjectsMyProject\targetMyProject-1.0.jar");
quickServerConfig.getApplicationJarPath();

Test 71: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("C:UsersUserDesktopconfig.txt");
quickServerConfig.getConfigFile();

Test 72: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("/path/to/config/file");
quickServerConfig.getConfigFile();

Test 73: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();

Test 74: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setInitServerHooks((InitServerHooks) null);

Test 75: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setQSAdminServerConfig((QSAdminServerConfig) null);

Test 76: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout(30);
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();

Test 77: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);

Test 78: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 79: 
QuickServerConfig quickServerConfig = new QuickServerConfig();


* Generated after the refinement and before minimization 80 tests with total length 260
* test suite isTestSuite: 80
Test 0: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("2MndQ(x#gv3oT");
Test 1: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig");
Test 2: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
Test 3: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("\t<charset>");
Test 4: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setSecurityManagerClass(string);
quickServerConfig.toXML("2MndQ(x#gv3oT");
Test 5: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
Test 6: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("</bind-address>\n");
quickServerConfig.toString();
Test 7: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setBindAddr("d'tOe<");
quickServerConfig.toXML((String) null);
Test 8: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
CommandHandler commandHandler = new CommandHandler();
quickServerConfig.setClientEventHandler((ClientEventHandler) commandHandler);
quickServerConfig.toXML("2MndQ(x#gv3oT");
Test 9: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
Data data = new Data();
quickServerConfig.setClientData((ClientData) data);
quickServerConfig.toXML("");
Test 10: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toString();
Test 11: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
Test 12: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
Test 13: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
Test 14: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
Test 15: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
Test 16: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
Test 17: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("I");
quickServerConfig.toXML("");
Test 18: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("Z\"k+>w.P }>");
quickServerConfig.toXML("\t<charset>");
Test 19: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler(")");
quickServerConfig.toXML(";8lp@U|WIJJFtLk!y");
Test 20: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("{{M93qUg6M,mb4*HAHZ");
quickServerConfig.toXML("");
Test 21: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("!77La.B2");
quickServerConfig.toXML("!77La.B2");
Test 22: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientAuthenticationHandler("\"X8sR?yh~>#u.");
quickServerConfig.toXML((String) null);
Test 23: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("6W");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
dBObjectPoolConfig.toXML("6W");
quickServerConfig.toXML("6W<db-object-pool>\n6W\t<db-pool-util>null</db-pool-util>\n6W</db-object-pool>\n");
Test 24: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>");
quickServerConfig.toXML("\t<timeout-msg>");
Test 25: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("!77La.B2");
Test 26: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");
Test 27: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("!77La.B2");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
dBObjectPoolConfig.toXML("6W");
quickServerConfig.toXML("6W<db-object-pool>\n6W\t<db-pool-util>null</db-pool-util>\n6W</db-object-pool>\n");
Test 28: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator");
Test 29: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put((Object) null, object);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 30: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 31: 
QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
config.setApplicationJarPath("");
config.getApplicationJarPath();
Test 32: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("7XD0lh/Ro");
quickServerConfig.getApplicationJarPath();
Test 33: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
Test 34: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("7XD0lh/Ro");
quickServerConfig.getConfigFile();
Test 35: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();
Test 36: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();
Test 37: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 38: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout((-22));
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 39: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout(0);
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 40: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();
Test 41: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("fO`99tiOuKXg5s");
quickServerConfig.getSecurityManagerClass();
Test 42: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("");

Test 43: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setQSAdminServerConfig((QSAdminServerConfig) null);
quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig");

Test 44: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("\t<charset>UTF-8");

Test 45: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
quickServerConfig.toXML("2MndQ(x#gv3oT");

Test 46: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 47: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
quickServerConfig.toString();

Test 48: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setBindAddr("192.168.0.1");
quickServerConfig.toXML("<server><bind-address>192.168.0.1</bind-address></server>");

Test 49: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
CommandHandler commandHandler = new CommandHandler();
quickServerConfig.setClientEventHandler((ClientEventHandler) null);
quickServerConfig.toXML("8x7dq(w#gv3oT");

Test 50: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
Data data = new Data();
quickServerConfig.setClientData((ClientData) data);
quickServerConfig.toXML("");

Test 51: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);

Test 52: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 53: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();

Test 54: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 55: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 56: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 57: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("Hello World!");
quickServerConfig.toXML("\t<charset>UTF-8</charset>");

Test 58: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("a");
quickServerConfig.toXML("b");

Test 59: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("my-client-write-handler");
quickServerConfig.toXML("my-xml-string");

Test 60: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientAuthenticationHandler((String) null);
quickServerConfig.toXML((String) null);

Test 61: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("6W");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String xML = ((DBObjectPoolConfig)null).toXML("123456789");
quickServerConfig.toXML(xML);

Test 62: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>");
quickServerConfig.toXML("\t<timeout-msg>");
quickServerConfig.setConsoleLoggingFormatter("com.example.logging.MyCustomLogger");
quickServerConfig.toXML("The server timed out while trying to connect to the database.");

Test 63: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("!77La.B2");

Test 64: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");

Test 65: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/path/to/my_application.jar");
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.toXML("pool_config");

Test 66: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator");

Test 67: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put("key", object);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);

Test 68: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationConfiguration((ApplicationConfiguration) null);
quickServerConfig.getApplicationConfiguration();

Test 69: 
QuickServer quickServer = new QuickServer("localhost");
((QuickServer)"localhost").getConfig();
String string = "/home/user/app.jar";
quickServer.setApplicationJarPath(string);
quickServer.getApplicationJarPath();

Test 70: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("C:UsersJohn DoeDocumentsJavaProjectsMyProject\targetMyProject-1.0.jar");
quickServerConfig.getApplicationJarPath();

Test 71: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("C:UsersUserDesktopconfig.txt");
quickServerConfig.getConfigFile();

Test 72: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("/path/to/config/file");
quickServerConfig.getConfigFile();

Test 73: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();

Test 74: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setInitServerHooks((InitServerHooks) null);

Test 75: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setQSAdminServerConfig((QSAdminServerConfig) null);

Test 76: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout(30);
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();

Test 77: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);

Test 78: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 79: 
QuickServerConfig quickServerConfig = new QuickServerConfig();


* Minimizing test suite
* test suite isTestSuite: 41
Test 0: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("/path/to/config/file");
quickServerConfig.getConfigFile();
Test 1: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("");
Test 2: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
Test 3: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("!77La.B2");
Test 4: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("\t<charset>UTF-8");
Test 5: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
Test 6: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
quickServerConfig.toString();
Test 7: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("I");
quickServerConfig.toXML("");
Test 8: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setBindAddr("192.168.0.1");
quickServerConfig.toXML("<server><bind-address>192.168.0.1</bind-address></server>");
Test 9: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
CommandHandler commandHandler = new CommandHandler();
quickServerConfig.setClientEventHandler((ClientEventHandler) commandHandler);
quickServerConfig.toXML("2MndQ(x#gv3oT");
Test 10: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("Hello World!");
quickServerConfig.toXML("\t<charset>UTF-8</charset>");
Test 11: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("a");
quickServerConfig.toXML("b");
Test 12: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("{{M93qUg6M,mb4*HAHZ");
quickServerConfig.toXML("");
Test 13: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("my-client-write-handler");
quickServerConfig.toXML("my-xml-string");
Test 14: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientAuthenticationHandler("\"X8sR?yh~>#u.");
quickServerConfig.toXML((String) null);
Test 15: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
Data data = new Data();
quickServerConfig.setClientData((ClientData) data);
quickServerConfig.toXML("");
Test 16: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("6W");
quickServerConfig.toXML("6W<db-object-pool>\n6W\t<db-pool-util>null</db-pool-util>\n6W</db-object-pool>\n");
Test 17: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>");
quickServerConfig.toXML("\t<timeout-msg>");
Test 18: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");
Test 19: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig");
Test 20: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/path/to/my_application.jar");
quickServerConfig.toXML("pool_config");
Test 21: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks serverHooks = new ServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator");
Test 22: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
Test 23: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
Test 24: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
Test 25: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
Test 26: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
Test 27: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
Test 28: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
quickServerConfig.toXML("2MndQ(x#gv3oT");
Test 29: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put((Object) null, object);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 30: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 31: 
QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
config.setApplicationJarPath("");
config.getApplicationJarPath();
Test 32: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("7XD0lh/Ro");
quickServerConfig.getApplicationJarPath();
Test 33: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
Test 34: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();
Test 35: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();
Test 36: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 37: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout((-22));
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 38: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
qSAdminServerConfig.setTimeout(0);
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 39: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();
Test 40: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("fO`99tiOuKXg5s");
quickServerConfig.getSecurityManagerClass();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 69
* Number of covered goals: 63
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 96
* Number of covered goals: 95
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 44
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 69
* Number of covered goals: 63
* Generated 41 tests with total length 135
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("/path/to/config/file");
quickServerConfig.getConfigFile();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameWithValidConfigFilePath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks arg0 = new InitServerHooks();
quickServerConfig.setInitServerHooks(arg0);
quickServerConfig.toXML("");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetInitServerHooks
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameValidConfigFileReturnsCorrectName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig arg0 = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(arg0);
quickServerConfig.toXML("!77La.B2");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetDBObjectPoolConfig
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration arg0 = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(arg0);
quickServerConfig.toXML("\t<charset>UTF-8");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQuickServerConfigName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameWithNullSecurityManagerClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
quickServerConfig.toString();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testToStringWithCustomSecurityManagerClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("I");
quickServerConfig.toXML("");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetServerBanner
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setBindAddr("192.168.0.1");
quickServerConfig.toXML("<server><bind-address>192.168.0.1</bind-address></server>");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testConvertToXMLbindAddressSetnameMatches
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
CommandHandler arg0 = new CommandHandler();
quickServerConfig.setClientEventHandler((ClientEventHandler) arg0);
quickServerConfig.toXML("2MndQ(x#gv3oT");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetClientEventHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("Hello World!");
quickServerConfig.toXML("\t<charset>UTF-8</charset>");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testClientCommandHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("a");
quickServerConfig.toXML("b");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSerializationOfQuickServerConfigAsXML
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("{{M93qUg6M,mb4*HAHZ");
quickServerConfig.toXML("");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testToXMLshouldProduceCorrectXMLString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("my-client-write-handler");
quickServerConfig.toXML("my-xml-string");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testToXMLWithClientWriteHandlerSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientAuthenticationHandler("\"X8sR?yh~>#u.");
quickServerConfig.toXML((String) null);
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetClientAuthenticationHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
Data arg0 = new Data();
quickServerConfig.setClientData((ClientData) arg0);
quickServerConfig.toXML("");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetClientDataAndGetName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("6W");
quickServerConfig.toXML("6W<db-object-pool>\n6W\t<db-pool-util>null</db-pool-util>\n6W</db-object-pool>\n");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetClientExtendedEventHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<security-manager-class>");
quickServerConfig.toXML("\t<timeout-msg>");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQuickServerConfigToXMLWithSecurityManagerClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig arg0 = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(arg0);
quickServerConfig.toXML("");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQuickServerConfigSerialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig arg0 = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(arg0);
quickServerConfig.toXML("org.quickserver.util.xmlreader.QSAdminServerConfig");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testToXMLValidInputCorrectXMLString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/path/to/my_application.jar");
quickServerConfig.toXML("pool_config");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQuickServerConfigToXML
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ServerHooks arg0 = new ServerHooks();
quickServerConfig.setServerHooks(arg0);
quickServerConfig.toXML("org.quickserver.net.server.QuickAuthenticator");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetServerHooks
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameDefaultValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: getCorrectNameForConfigWithReleaseCandidateTag
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameReturnsCorrectName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetDBObjectPoolConfigReturnsValidConfig
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNamereturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameOfQuickServerWithCorrectVersionNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.security.CustomSecurityManager");
quickServerConfig.toXML("2MndQ(x#gv3oT");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testToXMLWithCustomSecurityManagerClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration arg0 = new ApplicationConfiguration();
Object arg1 = new Object();
arg0.put((Object) null, arg1);
quickServerConfig.setApplicationConfiguration(arg0);
quickServerConfig.getApplicationConfiguration();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration arg0 = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(arg0);
quickServerConfig.getApplicationConfiguration();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameReturnsCorrectName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
config.setApplicationJarPath("");
config.getApplicationJarPath();
assertEquals("QuickServer v2.0.0 RC1", config.getName());


** It was a parseable test case! 
refined test name is: testGetConfigvalidFilePathcorrectName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("7XD0lh/Ro");
quickServerConfig.getApplicationJarPath();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameValidInstanceReturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameWhenConfigFileIsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig arg0 = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(arg0);
quickServerConfig.getDBObjectPoolConfig();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetDBObjectPoolConfigReturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks arg0 = new InitServerHooks();
quickServerConfig.setInitServerHooks(arg0);
quickServerConfig.getInitServerHooks();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameShouldReturnCorrectName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig arg0 = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(arg0);
quickServerConfig.getQSAdminServerConfig();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameReturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig arg0 = new QSAdminServerConfig();
arg0.setTimeout((-22));
quickServerConfig.setQSAdminServerConfig(arg0);
quickServerConfig.getQSAdminServerConfig();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQSAdminServerConfigTimeoutAndName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig arg0 = new QSAdminServerConfig();
arg0.setTimeout(0);
quickServerConfig.setQSAdminServerConfig(arg0);
quickServerConfig.getQSAdminServerConfig();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameDefaultTimeoutIsZeroReturnsCorrectName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
String securityManagerClass = quickServerConfig.getSecurityManagerClass();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());
assertNotNull(securityManagerClass);


** It was a parseable test case! 
refined test name is: testGetSecurityManagerClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("fO`99tiOuKXg5s");
String securityManagerClass = quickServerConfig.getSecurityManagerClass();
assertNotNull(securityManagerClass);
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetSecurityManagerClassAndName
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:08.845 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:08.944 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:09.989 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:10.009 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:11.001 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:11.021 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:11.965 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:11.985 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:13.053 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:13.073 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:14.065 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:14.085 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:15.041 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:15.061 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:16.001 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:16.028 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:16.545 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:16.565 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:17.149 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:17.157 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:17.589 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:17.594 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:18.101 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:18.105 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:18.177 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:18.179 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:18.280 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:18.283 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:18.409 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:18.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:18.576 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:18.579 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:18.720 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:18.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:18.858 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:18.862 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:19.000 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:19.003 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:19.158 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:19.178 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:19.317 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:19.321 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:19.462 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:19.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:19.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:19.619 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:19.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:19.772 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:19.915 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:19.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:20.081 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:20.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:20.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:20.239 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:20.381 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:20.383 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:20.506 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:20.513 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:20.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 11:28:20.618 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
[MASTER] 11:28:20.706 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:20.708 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:20.810 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:20.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:20.919 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:20.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:21.017 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:21.019 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:21.141 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:21.143 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
[MASTER] 11:28:21.247 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:21.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
[MASTER] 11:28:21.348 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:21.349 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
[MASTER] 11:28:21.463 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:21.465 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:21.590 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:21.592 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:21.673 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:21.676 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:28:21.798 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:21.799 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Compiling Tests
[MASTER] 11:28:22.297 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:22.299 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:28:23.077 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar9120704814109780655.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:28:23.079 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar9120704814109780655.jar
* Writing tests to file
* Writing JUnit test case 'QuickServerConfig_ESTest' to evosuite-tests
* Done!

* Computation finished
