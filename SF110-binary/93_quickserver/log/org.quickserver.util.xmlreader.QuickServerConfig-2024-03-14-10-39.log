* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.quickserver.util.xmlreader.QuickServerConfig
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/93_quickserver/evosuite-files/evosuite.properties
* Connecting to master process on port 15061
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:39:40.895 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:39:40.897 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:39:40.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:39:41.000 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:39:41.004 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:39:41.005 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:39:41.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.net.SocketOption
[MASTER] 10:39:41.428 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Supplier
* Finished analyzing classpath
* Generating tests for class org.quickserver.util.xmlreader.QuickServerConfig
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 295
* Using seed 1710412778183
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 180 / 295
[Progress:>                             1%] [Cov:==========================>        76%][MASTER] 10:39:43.492 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.quickserver.util.xmlreader.QuickServerConfig.toXML(Ljava/lang/String;)Ljava/lang/String;: I671 Branch 24 IFNULL L252 - false in context: org.quickserver.util.xmlreader.QuickServerConfig:toXML(Ljava/lang/String;)Ljava/lang/String;
[Progress:>                             2%] [Cov:===========================>       79%][Progress:>                             2%] [Cov:============================>      81%][Progress:>                             2%] [Cov:============================>      81%][Progress:>                             3%] [Cov:=============================>     83%][Progress:>                             3%] [Cov:=============================>     85%][Progress:>                             3%] [Cov:=============================>     85%][Progress:>                             3%] [Cov:=============================>     85%][Progress:>                             3%] [Cov:=============================>     85%][Progress:=>                            4%] [Cov:=============================>     85%][Progress:=>                            4%] [Cov:=============================>     85%][Progress:=>                            4%] [Cov:=============================>     85%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    87%][Progress:=>                            5%] [Cov:==============================>    87%][Progress:=>                            5%] [Cov:==============================>    87%][Progress:=>                            5%] [Cov:==============================>    87%][Progress:=>                            5%] [Cov:==============================>    87%][Progress:=>                            5%] [Cov:==============================>    87%][Progress:=>                            5%] [Cov:==============================>    87%][Progress:=>                            5%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:=>                            6%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           7%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:====>                         16%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        17%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        18%] [Cov:==============================>    87%][Progress:=====>                        19%] [Cov:==============================>    87%][Progress:=====>                        19%] [Cov:==============================>    87%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:==============================>    88%][Progress:=============>                46%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               47%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               48%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:==============>               49%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              50%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              51%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              52%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:===============>              53%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             54%] [Cov:===============================>   89%][Progress:================>             55%] [Cov:===============================>   89%][Progress:================>             55%] [Cov:===============================>   89%][Progress:================>             55%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:================>             56%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            57%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            58%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:=================>            59%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           60%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           61%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           62%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:==================>           63%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          64%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          65%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:===================>          66%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         67%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         68%] [Cov:===============================>   89%][Progress:====================>         69%] [Cov:===============================>   89%][Progress:====================>         69%] [Cov:===============================>   89%][Progress:====================>         69%] [Cov:===============================>   89%][Progress:====================>         69%] [Cov:===============================>   89%][Progress:====================>         69%] [Cov:===============================>   89%][Progress:====================>         69%] [Cov:===============================>   89%][Progress:====================>         69%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        70%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        71%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        72%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:=====================>        73%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       74%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       75%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:======================>       76%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      77%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      78%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:=======================>      79%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     80%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     81%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     82%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:========================>     83%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    84%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    85%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:=========================>    86%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   87%] [Cov:===============================>   89%][Progress:==========================>   88%] [Cov:===============================>   89%][Progress:==========================>   88%] [Cov:===============================>   89%][Progress:==========================>   88%] [Cov:===============================>   89%][Progress:==========================>   88%] [Cov:===============================>   89%][Progress:==========================>   88%] [Cov:===============================>   89%][Progress:==========================>   88%] [Cov:===============================>   89%][Progress:==========================>   88%] [Cov:===============================>   89%][Progress:==========================>   88%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:==========================>   89%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  90%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  91%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  92%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:===========================>  93%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 94%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 95%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:============================> 96%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>97%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>98%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:=============================>99%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%][Progress:==============================100%] [Cov:===============================>   89%]
* Search finished after 102s and 632 generations, 131351 statements, best individual has fitness: 28.0
* Generated before the refinement 39 tests with total length 134
statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setConfigFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setConfigFile("")
statement is: getConfigFile()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String configFile = quickServerConfig.getConfigFile()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setConfigFile("/path/to/config/file");
        quickServerConfig.getConfigFile();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setConfigFile("/path/to/config/file"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setConfigFile("/path/to/config/file") target is: quickServerConfig method is: setConfigFile(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setConfigFile(Ljava/lang/String;)V
statement is: quickServerConfig.getConfigFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getConfigFile() target is: quickServerConfig method is: getConfigFile()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getConfigFile()Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "/path/to/config/file";
quickServerConfig.setConfigFile(string);
quickServerConfig.getConfigFile();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = quickServerConfig.toString()
statement is: setAuthenticator(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setAuthenticator(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("</enable>\n")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setAuthenticator(string);
quickServerConfig.toXML("</enable>\n");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setAuthenticator("Basic");
        quickServerConfig.toXML("<enable>true</enable>\n");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setAuthenticator("Basic"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setAuthenticator("Basic") target is: quickServerConfig method is: setAuthenticator(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setAuthenticator(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("<enable>true</enable>\n"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("<enable>true</enable>\n") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "Basic";
quickServerConfig.setAuthenticator(string);
String string = "<enable>true</enable>\n";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getConfigFile()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String configFile = quickServerConfig.getConfigFile()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setConfigFile("./config/dev_config.yml");
        assertEquals("The configuration file path should be ./config/dev_config.yml", "./config/dev_config.yml", quickServerConfig.getConfigFile());
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setConfigFile("./config/dev_config.yml"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setConfigFile("./config/dev_config.yml") target is: quickServerConfig method is: setConfigFile(java.lang.String)
statement is: assertEquals("The configuration file path should be ./config/dev_config.yml", "./config/dev_config.yml", quickServerConfig.getConfigFile()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("The configuration file path should be ./config/dev_config.yml", "./config/dev_config.yml", quickServerConfig.getConfigFile()) target is:  method is: assertEquals(java.lang.String,java.lang.String,<unknown>)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.DBObjectPoolConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig()
statement is: setDBObjectPoolConfig(Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setDBObjectPoolConfig(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
        quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
        quickServerConfig.toXML("0=09&c-xx7yJ2^");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig) target is: quickServerConfig method is: setDBObjectPoolConfig(DBObjectPoolConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setDBObjectPoolConfig(Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;)V
statement is: quickServerConfig.toXML("0=09&c-xx7yJ2^"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("0=09&c-xx7yJ2^") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
String string = "0=09&c-xx7yJ2^";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.ApplicationConfiguration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration()
statement is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationConfiguration(arg0)
statement is: getApplicationConfiguration()Lorg/quickserver/util/xmlreader/ApplicationConfiguration; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = quickServerConfig.getApplicationConfiguration()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
        applicationConfiguration.setProperty("server.port", "8080");
        quickServerConfig.setApplicationConfiguration(applicationConfiguration);
        assertEquals("8080", quickServerConfig.getApplicationConfiguration().getProperty("server.port"));
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: applicationConfiguration.setProperty("server.port", "8080"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: applicationConfiguration.setProperty("server.port", "8080") target is: applicationConfiguration method is: setProperty(java.lang.String,java.lang.String)
statement is: quickServerConfig.setApplicationConfiguration(applicationConfiguration), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationConfiguration(applicationConfiguration) target is: quickServerConfig method is: setApplicationConfiguration(ApplicationConfiguration)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V
statement is: assertEquals("8080", quickServerConfig.getApplicationConfiguration().getProperty("server.port")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("8080", quickServerConfig.getApplicationConfiguration().getProperty("server.port")) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass((String) null)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass("</enable>\n")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("</enable>\n")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("</enable>\n");
quickServerConfig.toXML("</enable>\n");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setSecurityManagerClass("com.example.CustomSecurityManager");
        quickServerConfig.toXML("com.example.CustomSecurityManager");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setSecurityManagerClass("com.example.CustomSecurityManager"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setSecurityManagerClass("com.example.CustomSecurityManager") target is: quickServerConfig method is: setSecurityManagerClass(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setSecurityManagerClass(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("com.example.CustomSecurityManager"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("com.example.CustomSecurityManager") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "com.example.CustomSecurityManager";
quickServerConfig.setSecurityManagerClass(string);
String string = "com.example.CustomSecurityManager";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setServerBanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setServerBanner("No ClientPool available yet!")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("]3$j")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("No ClientPool available yet!");
quickServerConfig.toXML("]3$j");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setServerBanner("The server is currently offline due to maintenance.");
        quickServerConfig.toXML("MJ34@t");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setServerBanner("The server is currently offline due to maintenance."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerBanner("The server is currently offline due to maintenance.") target is: quickServerConfig method is: setServerBanner(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setServerBanner(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("MJ34@t"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("MJ34@t") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "The server is currently offline due to maintenance.";
quickServerConfig.setServerBanner(string);
String string = "MJ34@t";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientEventHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientEventHandler("joiY")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientEventHandler("joiY");
        quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientEventHandler("joiY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientEventHandler("joiY") target is: quickServerConfig method is: setClientEventHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientEventHandler(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "joiY";
quickServerConfig.setClientEventHandler(string);
String string = "0=-09&c\u0000xx7yJ2^";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientExtendedEventHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientExtendedEventHandler("InputStream is still null!")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("</enable>\n")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("InputStream is still null!");
quickServerConfig.toXML("</enable>\n");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientExtendedEventHandler("Error while reading from input stream!");
        quickServerConfig.toXML("</enable>\n");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientExtendedEventHandler("Error while reading from input stream!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientExtendedEventHandler("Error while reading from input stream!") target is: quickServerConfig method is: setClientExtendedEventHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientExtendedEventHandler(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("</enable>\n"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("</enable>\n") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "Error while reading from input stream!";
quickServerConfig.setClientExtendedEventHandler(string);
String string = "</enable>\n";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.DBObjectPoolConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig()
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = dBObjectPoolConfig.toXML("((")
statement is: org.quickserver.util.xmlreader.ApplicationConfiguration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration()
statement is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationConfiguration(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML(arg0)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String xML = dBObjectPoolConfig.toXML("((");
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML(xML);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
        String xML = dBObjectPoolConfig.toXML("((");
        ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
        quickServerConfig.setApplicationConfiguration(applicationConfiguration);
        quickServerConfig.toXML(xML);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String xML = dBObjectPoolConfig.toXML("(("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: dBObjectPoolConfig.toXML("((") target is: dBObjectPoolConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.DBObjectPoolConfig()V callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.DBObjectPoolConfigindex is: 1
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
statement is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationConfiguration(applicationConfiguration), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationConfiguration(applicationConfiguration) target is: quickServerConfig method is: setApplicationConfiguration(ApplicationConfiguration)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V
statement is: quickServerConfig.toXML(xML), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(xML) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String string = "((";
String xML = dBObjectPoolConfig.toXML(string);
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML(xML);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setApplicationJarPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationJarPath("")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("]3$j")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.toXML("]3$j");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setApplicationJarPath("/path/to/myapp.jar");
        quickServerConfig.toXML("MyApp");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationJarPath("/path/to/myapp.jar"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationJarPath("/path/to/myapp.jar") target is: quickServerConfig method is: setApplicationJarPath(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationJarPath(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("MyApp"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("MyApp") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "/path/to/myapp.jar";
quickServerConfig.setApplicationJarPath(string);
String string = "MyApp";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getSecurityManagerClass()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String securityManagerClass = quickServerConfig.getSecurityManagerClass()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quick_server_config = new QuickServerConfig();
        quick_server_config.setSecurityManagerClass("com.example.CustomSecurityManager");
        // Testing for the correct security manager class being used }}
    }
}
statement is: QuickServerConfig quick_server_config = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quick_server_config.setSecurityManagerClass("com.example.CustomSecurityManager"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quick_server_config.setSecurityManagerClass("com.example.CustomSecurityManager") target is: quick_server_config method is: setSecurityManagerClass(java.lang.String)
statement is: // Testing for the correct security manager class being used }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getInitServerHooks()Lorg/quickserver/util/xmlreader/InitServerHooks; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = quickServerConfig.getInitServerHooks()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.getInitServerHooks(10, "server-init", true);
    }
}
statement is: // Improved test data:
QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.getInitServerHooks(10, "server-init", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getInitServerHooks(10, "server-init", true) target is: quickServerConfig method is: getInitServerHooks(int,java.lang.String,boolean)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getDBObjectPoolConfig()Lorg/quickserver/util/xmlreader/DBObjectPoolConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = quickServerConfig.getDBObjectPoolConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.getDBObjectPoolConfig();
        // Improved test data:
        // Use more descriptive values for the primitive types:
        int maxTotal = 100;
        int maxIdle = 50;
        long minEvictableIdleTimeMillis = 30000L;
        boolean testOnBorrow = true;
        boolean testWhileIdle = false;
        boolean testOnReturn = false;
        boolean poolPreparedStatements = true;
        int maxOpenPreparedStatements = 100;
        String validationQuery = "SELECT 1";
        long timeBetweenEvictionRunsMillis = 60000L;
        long minEvictableIdleTimeMillis = 30000L;
        String testWhileIdleSql = "SELECT 1";
        boolean accessToUnderlyingConnectionAllowed = true;
        boolean removeAbandoned = false;
        long removeAbandonedTimeout = 600L;
        String validationQueryTimeout = "1";
        boolean logAbandoned = true;
        boolean clearStatementPoolOnReturn = false;
        boolean rollbackOnReturn = true;
        String connectionProperties = "";
        boolean initConnectionSqls = "";
        // Use more descriptive Strings for the configuration properties:
        String dbObjectPoolConfig = "db_object_pool";
        String maxTotal = "100";
        String maxIdle = "50";
        String minEvictableIdleTimeMillis = "30000L";
        String testOnBorrow = "true";
        String testWhileIdle = "false";
        String testOnReturn = "false";
        String poolPreparedStatements = "true";
        String maxOpenPreparedStatements = "100";
        String validationQuery = "SELECT 1";
        String timeBetweenEvictionRunsMillis = "60000L";
        String minEvictableIdleTimeMillis = "30000L";
        String testWhileIdleSql = "SELECT 1";
        String accessToUnderlyingConnectionAllowed = "true";
        String removeAbandoned = "false";
        String removeAbandonedTimeout = "600L";
        String validationQueryTimeout = "1";
        String logAbandoned = "true";
        String clearStatementPoolOnReturn = "false";
        String rollbackOnReturn = "true";
        String connectionProperties = "";
        String initConnectionSqls = "";
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.getDBObjectPoolConfig(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getDBObjectPoolConfig() target is: quickServerConfig method is: getDBObjectPoolConfig()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getDBObjectPoolConfig()Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;
statement is: // Improved test data:
// Use more descriptive values for the primitive types:
int maxTotal = 100, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int maxIdle = 50, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: long minEvictableIdleTimeMillis = 30000L, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean testOnBorrow = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean testWhileIdle = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean testOnReturn = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean poolPreparedStatements = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int maxOpenPreparedStatements = 100, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String validationQuery = "SELECT 1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: long timeBetweenEvictionRunsMillis = 60000L, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: long minEvictableIdleTimeMillis = 30000L, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String testWhileIdleSql = "SELECT 1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean accessToUnderlyingConnectionAllowed = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean removeAbandoned = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: long removeAbandonedTimeout = 600L, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String validationQueryTimeout = "1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean logAbandoned = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean clearStatementPoolOnReturn = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean rollbackOnReturn = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String connectionProperties = "", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean initConnectionSqls = "", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Use more descriptive Strings for the configuration properties:
String dbObjectPoolConfig = "db_object_pool", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String maxTotal = "100", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String maxIdle = "50", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String minEvictableIdleTimeMillis = "30000L", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String testOnBorrow = "true", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String testWhileIdle = "false", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String testOnReturn = "false", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String poolPreparedStatements = "true", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String maxOpenPreparedStatements = "100", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String validationQuery = "SELECT 1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String timeBetweenEvictionRunsMillis = "60000L", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String minEvictableIdleTimeMillis = "30000L", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String testWhileIdleSql = "SELECT 1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String accessToUnderlyingConnectionAllowed = "true", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String removeAbandoned = "false", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String removeAbandonedTimeout = "600L", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String validationQueryTimeout = "1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String logAbandoned = "true", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String clearStatementPoolOnReturn = "false", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String rollbackOnReturn = "true", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String connectionProperties = "", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String initConnectionSqls = "", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 100
* this is vulnerable: int _int = 50
* this is vulnerable: long _long = 30000L
* this is vulnerable: boolean _boolean = true
* this is vulnerable: boolean _boolean = false
* this is vulnerable: boolean _boolean = false
* this is vulnerable: boolean _boolean = true
* this is vulnerable: int _int = 100
* this is vulnerable: String string = "SELECT 1"
* this is vulnerable: long _long = 60000L
* this is vulnerable: long _long = 30000L
* this is vulnerable: String string = "SELECT 1"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: boolean _boolean = false
* this is vulnerable: long _long = 600L
* this is vulnerable: String string = "1"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: boolean _boolean = false
* this is vulnerable: boolean _boolean = true
* this is vulnerable: String string = ""
* this is vulnerable: String string = ""
* this is vulnerable: String string = "db_object_pool"
* this is vulnerable: String string = "100"
* this is vulnerable: String string = "50"
* this is vulnerable: String string = "30000L"
* this is vulnerable: String string = "true"
* this is vulnerable: String string = "false"
* this is vulnerable: String string = "false"
* this is vulnerable: String string = "true"
* this is vulnerable: String string = "100"
* this is vulnerable: String string = "SELECT 1"
* this is vulnerable: String string = "60000L"
* this is vulnerable: String string = "30000L"
* this is vulnerable: String string = "SELECT 1"
* this is vulnerable: String string = "true"
* this is vulnerable: String string = "false"
* this is vulnerable: String string = "600L"
* this is vulnerable: String string = "1"
* this is vulnerable: String string = "true"
* this is vulnerable: String string = "false"
* this is vulnerable: String string = "true"
* this is vulnerable: String string = ""
* this is vulnerable: String string = ""
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
int _int = 100;
int _int = 50;
long _long = 30000L;
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = true;
int _int = 100;
String string = "SELECT 1";
long _long = 60000L;
long _long = 30000L;
String string = "SELECT 1";
boolean _boolean = true;
boolean _boolean = false;
long _long = 600L;
String string = "1";
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = true;
String string = "";
String string = "";
String string = "db_object_pool";
String string = "100";
String string = "50";
String string = "30000L";
String string = "true";
String string = "false";
String string = "false";
String string = "true";
String string = "100";
String string = "SELECT 1";
String string = "60000L";
String string = "30000L";
String string = "SELECT 1";
String string = "true";
String string = "false";
String string = "600L";
String string = "1";
String string = "true";
String string = "false";
String string = "true";
String string = "";
String string = "";

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getApplicationConfiguration()Lorg/quickserver/util/xmlreader/ApplicationConfiguration; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = quickServerConfig.getApplicationConfiguration()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        // Set the application configuration to a more descriptive value
        quickServerConfig.setApplicationConfiguration(new ApplicationConfiguration("TestApp", "1.0", 8080));
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Set the application configuration to a more descriptive value
quickServerConfig.setApplicationConfiguration(new ApplicationConfiguration("TestApp", "1.0", 8080)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Set the application configuration to a more descriptive value
quickServerConfig.setApplicationConfiguration(new ApplicationConfiguration("TestApp", "1.0", 8080)) target is: quickServerConfig method is: setApplicationConfiguration(ApplicationConfiguration)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getQSAdminServerConfig()Lorg/quickserver/util/xmlreader/QSAdminServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = quickServerConfig.getQSAdminServerConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        // Change the primitive values and Strings to more illustrative examples
        int serverPort = 8080;
        String serverHost = "localhost";
        quickServerConfig.setServerPort(serverPort);
        quickServerConfig.setServerHost(serverHost);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Change the primitive values and Strings to more illustrative examples
int serverPort = 8080, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String serverHost = "localhost", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: quickServerConfig.setServerPort(serverPort), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerPort(serverPort) target is: quickServerConfig method is: setServerPort(int)
statement is: quickServerConfig.setServerHost(serverHost), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerHost(serverHost) target is: quickServerConfig method is: setServerHost(java.lang.String)
* this is vulnerable: int _int = 8080
* this is vulnerable: String string = "localhost"
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
int _int = 8080;
String string = "localhost";

statement is: org.quickserver.net.server.QuickServer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.server.QuickServer
statement code is: QuickServer quickServer = new QuickServer("</authenticator>\n")
statement is: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig config = quickServer.getConfig()
statement is: setBindAddr(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setBindAddr("</authenticator>\n")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML((String) null)
test data is: QuickServer quickServer = new QuickServer("</authenticator>\n");
QuickServerConfig config = quickServer.getConfig();
config.setBindAddr("</authenticator>\n");
config.toXML((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        QuickServer quickServer = new QuickServer("http://localhost:8080");
        QuickServerConfig config = quickServer.getConfig();
        config.setBindAddr("127.0.0.1");
        config.toXML(((String) (null)));
    }
}
statement is: // Improved test data
QuickServer quickServer = new QuickServer("http://localhost:8080"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: QuickServerConfig config = quickServer.getConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServer.getConfig() target is: quickServer method is: getConfig()
source statement: org.quickserver.net.server.QuickServer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.quickserver.net.server.QuickServerindex is: 1
Matched Method is: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig;
statement is: config.setBindAddr("127.0.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: config.setBindAddr("127.0.0.1") target is: config method is: setBindAddr(java.lang.String)
source statement: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 2
Matched Method is: setBindAddr(Ljava/lang/String;)V
statement is: config.toXML(((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: config.toXML(((String) (null))) target is: config method is: toXML(java.lang.String)
source statement: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 2
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "http://localhost:8080";
QuickServer quickServer = new QuickServer(string);
((QuickServer) string).getConfig();
String string = "127.0.0.1";
quickServer.setBindAddr(string);
String string = null;
((QuickServerConfig) quickServer).toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = quickServerConfig.toString()
statement is: setClientCommandHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientCommandHandler(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("J:LXYDE[]zq_z32")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setClientCommandHandler(string);
quickServerConfig.toXML("J:LXYDE[]zq_z32");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        String string = "ClientCommandHandler";
        quickServerConfig.setClientCommandHandler(string);
        quickServerConfig.toXML("J:LXYDE[]zq_z32");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String string = "ClientCommandHandler", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: quickServerConfig.setClientCommandHandler(string), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientCommandHandler(string) target is: quickServerConfig method is: setClientCommandHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientCommandHandler(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("J:LXYDE[]zq_z32"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("J:LXYDE[]zq_z32") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "ClientCommandHandler";
quickServerConfig.setClientCommandHandler(string);
String string = "J:LXYDE[]zq_z32";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientObjectHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientObjectHandler("Error creating secure socket : ")
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = quickServerConfig.toString()
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML(arg0)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
        String string = "QuickServerConfig{clientObjectHandler=Error creating secure socket : }";
        quickServerConfig.toXML(string);
        String invalidXmlData = "";
        quickServerConfig.toXML(invalidXmlData);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientObjectHandler("Error creating secure socket : "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientObjectHandler("Error creating secure socket : ") target is: quickServerConfig method is: setClientObjectHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientObjectHandler(Ljava/lang/String;)V
statement is: String string = "QuickServerConfig{clientObjectHandler=Error creating secure socket : }", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: quickServerConfig.toXML(string), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(string) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
statement is: String invalidXmlData = "", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: quickServerConfig.toXML(invalidXmlData), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(invalidXmlData) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "Error creating secure socket : ";
quickServerConfig.setClientObjectHandler(string);
String string = "QuickServerConfig{clientObjectHandler=Error creating secure socket : }";
quickServerConfig.toXML(string);
String string = "";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientBinaryHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientBinaryHandler("")
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = quickServerConfig.toString()
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML(arg0)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientBinaryHandler("binary_handler");
        String string = quickServerConfig.toString();
        quickServerConfig.toXML(string);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientBinaryHandler("binary_handler"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientBinaryHandler("binary_handler") target is: quickServerConfig method is: setClientBinaryHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientBinaryHandler(Ljava/lang/String;)V
statement is: String string = quickServerConfig.toString(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toString() target is: quickServerConfig method is: toString()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toString()Ljava/lang/String;
statement is: quickServerConfig.toXML(string), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(string) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "binary_handler";
quickServerConfig.setClientBinaryHandler(string);
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientWriteHandler(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientWriteHandler("Nl lv/D/1OX")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML((String) null)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
        quickServerConfig.toXML(((String) ("client_write_handler_test.xml")));
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientWriteHandler("Nl lv/D/1OX"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientWriteHandler("Nl lv/D/1OX") target is: quickServerConfig method is: setClientWriteHandler(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientWriteHandler(Ljava/lang/String;)V
statement is: quickServerConfig.toXML(((String) ("client_write_handler_test.xml"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(((String) ("client_write_handler_test.xml"))) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "Nl lv/D/1OX";
quickServerConfig.setClientWriteHandler(string);
String string = "client_write_handler_test.xml";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setClientData(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setClientData("5y]9M`rY<7")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("]3$j")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("5y]9M`rY<7");
quickServerConfig.toXML("]3$j");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setClientData("ThisIsAStringOfRandomCharacters1234567890");
        quickServerConfig.toXML("ThisIsAnXMLStringOfRandomCharactersABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setClientData("ThisIsAStringOfRandomCharacters1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setClientData("ThisIsAStringOfRandomCharacters1234567890") target is: quickServerConfig method is: setClientData(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setClientData(Ljava/lang/String;)V
statement is: quickServerConfig.toXML("ThisIsAnXMLStringOfRandomCharactersABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("ThisIsAnXMLStringOfRandomCharactersABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "ThisIsAStringOfRandomCharacters1234567890";
quickServerConfig.setClientData(string);
String string = "ThisIsAnXMLStringOfRandomCharactersABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setConsoleLoggingFormatter(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setConsoleLoggingFormatter("\t<client-event-handler>")
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML((String) null)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<client-event-handler>");
quickServerConfig.toXML((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        quickServerConfig.setConsoleLoggingFormatter("&lt;client-event-handler&gt;");
        quickServerConfig.toXML(null);
    }
}
statement is: quickServerConfig.setConsoleLoggingFormatter("&lt;client-event-handler&gt;"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setConsoleLoggingFormatter("&lt;client-event-handler&gt;") target is: quickServerConfig method is: setConsoleLoggingFormatter(java.lang.String)
statement is: quickServerConfig.toXML(null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(null) target is: quickServerConfig method is: toXML(<unknown>)
statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.AccessConstraintConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.AccessConstraintConfig
statement code is: AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig()
statement is: setAccessConstraintConfig(Lorg/quickserver/util/xmlreader/AccessConstraintConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setAccessConstraintConfig(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setAccessConstraintConfig(new AccessConstraintConfig(1, "admin", "password"));
        String expectedXML = ((((((((((("<quick-server>" + System.lineSeparator()) + "  <access-constraint>") + System.lineSeparator()) + "    <user>admin</user>") + System.lineSeparator()) + "    <password>password</password>") + System.lineSeparator()) + "    <permission-level>1</permission-level>") + System.lineSeparator()) + "  </access-constraint>") + System.lineSeparator()) + "</quick-server>";
        String actualXML = quickServerConfig.toXML("");
        Assert.assertEquals(expectedXML, actualXML);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setAccessConstraintConfig(new AccessConstraintConfig(1, "admin", "password")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setAccessConstraintConfig(new AccessConstraintConfig(1, "admin", "password")) target is: quickServerConfig method is: setAccessConstraintConfig(AccessConstraintConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setAccessConstraintConfig(Lorg/quickserver/util/xmlreader/AccessConstraintConfig;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: String expectedXML = ((((((((((("<quick-server>" + System.lineSeparator()) + "  <access-constraint>") + System.lineSeparator()) + "    <user>admin</user>") + System.lineSeparator()) + "    <password>password</password>") + System.lineSeparator()) + "    <permission-level>1</permission-level>") + System.lineSeparator()) + "  </access-constraint>") + System.lineSeparator()) + "</quick-server>", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: ((((((((((("<quick-server>" + System.lineSeparator()) + "  <access-constraint>") + System.lineSeparator()) + "    <user>admin</user>") + System.lineSeparator()) + "    <password>password</password>") + System.lineSeparator()) + "    <permission-level>1</permission-level>") + System.lineSeparator()) + "  </access-constraint>") + System.lineSeparator()) + "</quick-server>"
statement is: String actualXML = quickServerConfig.toXML(""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
statement is: Assert.assertEquals(expectedXML, actualXML), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertEquals(expectedXML, actualXML) target is: Assert method is: assertEquals(java.lang.String,java.lang.String)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = null;
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
String string = "";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.QSAdminServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig()
statement is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setQSAdminServerConfig(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML("qzTV4+zcZL)ONLP=~<O")
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("qzTV4+zcZL)ONLP=~<O");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
        quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
        quickServerConfig.toXML("C:/Program Files/QuickTime/QuickTime Player.exe");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig) target is: quickServerConfig method is: setQSAdminServerConfig(QSAdminServerConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V
statement is: quickServerConfig.toXML("C:/Program Files/QuickTime/QuickTime Player.exe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("C:/Program Files/QuickTime/QuickTime Player.exe") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
String string = "C:/Program Files/QuickTime/QuickTime Player.exe";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.net.server.QuickServer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.server.QuickServer
statement code is: QuickServer quickServer = new QuickServer()
statement is: getServerHooks()Lorg/quickserver/util/xmlreader/ServerHooks; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.ServerHooks
statement code is: ServerHooks serverHooks = quickServer.getServerHooks()
statement is: setServerHooks(Lorg/quickserver/util/xmlreader/ServerHooks;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setServerHooks(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML((String) null)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        QuickServer quickServer = new QuickServer();
        ServerHooks serverHooks = quickServer.getServerHooks();
        quickServerConfig.setServerHooks(serverHooks);
        quickServerConfig.toXML(((String) ("path/to/config/file")));
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: QuickServer quickServer = new QuickServer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ServerHooks serverHooks = quickServer.getServerHooks(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServer.getServerHooks() target is: quickServer method is: getServerHooks()
source statement: org.quickserver.net.server.QuickServer()V callee: VariableReference: Statement 1, type org.quickserver.net.server.QuickServerindex is: 1
Matched Method is: getServerHooks()Lorg/quickserver/util/xmlreader/ServerHooks;
statement is: quickServerConfig.setServerHooks(serverHooks), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setServerHooks(serverHooks) target is: quickServerConfig method is: setServerHooks(ServerHooks)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setServerHooks(Lorg/quickserver/util/xmlreader/ServerHooks;)V
statement is: quickServerConfig.toXML(((String) ("path/to/config/file"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML(((String) ("path/to/config/file"))) target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
String string = "path/to/config/file";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.InitServerHooks()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = new InitServerHooks()
statement is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setInitServerHooks(arg0)
statement is: toXML(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xML = quickServerConfig.toXML((String) null)
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        // Improve the test data by changing the primitive values and Strings to more descriptive examples
        quickServerConfig.setInitServerHooks(new InitServerHooks());
        quickServerConfig.toXML("my_server.xml");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improve the test data by changing the primitive values and Strings to more descriptive examples
quickServerConfig.setInitServerHooks(new InitServerHooks()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improve the test data by changing the primitive values and Strings to more descriptive examples
quickServerConfig.setInitServerHooks(new InitServerHooks()) target is: quickServerConfig method is: setInitServerHooks(InitServerHooks)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V
statement is: quickServerConfig.toXML("my_server.xml"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.toXML("my_server.xml") target is: quickServerConfig method is: toXML(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: toXML(Ljava/lang/String;)Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
String string = "my_server.xml";
quickServerConfig.toXML(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.ApplicationConfiguration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration()
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object put = applicationConfiguration.put(arg0, (Object) null)
statement is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationConfiguration(arg0)
statement is: getApplicationConfiguration()Lorg/quickserver/util/xmlreader/ApplicationConfiguration; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.ApplicationConfiguration
statement code is: ApplicationConfiguration applicationConfiguration = quickServerConfig.getApplicationConfiguration()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put(object, (Object) null);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
        Object object = new Object();
        applicationConfiguration.put(object, "This value represents an example of a string");
        quickServerConfig.setApplicationConfiguration(applicationConfiguration);
        quickServerConfig.getApplicationConfiguration();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: applicationConfiguration.put(object, "This value represents an example of a string"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: applicationConfiguration.put(object, "This value represents an example of a string") target is: applicationConfiguration method is: put(java.lang.Object,java.lang.String)
source statement: org.quickserver.util.xmlreader.ApplicationConfiguration()V callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.ApplicationConfigurationindex is: 1
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: quickServerConfig.setApplicationConfiguration(applicationConfiguration), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationConfiguration(applicationConfiguration) target is: quickServerConfig method is: setApplicationConfiguration(ApplicationConfiguration)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationConfiguration(Lorg/quickserver/util/xmlreader/ApplicationConfiguration;)V
statement is: quickServerConfig.getApplicationConfiguration(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getApplicationConfiguration() target is: quickServerConfig method is: getApplicationConfiguration()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getApplicationConfiguration()Lorg/quickserver/util/xmlreader/ApplicationConfiguration;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
String string = "This value represents an example of a string";
applicationConfiguration.put(object, string);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setApplicationJarPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationJarPath("")
statement is: getApplicationJarPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String applicationJarPath = quickServerConfig.getApplicationJarPath()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.getApplicationJarPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setApplicationJarPath("/home/user/myapp-1.0.jar");
        assertEquals("/home/user/myapp-1.0.jar", quickServerConfig.getApplicationJarPath());
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationJarPath("/home/user/myapp-1.0.jar"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationJarPath("/home/user/myapp-1.0.jar") target is: quickServerConfig method is: setApplicationJarPath(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationJarPath(Ljava/lang/String;)V
statement is: assertEquals("/home/user/myapp-1.0.jar", quickServerConfig.getApplicationJarPath()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("/home/user/myapp-1.0.jar", quickServerConfig.getApplicationJarPath()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "/home/user/myapp-1.0.jar";
quickServerConfig.setApplicationJarPath(string);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setApplicationJarPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setApplicationJarPath("\t</communication-logging>\n")
statement is: getApplicationJarPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String applicationJarPath = quickServerConfig.getApplicationJarPath()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("\t</communication-logging>\n");
quickServerConfig.getApplicationJarPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setApplicationJarPath("C:\\Program Files\\MyApp\\my-app.jar");
        String expectedJarPath = "C:\\Program Files\\MyApp\\my-app.jar";
        assertEquals(expectedJarPath, quickServerConfig.getApplicationJarPath());
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationJarPath("C:\\Program Files\\MyApp\\my-app.jar"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationJarPath("C:\\Program Files\\MyApp\\my-app.jar") target is: quickServerConfig method is: setApplicationJarPath(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setApplicationJarPath(Ljava/lang/String;)V
statement is: String expectedJarPath = "C:\\Program Files\\MyApp\\my-app.jar", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedJarPath, quickServerConfig.getApplicationJarPath()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedJarPath, quickServerConfig.getApplicationJarPath()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "C:\\Program Files\\MyApp\\my-app.jar"
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "C:\\Program Files\\MyApp\\my-app.jar";
quickServerConfig.setApplicationJarPath(string);
String string = "C:\\Program Files\\MyApp\\my-app.jar";

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: getApplicationJarPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String applicationJarPath = quickServerConfig.getApplicationJarPath()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setApplicationJarPath("C:\\path\\to\\my\\application.jar");
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setApplicationJarPath("C:\\path\\to\\my\\application.jar"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setApplicationJarPath("C:\\path\\to\\my\\application.jar") target is: quickServerConfig method is: setApplicationJarPath(java.lang.String)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setConfigFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setConfigFile("\t<max-connection-msg>")
statement is: getConfigFile()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String configFile = quickServerConfig.getConfigFile()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("\t<max-connection-msg>");
quickServerConfig.getConfigFile();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        quickServerConfig.setConfigFile("C:\\path\\to\\config.xml");
        quickServerConfig.getConfigFile();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setConfigFile("C:\\path\\to\\config.xml"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setConfigFile("C:\\path\\to\\config.xml") target is: quickServerConfig method is: setConfigFile(java.lang.String)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setConfigFile(Ljava/lang/String;)V
statement is: quickServerConfig.getConfigFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getConfigFile() target is: quickServerConfig method is: getConfigFile()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getConfigFile()Ljava/lang/String;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = "C:\\path\\to\\config.xml";
quickServerConfig.setConfigFile(string);
quickServerConfig.getConfigFile();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.DBObjectPoolConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig()
statement is: setDBObjectPoolConfig(Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setDBObjectPoolConfig(arg0)
statement is: getDBObjectPoolConfig()Lorg/quickserver/util/xmlreader/DBObjectPoolConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.DBObjectPoolConfig
statement code is: DBObjectPoolConfig dBObjectPoolConfig = quickServerConfig.getDBObjectPoolConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig(100, 60);
        quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
        quickServerConfig.getDBObjectPoolConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig(100, 60), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig) target is: quickServerConfig method is: setDBObjectPoolConfig(DBObjectPoolConfig)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setDBObjectPoolConfig(Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: quickServerConfig.getDBObjectPoolConfig(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getDBObjectPoolConfig() target is: quickServerConfig method is: getDBObjectPoolConfig()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getDBObjectPoolConfig()Lorg/quickserver/util/xmlreader/DBObjectPoolConfig;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = null;
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();

statement is: org.quickserver.net.server.QuickServer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.net.server.QuickServer
statement code is: QuickServer quickServer = new QuickServer("")
statement is: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig config = quickServer.getConfig()
statement is: org.quickserver.util.xmlreader.InitServerHooks()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = new InitServerHooks()
statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = initServerHooks.add((Object) arg0)
statement is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setInitServerHooks(arg0)
statement is: getInitServerHooks()Lorg/quickserver/util/xmlreader/InitServerHooks; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = quickServerConfig.getInitServerHooks()
test data is: QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
Integer integer = new Integer(0);
initServerHooks.add((Object) integer);
config.setInitServerHooks(initServerHooks);
config.getInitServerHooks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServer quickServer = new QuickServer("my-quickserver");
        QuickServerConfig config = quickServer.getConfig();
        InitServerHooks initServerHooks = new InitServerHooks();
        Integer integer = new Integer(12345);
        initServerHooks.add(((Object) (integer)));
        config.setInitServerHooks(initServerHooks);
        config.getInitServerHooks();
    }
}
statement is: QuickServer quickServer = new QuickServer("my-quickserver"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: QuickServerConfig config = quickServer.getConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServer.getConfig() target is: quickServer method is: getConfig()
source statement: org.quickserver.net.server.QuickServer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.quickserver.net.server.QuickServerindex is: 1
Matched Method is: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig;
statement is: InitServerHooks initServerHooks = new InitServerHooks(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Integer integer = new Integer(12345), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: initServerHooks.add(((Object) (integer))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: initServerHooks.add(((Object) (integer))) target is: initServerHooks method is: add(java.lang.Object)
source statement: org.quickserver.util.xmlreader.InitServerHooks()V callee: VariableReference: Statement 2, type org.quickserver.util.xmlreader.InitServerHooksindex is: 3
Matched Method is: add(Ljava/lang/Object;)Z
statement is: config.setInitServerHooks(initServerHooks), class spoon.support.reflect.code.CtInvocationImpl
invocation is: config.setInitServerHooks(initServerHooks) target is: config method is: setInitServerHooks(InitServerHooks)
source statement: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 2
Matched Method is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V
statement is: config.getInitServerHooks(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: config.getInitServerHooks() target is: config method is: getInitServerHooks()
source statement: getConfig()Lorg/quickserver/util/xmlreader/QuickServerConfig; callee: VariableReference: Statement 1, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 2
Matched Method is: getInitServerHooks()Lorg/quickserver/util/xmlreader/InitServerHooks;
TestCase is: String string = "my-quickserver";
QuickServer quickServer = new QuickServer(string);
QuickServerConfig config = ((QuickServer) string).getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
int _int = 12345;
Integer integer = new Integer(_int);
((ArrayList) config).add((Object) integer);
((QuickServerConfig) quickServer).setInitServerHooks(initServerHooks);
((QuickServerConfig) quickServer).getInitServerHooks();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.InitServerHooks()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = new InitServerHooks()
statement is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setInitServerHooks(arg0)
statement is: getInitServerHooks()Lorg/quickserver/util/xmlreader/InitServerHooks; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.InitServerHooks
statement code is: InitServerHooks initServerHooks = quickServerConfig.getInitServerHooks()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        InitServerHooks initServerHooks = new InitServerHooks();
        quickServerConfig.setInitServerHooks(initServerHooks);
        quickServerConfig.getInitServerHooks();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InitServerHooks initServerHooks = new InitServerHooks(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: quickServerConfig.setInitServerHooks(initServerHooks), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setInitServerHooks(initServerHooks) target is: quickServerConfig method is: setInitServerHooks(InitServerHooks)
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setInitServerHooks(Lorg/quickserver/util/xmlreader/InitServerHooks;)V
statement is: quickServerConfig.getInitServerHooks(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.getInitServerHooks() target is: quickServerConfig method is: getInitServerHooks()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: getInitServerHooks()Lorg/quickserver/util/xmlreader/InitServerHooks;
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: org.quickserver.util.xmlreader.QSAdminServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig()
statement is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setQSAdminServerConfig(arg0)
statement is: getQSAdminServerConfig()Lorg/quickserver/util/xmlreader/QSAdminServerConfig; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.quickserver.util.xmlreader.QSAdminServerConfig
statement code is: QSAdminServerConfig qSAdminServerConfig = quickServerConfig.getQSAdminServerConfig()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
        qSAdminServerConfig.setHost("127.0.0.1");
        qSAdminServerConfig.setPort(8080);
        quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
        assertEquals(quickServerConfig.getQSAdminServerConfig(), qSAdminServerConfig);
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: qSAdminServerConfig.setHost("127.0.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: qSAdminServerConfig.setHost("127.0.0.1") target is: qSAdminServerConfig method is: setHost(java.lang.String)
statement is: qSAdminServerConfig.setPort(8080), class spoon.support.reflect.code.CtInvocationImpl
invocation is: qSAdminServerConfig.setPort(8080) target is: qSAdminServerConfig method is: setPort(int)
statement is: quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig) target is: quickServerConfig method is: setQSAdminServerConfig()
source statement: org.quickserver.util.xmlreader.QuickServerConfig()V callee: VariableReference: Statement 0, type org.quickserver.util.xmlreader.QuickServerConfigindex is: 0
Matched Method is: setQSAdminServerConfig(Lorg/quickserver/util/xmlreader/QSAdminServerConfig;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertEquals(quickServerConfig.getQSAdminServerConfig(), qSAdminServerConfig), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(quickServerConfig.getQSAdminServerConfig(), qSAdminServerConfig) target is:  method is: assertEquals(<unknown>,<unknown>)
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = null;
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass("")
statement is: getSecurityManagerClass()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String securityManagerClass = quickServerConfig.getSecurityManagerClass()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

statement is: org.quickserver.util.xmlreader.QuickServerConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.quickserver.util.xmlreader.QuickServerConfig
statement code is: QuickServerConfig quickServerConfig = new QuickServerConfig()
statement is: setSecurityManagerClass(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: quickServerConfig.setSecurityManagerClass("\t<max-connection-msg>")
statement is: getSecurityManagerClass()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String securityManagerClass = quickServerConfig.getSecurityManagerClass()
test data is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("\t<max-connection-msg>");
quickServerConfig.getSecurityManagerClass();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QuickServerConfig quickServerConfig = new QuickServerConfig();
    }
}
statement is: QuickServerConfig quickServerConfig = new QuickServerConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: QuickServerConfig quickServerConfig = new QuickServerConfig();

* test suite isTestSuite: 77
Test 0: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
Test 1: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setAuthenticator(string);
quickServerConfig.toXML("</enable>\n");
Test 2: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
Test 3: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 4: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 5: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
Test 6: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("</enable>\n");
quickServerConfig.toXML("</enable>\n");
Test 7: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("No ClientPool available yet!");
quickServerConfig.toXML("]3$j");
Test 8: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 9: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("InputStream is still null!");
quickServerConfig.toXML("</enable>\n");
Test 10: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
dBObjectPoolConfig.toXML("((");
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("((<db-object-pool>\n((\t<db-pool-util>null</db-pool-util>\n((</db-object-pool>\n");
Test 11: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.toXML("]3$j");
Test 12: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
Test 13: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
Test 14: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
Test 15: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
Test 16: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
Test 17: 
QuickServer quickServer = new QuickServer("</authenticator>\n");
QuickServerConfig config = quickServer.getConfig();
config.setBindAddr("</authenticator>\n");
config.toXML((String) null);
Test 18: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setClientCommandHandler(string);
quickServerConfig.toXML("J:LXYDE[]zq_z32");
Test 19: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 20: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 21: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML((String) null);
Test 22: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("5y]9M`rY<7");
quickServerConfig.toXML("]3$j");
Test 23: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<client-event-handler>");
quickServerConfig.toXML((String) null);
Test 24: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");
Test 25: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("qzTV4+zcZL)ONLP=~<O");
Test 26: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML((String) null);
Test 27: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML((String) null);
Test 28: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put(object, (Object) null);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 29: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.getApplicationJarPath();
Test 30: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("\t</communication-logging>\n");
quickServerConfig.getApplicationJarPath();
Test 31: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
Test 32: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("\t<max-connection-msg>");
quickServerConfig.getConfigFile();
Test 33: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();
Test 34: 
QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
Integer integer = new Integer(0);
initServerHooks.add((Object) integer);
config.setInitServerHooks(initServerHooks);
config.getInitServerHooks();
Test 35: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();
Test 36: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 37: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();
Test 38: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("\t<max-connection-msg>");
quickServerConfig.getSecurityManagerClass();
Test 39: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("/path/to/config/file");
quickServerConfig.getConfigFile();

Test 40: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setAuthenticator("Basic");
quickServerConfig.toXML("<enable>true</enable>\n");

Test 41: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 42: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("0=09&c-xx7yJ2^");

Test 43: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);

Test 44: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 45: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.CustomSecurityManager");
quickServerConfig.toXML("com.example.CustomSecurityManager");

Test 46: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("The server is currently offline due to maintenance.");
quickServerConfig.toXML("MJ34@t");

Test 47: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");

Test 48: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("Error while reading from input stream!");
quickServerConfig.toXML("</enable>\n");

Test 49: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
dBObjectPoolConfig.toXML("((");
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("((<db-object-pool>\n((\t<db-pool-util>null</db-pool-util>\n((</db-object-pool>\n");

Test 50: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/path/to/myapp.jar");
quickServerConfig.toXML("MyApp");

Test 51: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 52: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 53: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();

Test 54: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 55: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 56: 
QuickServer quickServer = new QuickServer("http://localhost:8080");
((QuickServer)"http://localhost:8080").getConfig();
String string = "127.0.0.1";
quickServer.setBindAddr(string);
String string = null;
((QuickServerConfig) quickServer).toXML(string);

Test 57: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("ClientCommandHandler");
quickServerConfig.toXML("J:LXYDE[]zq_z32");

Test 58: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
quickServerConfig.toXML("QuickServerConfig{clientObjectHandler=Error creating secure socket : }");
quickServerConfig.toXML("");

Test 59: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("binary_handler");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);

Test 60: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML("client_write_handler_test.xml");

Test 61: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("ThisIsAStringOfRandomCharacters1234567890");
quickServerConfig.toXML("ThisIsAnXMLStringOfRandomCharactersABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");

Test 62: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setAccessConstraintConfig((AccessConstraintConfig) null);
quickServerConfig.toXML("");

Test 63: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("C:/Program Files/QuickTime/QuickTime Player.exe");

Test 64: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("path/to/config/file");

Test 65: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("my_server.xml");

Test 66: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put(object, "This value represents an example of a string");
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();

Test 67: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/home/user/myapp-1.0.jar");

Test 68: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("C:Program FilesMyAppmy-app.jar");

Test 69: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 70: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("C:path\toconfig.xml");
quickServerConfig.getConfigFile();

Test 71: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setDBObjectPoolConfig((DBObjectPoolConfig) null);
quickServerConfig.getDBObjectPoolConfig();

Test 72: 
QuickServer quickServer = new QuickServer("my-quickserver");
QuickServerConfig config = ((QuickServer)"my-quickserver").getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
int _int = 12345;
Integer integer = new Integer(_int);
((ArrayList) config).add((Object) integer);
((QuickServerConfig) quickServer).setInitServerHooks(initServerHooks);
((QuickServerConfig) quickServer).getInitServerHooks();

Test 73: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();

Test 74: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setQSAdminServerConfig((QSAdminServerConfig) null);

Test 75: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 76: 
QuickServerConfig quickServerConfig = new QuickServerConfig();


* Generated after the refinement and before minimization 77 tests with total length 248
* test suite isTestSuite: 77
Test 0: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
Test 1: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setAuthenticator(string);
quickServerConfig.toXML("</enable>\n");
Test 2: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
Test 3: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 4: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 5: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
Test 6: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("</enable>\n");
quickServerConfig.toXML("</enable>\n");
Test 7: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("No ClientPool available yet!");
quickServerConfig.toXML("]3$j");
Test 8: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 9: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("InputStream is still null!");
quickServerConfig.toXML("</enable>\n");
Test 10: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
dBObjectPoolConfig.toXML("((");
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("((<db-object-pool>\n((\t<db-pool-util>null</db-pool-util>\n((</db-object-pool>\n");
Test 11: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.toXML("]3$j");
Test 12: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
Test 13: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
Test 14: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
Test 15: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
Test 16: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
Test 17: 
QuickServer quickServer = new QuickServer("</authenticator>\n");
QuickServerConfig config = quickServer.getConfig();
config.setBindAddr("</authenticator>\n");
config.toXML((String) null);
Test 18: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setClientCommandHandler(string);
quickServerConfig.toXML("J:LXYDE[]zq_z32");
Test 19: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 20: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 21: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML((String) null);
Test 22: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("5y]9M`rY<7");
quickServerConfig.toXML("]3$j");
Test 23: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<client-event-handler>");
quickServerConfig.toXML((String) null);
Test 24: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");
Test 25: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("qzTV4+zcZL)ONLP=~<O");
Test 26: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML((String) null);
Test 27: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML((String) null);
Test 28: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put(object, (Object) null);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 29: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.getApplicationJarPath();
Test 30: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("\t</communication-logging>\n");
quickServerConfig.getApplicationJarPath();
Test 31: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
Test 32: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("\t<max-connection-msg>");
quickServerConfig.getConfigFile();
Test 33: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();
Test 34: 
QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
Integer integer = new Integer(0);
initServerHooks.add((Object) integer);
config.setInitServerHooks(initServerHooks);
config.getInitServerHooks();
Test 35: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();
Test 36: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 37: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();
Test 38: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("\t<max-connection-msg>");
quickServerConfig.getSecurityManagerClass();
Test 39: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("/path/to/config/file");
quickServerConfig.getConfigFile();

Test 40: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setAuthenticator("Basic");
quickServerConfig.toXML("<enable>true</enable>\n");

Test 41: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 42: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("0=09&c-xx7yJ2^");

Test 43: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);

Test 44: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 45: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.CustomSecurityManager");
quickServerConfig.toXML("com.example.CustomSecurityManager");

Test 46: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("The server is currently offline due to maintenance.");
quickServerConfig.toXML("MJ34@t");

Test 47: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");

Test 48: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("Error while reading from input stream!");
quickServerConfig.toXML("</enable>\n");

Test 49: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
dBObjectPoolConfig.toXML("((");
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("((<db-object-pool>\n((\t<db-pool-util>null</db-pool-util>\n((</db-object-pool>\n");

Test 50: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/path/to/myapp.jar");
quickServerConfig.toXML("MyApp");

Test 51: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 52: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 53: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();

Test 54: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 55: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 56: 
QuickServer quickServer = new QuickServer("http://localhost:8080");
((QuickServer)"http://localhost:8080").getConfig();
String string = "127.0.0.1";
quickServer.setBindAddr(string);
String string = null;
((QuickServerConfig) quickServer).toXML(string);

Test 57: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("ClientCommandHandler");
quickServerConfig.toXML("J:LXYDE[]zq_z32");

Test 58: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
quickServerConfig.toXML("QuickServerConfig{clientObjectHandler=Error creating secure socket : }");
quickServerConfig.toXML("");

Test 59: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("binary_handler");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);

Test 60: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML("client_write_handler_test.xml");

Test 61: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("ThisIsAStringOfRandomCharacters1234567890");
quickServerConfig.toXML("ThisIsAnXMLStringOfRandomCharactersABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");

Test 62: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setAccessConstraintConfig((AccessConstraintConfig) null);
quickServerConfig.toXML("");

Test 63: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("C:/Program Files/QuickTime/QuickTime Player.exe");

Test 64: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("path/to/config/file");

Test 65: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("my_server.xml");

Test 66: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put(object, "This value represents an example of a string");
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();

Test 67: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/home/user/myapp-1.0.jar");

Test 68: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("C:Program FilesMyAppmy-app.jar");

Test 69: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 70: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("C:path\toconfig.xml");
quickServerConfig.getConfigFile();

Test 71: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setDBObjectPoolConfig((DBObjectPoolConfig) null);
quickServerConfig.getDBObjectPoolConfig();

Test 72: 
QuickServer quickServer = new QuickServer("my-quickserver");
QuickServerConfig config = ((QuickServer)"my-quickserver").getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
int _int = 12345;
Integer integer = new Integer(_int);
((ArrayList) config).add((Object) integer);
((QuickServerConfig) quickServer).setInitServerHooks(initServerHooks);
((QuickServerConfig) quickServer).getInitServerHooks();

Test 73: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();

Test 74: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setQSAdminServerConfig((QSAdminServerConfig) null);

Test 75: 
QuickServerConfig quickServerConfig = new QuickServerConfig();

Test 76: 
QuickServerConfig quickServerConfig = new QuickServerConfig();


* Minimizing test suite
* test suite isTestSuite: 39
Test 0: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("/path/to/config/file");
quickServerConfig.getConfigFile();
Test 1: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML("my_server.xml");
Test 2: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("C:/Program Files/QuickTime/QuickTime Player.exe");
Test 3: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
Test 4: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("0=09&c-xx7yJ2^");
Test 5: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML("((<db-object-pool>\n((\t<db-pool-util>null</db-pool-util>\n((</db-object-pool>\n");
Test 6: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
Test 7: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.CustomSecurityManager");
quickServerConfig.toXML("com.example.CustomSecurityManager");
Test 8: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("The server is currently offline due to maintenance.");
quickServerConfig.toXML("MJ34@t");
Test 9: 
QuickServer quickServer = new QuickServer("</authenticator>\n");
QuickServerConfig config = quickServer.getConfig();
config.setBindAddr("</authenticator>\n");
config.toXML((String) null);
Test 10: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 11: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("ClientCommandHandler");
quickServerConfig.toXML("J:LXYDE[]zq_z32");
Test 12: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
quickServerConfig.toXML("QuickServerConfig{clientObjectHandler=Error creating secure socket : }");
Test 13: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("binary_handler");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 14: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML("client_write_handler_test.xml");
Test 15: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setAuthenticator("Basic");
quickServerConfig.toXML("<enable>true</enable>\n");
Test 16: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("ThisIsAStringOfRandomCharacters1234567890");
quickServerConfig.toXML("ThisIsAnXMLStringOfRandomCharactersABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
Test 17: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("Error while reading from input stream!");
quickServerConfig.toXML("</enable>\n");
Test 18: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<client-event-handler>");
quickServerConfig.toXML((String) null);
Test 19: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");
Test 20: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/path/to/myapp.jar");
quickServerConfig.toXML("MyApp");
Test 21: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML("path/to/config/file");
Test 22: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
Test 23: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
Test 24: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
Test 25: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
Test 26: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
Test 27: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
Test 28: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put(object, "This value represents an example of a string");
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 29: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 30: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.getApplicationJarPath();
Test 31: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("\t</communication-logging>\n");
quickServerConfig.getApplicationJarPath();
Test 32: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
Test 33: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();
Test 34: 
QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
Integer integer = new Integer(0);
initServerHooks.add((Object) integer);
config.setInitServerHooks(initServerHooks);
config.getInitServerHooks();
Test 35: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();
Test 36: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 37: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();
Test 38: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("\t<max-connection-msg>");
quickServerConfig.getSecurityManagerClass();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 69
* Number of covered goals: 63
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 96
* Number of covered goals: 95
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 44
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 69
* Number of covered goals: 63
* Generated 39 tests with total length 129
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("/path/to/config/file");
quickServerConfig.getConfigFile();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameWithConfigFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks arg0 = new InitServerHooks();
quickServerConfig.setInitServerHooks(arg0);
quickServerConfig.toXML("my_server.xml");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetNameAndRetrieveCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig arg0 = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(arg0);
quickServerConfig.toXML("C:/Program Files/QuickTime/QuickTime Player.exe");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQuickServerConfigToXML
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetConfigFileReturnsCorrectServerName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig arg0 = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(arg0);
quickServerConfig.toXML("0=09&c-xx7yJ2^");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQuickServerConfigDBObjectPool
* Compiling Tests
refined test name is: testDBObjectPoolConfigProperties
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration arg0 = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(arg0);
quickServerConfig.toXML("((<db-object-pool>\n((\t<db-pool-util>null</db-pool-util>\n((</db-object-pool>\n");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testToXMLSetsNameProperty
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testNullSecurityManagerClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("com.example.CustomSecurityManager");
quickServerConfig.toXML("com.example.CustomSecurityManager");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQuickServerConfigWithCustomSecurityManager
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("The server is currently offline due to maintenance.");
quickServerConfig.toXML("MJ34@t");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testConvertConfigurationToXMLWhenMaintenanceMode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServer quickServer = new QuickServer("</authenticator>\n");
QuickServerConfig config = quickServer.getConfig();
config.setBindAddr("</authenticator>\n");
config.toXML((String) null);
assertEquals("QuickServer v2.0.0 RC1", config.getName());


** It was a parseable test case! 
refined test name is: testSetBindAddrValidValueUpdatesConfigurationName
* Compiling Tests
refined test name is: testConfigSetBindAddrShouldUpdateName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetClientEventHandlerAndSerializeAsXML
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientCommandHandler("ClientCommandHandler");
quickServerConfig.toXML("J:LXYDE[]zq_z32");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testToXMLWithRandomizedName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
quickServerConfig.toXML("QuickServerConfig{clientObjectHandler=Error creating secure socket : }");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testQuickServerConfigToXMLWithClientObjectHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("binary_handler");
String arg0 = quickServerConfig.toString();
quickServerConfig.toXML(arg0);
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetClientBinaryHandler
* Compiling Tests
refined test name is: testConvertToXML
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML("client_write_handler_test.xml");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testClientWriteHandlerIsSetCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setAuthenticator("Basic");
quickServerConfig.toXML("<enable>true</enable>\n");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameWithAuthenticatorBasic
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("ThisIsAStringOfRandomCharacters1234567890");
quickServerConfig.toXML("ThisIsAnXMLStringOfRandomCharactersABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSerializationAndDeserializationOfClientData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("Error while reading from input stream!");
quickServerConfig.toXML("</enable>\n");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetClientExtendedEventHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<client-event-handler>");
quickServerConfig.toXML((String) null);
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testSetConsoleLoggingFormatter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig arg0 = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(arg0);
quickServerConfig.toXML("");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: setAccessConstraintConfigTest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("/path/to/myapp.jar");
quickServerConfig.toXML("MyApp");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testToXMLWithNameReturnsCorrectVersionInformation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks arg0 = quickServer.getServerHooks();
quickServerConfig.setServerHooks(arg0);
quickServerConfig.toXML("path/to/config/file");
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testWriteQuickServerConfigToXML
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetSecurityManagerClassReturnsCorrectName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testDefaultInitServerHooksAreEmptyList
* Compiling Tests
refined test name is: testGetInitServerHooksdefaultSettings
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
assertEquals("QuickServer v2.0.0 RC1", quickServerConfig.getName());


** It was a parseable test case! 
refined test name is: testGetNameMethodReturnsCorrectName
[MASTER] 14:32:46.054 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
[MASTER] 14:32:46.506 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 39
Test 0: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
Test 1: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setAuthenticator(string);
quickServerConfig.toXML("</enable>\n");
Test 2: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
Test 3: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 4: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 5: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
Test 6: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("</enable>\n");
quickServerConfig.toXML("</enable>\n");
Test 7: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("No ClientPool available yet!");
quickServerConfig.toXML("]3$j");
Test 8: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 9: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("InputStream is still null!");
quickServerConfig.toXML("</enable>\n");
Test 10: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String xML = dBObjectPoolConfig.toXML("((");
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML(xML);
Test 11: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.toXML("]3$j");
Test 12: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
Test 13: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
Test 14: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
Test 15: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
Test 16: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
Test 17: 
QuickServer quickServer = new QuickServer("</authenticator>\n");
QuickServerConfig config = quickServer.getConfig();
config.setBindAddr("</authenticator>\n");
config.toXML((String) null);
Test 18: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setClientCommandHandler(string);
quickServerConfig.toXML("J:LXYDE[]zq_z32");
Test 19: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 20: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 21: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML((String) null);
Test 22: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("5y]9M`rY<7");
quickServerConfig.toXML("]3$j");
Test 23: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<client-event-handler>");
quickServerConfig.toXML((String) null);
Test 24: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");
Test 25: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("qzTV4+zcZL)ONLP=~<O");
Test 26: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML((String) null);
Test 27: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML((String) null);
Test 28: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put(object, (Object) null);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 29: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.getApplicationJarPath();
Test 30: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("\t</communication-logging>\n");
quickServerConfig.getApplicationJarPath();
Test 31: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
Test 32: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("\t<max-connection-msg>");
quickServerConfig.getConfigFile();
Test 33: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();
Test 34: 
QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
Integer integer = new Integer(0);
initServerHooks.add((Object) integer);
config.setInitServerHooks(initServerHooks);
config.getInitServerHooks();
Test 35: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();
Test 36: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 37: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();
Test 38: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("\t<max-connection-msg>");
quickServerConfig.getSecurityManagerClass();

* Minimizing test suite
[MASTER] 14:33:01.163 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 39
Test 0: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.toXML("]3$j");
Test 1: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("");
quickServerConfig.getConfigFile();
Test 2: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.toXML((String) null);
Test 3: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.toXML("qzTV4+zcZL)ONLP=~<O");
Test 4: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getConfigFile();
Test 5: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 6: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 7: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setClientCommandHandler(string);
quickServerConfig.toXML("J:LXYDE[]zq_z32");
Test 8: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass((String) null);
Test 9: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("</enable>\n");
quickServerConfig.toXML("</enable>\n");
Test 10: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setServerBanner("No ClientPool available yet!");
quickServerConfig.toXML("]3$j");
Test 11: 
QuickServer quickServer = new QuickServer("</authenticator>\n");
QuickServerConfig config = quickServer.getConfig();
config.setBindAddr("</authenticator>\n");
config.toXML((String) null);
Test 12: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientEventHandler("joiY");
quickServerConfig.toXML("0=-09&c\u0000xx7yJ2^");
Test 13: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientObjectHandler("Error creating secure socket : ");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 14: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientBinaryHandler("");
String string = quickServerConfig.toString();
quickServerConfig.toXML(string);
Test 15: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientWriteHandler("Nl lv/D/1OX");
quickServerConfig.toXML((String) null);
Test 16: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
String string = quickServerConfig.toString();
quickServerConfig.setAuthenticator(string);
quickServerConfig.toXML("</enable>\n");
Test 17: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientData("5y]9M`rY<7");
quickServerConfig.toXML("]3$j");
Test 18: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setClientExtendedEventHandler("InputStream is still null!");
quickServerConfig.toXML("</enable>\n");
Test 19: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConsoleLoggingFormatter("\t<client-event-handler>");
quickServerConfig.toXML((String) null);
Test 20: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
AccessConstraintConfig accessConstraintConfig = new AccessConstraintConfig();
quickServerConfig.setAccessConstraintConfig(accessConstraintConfig);
quickServerConfig.toXML("");
Test 21: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
String xML = dBObjectPoolConfig.toXML("((");
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.toXML(xML);
Test 22: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QuickServer quickServer = new QuickServer();
ServerHooks serverHooks = quickServer.getServerHooks();
quickServerConfig.setServerHooks(serverHooks);
quickServerConfig.toXML((String) null);
Test 23: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getSecurityManagerClass();
Test 24: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getInitServerHooks();
Test 25: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationJarPath();
Test 26: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getDBObjectPoolConfig();
Test 27: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getApplicationConfiguration();
Test 28: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.getQSAdminServerConfig();
Test 29: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
Object object = new Object();
applicationConfiguration.put(object, (Object) null);
quickServerConfig.setApplicationConfiguration(applicationConfiguration);
quickServerConfig.getApplicationConfiguration();
Test 30: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("");
quickServerConfig.getApplicationJarPath();
Test 31: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setApplicationJarPath("\t</communication-logging>\n");
quickServerConfig.getApplicationJarPath();
Test 32: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setConfigFile("\t<max-connection-msg>");
quickServerConfig.getConfigFile();
Test 33: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
DBObjectPoolConfig dBObjectPoolConfig = new DBObjectPoolConfig();
quickServerConfig.setDBObjectPoolConfig(dBObjectPoolConfig);
quickServerConfig.getDBObjectPoolConfig();
Test 34: 
QuickServer quickServer = new QuickServer("");
QuickServerConfig config = quickServer.getConfig();
InitServerHooks initServerHooks = new InitServerHooks();
Integer integer = new Integer(0);
initServerHooks.add((Object) integer);
config.setInitServerHooks(initServerHooks);
config.getInitServerHooks();
Test 35: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
InitServerHooks initServerHooks = new InitServerHooks();
quickServerConfig.setInitServerHooks(initServerHooks);
quickServerConfig.getInitServerHooks();
Test 36: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
QSAdminServerConfig qSAdminServerConfig = new QSAdminServerConfig();
quickServerConfig.setQSAdminServerConfig(qSAdminServerConfig);
quickServerConfig.getQSAdminServerConfig();
Test 37: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("");
quickServerConfig.getSecurityManagerClass();
Test 38: 
QuickServerConfig quickServerConfig = new QuickServerConfig();
quickServerConfig.setSecurityManagerClass("\t<max-connection-msg>");
quickServerConfig.getSecurityManagerClass();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 69
* Number of covered goals: 63
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 96
* Number of covered goals: 95
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 66%
* Total number of goals: 44
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 69
* Number of covered goals: 63
[MASTER] 14:33:01.368 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generated 39 tests with total length 134
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
[MASTER] 14:33:03.813 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.094 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.146 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.226 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.228 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.304 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.305 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.375 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.377 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.453 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.509 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.511 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.578 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.579 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.641 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.642 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.721 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.722 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.820 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.822 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:07.940 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:07.946 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.017 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.018 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.081 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.155 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.156 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.218 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.222 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.308 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.310 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.396 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.398 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.477 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.533 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.620 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.626 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.696 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.865 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.867 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:08.952 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:08.953 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.041 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.042 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.123 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.124 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.188 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.190 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.262 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.342 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
[MASTER] 14:33:09.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.516 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.518 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.615 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.616 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.735 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 14:33:09.736 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.872 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.874 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:33:09.968 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:09.970 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 14:33:10.064 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:10.066 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
[MASTER] 14:33:11.026 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:11.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
[MASTER] 14:33:12.228 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3080967331562069596.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:33:12.228 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3080967331562069596.jar
* Writing tests to file
[MASTER] 14:33:12.234 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'QuickServerConfig_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 15 called: 14 to improve: false
** Write a test suite: 25 called: 15 to improve: false
** Write a test suite: 29 called: 16 to improve: false
** Write a test suite: 34 called: 17 to improve: false
* Writing JUnit test case 'QuickServerConfig_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
* Done!

* Computation finished
