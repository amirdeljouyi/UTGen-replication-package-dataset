* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: jigl.image.ops.ConnectedComponents
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/89_jiggler/evosuite-files/evosuite.properties
* Connecting to master process on port 3388
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:56:33.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:56:33.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:56:33.216 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:56:33.632 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:56:33.633 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:56:33.645 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:56:34.711 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:56:34.742 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:56:34.743 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:56:34.743 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:56:34.743 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:56:34.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:56:34.744 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:56:34.745 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:56:34.745 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:56:34.753 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class jigl.image.ops.ConnectedComponents
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 241
* Using seed 1709819791949
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 36 / 241
[MASTER] 13:56:35.536 [logback-1] WARN  TestCluster - Failed to check cache for jigl.image.Image<T> : Type points to itself
[Progress:>                             0%] [Cov:=====================>             60%][Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             1%] [Cov:======================>            64%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             2%] [Cov:=======================>           67%][Progress:>                             2%] [Cov:=======================>           68%][Progress:>                             2%] [Cov:=======================>           68%][Progress:>                             2%] [Cov:=======================>           68%][Progress:>                             2%] [Cov:=======================>           68%][Progress:>                             2%] [Cov:=======================>           68%][Progress:>                             2%] [Cov:=======================>           68%][Progress:>                             3%] [Cov:=======================>           68%][Progress:>                             3%] [Cov:=======================>           68%][Progress:==>                           7%] [Cov:=======================>           68%][Progress:==>                           7%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 101s and 157 generations, 53613 statements, best individual has fitness: 40.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 75
* Number of covered goals: 67
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 62%
* Total number of goals: 16
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 74
* Number of covered goals: 61
* Generated 10 tests with total length 37
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 71%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'ConnectedComponents_ESTest' to evosuite-tests
* Done!

* Computation finished
