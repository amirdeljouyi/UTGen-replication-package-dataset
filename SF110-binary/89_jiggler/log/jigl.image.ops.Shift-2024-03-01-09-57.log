* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: jigl.image.ops.Shift
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/89_jiggler/evosuite-files/evosuite.properties
* Connecting to master process on port 10444
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:57:45.120 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 09:57:45.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 09:57:45.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 09:57:45.725 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:57:45.725 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:57:45.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:57:47.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 09:57:47.566 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 09:57:47.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 09:57:47.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 09:57:47.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 09:57:47.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 09:57:47.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 09:57:47.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 09:57:47.567 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 09:57:47.574 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class jigl.image.ops.Shift
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 220
* Using seed 1709287062008
* Starting evolution
* Initial Number of Goals in DynaMOSA = 82 / 220
[MASTER] 09:57:48.889 [logback-1] WARN  TestCluster - Failed to check cache for jigl.image.Image<T> : Type points to itself
[Progress:>                             1%] [Cov:===================>               57%][Progress:>                             2%] [Cov:=====================>             62%][Progress:>                             2%] [Cov:======================>            64%][Progress:>                             2%] [Cov:========================>          70%][Progress:>                             3%] [Cov:=========================>         72%][Progress:>                             3%] [Cov:=========================>         72%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:============================>      82%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    87%][Progress:=>                            4%] [Cov:==============================>    87%][Progress:=>                            4%] [Cov:==============================>    87%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:===============================>   89%][Progress:=>                            6%] [Cov:===============================>   89%][Progress:=>                            6%] [Cov:===============================>   89%][Progress:=>                            6%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           7%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   89%][Progress:==>                           8%] [Cov:===============================>   90%][Progress:==>                           8%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:==>                           9%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          10%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          11%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:===>                          12%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         14%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:====>                         15%] [Cov:===============================>   90%][Progress:==============================100%] [Cov:===============================>   90%]
* Search finished after 225s and 68 generations, 28841 statements, best individual has fitness: 23.0
[MASTER] 10:01:34.150 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 125 seconds more than allowed.
* Generated before the refinement 22 tests with total length 67
statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(3859, 0, 1)
statement is: jigl.image.types.GrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage grayImage = new GrayImage(1871, 3859)
statement is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(3859, 0, 1);
GrayImage grayImage = new GrayImage(1871, 3859);
shift.apply(grayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(3859, 0, 1);
        GrayImage grayImage = new GrayImage(1871, 3859);
        shift.apply(grayImage);
    }
}
statement is: Shift shift = new Shift(3859, 0, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GrayImage grayImage = new GrayImage(1871, 3859), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(grayImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(grayImage) target is: shift method is: apply(GrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage;
TestCase is: int _int = 3859;
int _int = 0;
int _int = 1;
Shift shift = new Shift(_int, _int, _int);
int _int = 1871;
int _int = 3859;
GrayImage grayImage = new GrayImage(_int, _int);
((Shift) _int).apply(grayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift((-7), (-7), (-7))
statement is: jigl.image.types.GrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage grayImage = new GrayImage(1, 1)
statement is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift((-7), (-7), (-7));
GrayImage grayImage = new GrayImage(1, 1);
shift.apply(grayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(-7, -7, -7);
        GrayImage grayImage = new GrayImage(1, 1);
        shift.apply(grayImage);
    }
}
statement is: Shift shift = new Shift(-7, -7, -7), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GrayImage grayImage = new GrayImage(1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(grayImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(grayImage) target is: shift method is: apply(GrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 0
Matched Method is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage;
TestCase is: Shift shift = new Shift((-7), (-7), (-7));
int _int = 1;
int _int = 1;
GrayImage grayImage = new GrayImage(_int, _int);
shift.apply(grayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(1, 1, 1)
statement is: jigl.image.types.GrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage grayImage = new GrayImage(0, 1)
statement is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(1, 1, 1);
GrayImage grayImage = new GrayImage(0, 1);
shift.apply(grayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(5, 2, 3);
        GrayImage grayImage = new GrayImage(0.5, 1.2);
        shift.apply(grayImage);
    }
}
statement is: Shift shift = new Shift(5, 2, 3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GrayImage grayImage = new GrayImage(0.5, 1.2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(grayImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(grayImage) target is: shift method is: apply(GrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage;
TestCase is: int _int = 5;
int _int = 2;
int _int = 3;
Shift shift = new Shift(_int, _int, _int);
double _double = 0.5;
double _double = 1.2;
GrayImage grayImage = new GrayImage((int) _double, (int) _double);
((Shift) _int).apply(grayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(0, 1, 1)
statement is: jigl.image.types.GrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage grayImage = new GrayImage(1, 1)
statement is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(0, 1, 1);
GrayImage grayImage = new GrayImage(1, 1);
shift.apply(grayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(0, 5, 2);
        GrayImage grayImage = new GrayImage(10, 10);
        shift.apply(grayImage);
    }
}
statement is: Shift shift = new Shift(0, 5, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GrayImage grayImage = new GrayImage(10, 10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(grayImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(grayImage) target is: shift method is: apply(GrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage;
TestCase is: int _int = 0;
int _int = 5;
int _int = 2;
Shift shift = new Shift(_int, _int, _int);
int _int = 10;
int _int = 10;
GrayImage grayImage = new GrayImage(_int, _int);
((Shift) _int).apply(grayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(1, 1, 1)
statement is: jigl.image.types.GrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage grayImage = new GrayImage(1, 1)
statement is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(1, 1, 1);
GrayImage grayImage = new GrayImage(1, 1);
shift.apply(grayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift("LEFT", "ORIGINAL_SIZE");
        GrayImage grayImage = new GrayImage("ORIGINAL_IMAGE");
        shift.apply(grayImage);
    }
}
statement is: Shift shift = new Shift("LEFT", "ORIGINAL_SIZE"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GrayImage grayImage = new GrayImage("ORIGINAL_IMAGE"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(grayImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(grayImage) target is: shift method is: apply(GrayImage)
statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(5, 5, 5)
statement is: jigl.image.types.ColorImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ColorImage
statement code is: ColorImage colorImage = new ColorImage(1509, 1)
statement is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/types/ColorImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.ColorImage
statement code is: ColorImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(5, 5, 5);
ColorImage colorImage = new ColorImage(1509, 1);
shift.apply(colorImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(shiftX, shiftY, shiftZ);
        ColorImage colorImage = new ColorImage(imageWidth, imageHeight, imageType);
        shift.apply(colorImage);
        // Improved test data
        Shift shift = new Shift(3, 4, 2);
        ColorImage colorImage = new ColorImage(1637, 1, "RGB");
        shift.apply(colorImage);
    }
}
statement is: Shift shift = new Shift(shiftX, shiftY, shiftZ), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ColorImage colorImage = new ColorImage(imageWidth, imageHeight, imageType), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(colorImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(colorImage) target is: shift method is: apply(ColorImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 0
Matched Method is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/types/ColorImage;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // Improved test data
Shift shift = new Shift(3, 4, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ColorImage colorImage = new ColorImage(1637, 1, "RGB"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(colorImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(colorImage) target is: shift method is: apply(ColorImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 6
Matched Method is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/types/ColorImage;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Shift shift = new Shift(5, 5, 5);
ColorImage colorImage = null;
shift.apply(colorImage);
int _int = 3;
int _int = 4;
int _int = 2;
Shift shift = new Shift(_int, _int, _int);
ColorImage colorImage = null;
shift.apply(colorImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift((-1), (-1), (-1))
statement is: jigl.image.types.InterpolatedGrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedGrayImage
statement code is: InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558)
statement is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage apply = shift.apply((GrayImage) arg0)
test data is: Shift shift = new Shift((-1), (-1), (-1));
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558);
shift.apply((GrayImage) interpolatedGrayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(-10, -10, -10);
        InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558);
        shift.apply(((GrayImage) (interpolatedGrayImage)));
    }
}
statement is: Shift shift = new Shift(-10, -10, -10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((GrayImage) (interpolatedGrayImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((GrayImage) (interpolatedGrayImage))) target is: shift method is: apply(GrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 0
Matched Method is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage;
TestCase is: Shift shift = new Shift((-1), (-1), (-1));
int _int = 544;
int _int = 558;
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(_int, _int);
shift.apply((GrayImage) interpolatedGrayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(0, 1, 1)
statement is: jigl.image.types.InterpolatedRealGrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedRealGrayImage
statement code is: InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1, 1)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply((RealGrayImage) arg0)
test data is: Shift shift = new Shift(0, 1, 1);
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(0, 1, 1);
        InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(256, 256);
        shift.apply(((RealGrayImage) (interpolatedRealGrayImage)));
    }
}
statement is: Shift shift = new Shift(0, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(256, 256), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealGrayImage) (interpolatedRealGrayImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealGrayImage) (interpolatedRealGrayImage))) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: int _int = 0;
int _int = 1;
int _int = 1;
Shift shift = new Shift(_int, _int, _int);
int _int = 256;
int _int = 256;
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(_int, _int);
((Shift) _int).apply((RealGrayImage) interpolatedRealGrayImage);

statement is: jigl.image.types.InterpolatedRealGrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedRealGrayImage
statement code is: InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1)
statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(1, 1, 1)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply((RealGrayImage) arg0)
test data is: InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
Shift shift = new Shift(1, 1, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(500, 1);
        Shift shift = new Shift(2, 3, 4);
        shift.apply(((RealGrayImage) (interpolatedRealGrayImage)));
    }
}
statement is: InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(500, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Shift shift = new Shift(2, 3, 4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealGrayImage) (interpolatedRealGrayImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealGrayImage) (interpolatedRealGrayImage))) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 1, type jigl.image.ops.Shiftindex is: 6
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: int _int = 500;
int _int = 1;
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(_int, _int);
int _int = 2;
int _int = 3;
int _int = 4;
Shift shift = new Shift(_int, _int, _int);
((Shift) _int).apply((RealGrayImage) interpolatedRealGrayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(1, 0, 1)
statement is: jigl.image.types.ImageKernel(FI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ImageKernel
statement code is: ImageKernel imageKernel = new ImageKernel(0, 1)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply((RealGrayImage) arg0)
test data is: Shift shift = new Shift(1, 0, 1);
ImageKernel imageKernel = new ImageKernel(0, 1);
shift.apply((RealGrayImage) imageKernel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(10, 5, 2);
        ImageKernel imageKernel = new ImageKernel(100, 200);
        shift.apply(((RealGrayImage) (imageKernel)));
    }
}
statement is: Shift shift = new Shift(10, 5, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImageKernel imageKernel = new ImageKernel(100, 200), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealGrayImage) (imageKernel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealGrayImage) (imageKernel))) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: int _int = 10;
int _int = 5;
int _int = 2;
Shift shift = new Shift(_int, _int, _int);
int _int = 100;
int _int = 200;
ImageKernel imageKernel = new ImageKernel(_int, _int);
((Shift) _int).apply((RealGrayImage) imageKernel);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift((-323), (-323), 1)
statement is: jigl.image.types.RealGrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage realGrayImage = new RealGrayImage(502, 1)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift((-323), (-323), 1);
RealGrayImage realGrayImage = new RealGrayImage(502, 1);
shift.apply(realGrayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(-10, -10, 1);
        RealGrayImage realGrayImage = new RealGrayImage(502, 1);
        shift.apply(realGrayImage);
    }
}
statement is: Shift shift = new Shift(-10, -10, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RealGrayImage realGrayImage = new RealGrayImage(502, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(realGrayImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(realGrayImage) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 1
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: int _int = 1;
Shift shift = new Shift(_int, (-323), 1);
int _int = 502;
int _int = 1;
RealGrayImage realGrayImage = new RealGrayImage(_int, _int);
((Shift) _int).apply(realGrayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(128, 128, 128)
statement is: jigl.image.types.RealColorImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.RealColorImage
statement code is: RealColorImage realColorImage = new RealColorImage(1, 1)
statement is: jigl.image.types.InterpolatedRealColorImage(Ljigl/image/types/RealColorImage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedRealColorImage
statement code is: InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(arg0)
statement is: apply(Ljigl/image/types/RealColorImage;)Ljigl/image/types/RealColorImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealColorImage
statement code is: RealColorImage apply = shift.apply((RealColorImage) arg0)
test data is: Shift shift = new Shift(128, 128, 128);
RealColorImage realColorImage = new RealColorImage(1, 1);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage);
shift.apply((RealColorImage) interpolatedRealColorImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(128, 0, 0);
        RealColorImage realColorImage = new RealColorImage(500, 500);
        InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage);
        shift.apply(((RealColorImage) (interpolatedRealColorImage)));
    }
}
statement is: Shift shift = new Shift(128, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RealColorImage realColorImage = new RealColorImage(500, 500), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealColorImage) (interpolatedRealColorImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealColorImage) (interpolatedRealColorImage))) target is: shift method is: apply(RealColorImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/RealColorImage;)Ljigl/image/types/RealColorImage;
TestCase is: int _int = 128;
int _int = 0;
int _int = 0;
Shift shift = new Shift(_int, _int, _int);
int _int = 500;
int _int = 500;
RealColorImage realColorImage = new RealColorImage(_int, _int);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage);
((Shift) _int).apply((RealColorImage) interpolatedRealColorImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift((-27), (-27), (-27))
statement is: jigl.image.types.InterpolatedRealGrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedRealGrayImage
statement code is: InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply((RealGrayImage) arg0)
test data is: Shift shift = new Shift((-27), (-27), (-27));
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(-27, -27, -27);
        InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
        shift.apply(((RealGrayImage) (interpolatedRealGrayImage)));
    }
}
statement is: Shift shift = new Shift(-27, -27, -27), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealGrayImage) (interpolatedRealGrayImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealGrayImage) (interpolatedRealGrayImage))) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 0
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: Shift shift = new Shift((-27), (-27), (-27));
int _int = 1446;
int _int = 1;
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(_int, _int);
shift.apply((RealGrayImage) interpolatedRealGrayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(0, 940, 758)
statement is: jigl.image.types.ImageKernel(FI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ImageKernel
statement code is: ImageKernel imageKernel = new ImageKernel(0.0F, 1)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply((RealGrayImage) arg0)
test data is: Shift shift = new Shift(0, 940, 758);
ImageKernel imageKernel = new ImageKernel(0.0F, 1);
shift.apply((RealGrayImage) imageKernel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(0, 940, 758);
        ImageKernel imageKernel = new ImageKernel(0.1F, 2);
        shift.apply(((RealGrayImage) (imageKernel)));
    }
}
statement is: Shift shift = new Shift(0, 940, 758), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImageKernel imageKernel = new ImageKernel(0.1F, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealGrayImage) (imageKernel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealGrayImage) (imageKernel))) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: int _int = 0;
int _int = 940;
int _int = 758;
Shift shift = new Shift(_int, _int, _int);
float _float = 0.1F;
int _int = 2;
ImageKernel imageKernel = new ImageKernel(_float, _int);
((Shift) _int).apply((RealGrayImage) imageKernel);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(5, 5, 0)
statement is: jigl.image.types.ColorImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ColorImage
statement code is: ColorImage colorImage = new ColorImage(0, 1)
statement is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/types/ColorImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.ColorImage
statement code is: ColorImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(5, 5, 0);
ColorImage colorImage = new ColorImage(0, 1);
shift.apply(colorImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(3, 4, 2);
        ColorImage colorImage = new ColorImage(8, 6);
        shift.apply(colorImage);
    }
}
statement is: Shift shift = new Shift(3, 4, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ColorImage colorImage = new ColorImage(8, 6), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(colorImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(colorImage) target is: shift method is: apply(ColorImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/types/ColorImage;
TestCase is: int _int = 3;
int _int = 4;
int _int = 2;
Shift shift = new Shift(_int, _int, _int);
int _int = 8;
int _int = 6;
ColorImage colorImage = new ColorImage(_int, _int);
((Shift) _int).apply(colorImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(2, (-1587), 0)
statement is: jigl.image.types.ColorImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ColorImage
statement code is: ColorImage colorImage = new ColorImage(837, 0)
statement is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/types/ColorImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.ColorImage
statement code is: ColorImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(2, (-1587), 0);
ColorImage colorImage = new ColorImage(837, 0);
shift.apply(colorImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(-1, -1587, 0);
        ColorImage colorImage = new ColorImage(-837, 0);
        shift.apply(colorImage);
    }
}
statement is: Shift shift = new Shift(-1, -1587, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ColorImage colorImage = new ColorImage(-837, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(colorImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(colorImage) target is: shift method is: apply(ColorImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 1
Matched Method is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/types/ColorImage;
TestCase is: int _int = 0;
Shift shift = new Shift(_int, (-1587), 0);
int _int = 0;
ColorImage colorImage = new ColorImage(_int, 0);
((Shift) _int).apply(colorImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(0, 0, 0)
statement is: jigl.image.types.GrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage grayImage = new GrayImage(0, 0)
statement is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(0, 0, 0);
GrayImage grayImage = new GrayImage(0, 0);
shift.apply(grayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Shift shift = new Shift(10, 20, 30);
        GrayImage grayImage = new GrayImage(50, 60);
        shift.apply(grayImage);
    }
}
statement is: // Improved test data
Shift shift = new Shift(10, 20, 30), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GrayImage grayImage = new GrayImage(50, 60), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(grayImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(grayImage) target is: shift method is: apply(GrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/types/GrayImage;
TestCase is: int _int = 10;
int _int = 20;
int _int = 30;
Shift shift = new Shift(_int, _int, _int);
int _int = 50;
int _int = 60;
GrayImage grayImage = new GrayImage(_int, _int);
((Shift) _int).apply(grayImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(3678, 0, 3678)
statement is: jigl.image.types.InterpolatedRealColorImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedRealColorImage
statement code is: InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(0, 1)
statement is: apply(Ljigl/image/types/RealColorImage;)Ljigl/image/types/RealColorImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealColorImage
statement code is: RealColorImage apply = shift.apply((RealColorImage) arg0)
test data is: Shift shift = new Shift(3678, 0, 3678);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(0, 1);
shift.apply((RealColorImage) interpolatedRealColorImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift rotation = new Shift(45, 0, 45);
        InterpolatedRealColorImage image = new InterpolatedRealColorImage(1280, 720);
        rotation.apply(((RealColorImage) (image)));
    }
}
statement is: Shift rotation = new Shift(45, 0, 45), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedRealColorImage image = new InterpolatedRealColorImage(1280, 720), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: rotation.apply(((RealColorImage) (image))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: rotation.apply(((RealColorImage) (image))) target is: rotation method is: apply(RealColorImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/RealColorImage;)Ljigl/image/types/RealColorImage;
TestCase is: int _int = 45;
int _int = 0;
int _int = 45;
Shift shift = new Shift(_int, _int, _int);
int _int = 1280;
int _int = 720;
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(_int, _int);
((Shift) _int).apply((RealColorImage) interpolatedRealColorImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(0, 0, 0)
statement is: jigl.image.types.RealColorImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.RealColorImage
statement code is: RealColorImage realColorImage = new RealColorImage(1, 0)
statement is: apply(Ljigl/image/types/RealColorImage;)Ljigl/image/types/RealColorImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealColorImage
statement code is: RealColorImage apply = shift.apply(arg0)
test data is: Shift shift = new Shift(0, 0, 0);
RealColorImage realColorImage = new RealColorImage(1, 0);
shift.apply(realColorImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(5, -3, 2);
        RealColorImage realColorImage = new RealColorImage(10, 5);
        shift.apply(realColorImage);
    }
}
statement is: Shift shift = new Shift(5, -3, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RealColorImage realColorImage = new RealColorImage(10, 5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(realColorImage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(realColorImage) target is: shift method is: apply(RealColorImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 2
Matched Method is: apply(Ljigl/image/types/RealColorImage;)Ljigl/image/types/RealColorImage;
TestCase is: int _int = 5;
int _int = 2;
Shift shift = new Shift(_int, _int, 0);
int _int = 10;
int _int = 5;
RealColorImage realColorImage = new RealColorImage(_int, _int);
((Shift) _int).apply(realColorImage);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(0, 0, 0)
statement is: jigl.image.types.ImageKernel(FI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ImageKernel
statement code is: ImageKernel imageKernel = new ImageKernel((-102.709F), 0)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply((RealGrayImage) arg0)
test data is: Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel((-102.709F), 0);
shift.apply((RealGrayImage) imageKernel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(-102.709F, -102.709F, 0);
        ImageKernel imageKernel = new ImageKernel(-102.709F, 0);
        shift.apply(((RealGrayImage) (imageKernel)));
    }
}
statement is: Shift shift = new Shift(-102.709F, -102.709F, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImageKernel imageKernel = new ImageKernel(-102.709F, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealGrayImage) (imageKernel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealGrayImage) (imageKernel))) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 1
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: int _int = 0;
Shift shift = new Shift(_int, 0, 0);
int _int = 0;
ImageKernel imageKernel = new ImageKernel(_int, 0);
((Shift) _int).apply((RealGrayImage) imageKernel);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(0, 0, 0)
statement is: jigl.image.types.ImageKernel(FI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ImageKernel
statement code is: ImageKernel imageKernel = new ImageKernel((-1.4392198F), 1)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply((RealGrayImage) arg0)
test data is: Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel((-1.4392198F), 1);
shift.apply((RealGrayImage) imageKernel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(0, 0, 0);
        ImageKernel imageKernel = new ImageKernel(-1.4392198F, 1);
        shift.apply(((RealGrayImage) (imageKernel)));
    }
}
statement is: Shift shift = new Shift(0, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImageKernel imageKernel = new ImageKernel(-1.4392198F, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealGrayImage) (imageKernel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealGrayImage) (imageKernel))) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 3
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: int _int = 0;
int _int = 0;
int _int = 0;
Shift shift = new Shift(_int, _int, _int);
int _int = 1;
ImageKernel imageKernel = new ImageKernel(_int, 1);
((Shift) _int).apply((RealGrayImage) imageKernel);

statement is: jigl.image.ops.Shift(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.Shift
statement code is: Shift shift = new Shift(0, 0, 0)
statement is: jigl.image.types.ImageKernel(FI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ImageKernel
statement code is: ImageKernel imageKernel = new ImageKernel(3.0F, 1)
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.RealGrayImage
statement code is: RealGrayImage apply = shift.apply((RealGrayImage) arg0)
test data is: Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel(3.0F, 1);
shift.apply((RealGrayImage) imageKernel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Shift shift = new Shift(4, 5, -1);
        ImageKernel imageKernel = new ImageKernel(3.0F, 2);
        shift.apply(((RealGrayImage) (imageKernel)));
    }
}
statement is: Shift shift = new Shift(4, 5, -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImageKernel imageKernel = new ImageKernel(3.0F, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: shift.apply(((RealGrayImage) (imageKernel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: shift.apply(((RealGrayImage) (imageKernel))) target is: shift method is: apply(RealGrayImage)
source statement: jigl.image.ops.Shift(III)V callee: VariableReference: Statement 0, type jigl.image.ops.Shiftindex is: 2
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/types/RealGrayImage;
TestCase is: int _int = 4;
int _int = 5;
Shift shift = new Shift(_int, _int, 0);
float _float = 3.0F;
int _int = 2;
ImageKernel imageKernel = new ImageKernel(_float, _int);
((Shift) _int).apply((RealGrayImage) imageKernel);

* test suite isTestSuite: 43
Test 0: 
Shift shift = new Shift(3859, 0, 1);
GrayImage grayImage = new GrayImage(1871, 3859);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
Shift shift = new Shift((-7), (-7), (-7));
GrayImage grayImage = new GrayImage(1, 1);
shift.apply(grayImage);
Test 2: 
Shift shift = new Shift(1, 1, 1);
GrayImage grayImage = new GrayImage(0, 1);
shift.apply(grayImage);
Test 3: 
Shift shift = new Shift(0, 1, 1);
GrayImage grayImage = new GrayImage(1, 1);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
Shift shift = new Shift(1, 1, 1);
GrayImage grayImage = new GrayImage(1, 1);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
Shift shift = new Shift(5, 5, 5);
ColorImage colorImage = new ColorImage(1509, 1);
shift.apply(colorImage);
Test 6: 
Shift shift = new Shift((-1), (-1), (-1));
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558);
// Undeclared exception!
try { 
  shift.apply((GrayImage) interpolatedGrayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
Shift shift = new Shift(0, 1, 1);
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 8: 
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
Shift shift = new Shift(1, 1, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 9: 
Shift shift = new Shift(1, 0, 1);
ImageKernel imageKernel = new ImageKernel(0, 1);
shift.apply((RealGrayImage) imageKernel);
Test 10: 
Shift shift = new Shift((-323), (-323), 1);
RealGrayImage realGrayImage = new RealGrayImage(502, 1);
shift.apply(realGrayImage);
Test 11: 
Shift shift = new Shift(128, 128, 128);
RealColorImage realColorImage = new RealColorImage(1, 1);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage);
shift.apply((RealColorImage) interpolatedRealColorImage);
Test 12: 
Shift shift = new Shift((-27), (-27), (-27));
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 13: 
Shift shift = new Shift(0, 940, 758);
ImageKernel imageKernel = new ImageKernel(0.0F, 1);
shift.apply((RealGrayImage) imageKernel);
Test 14: 
Shift shift = new Shift(5, 5, 0);
ColorImage colorImage = new ColorImage(0, 1);
shift.apply(colorImage);
Test 15: 
Shift shift = new Shift(2, (-1587), 0);
ColorImage colorImage = new ColorImage(837, 0);
shift.apply(colorImage);
Test 16: 
Shift shift = new Shift(0, 0, 0);
GrayImage grayImage = new GrayImage(0, 0);
shift.apply(grayImage);
Test 17: 
Shift shift = new Shift(3678, 0, 3678);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(0, 1);
shift.apply((RealColorImage) interpolatedRealColorImage);
Test 18: 
Shift shift = new Shift(0, 0, 0);
RealColorImage realColorImage = new RealColorImage(1, 0);
shift.apply(realColorImage);
Test 19: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel((-102.709F), 0);
shift.apply((RealGrayImage) imageKernel);
Test 20: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel((-1.4392198F), 1);
shift.apply((RealGrayImage) imageKernel);
Test 21: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel(3.0F, 1);
shift.apply((RealGrayImage) imageKernel);
Test 22: 
Shift shift = new Shift(3859, 0, 1);
GrayImage grayImage = new GrayImage(1871, 3859);
((Shift)3859).apply(grayImage);

Test 23: 
Shift shift = new Shift((-7), (-7), (-7));
GrayImage grayImage = new GrayImage(1, 1);
shift.apply(grayImage);

Test 24: 
int _int = 5;
Shift shift = new Shift(5, 2, 3);
GrayImage grayImage = new GrayImage((int) 0.5, (int) 1.2);
((Shift) _int).apply(grayImage);

Test 25: 
Shift shift = new Shift(0, 5, 2);
GrayImage grayImage = new GrayImage(10, 10);
((Shift)0).apply(grayImage);

Test 26: 
Shift shift = new Shift(5, 5, 5);
shift.apply((ColorImage) null);
int _int = 3;
int _int = 4;
int _int = 2;
Shift shift = new Shift(_int, _int, _int);
ColorImage colorImage = null;
shift.apply(colorImage);

Test 27: 
Shift shift = new Shift((-1), (-1), (-1));
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558);
shift.apply((GrayImage) interpolatedGrayImage);

Test 28: 
Shift shift = new Shift(0, 1, 1);
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(256, 256);
((Shift)0).apply((RealGrayImage) interpolatedRealGrayImage);

Test 29: 
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(500, 1);
Shift shift = new Shift(2, 3, 4);
((Shift)1).apply((RealGrayImage) interpolatedRealGrayImage);

Test 30: 
int _int = 10;
Shift shift = new Shift(10, 5, 2);
ImageKernel imageKernel = new ImageKernel(100, 200);
((Shift) _int).apply((RealGrayImage) imageKernel);

Test 31: 
Shift shift = new Shift(1, (-323), 1);
RealGrayImage realGrayImage = new RealGrayImage(502, 1);
((Shift)1).apply(realGrayImage);

Test 32: 
int _int = 128;
Shift shift = new Shift(128, 0, 0);
RealColorImage realColorImage = new RealColorImage(500, 500);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage);
((Shift) _int).apply((RealColorImage) interpolatedRealColorImage);

Test 33: 
Shift shift = new Shift((-27), (-27), (-27));
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);

Test 34: 
Shift shift = new Shift(0, 940, 758);
ImageKernel imageKernel = new ImageKernel(0.1F, 2);
((Shift)0).apply((RealGrayImage) imageKernel);

Test 35: 
Shift shift = new Shift(3, 4, 2);
ColorImage colorImage = new ColorImage(8, 6);
((Shift)3).apply(colorImage);

Test 36: 
Shift shift = new Shift(0, (-1587), 0);
ColorImage colorImage = new ColorImage(0, 0);
((Shift)0).apply(colorImage);

Test 37: 
Shift shift = new Shift(10, 20, 30);
GrayImage grayImage = new GrayImage(50, 60);
((Shift)10).apply(grayImage);

Test 38: 
Shift shift = new Shift(45, 0, 45);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(1280, 720);
((Shift)45).apply((RealColorImage) interpolatedRealColorImage);

Test 39: 
Shift shift = new Shift(5, 2, 0);
RealColorImage realColorImage = new RealColorImage(10, 5);
((Shift)5).apply(realColorImage);

Test 40: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel(0, 0);
((Shift)0).apply((RealGrayImage) imageKernel);

Test 41: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel(1, 1);
((Shift)0).apply((RealGrayImage) imageKernel);

Test 42: 
Shift shift = new Shift(4, 5, 0);
ImageKernel imageKernel = new ImageKernel(3.0F, 2);
((Shift)4).apply((RealGrayImage) imageKernel);


* Generated after the refinement and before minimization 43 tests with total length 139
* test suite isTestSuite: 43
Test 0: 
Shift shift = new Shift(3859, 0, 1);
GrayImage grayImage = new GrayImage(1871, 3859);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
Shift shift = new Shift((-7), (-7), (-7));
GrayImage grayImage = new GrayImage(1, 1);
shift.apply(grayImage);
Test 2: 
Shift shift = new Shift(1, 1, 1);
GrayImage grayImage = new GrayImage(0, 1);
shift.apply(grayImage);
Test 3: 
Shift shift = new Shift(0, 1, 1);
GrayImage grayImage = new GrayImage(1, 1);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
Shift shift = new Shift(1, 1, 1);
GrayImage grayImage = new GrayImage(1, 1);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
Shift shift = new Shift(5, 5, 5);
ColorImage colorImage = new ColorImage(1509, 1);
shift.apply(colorImage);
Test 6: 
Shift shift = new Shift((-1), (-1), (-1));
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558);
// Undeclared exception!
try { 
  shift.apply((GrayImage) interpolatedGrayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
Shift shift = new Shift(0, 1, 1);
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 8: 
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
Shift shift = new Shift(1, 1, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 9: 
Shift shift = new Shift(1, 0, 1);
ImageKernel imageKernel = new ImageKernel(0, 1);
shift.apply((RealGrayImage) imageKernel);
Test 10: 
Shift shift = new Shift((-323), (-323), 1);
RealGrayImage realGrayImage = new RealGrayImage(502, 1);
shift.apply(realGrayImage);
Test 11: 
Shift shift = new Shift(128, 128, 128);
RealColorImage realColorImage = new RealColorImage(1, 1);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage);
shift.apply((RealColorImage) interpolatedRealColorImage);
Test 12: 
Shift shift = new Shift((-27), (-27), (-27));
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 13: 
Shift shift = new Shift(0, 940, 758);
ImageKernel imageKernel = new ImageKernel(0.0F, 1);
shift.apply((RealGrayImage) imageKernel);
Test 14: 
Shift shift = new Shift(5, 5, 0);
ColorImage colorImage = new ColorImage(0, 1);
shift.apply(colorImage);
Test 15: 
Shift shift = new Shift(2, (-1587), 0);
ColorImage colorImage = new ColorImage(837, 0);
shift.apply(colorImage);
Test 16: 
Shift shift = new Shift(0, 0, 0);
GrayImage grayImage = new GrayImage(0, 0);
shift.apply(grayImage);
Test 17: 
Shift shift = new Shift(3678, 0, 3678);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(0, 1);
shift.apply((RealColorImage) interpolatedRealColorImage);
Test 18: 
Shift shift = new Shift(0, 0, 0);
RealColorImage realColorImage = new RealColorImage(1, 0);
shift.apply(realColorImage);
Test 19: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel((-102.709F), 0);
shift.apply((RealGrayImage) imageKernel);
Test 20: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel((-1.4392198F), 1);
shift.apply((RealGrayImage) imageKernel);
Test 21: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel(3.0F, 1);
shift.apply((RealGrayImage) imageKernel);
Test 22: 
Shift shift = new Shift(3859, 0, 1);
GrayImage grayImage = new GrayImage(1871, 3859);
((Shift)3859).apply(grayImage);

Test 23: 
Shift shift = new Shift((-7), (-7), (-7));
GrayImage grayImage = new GrayImage(1, 1);
shift.apply(grayImage);

Test 24: 
int _int = 5;
Shift shift = new Shift(5, 2, 3);
GrayImage grayImage = new GrayImage((int) 0.5, (int) 1.2);
((Shift) _int).apply(grayImage);

Test 25: 
Shift shift = new Shift(0, 5, 2);
GrayImage grayImage = new GrayImage(10, 10);
((Shift)0).apply(grayImage);

Test 26: 
Shift shift = new Shift(5, 5, 5);
shift.apply((ColorImage) null);
int _int = 3;
int _int = 4;
int _int = 2;
Shift shift = new Shift(_int, _int, _int);
ColorImage colorImage = null;
shift.apply(colorImage);

Test 27: 
Shift shift = new Shift((-1), (-1), (-1));
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558);
shift.apply((GrayImage) interpolatedGrayImage);

Test 28: 
Shift shift = new Shift(0, 1, 1);
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(256, 256);
((Shift)0).apply((RealGrayImage) interpolatedRealGrayImage);

Test 29: 
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(500, 1);
Shift shift = new Shift(2, 3, 4);
((Shift)1).apply((RealGrayImage) interpolatedRealGrayImage);

Test 30: 
int _int = 10;
Shift shift = new Shift(10, 5, 2);
ImageKernel imageKernel = new ImageKernel(100, 200);
((Shift) _int).apply((RealGrayImage) imageKernel);

Test 31: 
Shift shift = new Shift(1, (-323), 1);
RealGrayImage realGrayImage = new RealGrayImage(502, 1);
((Shift)1).apply(realGrayImage);

Test 32: 
int _int = 128;
Shift shift = new Shift(128, 0, 0);
RealColorImage realColorImage = new RealColorImage(500, 500);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage);
((Shift) _int).apply((RealColorImage) interpolatedRealColorImage);

Test 33: 
Shift shift = new Shift((-27), (-27), (-27));
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);

Test 34: 
Shift shift = new Shift(0, 940, 758);
ImageKernel imageKernel = new ImageKernel(0.1F, 2);
((Shift)0).apply((RealGrayImage) imageKernel);

Test 35: 
Shift shift = new Shift(3, 4, 2);
ColorImage colorImage = new ColorImage(8, 6);
((Shift)3).apply(colorImage);

Test 36: 
Shift shift = new Shift(0, (-1587), 0);
ColorImage colorImage = new ColorImage(0, 0);
((Shift)0).apply(colorImage);

Test 37: 
Shift shift = new Shift(10, 20, 30);
GrayImage grayImage = new GrayImage(50, 60);
((Shift)10).apply(grayImage);

Test 38: 
Shift shift = new Shift(45, 0, 45);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(1280, 720);
((Shift)45).apply((RealColorImage) interpolatedRealColorImage);

Test 39: 
Shift shift = new Shift(5, 2, 0);
RealColorImage realColorImage = new RealColorImage(10, 5);
((Shift)5).apply(realColorImage);

Test 40: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel(0, 0);
((Shift)0).apply((RealGrayImage) imageKernel);

Test 41: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel(1, 1);
((Shift)0).apply((RealGrayImage) imageKernel);

Test 42: 
Shift shift = new Shift(4, 5, 0);
ImageKernel imageKernel = new ImageKernel(3.0F, 2);
((Shift)4).apply((RealGrayImage) imageKernel);


* Minimizing test suite
* test suite isTestSuite: 22
Test 0: 
Shift shift = new Shift(0, 0, 0);
RealColorImage realColorImage = new RealColorImage(1, 0);
shift.apply(realColorImage);
Test 1: 
Shift shift = new Shift(0, 1, 1);
GrayImage grayImage = new GrayImage(1, 1);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 2: 
Shift shift = new Shift((-1), (-1), (-1));
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(544, 558);
// Undeclared exception!
try { 
  shift.apply((GrayImage) interpolatedGrayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
Shift shift = new Shift(1, 1, 1);
GrayImage grayImage = new GrayImage(0, 1);
shift.apply(grayImage);
Test 4: 
Shift shift = new Shift(3859, 0, 1);
GrayImage grayImage = new GrayImage(1871, 3859);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
Shift shift = new Shift(1, 1, 1);
GrayImage grayImage = new GrayImage(1, 1);
// Undeclared exception!
try { 
  shift.apply(grayImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
Shift shift = new Shift((-7), (-7), (-7));
GrayImage grayImage = new GrayImage(1, 1);
shift.apply(grayImage);
Test 7: 
Shift shift = new Shift(5, 5, 5);
ColorImage colorImage = new ColorImage(1509, 1);
shift.apply(colorImage);
Test 8: 
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
Shift shift = new Shift(1, 1, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 9: 
Shift shift = new Shift((-323), (-323), 1);
RealGrayImage realGrayImage = new RealGrayImage(502, 1);
shift.apply(realGrayImage);
Test 10: 
Shift shift = new Shift(1, 0, 1);
ImageKernel imageKernel = new ImageKernel(0, 1);
shift.apply((RealGrayImage) imageKernel);
Test 11: 
Shift shift = new Shift(0, 1, 1);
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 12: 
Shift shift = new Shift((-27), (-27), (-27));
InterpolatedRealGrayImage interpolatedRealGrayImage = new InterpolatedRealGrayImage(1446, 1);
shift.apply((RealGrayImage) interpolatedRealGrayImage);
Test 13: 
Shift shift = new Shift(128, 128, 128);
RealColorImage realColorImage = new RealColorImage(1, 1);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(realColorImage);
shift.apply((RealColorImage) interpolatedRealColorImage);
Test 14: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel((-1.4392198F), 1);
shift.apply((RealGrayImage) imageKernel);
Test 15: 
Shift shift = new Shift(0, 940, 758);
ImageKernel imageKernel = new ImageKernel(0.0F, 1);
shift.apply((RealGrayImage) imageKernel);
Test 16: 
Shift shift = new Shift(5, 5, 0);
ColorImage colorImage = new ColorImage(0, 1);
shift.apply(colorImage);
Test 17: 
Shift shift = new Shift(2, (-1587), 0);
ColorImage colorImage = new ColorImage(837, 0);
shift.apply(colorImage);
Test 18: 
Shift shift = new Shift(0, 0, 0);
GrayImage grayImage = new GrayImage(0, 0);
shift.apply(grayImage);
Test 19: 
Shift shift = new Shift(3678, 0, 3678);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(0, 1);
shift.apply((RealColorImage) interpolatedRealColorImage);
Test 20: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel((-102.709F), 0);
shift.apply((RealGrayImage) imageKernel);
Test 21: 
Shift shift = new Shift(0, 0, 0);
ImageKernel imageKernel = new ImageKernel(3.0F, 1);
shift.apply((RealGrayImage) imageKernel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 98%
* Total number of goals: 56
* Number of covered goals: 55
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 57
* Number of covered goals: 56
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 46
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 98%
* Total number of goals: 56
* Number of covered goals: 55
* Generated 22 tests with total length 67
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(0, 0, 0);
RealColorImage arg0 = new RealColorImage(1, 0);
RealColorImage apply = shift.apply(arg0);
assertNotSame(apply, arg0);


** It was a parseable test case! 
refined test name is: testApplyShiftOnImageWithWidthAndHeightOfOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(0, 1, 1);
GrayImage arg0 = new GrayImage(1, 1);
// Undeclared exception!
try { 
  shift.apply(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testApplyThrowsNullPointerExceptionWhenImageIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift((-1), (-1), (-1));
InterpolatedGrayImage arg0 = new InterpolatedGrayImage(544, 558);
// Undeclared exception!
try { 
  shift.apply((GrayImage) arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testApplyThrowsNullPointerExceptionWhenInputIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(1, 1, 1);
GrayImage arg0 = new GrayImage(0, 1);
GrayImage apply = shift.apply(arg0);
assertEquals(1, apply.Y());
assertEquals(0, apply.X());


** It was a parseable test case! 
refined test name is: testApplyShiftToImageWithNonZeroComponents
* Compiling Tests
refined test name is: testShiftApplyReturnsShiftedImage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(3859, 0, 1);
GrayImage arg0 = new GrayImage(1871, 3859);
// Undeclared exception!
try { 
  shift.apply(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testApplywhenShiftIsTooLargeshouldThrowException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(1, 1, 1);
GrayImage arg0 = new GrayImage(1, 1);
// Undeclared exception!
try { 
  shift.apply(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testApplyThrowsNullPointerExceptionWhenImageIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift((-7), (-7), (-7));
GrayImage arg0 = new GrayImage(1, 1);
GrayImage apply = shift.apply(arg0);
assertEquals(1, apply.Y());


** It was a parseable test case! 
refined test name is: testShiftNegativeCoordinates
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(5, 5, 5);
ColorImage arg0 = new ColorImage(1509, 1);
ColorImage apply = shift.apply(arg0);
assertNotSame(apply, arg0);


** It was a parseable test case! 
refined test name is: testApplyShift
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: InterpolatedRealGrayImage arg0 = new InterpolatedRealGrayImage(1446, 1);
Shift shift = new Shift(1, 1, 1);
RealGrayImage apply = shift.apply((RealGrayImage) arg0);
assertEquals(1446, apply.X());
assertEquals(1, apply.Y());


** It was a parseable test case! 
refined test name is: testShiftApplyDimensionsGivenImage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift((-323), (-323), 1);
RealGrayImage arg0 = new RealGrayImage(502, 1);
RealGrayImage apply = shift.apply(arg0);
assertEquals(1, apply.Y());
assertEquals(502, apply.X());


** It was a parseable test case! 
refined test name is: testShift
* Compiling Tests
refined test name is: testShiftAppliesCorrectlyToGrayImage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(1, 0, 1);
ImageKernel arg0 = new ImageKernel(0, 1);
RealGrayImage apply = shift.apply((RealGrayImage) arg0);
assertEquals(0.0F, apply.max(), 0.01F);


** It was a parseable test case! 
refined test name is: testApplyShiftOnSinglePixelImage
* Compiling Tests
refined test name is: testApplyShiftToImageWithSinglePixel
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(0, 1, 1);
InterpolatedRealGrayImage arg0 = new InterpolatedRealGrayImage(1, 1);
RealGrayImage apply = shift.apply((RealGrayImage) arg0);
assertEquals(1, apply.X());


** It was a parseable test case! 
refined test name is: testShiftByHorizontalAndVerticalOffsets
* Compiling Tests
refined test name is: testApplyShiftWithOffset
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift((-27), (-27), (-27));
InterpolatedRealGrayImage arg0 = new InterpolatedRealGrayImage(1446, 1);
RealGrayImage apply = shift.apply((RealGrayImage) arg0);
assertEquals(1, apply.Y());
assertEquals(1446, apply.X());


** It was a parseable test case! 
refined test name is: testShiftTransformDimensions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(0, 0, 0);
ImageKernel arg0 = new ImageKernel((-1.4392198F), 1);
RealGrayImage apply = shift.apply((RealGrayImage) arg0);
assertEquals((-1.4392198F), apply.addSum(), 0.01F);


** It was a parseable test case! 
refined test name is: testApplyShiftOnImageKernel
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(0, 940, 758);
ImageKernel arg0 = new ImageKernel(0.0F, 1);
RealGrayImage apply = shift.apply((RealGrayImage) arg0);
assertEquals(0.0F, apply.min(), 0.01F);


** It was a parseable test case! 
refined test name is: testApplyShiftMinValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(5, 5, 0);
ColorImage arg0 = new ColorImage(0, 1);
ColorImage apply = shift.apply(arg0);
assertNotSame(apply, arg0);


** It was a parseable test case! 
refined test name is: testApplyMethodModifiesOriginalColorImage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(2, (-1587), 0);
ColorImage arg0 = new ColorImage(837, 0);
ColorImage apply = shift.apply(arg0);
assertNotSame(apply, arg0);


** It was a parseable test case! 
refined test name is: testApplyShift
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(0, 0, 0);
GrayImage arg0 = new GrayImage(0, 0);
GrayImage apply = shift.apply(arg0);
assertEquals(0, apply.Y());


** It was a parseable test case! 
refined test name is: testApplyTranslation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(3678, 0, 3678);
InterpolatedRealColorImage arg0 = new InterpolatedRealColorImage(0, 1);
RealColorImage apply = shift.apply((RealColorImage) arg0);
assertEquals(1, apply.Y());


** It was a parseable test case! 
refined test name is: testShiftHorizontalOffset
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(0, 0, 0);
ImageKernel arg0 = new ImageKernel((-102.709F), 0);
RealGrayImage apply = shift.apply((RealGrayImage) arg0);
assertEquals(0, apply.Y());


** It was a parseable test case! 
refined test name is: testShiftApplyWithNegativeOffset
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Shift shift = new Shift(0, 0, 0);
ImageKernel arg0 = new ImageKernel(3.0F, 1);
RealGrayImage apply = shift.apply((RealGrayImage) arg0);
assertEquals(9.0, apply.sqrSum(), 0.01);


** It was a parseable test case! 
refined test name is: testApplyImageKernelWithShift
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:37.984 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:05:38.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:05:38.141 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:38.143 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:05:38.268 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:38.270 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:05:38.392 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:05:38.393 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Compiling Tests
[MASTER] 10:05:38.523 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:38.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:05:38.629 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:38.630 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Compiling Tests
[MASTER] 10:05:38.742 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:05:38.743 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Compiling Tests
[MASTER] 10:05:39.072 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:05:39.074 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Compiling Tests
[MASTER] 10:05:39.344 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:05:39.346 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:05:39.500 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:39.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:05:39.624 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:39.626 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:05:39.732 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:39.733 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:39.943 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:39.944 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:40.062 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:40.064 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:40.201 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:40.203 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:40.302 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:40.304 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:40.430 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:40.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:40.557 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:40.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:40.756 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:40.764 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:40.930 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:40.933 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:05:41.072 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:41.074 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 9 called: 1 to improve: false
** Write a test suite: 10 called: 2 to improve: false
** Write a test suite: 11 called: 3 to improve: false
[MASTER] 10:05:42.053 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:42.055 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 9 called: 0 to improve: false
** Write a test suite: 10 called: 1 to improve: false
** Write a test suite: 11 called: 2 to improve: false
** Write a test suite: 17 called: 3 to improve: false
[MASTER] 10:05:44.151 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar7758436795569219472.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:05:44.159 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7758436795569219472.jar
* Writing tests to file
* Writing JUnit test case 'Shift_ESTest' to evosuite-tests
** Write a test suite: 9 called: 0 to improve: false
** Write a test suite: 10 called: 1 to improve: false
** Write a test suite: 11 called: 2 to improve: false
** Write a test suite: 17 called: 3 to improve: false
* Done!

* Computation finished
