* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: jigl.image.ops.levelOps.Clip
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/89_jiggler/evosuite-files/evosuite.properties
* Connecting to master process on port 17238
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:50:21.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:50:21.114 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:50:21.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:50:21.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:50:21.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:50:21.565 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:50:22.917 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:50:22.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:50:22.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:50:22.951 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:50:22.951 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:50:22.951 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:50:22.951 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:50:22.951 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:50:22.952 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:50:22.992 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class jigl.image.ops.levelOps.Clip
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 200
* Using seed 1709819419679
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 122 / 200
[MASTER] 13:50:24.052 [logback-1] WARN  TestCluster - Failed to check cache for jigl.image.Image<T> : Type points to itself
[Progress:>                             1%] [Cov:===============>                   45%][Progress:>                             1%] [Cov:================>                  48%][Progress:>                             1%] [Cov:==================>                53%][Progress:>                             1%] [Cov:==================>                53%][Progress:>                             1%] [Cov:==================>                53%][Progress:>                             1%] [Cov:==================>                53%][Progress:>                             1%] [Cov:==================>                53%][Progress:>                             2%] [Cov:==================>                53%][Progress:>                             2%] [Cov:==================>                53%][Progress:>                             2%] [Cov:==================>                53%][Progress:>                             2%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:======================>            64%][Progress:>                             3%] [Cov:=======================>           66%][Progress:>                             3%] [Cov:=======================>           66%][Progress:>                             3%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:=======================>           68%][Progress:=>                            5%] [Cov:========================>          71%][Progress:=>                            5%] [Cov:=========================>         73%][Progress:=>                            6%] [Cov:=========================>         73%][Progress:=>                            6%] [Cov:=========================>         73%][Progress:=>                            6%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         73%][Progress:===>                          13%] [Cov:=========================>         74%][Progress:===>                          13%] [Cov:=========================>         74%][Progress:===>                          13%] [Cov:=========================>         74%][Progress:====>                         14%] [Cov:=========================>         74%][Progress:====>                         14%] [Cov:=========================>         74%][Progress:=====>                        18%] [Cov:=========================>         74%][Progress:======>                       20%] [Cov:=========================>         74%][Progress:=========>                    30%] [Cov:=========================>         74%][Progress:=========>                    30%] [Cov:=========================>         74%][Progress:==========>                   35%] [Cov:=========================>         74%][Progress:============>                 40%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:==============================100%] [Cov:=========================>         74%]
* Search finished after 113s and 59 generations, 20011 statements, best individual has fitness: 76.0
[MASTER] 13:52:16.612 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 64%
* Total number of goals: 67
* Number of covered goals: 43
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 7%
* Total number of goals: 56
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Generated 12 tests with total length 45
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'Clip_ESTest' to evosuite-tests
* Done!

* Computation finished
