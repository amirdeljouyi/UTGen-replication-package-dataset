* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: jigl.image.levelSetTool.LevelSetNudge
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/89_jiggler/evosuite-files/evosuite.properties
* Connecting to master process on port 2229
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:09:50.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:09:50.254 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:09:50.268 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:09:51.489 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:09:51.491 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:09:51.528 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:09:54.324 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:09:54.414 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:09:54.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:09:54.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:09:54.417 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:09:54.417 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:09:54.417 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:09:54.419 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:09:54.419 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:09:54.449 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class jigl.image.levelSetTool.LevelSetNudge
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 407
* Using seed 1710342587434
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 48 / 407
[Progress:>                             0%] [Cov:===============>                   43%][Progress:>                             1%] [Cov:=================>                 49%][Progress:>                             2%] [Cov:=================>                 49%][Progress:>                             2%] [Cov:=================>                 49%][Progress:>                             3%] [Cov:=================>                 49%][Progress:>                             3%] [Cov:=================>                 50%][Progress:=>                            4%] [Cov:=================>                 50%][Progress:=>                            5%] [Cov:=================>                 50%][Progress:=>                            6%] [Cov:=================>                 50%][Progress:==>                           8%] [Cov:=================>                 50%][Progress:==>                           9%] [Cov:=================>                 50%][Progress:===>                          10%] [Cov:=================>                 50%][Progress:===>                          11%] [Cov:=================>                 50%][Progress:===>                          12%] [Cov:=================>                 50%][Progress:===>                          12%] [Cov:=================>                 50%][Progress:===>                          13%] [Cov:=================>                 50%][Progress:====>                         14%] [Cov:=================>                 50%][Progress:====>                         14%] [Cov:=================>                 50%][Progress:====>                         15%] [Cov:=================>                 50%][Progress:====>                         16%] [Cov:=================>                 50%][Progress:====>                         16%] [Cov:=================>                 50%][Progress:=====>                        17%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        19%] [Cov:=================>                 50%][Progress:======>                       20%] [Cov:=================>                 50%][Progress:======>                       20%] [Cov:=================>                 50%][Progress:======>                       21%] [Cov:=================>                 50%][Progress:======>                       22%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:=======>                      24%] [Cov:=================>                 50%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=======>                      26%] [Cov:=================>                 50%][Progress:========>                     27%] [Cov:=================>                 50%][Progress:========>                     27%] [Cov:=================>                 50%][Progress:========>                     28%] [Cov:=================>                 50%][Progress:========>                     29%] [Cov:=================>                 50%][Progress:========>                     29%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    31%] [Cov:=================>                 50%][Progress:=========>                    32%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:==========>                   34%] [Cov:=================>                 50%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:==========>                   36%] [Cov:=================>                 50%][Progress:==========>                   36%] [Cov:=================>                 50%][Progress:==========>                   36%] [Cov:=================>                 50%][Progress:===========>                  37%] [Cov:=================>                 50%][Progress:===========>                  38%] [Cov:=================>                 50%][Progress:===========>                  38%] [Cov:=================>                 50%][Progress:===========>                  39%] [Cov:=================>                 50%][Progress:===========>                  39%] [Cov:=================>                 50%][Progress:============>                 40%] [Cov:=================>                 50%][Progress:============>                 41%] [Cov:=================>                 50%][Progress:============>                 42%] [Cov:=================>                 50%][Progress:============>                 43%] [Cov:=================>                 50%][Progress:=============>                44%] [Cov:=================>                 50%][Progress:=============>                45%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:=================>                 50%][Progress:=============>                46%] [Cov:=================>                 50%][Progress:==============>               47%] [Cov:=================>                 50%][Progress:==============>               48%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              52%] [Cov:=================>                 50%][Progress:===============>              52%] [Cov:=================>                 50%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:================>             54%] [Cov:=================>                 50%][Progress:================>             54%] [Cov:=================>                 50%][Progress:================>             54%] [Cov:=================>                 50%][Progress:================>             55%] [Cov:=================>                 50%][Progress:=================>            57%] [Cov:=================>                 50%][Progress:=================>            58%] [Cov:=================>                 50%][Progress:=================>            59%] [Cov:=================>                 50%][Progress:=================>            59%] [Cov:=================>                 50%][Progress:=================>            59%] [Cov:=================>                 50%][Progress:==================>           60%] [Cov:=================>                 50%][Progress:==================>           61%] [Cov:=================>                 50%][Progress:==================>           62%] [Cov:=================>                 50%][Progress:==================>           63%] [Cov:=================>                 50%][Progress:===================>          64%] [Cov:=================>                 50%][Progress:===================>          65%] [Cov:=================>                 50%][Progress:===================>          66%] [Cov:=================>                 50%][Progress:====================>         67%] [Cov:=================>                 50%][Progress:====================>         68%] [Cov:=================>                 50%][Progress:====================>         69%] [Cov:=================>                 50%][Progress:=====================>        70%] [Cov:=================>                 50%][Progress:=====================>        71%] [Cov:=================>                 50%][Progress:=====================>        72%] [Cov:=================>                 50%][Progress:=====================>        72%] [Cov:=================>                 50%][Progress:=====================>        73%] [Cov:=================>                 50%][Progress:======================>       74%] [Cov:=================>                 50%][Progress:======================>       74%] [Cov:=================>                 50%][Progress:======================>       75%] [Cov:=================>                 50%][Progress:======================>       76%] [Cov:=================>                 50%][Progress:=======================>      77%] [Cov:=================>                 50%][Progress:=======================>      77%] [Cov:=================>                 50%][Progress:=======================>      78%] [Cov:=================>                 50%][Progress:=======================>      79%] [Cov:=================>                 50%][Progress:=======================>      79%] [Cov:=================>                 50%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     81%] [Cov:=================>                 50%][Progress:========================>     82%] [Cov:=================>                 50%][Progress:=========================>    84%] [Cov:=================>                 50%][Progress:=========================>    84%] [Cov:=================>                 50%][Progress:=========================>    85%] [Cov:=================>                 50%][Progress:=========================>    86%] [Cov:=================>                 50%][Progress:==========================>   87%] [Cov:=================>                 50%][Progress:==========================>   87%] [Cov:=================>                 50%][Progress:==========================>   88%] [Cov:=================>                 50%][Progress:==========================>   89%] [Cov:=================>                 50%][Progress:==========================>   89%] [Cov:=================>                 50%][Progress:===========================>  90%] [Cov:=================>                 50%][Progress:===========================>  90%] [Cov:=================>                 50%][Progress:===========================>  91%] [Cov:=================>                 50%][Progress:===========================>  91%] [Cov:=================>                 50%][Progress:===========================>  92%] [Cov:=================>                 50%][Progress:===========================>  93%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:=================>                 50%]
* Search finished after 103s and 120 generations, 55412 statements, best individual has fitness: 238.0
* Generated before the refinement 10 tests with total length 28
statement is: jigl.image.levelSetTool.LevelSetNudge(Ljigl/image/types/RealColorImage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.levelSetTool.LevelSetNudge
statement code is: LevelSetNudge levelSetNudge = new LevelSetNudge((RealColorImage) null)
statement is: reset()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: levelSetNudge.reset()
test data is: LevelSetNudge levelSetNudge = new LevelSetNudge((RealColorImage) null);
levelSetNudge.reset();

* Computation finished
