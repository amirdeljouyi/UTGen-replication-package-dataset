* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: jigl.image.ops.levelOps.Clip
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/89_jiggler/evosuite-files/evosuite.properties
* Connecting to master process on port 8256
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:58:12.463 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:58:12.464 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:58:12.465 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:58:12.982 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:58:12.983 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:58:12.997 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:58:14.430 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 08:58:14.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 08:58:14.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 08:58:14.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 08:58:14.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 08:58:14.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 08:58:14.486 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 08:58:14.486 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 08:58:14.486 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 08:58:14.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
* Finished analyzing classpath
* Generating tests for class jigl.image.ops.levelOps.Clip
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 200
* Using seed 1709283489565
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 122 / 200
[MASTER] 08:58:15.871 [logback-1] WARN  TestCluster - Failed to check cache for jigl.image.Image<T> : Type points to itself
[Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             1%] [Cov:=====================>             62%][Progress:>                             1%] [Cov:=====================>             62%][Progress:========>                     28%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 102s and 4 generations, 1789 statements, best individual has fitness: 98.0
* Generated before the refinement 10 tests with total length 37
statement is: jigl.image.ops.levelOps.Clip(FF)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip(0.0F, 0.0F)
statement is: org.evosuite.testcase.statements.ArrayStatement@6f6b538 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[0][0]
statement is: jigl.image.types.GrayImage([[I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage grayImage = new GrayImage(arg0)
statement is: jigl.image.types.InterpolatedGrayImage(Ljigl/image/types/GrayImage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedGrayImage
statement code is: InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(arg0)
statement is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply((GrayImage) arg0)
test data is: Clip clip = new Clip(0.0F, 0.0F);
int[][] intArray = new int[0][0];
GrayImage grayImage = new GrayImage(intArray);
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage);
clip.apply((GrayImage) interpolatedGrayImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Clip clip = new Clip(0.5F, 0.5F);
        int[][] intArray = new int[10][10];
        for (int i = 0; i < intArray.length; i++) {
            for (int j = 0; j < intArray[i].length; j++) {
                intArray[i][j] = ((i + 1) * 5) + ((j + 1) * 2);
            }
        }
        GrayImage grayImage = new GrayImage(intArray);
        InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage);
        clip.apply(((GrayImage) (interpolatedGrayImage)));
    }
}
statement is: Clip clip = new Clip(0.5F, 0.5F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int[][] intArray = new int[10][10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10, 10] Ct is: int[][] intArray = new int[0][0] isAssignment: false Array: new int[10][10] Elements: []
lengths: [0, 0] [10, 10]
Their type are: class [[I int[][]
statement is: for (int i = 0; i < intArray.length; i++) {
    for (int j = 0; j < intArray[i].length; j++) {
        intArray[i][j] = ((i + 1) * 5) + ((j + 1) * 2);
    }
}, class spoon.support.reflect.code.CtForImpl
statement is: GrayImage grayImage = new GrayImage(intArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(((GrayImage) (interpolatedGrayImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(((GrayImage) (interpolatedGrayImage))) target is: clip method is: apply(GrayImage)
source statement: jigl.image.ops.levelOps.Clip(FF)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 2
Matched Method is: apply(Ljigl/image/types/GrayImage;)Ljigl/image/Image;
TestCase is: float _float = 0.5F;
float _float = 0.5F;
Clip clip = new Clip(_float, _float);
int[][] intArray = new int[0][0];
GrayImage grayImage = new GrayImage(intArray);
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage);
((Clip) _float).apply((GrayImage) interpolatedGrayImage);

statement is: jigl.image.ops.levelOps.Clip(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip(0, 0)
statement is: jigl.image.types.InterpolatedColorImage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedColorImage
statement code is: InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage()
statement is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply((ColorImage) arg0)
test data is: Clip clip = new Clip(0, 0);
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage();
clip.apply((ColorImage) interpolatedColorImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Clip clip = new Clip(10, 20);
        InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage();
        clip.apply(((ColorImage) (interpolatedColorImage)));
    }
}
statement is: Clip clip = new Clip(10, 20), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(((ColorImage) (interpolatedColorImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(((ColorImage) (interpolatedColorImage))) target is: clip method is: apply(ColorImage)
source statement: jigl.image.ops.levelOps.Clip(II)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 2
Matched Method is: apply(Ljigl/image/types/ColorImage;)Ljigl/image/Image;
TestCase is: int _int = 10;
int _int = 20;
Clip clip = new Clip(_int, _int);
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage();
((Clip) _int).apply((ColorImage) interpolatedColorImage);

statement is: jigl.image.ops.levelOps.Clip(FF)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip((-2772.2385F), (-2772.2385F))
statement is: jigl.image.types.InterpolatedColorImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedColorImage
statement code is: InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0)
statement is: apply(Ljigl/image/types/ColorImage;Ljigl/image/ROI;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply((ColorImage) arg0, (ROI) null)
test data is: Clip clip = new Clip((-2772.2385F), (-2772.2385F));
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0);
clip.apply((ColorImage) interpolatedColorImage, (ROI) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Clip clip = new Clip(-100.0F, -100.0F);
        InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0);
        clip.apply(((ColorImage) (interpolatedColorImage)), ((ROI) (null)));
    }
}
statement is: Clip clip = new Clip(-100.0F, -100.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(((ColorImage) (interpolatedColorImage)), ((ROI) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(((ColorImage) (interpolatedColorImage)), ((ROI) (null))) target is: clip method is: apply(ColorImage,ROI)
source statement: jigl.image.ops.levelOps.Clip(FF)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 0
Matched Method is: apply(Ljigl/image/types/ColorImage;Ljigl/image/ROI;)Ljigl/image/Image;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: Clip clip = new Clip((-2772.2385F), (-2772.2385F));
int _int = 0;
int _int = 0;
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(_int, _int);
ROI rOI = null;
clip.apply((ColorImage) interpolatedColorImage, rOI);

statement is: jigl.image.ops.levelOps.Clip(FF)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip(1933.6675F, 1933.6675F)
statement is: jigl.image.types.InterpolatedRealColorImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.InterpolatedRealColorImage
statement code is: InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(935, 935)
statement is: apply(Ljigl/image/types/RealColorImage;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply((RealColorImage) arg0)
test data is: Clip clip = new Clip(1933.6675F, 1933.6675F);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(935, 935);
clip.apply((RealColorImage) interpolatedRealColorImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Clip clip = new Clip(1000.0F, 2000.0F);
        InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(500, 1000);
        clip.apply(((RealColorImage) (interpolatedRealColorImage)));
    }
}
statement is: Clip clip = new Clip(1000.0F, 2000.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(500, 1000), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(((RealColorImage) (interpolatedRealColorImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(((RealColorImage) (interpolatedRealColorImage))) target is: clip method is: apply(RealColorImage)
source statement: jigl.image.ops.levelOps.Clip(FF)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 2
Matched Method is: apply(Ljigl/image/types/RealColorImage;)Ljigl/image/Image;
TestCase is: float _float = 1000.0F;
float _float = 2000.0F;
Clip clip = new Clip(_float, _float);
int _int = 500;
int _int = 1000;
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(_int, _int);
((Clip) _float).apply((RealColorImage) interpolatedRealColorImage);

statement is: org.evosuite.testcase.statements.ArrayStatement@c19842be type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Clip.main(arg0)
test data is: String[] stringArray = new String[3];
Clip.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "-1", "0", "1" };
        Clip.main(stringArray);
    }
}
statement is: String[] stringArray = new String[]{ "-1", "0", "1" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[]{ "-1", "0", "1" } Elements: ["-1", "0", "1"]
lengths: [3] []
statement is: Clip.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Clip.main(stringArray) target is: Clip method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String[] stringArray = null;
Clip.main(stringArray);

statement is: jigl.image.ops.levelOps.Clip(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip(0, 0)
statement is: jigl.image.types.RealColorImage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.RealColorImage
statement code is: RealColorImage realColorImage = new RealColorImage()
statement is: jigl.image.ROI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ROI
statement code is: ROI rOI = new ROI()
statement is: apply(Ljigl/image/types/RealColorImage;Ljigl/image/ROI;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply(arg0, arg1)
test data is: Clip clip = new Clip(0, 0);
RealColorImage realColorImage = new RealColorImage();
ROI rOI = new ROI();
clip.apply(realColorImage, rOI);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Clip clip = new Clip(0, 0);
        RealColorImage realColorImage = new RealColorImage();
        ROI rOI = new ROI();
        clip.apply(realColorImage, rOI);
        // Improved test data
        int imageWidth = 1024;// Replace with a more descriptive value, such as the actual width of the image

        int imageHeight = 768;// Replace with a more descriptive value, such as the actual height of the image

        double clipX = 0.5;// Replace with a more representative value, such as the center x-coordinate of the clipped region

        double clipY = 0.25;// Replace with a more representative value, such as the center y-coordinate of the clipped region

        int clipWidth = 512;// Replace with a more descriptive value, such as the width of the clipped region

        int clipHeight = 384;// Replace with a more descriptive value, such as the height of the clipped region

        RealColorImage expectedImage = new RealColorImage(clipWidth, clipHeight);
        ROI expectedROI = new ROI(0, 0, clipWidth, clipHeight);
        clip.apply(expectedImage, expectedROI);
    }
}
statement is: Clip clip = new Clip(0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RealColorImage realColorImage = new RealColorImage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ROI rOI = new ROI(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(realColorImage, rOI), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(realColorImage, rOI) target is: clip method is: apply(RealColorImage,ROI)
source statement: jigl.image.ops.levelOps.Clip(II)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 2
Matched Method is: apply(Ljigl/image/types/RealColorImage;Ljigl/image/ROI;)Ljigl/image/Image;
statement is: // Improved test data
int imageWidth = 1024// Replace with a more descriptive value, such as the actual width of the image
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int imageHeight = 768// Replace with a more descriptive value, such as the actual height of the image
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double clipX = 0.5// Replace with a more representative value, such as the center x-coordinate of the clipped region
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double clipY = 0.25// Replace with a more representative value, such as the center y-coordinate of the clipped region
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int clipWidth = 512// Replace with a more descriptive value, such as the width of the clipped region
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int clipHeight = 384// Replace with a more descriptive value, such as the height of the clipped region
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: RealColorImage expectedImage = new RealColorImage(clipWidth, clipHeight), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ROI expectedROI = new ROI(0, 0, clipWidth, clipHeight), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(expectedImage, expectedROI), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(expectedImage, expectedROI) target is: clip method is: apply(RealColorImage,ROI)
source statement: jigl.image.ops.levelOps.Clip(II)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 2
Matched Method is: apply(Ljigl/image/types/RealColorImage;Ljigl/image/ROI;)Ljigl/image/Image;
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
* this is vulnerable: int _int = 1024
* this is vulnerable: int _int = 768
* this is vulnerable: double _double = 0.5
* this is vulnerable: double _double = 0.25
* this is vulnerable: int _int = 512
* this is vulnerable: int _int = 384
TestCase is: int _int = 0;
int _int = 0;
Clip clip = new Clip(_int, _int);
RealColorImage realColorImage = new RealColorImage();
ROI rOI = new ROI();
((Clip) _int).apply(realColorImage, rOI);
int _int = 1024;
int _int = 768;
double _double = 0.5;
double _double = 0.25;
int _int = 512;
int _int = 384;
RealColorImage realColorImage = null;
ROI rOI = null;
((Clip) _int).apply(realColorImage, rOI);

statement is: jigl.image.ops.levelOps.Clip(FF)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip(0.0F, (-881.7598F))
statement is: jigl.image.types.ComplexImage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ComplexImage
statement code is: ComplexImage complexImage = new ComplexImage()
statement is: phaseImage()Ljigl/image/types/RealGrayImage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jigl.image.types.PhaseImage
statement code is: PhaseImage phaseImage = (PhaseImage)complexImage.phaseImage()
statement is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply((RealGrayImage) arg0)
test data is: Clip clip = new Clip(0.0F, (-881.7598F));
ComplexImage complexImage = new ComplexImage();
PhaseImage phaseImage = (PhaseImage)complexImage.phaseImage();
clip.apply((RealGrayImage) phaseImage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Clip clip = new Clip(0.0F, -881.7598F);
        ComplexImage complexImage = new ComplexImage();
        PhaseImage phaseImage = ((PhaseImage) (complexImage.phaseImage()));
        clip.apply(((RealGrayImage) (phaseImage)));
    }
}
statement is: Clip clip = new Clip(0.0F, -881.7598F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ComplexImage complexImage = new ComplexImage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: PhaseImage phaseImage = ((PhaseImage) (complexImage.phaseImage())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((PhaseImage) (complexImage.phaseImage())) target is: complexImage method is: phaseImage()
source statement: jigl.image.types.ComplexImage()V callee: VariableReference: Statement 1, type jigl.image.types.ComplexImageindex is: 2
Matched Method is: phaseImage()Ljigl/image/types/RealGrayImage;
statement is: clip.apply(((RealGrayImage) (phaseImage))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(((RealGrayImage) (phaseImage))) target is: clip method is: apply(RealGrayImage)
source statement: jigl.image.ops.levelOps.Clip(FF)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 1
Matched Method is: apply(Ljigl/image/types/RealGrayImage;)Ljigl/image/Image;
TestCase is: float _float = 0.0F;
Clip clip = new Clip(_float, (-881.7598F));
ComplexImage complexImage = new ComplexImage();
PhaseImage phaseImage = (PhaseImage)((ComplexImage) clip).phaseImage();
((Clip) _float).apply((RealGrayImage) phaseImage);

statement is: jigl.image.ops.levelOps.Clip(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip(0, 0)
statement is: KernelType kernelType = KernelType.UNSHARP type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class jigl.image.types.KernelType
statement code is: KernelType kernelType = KernelType.UNSHARP
statement is: jigl.image.types.ImageKernel(Ljigl/image/types/KernelType;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ImageKernel
statement code is: ImageKernel imageKernel = new ImageKernel(arg0)
statement is: jigl.image.ROI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ROI
statement code is: ROI rOI = new ROI()
statement is: apply(Ljigl/image/types/RealGrayImage;Ljigl/image/ROI;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply((RealGrayImage) arg0, arg1)
test data is: Clip clip = new Clip(0, 0);
KernelType kernelType = KernelType.UNSHARP;
ImageKernel imageKernel = new ImageKernel(kernelType);
ROI rOI = new ROI();
clip.apply((RealGrayImage) imageKernel, rOI);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Clip clip = new Clip(10, 5);
        KernelType kernelType = KernelType.SHARP;
        ImageKernel imageKernel = new ImageKernel(kernelType);
        ROI rOI = new ROI();
        clip.apply(((RealGrayImage) (imageKernel)), rOI);
    }
}
statement is: Clip clip = new Clip(10, 5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: KernelType kernelType = KernelType.SHARP, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: KernelType.SHARP is KernelType
statement is: ImageKernel imageKernel = new ImageKernel(kernelType), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ROI rOI = new ROI(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(((RealGrayImage) (imageKernel)), rOI), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(((RealGrayImage) (imageKernel)), rOI) target is: clip method is: apply(RealGrayImage,ROI)
source statement: jigl.image.ops.levelOps.Clip(II)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 2
Matched Method is: apply(Ljigl/image/types/RealGrayImage;Ljigl/image/ROI;)Ljigl/image/Image;
TestCase is: int _int = 10;
int _int = 5;
Clip clip = new Clip(_int, _int);
ImageKernel imageKernel = new ImageKernel((KernelType) _int);
ROI rOI = new ROI();
((Clip) _int).apply((RealGrayImage) imageKernel, rOI);

statement is: jigl.image.types.ImageKernel(FI)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.ImageKernel
statement code is: ImageKernel imageKernel = new ImageKernel(0.0F, 3)
statement is: jigl.image.ROI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ROI
statement code is: ROI rOI = new ROI()
statement is: jigl.image.ops.levelOps.Clip(FF)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip(1, (-966.199F))
statement is: apply(Ljigl/image/types/RealGrayImage;Ljigl/image/ROI;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply((RealGrayImage) arg0, arg1)
test data is: ImageKernel imageKernel = new ImageKernel(0.0F, 3);
ROI rOI = new ROI();
Clip clip = new Clip(1, (-966.199F));
clip.apply((RealGrayImage) imageKernel, rOI);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ImageKernel imageKernel = new ImageKernel(0.0F, 3);
        ROI rOI = new ROI();
        Clip clip = new Clip(1, ((float) (-966.199)));// Changed the float value to a more illustrative example

        clip.apply(((RealGrayImage) (imageKernel)), rOI);
    }
}
statement is: ImageKernel imageKernel = new ImageKernel(0.0F, 3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ROI rOI = new ROI(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Clip clip = new Clip(1, ((float) (-966.199)))// Changed the float value to a more illustrative example
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(((RealGrayImage) (imageKernel)), rOI), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(((RealGrayImage) (imageKernel)), rOI) target is: clip method is: apply(RealGrayImage,ROI)
source statement: jigl.image.ops.levelOps.Clip(FF)V callee: VariableReference: Statement 2, type jigl.image.ops.levelOps.Clipindex is: 5
Matched Method is: apply(Ljigl/image/types/RealGrayImage;Ljigl/image/ROI;)Ljigl/image/Image;
TestCase is: float _float = 0.0F;
int _int = 3;
ImageKernel imageKernel = new ImageKernel(_float, _int);
ROI rOI = new ROI();
int _int = 1;
Clip clip = new Clip(_int, (-966.199F));
((Clip) imageKernel).apply((RealGrayImage) imageKernel, rOI);

statement is: jigl.image.ops.levelOps.Clip(FF)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ops.levelOps.Clip
statement code is: Clip clip = new Clip(0.0F, 0.0F)
statement is: jigl.image.types.GrayImage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.types.GrayImage
statement code is: GrayImage grayImage = new GrayImage(12, 12)
statement is: jigl.image.ROI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jigl.image.ROI
statement code is: ROI rOI = new ROI()
statement is: apply(Ljigl/image/types/GrayImage;Ljigl/image/ROI;)Ljigl/image/Image; type is: class org.evosuite.testcase.statements.MethodStatement return type jigl.image.Image<T>
statement code is: Image apply = clip.apply(arg0, arg1)
test data is: Clip clip = new Clip(0.0F, 0.0F);
GrayImage grayImage = new GrayImage(12, 12);
ROI rOI = new ROI();
clip.apply(grayImage, rOI);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Clip clip = new Clip(0.0F, 0.0F);
        GrayImage grayImage = new GrayImage(12, 12);
        ROI rOI = new ROI();
        clip.apply(grayImage, rOI);
    }
}
statement is: Clip clip = new Clip(0.0F, 0.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GrayImage grayImage = new GrayImage(12, 12), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ROI rOI = new ROI(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: clip.apply(grayImage, rOI), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clip.apply(grayImage, rOI) target is: clip method is: apply(GrayImage,ROI)
source statement: jigl.image.ops.levelOps.Clip(FF)V callee: VariableReference: Statement 0, type jigl.image.ops.levelOps.Clipindex is: 2
Matched Method is: apply(Ljigl/image/types/GrayImage;Ljigl/image/ROI;)Ljigl/image/Image;
TestCase is: float _float = 0.0F;
float _float = 0.0F;
Clip clip = new Clip(_float, _float);
int _int = 12;
int _int = 12;
GrayImage grayImage = new GrayImage(_int, _int);
ROI rOI = new ROI();
((Clip) _float).apply(grayImage, rOI);

* test suite isTestSuite: 20
Test 0: 
Clip clip = new Clip(0.0F, 0.0F);
int[][] intArray = new int[0][0];
GrayImage grayImage = new GrayImage(intArray);
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage);
// Undeclared exception!
try { 
  clip.apply((GrayImage) interpolatedGrayImage);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("jigl.image.types.GrayImage", e);
}

Test 1: 
Clip clip = new Clip(0, 0);
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage();
// Undeclared exception!
try { 
  clip.apply((ColorImage) interpolatedColorImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 2: 
Clip clip = new Clip((-2772.2385F), (-2772.2385F));
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0);
// Undeclared exception!
try { 
  clip.apply((ColorImage) interpolatedColorImage, (ROI) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 3: 
Clip clip = new Clip(1933.6675F, 1933.6675F);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(935, 935);
// Undeclared exception!
try { 
  clip.apply((RealColorImage) interpolatedRealColorImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 4: 
String[] stringArray = new String[3];
Clip.main(stringArray);
Test 5: 
Clip clip = new Clip(0, 0);
RealColorImage realColorImage = new RealColorImage();
ROI rOI = new ROI();
// Undeclared exception!
try { 
  clip.apply(realColorImage, rOI);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 6: 
Clip clip = new Clip(0.0F, (-881.7598F));
ComplexImage complexImage = new ComplexImage();
PhaseImage phaseImage = (PhaseImage)complexImage.phaseImage();
// Undeclared exception!
try { 
  clip.apply((RealGrayImage) phaseImage);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("jigl.image.types.RealGrayImage", e);
}

Test 7: 
Clip clip = new Clip(0, 0);
KernelType kernelType = KernelType.UNSHARP;
ImageKernel imageKernel = new ImageKernel(kernelType);
ROI rOI = new ROI();
clip.apply((RealGrayImage) imageKernel, rOI);
Test 8: 
ImageKernel imageKernel = new ImageKernel(0.0F, 3);
ROI rOI = new ROI();
Clip clip = new Clip(1, (-966.199F));
clip.apply((RealGrayImage) imageKernel, rOI);
Test 9: 
Clip clip = new Clip(0.0F, 0.0F);
GrayImage grayImage = new GrayImage(12, 12);
ROI rOI = new ROI();
// Undeclared exception!
try { 
  clip.apply(grayImage, rOI);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 10: 
Clip clip = new Clip(0.5F, 0.5F);
int[][] intArray = new int[0][0];
GrayImage grayImage = new GrayImage(intArray);
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage);
((Clip)0.5F).apply((GrayImage) interpolatedGrayImage);

Test 11: 
Clip clip = new Clip(10, 20);
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage();
((Clip)10).apply((ColorImage) interpolatedColorImage);

Test 12: 
Clip clip = new Clip((-2772.2385F), (-2772.2385F));
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0);
clip.apply((ColorImage) interpolatedColorImage, (ROI) null);

Test 13: 
Clip clip = new Clip(1000.0F, 2000.0F);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(500, 1000);
((Clip)1000.0F).apply((RealColorImage) interpolatedRealColorImage);

Test 14: 
Clip.main((String[]) null);

Test 15: 
int _int = 0;
Clip clip = new Clip(0, 0);
RealColorImage realColorImage = new RealColorImage();
ROI rOI = new ROI();
((Clip)0).apply(realColorImage, rOI);
RealColorImage realColorImage = null;
ROI rOI = null;
((Clip) _int).apply(realColorImage, rOI);

Test 16: 
float _float = 0.0F;
Clip clip = new Clip(0.0F, (-881.7598F));
ComplexImage complexImage = new ComplexImage();
PhaseImage phaseImage = (PhaseImage)((ComplexImage) clip).phaseImage();
((Clip) _float).apply((RealGrayImage) phaseImage);

Test 17: 
int _int = 10;
Clip clip = new Clip(10, 5);
ImageKernel imageKernel = new ImageKernel((KernelType) 5);
ROI rOI = new ROI();
((Clip) _int).apply((RealGrayImage) imageKernel, rOI);

Test 18: 
ImageKernel imageKernel = new ImageKernel(0.0F, 3);
ROI rOI = new ROI();
Clip clip = new Clip(1, (-966.199F));
((Clip) imageKernel).apply((RealGrayImage) imageKernel, rOI);

Test 19: 
Clip clip = new Clip(0.0F, 0.0F);
GrayImage grayImage = new GrayImage(12, 12);
ROI rOI = new ROI();
((Clip)0.0F).apply(grayImage, rOI);


* Generated after the refinement and before minimization 20 tests with total length 78
* test suite isTestSuite: 20
Test 0: 
Clip clip = new Clip(0.0F, 0.0F);
int[][] intArray = new int[0][0];
GrayImage grayImage = new GrayImage(intArray);
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage);
// Undeclared exception!
try { 
  clip.apply((GrayImage) interpolatedGrayImage);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("jigl.image.types.GrayImage", e);
}

Test 1: 
Clip clip = new Clip(0, 0);
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage();
// Undeclared exception!
try { 
  clip.apply((ColorImage) interpolatedColorImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 2: 
Clip clip = new Clip((-2772.2385F), (-2772.2385F));
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0);
// Undeclared exception!
try { 
  clip.apply((ColorImage) interpolatedColorImage, (ROI) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 3: 
Clip clip = new Clip(1933.6675F, 1933.6675F);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(935, 935);
// Undeclared exception!
try { 
  clip.apply((RealColorImage) interpolatedRealColorImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 4: 
String[] stringArray = new String[3];
Clip.main(stringArray);
Test 5: 
Clip clip = new Clip(0, 0);
RealColorImage realColorImage = new RealColorImage();
ROI rOI = new ROI();
// Undeclared exception!
try { 
  clip.apply(realColorImage, rOI);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 6: 
Clip clip = new Clip(0.0F, (-881.7598F));
ComplexImage complexImage = new ComplexImage();
PhaseImage phaseImage = (PhaseImage)complexImage.phaseImage();
// Undeclared exception!
try { 
  clip.apply((RealGrayImage) phaseImage);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("jigl.image.types.RealGrayImage", e);
}

Test 7: 
Clip clip = new Clip(0, 0);
KernelType kernelType = KernelType.UNSHARP;
ImageKernel imageKernel = new ImageKernel(kernelType);
ROI rOI = new ROI();
clip.apply((RealGrayImage) imageKernel, rOI);
Test 8: 
ImageKernel imageKernel = new ImageKernel(0.0F, 3);
ROI rOI = new ROI();
Clip clip = new Clip(1, (-966.199F));
clip.apply((RealGrayImage) imageKernel, rOI);
Test 9: 
Clip clip = new Clip(0.0F, 0.0F);
GrayImage grayImage = new GrayImage(12, 12);
ROI rOI = new ROI();
// Undeclared exception!
try { 
  clip.apply(grayImage, rOI);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 10: 
Clip clip = new Clip(0.5F, 0.5F);
int[][] intArray = new int[0][0];
GrayImage grayImage = new GrayImage(intArray);
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage);
((Clip)0.5F).apply((GrayImage) interpolatedGrayImage);

Test 11: 
Clip clip = new Clip(10, 20);
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage();
((Clip)10).apply((ColorImage) interpolatedColorImage);

Test 12: 
Clip clip = new Clip((-2772.2385F), (-2772.2385F));
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0);
clip.apply((ColorImage) interpolatedColorImage, (ROI) null);

Test 13: 
Clip clip = new Clip(1000.0F, 2000.0F);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(500, 1000);
((Clip)1000.0F).apply((RealColorImage) interpolatedRealColorImage);

Test 14: 
Clip.main((String[]) null);

Test 15: 
int _int = 0;
Clip clip = new Clip(0, 0);
RealColorImage realColorImage = new RealColorImage();
ROI rOI = new ROI();
((Clip)0).apply(realColorImage, rOI);
RealColorImage realColorImage = null;
ROI rOI = null;
((Clip) _int).apply(realColorImage, rOI);

Test 16: 
float _float = 0.0F;
Clip clip = new Clip(0.0F, (-881.7598F));
ComplexImage complexImage = new ComplexImage();
PhaseImage phaseImage = (PhaseImage)((ComplexImage) clip).phaseImage();
((Clip) _float).apply((RealGrayImage) phaseImage);

Test 17: 
int _int = 10;
Clip clip = new Clip(10, 5);
ImageKernel imageKernel = new ImageKernel((KernelType) 5);
ROI rOI = new ROI();
((Clip) _int).apply((RealGrayImage) imageKernel, rOI);

Test 18: 
ImageKernel imageKernel = new ImageKernel(0.0F, 3);
ROI rOI = new ROI();
Clip clip = new Clip(1, (-966.199F));
((Clip) imageKernel).apply((RealGrayImage) imageKernel, rOI);

Test 19: 
Clip clip = new Clip(0.0F, 0.0F);
GrayImage grayImage = new GrayImage(12, 12);
ROI rOI = new ROI();
((Clip)0.0F).apply(grayImage, rOI);


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
Clip clip = new Clip(0.0F, 0.0F);
int[][] intArray = new int[0][0];
GrayImage grayImage = new GrayImage(intArray);
InterpolatedGrayImage interpolatedGrayImage = new InterpolatedGrayImage(grayImage);
// Undeclared exception!
try { 
  clip.apply((GrayImage) interpolatedGrayImage);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("jigl.image.types.GrayImage", e);
}

Test 1: 
Clip clip = new Clip((-2772.2385F), (-2772.2385F));
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage(0, 0);
// Undeclared exception!
try { 
  clip.apply((ColorImage) interpolatedColorImage, (ROI) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 2: 
Clip clip = new Clip(0, 0);
InterpolatedColorImage interpolatedColorImage = new InterpolatedColorImage();
// Undeclared exception!
try { 
  clip.apply((ColorImage) interpolatedColorImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 3: 
Clip clip = new Clip(1933.6675F, 1933.6675F);
InterpolatedRealColorImage interpolatedRealColorImage = new InterpolatedRealColorImage(935, 935);
// Undeclared exception!
try { 
  clip.apply((RealColorImage) interpolatedRealColorImage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 4: 
Clip clip = new Clip(0, 0);
RealColorImage realColorImage = new RealColorImage();
ROI rOI = new ROI();
// Undeclared exception!
try { 
  clip.apply(realColorImage, rOI);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}

Test 5: 
Clip clip = new Clip(0.0F, (-881.7598F));
ComplexImage complexImage = new ComplexImage();
PhaseImage phaseImage = (PhaseImage)complexImage.phaseImage();
// Undeclared exception!
try { 
  clip.apply((RealGrayImage) phaseImage);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("jigl.image.types.RealGrayImage", e);
}

Test 6: 
ImageKernel imageKernel = new ImageKernel(0.0F, 3);
ROI rOI = new ROI();
Clip clip = new Clip(1, (-966.199F));
clip.apply((RealGrayImage) imageKernel, rOI);
Test 7: 
Clip clip = new Clip(0, 0);
KernelType kernelType = KernelType.UNSHARP;
ImageKernel imageKernel = new ImageKernel(kernelType);
ROI rOI = new ROI();
clip.apply((RealGrayImage) imageKernel, rOI);
Test 8: 
String[] stringArray = new String[3];
Clip.main(stringArray);
Test 9: 
GrayImage grayImage = new GrayImage(12, 12);
ROI rOI = new ROI();
// Undeclared exception!
try { 
  ((Clip)0.0F).apply(grayImage, rOI);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 76%
* Total number of goals: 33
* Number of covered goals: 25
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 67
* Number of covered goals: 39
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 4%
* Total number of goals: 56
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 33
* Number of covered goals: 25
* Generated 10 tests with total length 36
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Clip clip = new Clip((-2772.2385F), (-2772.2385F));
InterpolatedColorImage arg0 = new InterpolatedColorImage(0, 0);
// Undeclared exception!
try { 
  clip.apply((ColorImage) arg0, (ROI) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}


** It was a parseable test case! 
refined test name is: testApplyThrowsNullPointerExceptionWhenImageIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Clip clip = new Clip(0, 0);
InterpolatedColorImage arg0 = new InterpolatedColorImage();
// Undeclared exception!
try { 
  clip.apply((ColorImage) arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}


** It was a parseable test case! 
refined test name is: testApplyThrowsNPEOnNullArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Clip clip = new Clip(1933.6675F, 1933.6675F);
InterpolatedRealColorImage arg0 = new InterpolatedRealColorImage(935, 935);
// Undeclared exception!
try { 
  clip.apply((RealColorImage) arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}


** It was a parseable test case! 
refined test name is: testApplyWithNullImageThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Clip clip = new Clip(0, 0);
RealColorImage arg0 = new RealColorImage();
ROI arg1 = new ROI();
// Undeclared exception!
try { 
  clip.apply(arg0, arg1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jigl.image.ops.levelOps.Clip", e);
}


** It was a parseable test case! 
refined test name is: testApplyWithNullFirstArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Clip clip = new Clip(0.0F, (-881.7598F));
ComplexImage complexImage = new ComplexImage();
RealGrayImage arg0 = complexImage.phaseImage();
// Undeclared exception!
try { 
  clip.apply(arg0);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("jigl.image.types.RealGrayImage", e);
}


** It was a parseable test case! 
refined test name is: testApplyThrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ImageKernel arg0 = new ImageKernel(0.0F, 3);
ROI arg1 = new ROI();
Clip clip = new Clip(1, (-966.199F));
clip.apply((RealGrayImage) arg0, arg1);
assertEquals(1.0F, arg0.absSum(), 0.01F);
assertEquals(0.0F, arg0.min(), 0.01F);


** It was a parseable test case! 
refined test name is: testApplyClipWithRealGrayImage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[3];
Clip.main(arg0);
assertEquals(3, arg0.length);


** It was a parseable test case! 
refined test name is: testMainMethodWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:48.269 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:01:48.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:48.380 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:01:48.387 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:48.483 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:48.485 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
[MASTER] 09:01:48.580 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:48.582 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
[MASTER] 09:01:48.714 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:48.716 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
[MASTER] 09:01:48.815 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:48.816 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
[MASTER] 09:01:48.902 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:48.904 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
[MASTER] 09:01:49.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:01:49.101 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
[MASTER] 09:01:49.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3150837531894679220.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:01:49.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3150837531894679220.jar
* Writing tests to file
* Writing JUnit test case 'Clip_ESTest' to evosuite-tests
* Done!

* Computation finished
