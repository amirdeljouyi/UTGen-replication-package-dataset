* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: jipa.Main
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/26_jipa/evosuite-files/evosuite.properties
* Connecting to master process on port 2626
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class jipa.Main
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 468
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1709251662857
* Starting evolution
* Initial Number of Goals in DynaMOSA = 152 / 468
[Progress:=>                            4%] [Cov:================>                  46%][Progress:===>                          12%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    30%] [Cov:=====================>             62%][Progress:=========>                    30%] [Cov:=====================>             62%][Progress:=========>                    31%] [Cov:======================>            65%][Progress:=========>                    31%] [Cov:======================>            65%][Progress:=========>                    31%] [Cov:======================>            65%][Progress:=========>                    31%] [Cov:=======================>           66%][Progress:=========>                    32%] [Cov:=======================>           66%][Progress:=========>                    32%] [Cov:=======================>           66%][Progress:=========>                    32%] [Cov:=======================>           67%][Progress:=========>                    32%] [Cov:=======================>           67%][Progress:=========>                    32%] [Cov:=======================>           67%][Progress:=========>                    32%] [Cov:=======================>           68%][Progress:=========>                    32%] [Cov:========================>          69%][Progress:=========>                    32%] [Cov:========================>          69%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:=========================>         72%][Progress:=========>                    33%] [Cov:=========================>         72%][Progress:=========>                    33%] [Cov:=========================>         72%][Progress:=========>                    33%] [Cov:=========================>         72%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         74%][Progress:==========>                   36%] [Cov:=========================>         74%][Progress:===========>                  37%] [Cov:=========================>         74%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        77%][Progress:===========>                  39%] [Cov:==========================>        77%][Progress:===========>                  39%] [Cov:==========================>        77%][Progress:===========>                  39%] [Cov:==========================>        77%][Progress:===========>                  39%] [Cov:==========================>        77%][Progress:===========>                  39%] [Cov:==========================>        77%][Progress:============>                 40%] [Cov:==========================>        77%][Progress:============>                 40%] [Cov:==========================>        77%][Progress:============>                 40%] [Cov:==========================>        77%][Progress:============>                 40%] [Cov:==========================>        77%][Progress:============>                 40%] [Cov:===========================>       78%][Progress:============>                 40%] [Cov:===========================>       78%][Progress:============>                 40%] [Cov:===========================>       78%][Progress:============>                 40%] [Cov:===========================>       78%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%]
* Search finished after 102s and 775 generations, 91252 statements, best individual has fitness: 85.0
* Generated before the refinement 62 tests with total length 75
statement is: getStringValue(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String stringValue = Main.getStringValue("B*p")
test data is: Main.getStringValue("B*p");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.getStringValue("Alice");
    }
}
statement is: Main.getStringValue("Alice"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getStringValue("Alice") target is: Main method is: getStringValue(java.lang.String)
Matched Method is: getStringValue(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "Alice";
Main.getStringValue(string);

statement is: jipa.Main()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jipa.Main
statement code is: Main main = new Main()
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.main(main.instruction)
test data is: Main main = new Main();
Main.main(main.instruction);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main main = new Main();
        Main.main(main.instruction);
    }
}
statement is: Main main = new Main(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Main.main(main.instruction), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.main(main.instruction) target is: Main method is: main()
Matched Method is: main([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Main main = new Main();
String[] stringArray = null;
Main.main(stringArray);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("vk[ot'") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("vk[ot'")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "vk[ot'")
statement is: org.evosuite.testcase.statements.ArrayStatement@30245863 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2384e5ef type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "vk[ot'"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.main(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("vk[ot'");
FileSystemHandling.appendLineToFile(evoSuiteFile, "vk[ot'");
String[] stringArray = new String[1];
stringArray[0] = "vk[ot'";
Main.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("test.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "This is a test.");
        String[] stringArray = new String[1];
        stringArray[0] = "This is a test.";
        Main.main(stringArray);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("test.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "This is a test."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "This is a test.") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "This is a test.", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This is a test." Ct is: stringArray[0] = "This is a test."
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@f105f3fe
statement is: Main.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.main(stringArray) target is: Main method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
* this is vulnerable: String string = "This is a test."
TestCase is: String string = "This is a test.";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String[] stringArray = new String[1];
String string = "This is a test.";
Main.main(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@25c7dc3f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2127d4ff type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "&"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.main(arg0)
test data is: String[] stringArray = new String[9];
stringArray[0] = "&";
Main.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[9];
        stringArray[0] = "AND";
        stringArray[1] = "OR";
        stringArray[2] = "NOT";
        stringArray[3] = "XOR";
        stringArray[4] = "NAND";
        stringArray[5] = "NOR";
        stringArray[6] = "XNOR";
        stringArray[7] = "A&B";
        stringArray[8] = "A|B";
        Main.main(stringArray);
    }
}
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "AND", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"AND" Ct is: stringArray[0] = "AND"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "OR", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"OR" Ct is: stringArray[1] = "OR"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "NOT", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"NOT" Ct is: stringArray[2] = "NOT"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "XOR", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"XOR" Ct is: stringArray[3] = "XOR"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "NAND", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"NAND" Ct is: stringArray[4] = "NAND"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "NOR", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"NOR" Ct is: stringArray[5] = "NOR"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "XNOR", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"XNOR" Ct is: stringArray[6] = "XNOR"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "A&B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A&B" Ct is: stringArray[7] = "A&B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[8] = "A|B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A|B" Ct is: stringArray[8] = "A|B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Main.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.main(stringArray) target is: Main method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
TestCase is: String[] stringArray = new String[9];
String string = "AND";
stringArray[0] = string;
String string = "OR";
stringArray[0] = string;
String string = "NOT";
stringArray[0] = string;
String string = "XOR";
stringArray[0] = string;
String string = "NAND";
stringArray[0] = string;
String string = "NOR";
stringArray[0] = string;
String string = "XNOR";
stringArray[0] = string;
String string = "A&B";
stringArray[0] = string;
String string = "A|B";
stringArray[0] = string;
Main.main(stringArray);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("halt")
test data is: Main.processInstruction("halt");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for Main.processInstruction() method
        Main.processInstruction("start");// start the process

        Main.processInstruction("pause");// pause the process

        Main.processInstruction("resume");// resume the paused process

        Main.processInstruction("halt");// halt the process }}

    }
}
statement is: // Improved test data for Main.processInstruction() method
Main.processInstruction("start")// start the process
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for Main.processInstruction() method
Main.processInstruction("start")// start the process
 target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("pause")// pause the process
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("pause")// pause the process
 target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("resume")// resume the paused process
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("resume")// resume the paused process
 target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("halt")// halt the process }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("halt")// halt the process }}
 target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "start";
Main.processInstruction(string);
String string = "pause";
Main.processInstruction(string);
String string = "resume";
Main.processInstruction(string);
String string = "halt";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("out")
test data is: Main.processInstruction("out");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the processInstruction method
        Main.processInstruction("in");
        Main.processInstruction("out");
        Main.processInstruction("invalid");
        // Descriptive and representative test data for the getBalance method
        account1.getBalance();// returns 1000.0

        account2.getBalance();// returns 2500.0

        // More descriptive and representative test data for the withdraw method
        account1.withdraw(100);// returns true

        account2.withdraw(500);// returns false (insufficient funds) }}

    }
}
statement is: // Improved test data for the processInstruction method
Main.processInstruction("in"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for the processInstruction method
Main.processInstruction("in") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("out"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("out") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("invalid"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("invalid") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: // Descriptive and representative test data for the getBalance method
account1.getBalance()// returns 1000.0
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Descriptive and representative test data for the getBalance method
account1.getBalance()// returns 1000.0
 target is: account1 method is: getBalance()
statement is: account2.getBalance()// returns 2500.0
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: account2.getBalance()// returns 2500.0
 target is: account2 method is: getBalance()
statement is: // More descriptive and representative test data for the withdraw method
account1.withdraw(100)// returns true
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // More descriptive and representative test data for the withdraw method
account1.withdraw(100)// returns true
 target is: account1 method is: withdraw(int)
statement is: account2.withdraw(500)// returns false (insufficient funds) }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: account2.withdraw(500)// returns false (insufficient funds) }}
 target is: account2 method is: withdraw(int)
TestCase is: String string = "in";
Main.processInstruction(string);
String string = "out";
Main.processInstruction(string);
String string = "invalid";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("in")
test data is: Main.processInstruction("in");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("enter");
        // Improved test data:
        Main.processInstruction("exit");
        Main.processInstruction("move");
        Main.processInstruction("turn left");
        Main.processInstruction("turn right");
    }
}
statement is: Main.processInstruction("enter"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("enter") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: // Improved test data:
Main.processInstruction("exit"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
Main.processInstruction("exit") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("move"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("move") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("turn left"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("turn left") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("turn right"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("turn right") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "enter";
Main.processInstruction(string);
String string = "exit";
Main.processInstruction(string);
String string = "move";
Main.processInstruction(string);
String string = "turn left";
Main.processInstruction(string);
String string = "turn right";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("mov")
test data is: Main.processInstruction("mov");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Example 1: Moving a large file from one directory to another
        Main.processInstruction("mov", "C:\\source_file.txt", "C:\\target_directory\\");
        // Example 2: Moving multiple small files from one directory to another
        Main.processInstruction("mov", "C:\\source_directory\\*.txt", "C:\\target_directory\\");
        // Example 3: Moving a file to the root of a drive
        Main.processInstruction("mov", "C:\\source_file.txt", "D:\\");
        // Example 4: Moving a file to a directory on another drive
        Main.processInstruction("mov", "C:\\source_file.txt", "E:\\target_directory\\");
    }
}
statement is: // Example 1: Moving a large file from one directory to another
Main.processInstruction("mov", "C:\\source_file.txt", "C:\\target_directory\\"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Example 1: Moving a large file from one directory to another
Main.processInstruction("mov", "C:\\source_file.txt", "C:\\target_directory\\") target is: Main method is: processInstruction(java.lang.String,java.lang.String,java.lang.String)
statement is: // Example 2: Moving multiple small files from one directory to another
Main.processInstruction("mov", "C:\\source_directory\\*.txt", "C:\\target_directory\\"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Example 2: Moving multiple small files from one directory to another
Main.processInstruction("mov", "C:\\source_directory\\*.txt", "C:\\target_directory\\") target is: Main method is: processInstruction(java.lang.String,java.lang.String,java.lang.String)
statement is: // Example 3: Moving a file to the root of a drive
Main.processInstruction("mov", "C:\\source_file.txt", "D:\\"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Example 3: Moving a file to the root of a drive
Main.processInstruction("mov", "C:\\source_file.txt", "D:\\") target is: Main method is: processInstruction(java.lang.String,java.lang.String,java.lang.String)
statement is: // Example 4: Moving a file to a directory on another drive
Main.processInstruction("mov", "C:\\source_file.txt", "E:\\target_directory\\"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Example 4: Moving a file to a directory on another drive
Main.processInstruction("mov", "C:\\source_file.txt", "E:\\target_directory\\") target is: Main method is: processInstruction(java.lang.String,java.lang.String,java.lang.String)
statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("cpy")
test data is: Main.processInstruction("cpy");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("cpy");
        int x = -100;
        String y = "Goodbye, cruel world!";
        double z = 2.718;
        char c = 'A';
    }
}
statement is: Main.processInstruction("cpy"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("cpy") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: int x = -100, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -100
statement is: String y = "Goodbye, cruel world!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double z = 2.718, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = 'A', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "Goodbye, cruel world!"
* this is vulnerable: double _double = 2.718
* this is vulnerable: char _char = 'A'
TestCase is: String string = "cpy";
Main.processInstruction(string);
String string = "Goodbye, cruel world!";
double _double = 2.718;
char _char = 'A';

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("set")
test data is: Main.processInstruction("set");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int amount = 500;
        String type = "platinum";
        String status = "unavailable";
    }
}
statement is: int amount = 500, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String type = "platinum", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String status = "unavailable", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 500
* this is vulnerable: String string = "platinum"
* this is vulnerable: String string = "unavailable"
TestCase is: int _int = 500;
String string = "platinum";
String string = "unavailable";

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("del")
test data is: Main.processInstruction("del");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("delete");
    }
}
statement is: Main.processInstruction("delete"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("delete") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "delete";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("arr")
test data is: Main.processInstruction("arr");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int[] arr = new int[]{ 1, 2, 3, -4, 5, "hello", 'a', true };
    }
}
statement is: // Improved test data
int[] arr = new int[]{ 1, 2, 3, -4, 5, "hello", 'a', true }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("var")
test data is: Main.processInstruction("var");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("age");
    }
}
statement is: Main.processInstruction("age"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("age") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "age";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("inc")
test data is: Main.processInstruction("inc");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int input = 5;// Before: primitive value

        String opcode = "inc";// Before: String with a single character

        // After: More descriptive and representative test data
        int input = 1024;// Primitive value of a large number

        String opcode = "add";// String representing a different operation }}

    }
}
statement is: int input = 5// Before: primitive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String opcode = "inc"// Before: String with a single character
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // After: More descriptive and representative test data
int input = 1024// Primitive value of a large number
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String opcode = "add"// String representing a different operation }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
* this is vulnerable: String string = "inc"
* this is vulnerable: int _int = 1024
* this is vulnerable: String string = "add"
TestCase is: int _int = 5;
String string = "inc";
int _int = 1024;
String string = "add";

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("dec")
test data is: Main.processInstruction("dec");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("subtract");
    }
}
statement is: Main.processInstruction("subtract"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("subtract") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "subtract";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("add")
test data is: Main.processInstruction("add");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("add");
        String input1 = "firstOperand";
        String input2 = "secondOperand";
        String expectedOutput = "5";
        assertEquals(expectedOutput, Main.processInstruction(input1, input2));
    }
}
statement is: Main.processInstruction("add"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("add") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: String input1 = "firstOperand", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String input2 = "secondOperand", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedOutput = "5", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedOutput, Main.processInstruction(input1, input2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedOutput, Main.processInstruction(input1, input2)) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "firstOperand"
* this is vulnerable: String string = "secondOperand"
* this is vulnerable: String string = "5"
TestCase is: String string = "add";
Main.processInstruction(string);
String string = "firstOperand";
String string = "secondOperand";
String string = "5";

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("sub")
test data is: Main.processInstruction("sub");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for the processInstruction method
        // Test the "sub" instruction with different input types
        Main.processInstruction("sub", new String[]{ "12345", "67890" });
        Main.processInstruction("sub", new String[]{ "-12345", "67890" });
        Main.processInstruction("sub", new String[]{ "-12345", "-67890" });
        Main.processInstruction("sub", new String[]{ "abcde", "fghij" });
    }
}
statement is: // Test data for the processInstruction method
// Test the "sub" instruction with different input types
Main.processInstruction("sub", new String[]{ "12345", "67890" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test data for the processInstruction method
// Test the "sub" instruction with different input types
Main.processInstruction("sub", new String[]{ "12345", "67890" }) target is: Main method is: processInstruction(java.lang.String,java.lang.String[])
statement is: Main.processInstruction("sub", new String[]{ "-12345", "67890" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("sub", new String[]{ "-12345", "67890" }) target is: Main method is: processInstruction(java.lang.String,java.lang.String[])
statement is: Main.processInstruction("sub", new String[]{ "-12345", "-67890" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("sub", new String[]{ "-12345", "-67890" }) target is: Main method is: processInstruction(java.lang.String,java.lang.String[])
statement is: Main.processInstruction("sub", new String[]{ "abcde", "fghij" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("sub", new String[]{ "abcde", "fghij" }) target is: Main method is: processInstruction(java.lang.String,java.lang.String[])
statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("mul")
test data is: Main.processInstruction("mul");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("add");
    }
}
statement is: Main.processInstruction("add"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("add") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "add";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("div")
test data is: Main.processInstruction("div");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int a = 10;
        int b = 5;
        String str = "Hello";
        String str2 = "World";
        char c = 'a';
        char d = 'b';
        double e = 3.14;
        double f = 2.78;
    }
}
statement is: int a = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int b = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str = "Hello", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str2 = "World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char d = 'b', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double e = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double f = 2.78, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: int _int = 5
* this is vulnerable: String string = "Hello"
* this is vulnerable: String string = "World"
* this is vulnerable: char _char = 'a'
* this is vulnerable: char _char = 'b'
* this is vulnerable: double _double = 3.14
* this is vulnerable: double _double = 2.78
TestCase is: int _int = 10;
int _int = 5;
String string = "Hello";
String string = "World";
char _char = 'a';
char _char = 'b';
double _double = 3.14;
double _double = 2.78;

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("mod")
test data is: Main.processInstruction("mod");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Carefully
        review the;
        snippet.@Improve
        the test;
        by changing;
        primitive values;
        Strings(such instanceof , doubles, strings, chars);
        more illustrative;
        @Place
        your Improved;
    }
}
statement is: @Carefully
review the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: @Improve
the test, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: by changing, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: primitive values, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: Strings(such instanceof , doubles, strings, chars), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Strings(such instanceof , doubles, strings, chars) target is:  method is: Strings(<unknown>,<unknown>,<unknown>,<unknown>)
statement is: more illustrative, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: @Place
your Improved, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("xor")
test data is: Main.processInstruction("xor");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("and");
        Main.processInstruction("or");
        Main.processInstruction("not");
    }
}
statement is: Main.processInstruction("and"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("and") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("or"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("or") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("not"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("not") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "and";
Main.processInstruction(string);
String string = "or";
Main.processInstruction(string);
String string = "not";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("or")
test data is: Main.processInstruction("or");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for Main.processInstruction()
        Main.processInstruction("and");
        Main.processInstruction("not");
        Main.processInstruction("equal");
        Main.processInstruction("greaterThan");
        Main.processInstruction("lessThan");
    }
}
statement is: // Improved test data for Main.processInstruction()
Main.processInstruction("and"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for Main.processInstruction()
Main.processInstruction("and") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("not"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("not") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("equal"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("equal") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("greaterThan"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("greaterThan") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("lessThan"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("lessThan") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "and";
Main.processInstruction(string);
String string = "not";
Main.processInstruction(string);
String string = "equal";
Main.processInstruction(string);
String string = "greaterThan";
Main.processInstruction(string);
String string = "lessThan";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("and")
test data is: Main.processInstruction("and");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("1234567890");
    }
}
statement is: Main.processInstruction("1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("1234567890") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "1234567890";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("jmp")
test data is: Main.processInstruction("jmp");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("-1");
    }
}
statement is: Main.processInstruction("-1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("-1") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "-1";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("jnz")
test data is: Main.processInstruction("jnz");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Main.processInstruction("jump-if-non-zero");
    }
}
statement is: // Improved test data
Main.processInstruction("jump-if-non-zero"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
Main.processInstruction("jump-if-non-zero") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "jump-if-non-zero";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("ja")
test data is: Main.processInstruction("ja");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("jump");
        int distance = 10;
        double speed = 5.6;
        String direction = "forward";
    }
}
statement is: Main.processInstruction("jump"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("jump") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: int distance = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double speed = 5.6, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String direction = "forward", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 5.6
* this is vulnerable: String string = "forward"
TestCase is: String string = "jump";
Main.processInstruction(string);
int _int = 10;
double _double = 5.6;
String string = "forward";

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("jae")
test data is: Main.processInstruction("jae");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("jmp", 10);// jump to address 10

        Main.processInstruction("jae", 5);// jump above if equal to address 5 }}

    }
}
statement is: Main.processInstruction("jmp", 10)// jump to address 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("jmp", 10)// jump to address 10
 target is: Main method is: processInstruction(java.lang.String,int)
statement is: Main.processInstruction("jae", 5)// jump above if equal to address 5 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("jae", 5)// jump above if equal to address 5 }}
 target is: Main method is: processInstruction(java.lang.String,int)
statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("jb")
test data is: Main.processInstruction("jb");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("jumpToDestinationA");
    }
}
statement is: Main.processInstruction("jumpToDestinationA"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("jumpToDestinationA") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "jumpToDestinationA";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("jbe")
test data is: Main.processInstruction("jbe");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("jmp");
    }
}
statement is: Main.processInstruction("jmp"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("jmp") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "jmp";
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("jz")
test data is: Main.processInstruction("jz");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int x = 5;
        int y = 10;
        String opcode = "jz";
    }
}
statement is: int x = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int y = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String opcode = "jz", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "jz"
TestCase is: int _int = 5;
int _int = 10;
String string = "jz";

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("je")
test data is: Main.processInstruction("je");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the given code snippet
        int instruction = 1234;
        String opcode = "je";
        // Before
        Main.processInstruction(instruction);
        // After (improved)
        Main.processInstruction(opcode);
    }
}
statement is: // Improved test data for the given code snippet
int instruction = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String opcode = "je", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Before
Main.processInstruction(instruction), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Before
Main.processInstruction(instruction) target is: Main method is: processInstruction(int)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: // After (improved)
Main.processInstruction(opcode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // After (improved)
Main.processInstruction(opcode) target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: int _int = 1234;
String string = "je";
Main.processInstruction((String) _int);
Main.processInstruction(string);

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("jne")
test data is: Main.processInstruction("jne");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int a = 10;// Changed from 5 to 10 to reflect the updated condition

        String str = "hello";// Changed from "" to "hello" to reflect the updated string being tested

        Main.processInstruction("jne", a, str);
    }
}
statement is: // Improved test data
int a = 10// Changed from 5 to 10 to reflect the updated condition
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str = "hello"// Changed from "" to "hello" to reflect the updated string being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Main.processInstruction("jne", a, str), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("jne", a, str) target is: Main method is: processInstruction(java.lang.String,int,java.lang.String)
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "hello"
TestCase is: int _int = 10;
String string = "hello";

statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction("cmp")
test data is: Main.processInstruction("cmp");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("add");
        Main.processInstruction("sub");
        Main.processInstruction("mul");
        Main.processInstruction("div");
        Main.processInstruction("mod");
    }
}
statement is: Main.processInstruction("add"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("add") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("sub"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("sub") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("mul"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("mul") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("div"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("div") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
statement is: Main.processInstruction("mod"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("mod") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "add";
Main.processInstruction(string);
String string = "sub";
Main.processInstruction(string);
String string = "mul";
Main.processInstruction(string);
String string = "div";
Main.processInstruction(string);
String string = "mod";
Main.processInstruction(string);

statement is: loadInstructions(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean loadInstructions = Main.loadInstructions("q")
test data is: Main.loadInstructions("q");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.loadInstructions("quit");
    }
}
statement is: Main.loadInstructions("quit"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.loadInstructions("quit") target is: Main method is: loadInstructions(java.lang.String)
Matched Method is: loadInstructions(Ljava/lang/String;)Z
TestCase is: String string = "quit";
Main.loadInstructions(string);

statement is: removeComment(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String removeComment = Main.removeComment(" i;aV~vv6*~=REie")
test data is: Main.removeComment(" i;aV~vv6*~=REie");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.removeComment("This is a test comment");
    }
}
statement is: Main.removeComment("This is a test comment"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.removeComment("This is a test comment") target is: Main method is: removeComment(java.lang.String)
Matched Method is: removeComment(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "This is a test comment";
Main.removeComment(string);

statement is: removeComment(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String removeComment = Main.removeComment("%o*V^[L;oE'_&\"|yE?m")
test data is: Main.removeComment("%o*V^[L;oE'_&\"|yE?m");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.removeComment("This is a test comment with special characters. #$%^&*()_+-=[]{}|;\':\"\\,.<>/");// Test case 1

        Main.removeComment("");// Test case 2 - empty string

        Main.removeComment(null);// Test case 3 - null reference

        Main.removeComment("@#$%^&*()_+-=[]{}|;\':\"\\,./<>?");// Test case 4 - invalid characters }}

    }
}
statement is: Main.removeComment("This is a test comment with special characters. #$%^&*()_+-=[]{}|;\':\"\\,.<>/")// Test case 1
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.removeComment("This is a test comment with special characters. #$%^&*()_+-=[]{}|;\':\"\\,.<>/")// Test case 1
 target is: Main method is: removeComment(java.lang.String)
Matched Method is: removeComment(Ljava/lang/String;)Ljava/lang/String;
statement is: Main.removeComment("")// Test case 2 - empty string
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.removeComment("")// Test case 2 - empty string
 target is: Main method is: removeComment(java.lang.String)
Matched Method is: removeComment(Ljava/lang/String;)Ljava/lang/String;
statement is: Main.removeComment(null)// Test case 3 - null reference
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.removeComment(null)// Test case 3 - null reference
 target is: Main method is: removeComment(<unknown>)
Matched Method is: removeComment(Ljava/lang/String;)Ljava/lang/String;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Main.removeComment("@#$%^&*()_+-=[]{}|;\':\"\\,./<>?")// Test case 4 - invalid characters }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.removeComment("@#$%^&*()_+-=[]{}|;\':\"\\,./<>?")// Test case 4 - invalid characters }}
 target is: Main method is: removeComment(java.lang.String)
Matched Method is: removeComment(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "This is a test comment with special characters. #$%^&*()_+-=[]{}|;':\"\\,.<>/";
Main.removeComment(string);
String string = "";
Main.removeComment(string);
String string = null;
Main.removeComment(string);
String string = "@#$%^&*()_+-=[]{}|;':\"\\,./<>?";
Main.removeComment(string);

statement is: splitArguments(Ljava/lang/String;)[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] splitArguments = Main.splitArguments("G0U,bHI(ioOjO6(\"Bo")
test data is: Main.splitArguments("G0U,bHI(ioOjO6(\"Bo");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: processInstruction(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.processInstruction(" \"x,\"VW&U[?##-Ck&aFY")
test data is: Main.processInstruction(" \"x,\"VW&U[?##-Ck&aFY");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.processInstruction("\"x, y, z\",VW&U[?##-Ck&aFY");
    }
}
statement is: Main.processInstruction("\"x, y, z\",VW&U[?##-Ck&aFY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.processInstruction("\"x, y, z\",VW&U[?##-Ck&aFY") target is: Main method is: processInstruction(java.lang.String)
Matched Method is: processInstruction(Ljava/lang/String;)V
TestCase is: String string = "\"x, y, z\",VW&U[?##-Ck&aFY";
Main.processInstruction(string);

statement is: getValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int value = Main.getValue("7")
test data is: Main.getValue("7");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.getValue("apple");
    }
}
statement is: Main.getValue("apple"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getValue("apple") target is: Main method is: getValue(java.lang.String)
Matched Method is: getValue(Ljava/lang/String;)I
TestCase is: String string = "apple";
Main.getValue(string);

statement is: addInputLine(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: SystemInUtil.addInputLine("del")
statement is: readValue()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readValue = Main.readValue()
test data is: SystemInUtil.addInputLine("del");
Main.readValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SystemInUtil.addInputLine("12345");
        Main.readValue();
    }
}
statement is: SystemInUtil.addInputLine("12345"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("12345") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: Main.readValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.readValue() target is: Main method is: readValue()
Matched Method is: readValue()I
TestCase is: String string = "12345";
SystemInUtil.addInputLine(string);
Main.readValue();

statement is: addInputLine(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: SystemInUtil.addInputLine("0")
statement is: readValue()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readValue = Main.readValue()
test data is: SystemInUtil.addInputLine("0");
Main.readValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SystemInUtil.addInputLine("123456789");
        Main.readValue();
        SystemInUtil.addInputLine("-9876543210");
        Main.readValue();
        SystemInUtil.addInputLine("10");
        Main.readValue();
    }
}
statement is: SystemInUtil.addInputLine("123456789"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("123456789") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: Main.readValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.readValue() target is: Main method is: readValue()
Matched Method is: readValue()I
statement is: SystemInUtil.addInputLine("-9876543210"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("-9876543210") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: Main.readValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.readValue() target is: Main method is: readValue()
Matched Method is: readValue()I
statement is: SystemInUtil.addInputLine("10"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("10") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: Main.readValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.readValue() target is: Main method is: readValue()
Matched Method is: readValue()I
TestCase is: String string = "123456789";
SystemInUtil.addInputLine(string);
Main.readValue();
String string = "-9876543210";
SystemInUtil.addInputLine(string);
Main.readValue();
String string = "10";
SystemInUtil.addInputLine(string);
Main.readValue();

statement is: getStringValue(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String stringValue = Main.getStringValue(" \"x,\"VW&U?##-Ck&aFY")
test data is: Main.getStringValue(" \"x,\"VW&U?##-Ck&aFY");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.getStringValue("\"123-abc\",VW&U?##-Ck&aFY");
    }
}
statement is: Main.getStringValue("\"123-abc\",VW&U?##-Ck&aFY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getStringValue("\"123-abc\",VW&U?##-Ck&aFY") target is: Main method is: getStringValue(java.lang.String)
Matched Method is: getStringValue(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "\"123-abc\",VW&U?##-Ck&aFY";
Main.getStringValue(string);

statement is: getStringValue(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String stringValue = Main.getStringValue("\"L[j@Cb")
test data is: Main.getStringValue("\"L[j@Cb");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.getStringValue("[Alice, Bob, Charlie, David, Eve]");
    }
}
statement is: Main.getStringValue("[Alice, Bob, Charlie, David, Eve]"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getStringValue("[Alice, Bob, Charlie, David, Eve]") target is: Main method is: getStringValue(java.lang.String)
Matched Method is: getStringValue(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "[Alice, Bob, Charlie, David, Eve]";
Main.getStringValue(string);

statement is: getStringValue(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String stringValue = Main.getStringValue("ch\"")
test data is: Main.getStringValue("ch\"");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.getStringValue("hello");
        Main.getStringValue("world");
    }
}
statement is: Main.getStringValue("hello"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getStringValue("hello") target is: Main method is: getStringValue(java.lang.String)
Matched Method is: getStringValue(Ljava/lang/String;)Ljava/lang/String;
statement is: Main.getStringValue("world"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getStringValue("world") target is: Main method is: getStringValue(java.lang.String)
Matched Method is: getStringValue(Ljava/lang/String;)Ljava/lang/String;
TestCase is: String string = "hello";
Main.getStringValue(string);
String string = "world";
Main.getStringValue(string);

statement is: isNumeric(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean numeric = Main.isNumeric(" i;aV~vv6*~=REie")
test data is: Main.isNumeric(" i;aV~vv6*~=REie");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.isNumeric("3.14");
    }
}
statement is: Main.isNumeric("3.14"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.isNumeric("3.14") target is: Main method is: isNumeric(java.lang.String)
Matched Method is: isNumeric(Ljava/lang/String;)Z
TestCase is: String string = "3.14";
Main.isNumeric(string);

statement is: toOpcode(Ljava/lang/String;)Ljipa/Main$opcodes; type is: class org.evosuite.testcase.statements.MethodStatement return type class jipa.Main$opcodes
statement code is: Main.opcodes opcode = Main.opcodes.toOpcode("")
test data is: Main.opcodes.toOpcode("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        opcodes.toOpcode("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
    }
}
statement is: opcodes.toOpcode("ABCDEFGHIJKLMNOPQRSTUVWXYZ"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: opcodes.toOpcode("ABCDEFGHIJKLMNOPQRSTUVWXYZ") target is: opcodes method is: toOpcode(java.lang.String)
Matched Method is: toOpcode(Ljava/lang/String;)Ljipa/Main$opcodes;
TestCase is: String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
Main.opcodes.toOpcode(string);

statement is: loadInstructions(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean loadInstructions = Main.loadInstructions("")
test data is: Main.loadInstructions("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.loadInstructions("Load the washing machine with 5 kilograms of dirty laundry.");
    }
}
statement is: Main.loadInstructions("Load the washing machine with 5 kilograms of dirty laundry."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.loadInstructions("Load the washing machine with 5 kilograms of dirty laundry.") target is: Main method is: loadInstructions(java.lang.String)
Matched Method is: loadInstructions(Ljava/lang/String;)Z
TestCase is: String string = "Load the washing machine with 5 kilograms of dirty laundry.";
Main.loadInstructions(string);

statement is: loadInstructions(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean loadInstructions = Main.loadInstructions("mod")
test data is: Main.loadInstructions("mod");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.loadInstructions("mod");
        // Improved test data
        String instructions = "MOD 5 2";// Modulus with two numbers

        int expectedValue = 1;// Expecting a result of 1

        String instructions = "MOD 3.0 4.0";// Modulus with two decimal numbers

        double expectedValue = 1.0;// Expecting a result of 1.0

        String instructions = "MOD 2 'a'";// Modulus with a string and an integer

        int expectedValue = 'a' % 2;// Expecting a result of 0 (remainder of dividing 'a' by 2) }}

    }
}
statement is: Main.loadInstructions("mod"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.loadInstructions("mod") target is: Main method is: loadInstructions(java.lang.String)
Matched Method is: loadInstructions(Ljava/lang/String;)Z
statement is: // Improved test data
String instructions = "MOD 5 2"// Modulus with two numbers
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedValue = 1// Expecting a result of 1
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String instructions = "MOD 3.0 4.0"// Modulus with two decimal numbers
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double expectedValue = 1.0// Expecting a result of 1.0
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String instructions = "MOD 2 'a'"// Modulus with a string and an integer
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedValue = 'a' % 2// Expecting a result of 0 (remainder of dividing 'a' by 2) }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: 'a' % 2
* this is vulnerable: String string = "MOD 5 2"
* this is vulnerable: int _int = 1
* this is vulnerable: String string = "MOD 3.0 4.0"
* this is vulnerable: double _double = 1.0
* this is vulnerable: String string = "MOD 2 'a'"
TestCase is: String string = "mod";
Main.loadInstructions(string);
String string = "MOD 5 2";
int _int = 1;
String string = "MOD 3.0 4.0";
double _double = 1.0;
String string = "MOD 2 'a'";

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("n") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("n")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "sub")
statement is: loadInstructions(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean loadInstructions = Main.loadInstructions("n")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("n");
FileSystemHandling.appendLineToFile(evoSuiteFile, "sub");
Main.loadInstructions("n");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("1234567890");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "sub");
        Main.loadInstructions("1234567890");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "sub"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "sub") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Main.loadInstructions("1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.loadInstructions("1234567890") target is: Main method is: loadInstructions(java.lang.String)
Matched Method is: loadInstructions(Ljava/lang/String;)Z
TestCase is: String string = "sub";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "1234567890";
Main.loadInstructions(string);

statement is: removeComment(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String removeComment = Main.removeComment("o[l")
test data is: Main.removeComment("o[l");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // This test data is now more descriptive and representative of the situation being tested.
        String input = "Hello, World!";
        String expectedOutput = "Hw";
        String actualOutput = Main.removeComment(input);
        assertEquals(expectedOutput, actualOutput);
    }
}
statement is: // This test data is now more descriptive and representative of the situation being tested.
String input = "Hello, World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedOutput = "Hw", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String actualOutput = Main.removeComment(input), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.removeComment(input) target is: Main method is: removeComment(java.lang.String)
Matched Method is: removeComment(Ljava/lang/String;)Ljava/lang/String;
statement is: assertEquals(expectedOutput, actualOutput), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedOutput, actualOutput) target is:  method is: assertEquals(java.lang.String,java.lang.String)
* this is vulnerable: String string = "Hw"
TestCase is: String string = "Hello, World!";
String string = "Hw";
Main.removeComment(string);

statement is: resetInstructions()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Main.resetInstructions()
test data is: Main.resetInstructions();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for resetting instructions
        String[] initialInstructions = new String[]{ "instruction1", "instruction2", "instruction3" };
        String[] expectedResetInstructions = new String[]{  };
    }
}
statement is: // Test data for resetting instructions
String[] initialInstructions = new String[]{ "instruction1", "instruction2", "instruction3" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] expectedResetInstructions = new String[]{  }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: splitArguments(Ljava/lang/String;)[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] splitArguments = Main.splitArguments("E_e)O=XxPmAl:")
test data is: Main.splitArguments("E_e)O=XxPmAl:");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.splitArguments("John Doe's birthday is on January 1st");
    }
}
statement is: Main.splitArguments("John Doe's birthday is on January 1st"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.splitArguments("John Doe's birthday is on January 1st") target is: Main method is: splitArguments(java.lang.String)
Matched Method is: splitArguments(Ljava/lang/String;)[Ljava/lang/String;
TestCase is: String string = "John Doe's birthday is on January 1st";
Main.splitArguments(string);

statement is: splitArguments(Ljava/lang/String;)[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] splitArguments = Main.splitArguments("UR U9#.*J#0\"xU,(")
test data is: Main.splitArguments("UR U9#.*J#0\"xU,(");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.splitArguments("UR U9#.*J#0\"xU,(");
    }
}
statement is: Main.splitArguments("UR U9#.*J#0\"xU,("), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.splitArguments("UR U9#.*J#0\"xU,(") target is: Main method is: splitArguments(java.lang.String)
Matched Method is: splitArguments(Ljava/lang/String;)[Ljava/lang/String;
TestCase is: String string = "UR U9#.*J#0\"xU,(";
Main.splitArguments(string);

statement is: getValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int value = Main.getValue("*")
test data is: Main.getValue("*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for Main.getValue() method
        Main.getValue("banana");// Banana is a fruit

        Main.getValue(2);// 2 is an integer

        Main.getValue(2.0);// 2.0 is a double

        Main.getValue('b');// 'b' is a character }}

    }
}
statement is: // Improved test data for Main.getValue() method
Main.getValue("banana")// Banana is a fruit
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for Main.getValue() method
Main.getValue("banana")// Banana is a fruit
 target is: Main method is: getValue(java.lang.String)
Matched Method is: getValue(Ljava/lang/String;)I
statement is: Main.getValue(2)// 2 is an integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getValue(2)// 2 is an integer
 target is: Main method is: getValue(int)
Matched Method is: getValue(Ljava/lang/String;)I
statement is: Main.getValue(2.0)// 2.0 is a double
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getValue(2.0)// 2.0 is a double
 target is: Main method is: getValue(double)
Matched Method is: getValue(Ljava/lang/String;)I
statement is: Main.getValue('b')// 'b' is a character }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getValue('b')// 'b' is a character }}
 target is: Main method is: getValue(char)
Matched Method is: getValue(Ljava/lang/String;)I
TestCase is: String string = "banana";
Main.getValue(string);
int _int = 2;
Main.getValue((String) _int);
double _double = 2.0;
Main.getValue((String) _double);
char _char = 'b';
Main.getValue((String) _char);

statement is: getJumpValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int jumpValue = Main.getJumpValue("9zcu3u'ty")
test data is: Main.getJumpValue("9zcu3u'ty");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.getJumpValue("!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~");
    }
}
statement is: Main.getJumpValue("!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getJumpValue("!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~") target is: Main method is: getJumpValue(java.lang.String)
Matched Method is: getJumpValue(Ljava/lang/String;)I
TestCase is: String string = "!@#$%^&*()_+-=[]{}|;':\"<>,./?`~";
Main.getJumpValue(string);

statement is: addInputLine(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: SystemInUtil.addInputLine("")
statement is: getFileName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String fileName = Main.getFileName()
test data is: SystemInUtil.addInputLine("");
Main.getFileName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SystemInUtil.addInputLine("C:\\Users\\JohnDoe\\Documents\\TestFile.txt");
        Main.getFileName();
    }
}
statement is: SystemInUtil.addInputLine("C:\\Users\\JohnDoe\\Documents\\TestFile.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("C:\\Users\\JohnDoe\\Documents\\TestFile.txt") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: Main.getFileName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getFileName() target is: Main method is: getFileName()
Matched Method is: getFileName()Ljava/lang/String;
TestCase is: String string = "C:\\Users\\JohnDoe\\Documents\\TestFile.txt";
SystemInUtil.addInputLine(string);
Main.getFileName();

statement is: addInputLine(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: SystemInUtil.addInputLine("*")
statement is: getFileName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String fileName = Main.getFileName()
test data is: SystemInUtil.addInputLine("*");
Main.getFileName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SystemInUtil.addInputLine("ABC1234567890");
        SystemInUtil.addInputLine("1234567890");
        SystemInUtil.addInputLine("XYZ1234567890");
        SystemInUtil.addInputLine("09876543210");
        Main.getFileName();
    }
}
statement is: SystemInUtil.addInputLine("ABC1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("ABC1234567890") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: SystemInUtil.addInputLine("1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("1234567890") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: SystemInUtil.addInputLine("XYZ1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("XYZ1234567890") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: SystemInUtil.addInputLine("09876543210"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: SystemInUtil.addInputLine("09876543210") target is: SystemInUtil method is: addInputLine(java.lang.String)
Matched Method is: addInputLine(Ljava/lang/String;)V
statement is: Main.getFileName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getFileName() target is: Main method is: getFileName()
Matched Method is: getFileName()Ljava/lang/String;
TestCase is: String string = "ABC1234567890";
SystemInUtil.addInputLine(string);
String string = "1234567890";
SystemInUtil.addInputLine(string);
String string = "XYZ1234567890";
SystemInUtil.addInputLine(string);
String string = "09876543210";
SystemInUtil.addInputLine(string);
Main.getFileName();

statement is: getJumpValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int jumpValue = Main.getJumpValue("49")
test data is: Main.getJumpValue("49");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        String jumpValue = "80";
    }
}
statement is: // Improved test data
String jumpValue = "80", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "80"
TestCase is: String string = "80";

statement is: getJumpValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int jumpValue = Main.getJumpValue("1")
test data is: Main.getJumpValue("1");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.getJumpValue("jumpValue1");
        Main.getJumpValue("jumpValue2");
    }
}
statement is: Main.getJumpValue("jumpValue1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getJumpValue("jumpValue1") target is: Main method is: getJumpValue(java.lang.String)
Matched Method is: getJumpValue(Ljava/lang/String;)I
statement is: Main.getJumpValue("jumpValue2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getJumpValue("jumpValue2") target is: Main method is: getJumpValue(java.lang.String)
Matched Method is: getJumpValue(Ljava/lang/String;)I
TestCase is: String string = "jumpValue1";
Main.getJumpValue(string);
String string = "jumpValue2";
Main.getJumpValue(string);

statement is: getValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int value = Main.getValue("dT=r/\"P*vG")
test data is: Main.getValue("dT=r/\"P*vG");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Main.getValue("dT=r/\"P*vG");
        // Improved test data:
        Main.getValue("dT=r/\"P*vG");// Testing for a valid value

        Main.getValue("1234567890");// Testing for an invalid value }}

    }
}
statement is: Main.getValue("dT=r/\"P*vG"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getValue("dT=r/\"P*vG") target is: Main method is: getValue(java.lang.String)
Matched Method is: getValue(Ljava/lang/String;)I
statement is: // Improved test data:
Main.getValue("dT=r/\"P*vG")// Testing for a valid value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
Main.getValue("dT=r/\"P*vG")// Testing for a valid value
 target is: Main method is: getValue(java.lang.String)
Matched Method is: getValue(Ljava/lang/String;)I
statement is: Main.getValue("1234567890")// Testing for an invalid value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Main.getValue("1234567890")// Testing for an invalid value }}
 target is: Main method is: getValue(java.lang.String)
Matched Method is: getValue(Ljava/lang/String;)I
TestCase is: String string = "dT=r/\"P*vG";
Main.getValue(string);
String string = "dT=r/\"P*vG";
Main.getValue(string);
String string = "1234567890";
Main.getValue(string);

statement is: isNumeric(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean numeric = Main.isNumeric("0")
test data is: Main.isNumeric("0");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        return (str != null) && str.matches("-?\\d+(\\.\\d+)?");
    }

    {
    }

    public void testIsNumeric() {
        assertTrue(Main.isNumeric("1234.5678"));
        assertTrue(Main.isNumeric("-1234.5678"));
        assertFalse(Main.isNumeric("abcdefghijklmnopqrstuvwxyz!"));
        assertFalse(Main.isNumeric(""));
        assertFalse(Main.isNumeric(null));
    }
}
statement is: return (str != null) && str.matches("-?\\d+(\\.\\d+)?"), class spoon.support.reflect.code.CtReturnImpl
statement is: assertTrue(Main.isNumeric("1234.5678")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(Main.isNumeric("1234.5678")) target is:  method is: assertTrue(<unknown>)
statement is: assertTrue(Main.isNumeric("-1234.5678")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(Main.isNumeric("-1234.5678")) target is:  method is: assertTrue(<unknown>)
statement is: assertFalse(Main.isNumeric("abcdefghijklmnopqrstuvwxyz!")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(Main.isNumeric("abcdefghijklmnopqrstuvwxyz!")) target is:  method is: assertFalse(<unknown>)
statement is: assertFalse(Main.isNumeric("")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(Main.isNumeric("")) target is:  method is: assertFalse(<unknown>)
statement is: assertFalse(Main.isNumeric(null)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(Main.isNumeric(null)) target is:  method is: assertFalse(<unknown>)
statement is: removeComment(Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String removeComment = Main.removeComment("")
test data is: Main.removeComment("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before
        int x = 5;
        String y = "hello";
        // After
        int x = 10;
        String y = "world";
    }
}
statement is: // Before
int x = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String y = "hello", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // After
int x = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String y = "world", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
* this is vulnerable: String string = "hello"
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "world"
TestCase is: int _int = 5;
String string = "hello";
int _int = 10;
String string = "world";

* test suite isTestSuite: 116
Test 0: 
Main.getStringValue("B*p");
Test 1: 
Main main = new Main();
// Undeclared exception!
try { 
  Main.main(main.instruction);
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("vk[ot'");
FileSystemHandling.appendLineToFile(evoSuiteFile, "vk[ot'");
String[] stringArray = new String[1];
stringArray[0] = "vk[ot'";
// Undeclared exception!
try { 
  Main.main(stringArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
String[] stringArray = new String[9];
stringArray[0] = "&";
// Undeclared exception!
Main.main(stringArray);
Test 4: 
// Undeclared exception!
try { 
  Main.processInstruction("halt");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 5: 
// Undeclared exception!
try { 
  Main.processInstruction("out");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Main", e);
}

Test 6: 
// Undeclared exception!
try { 
  Main.processInstruction("in");
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 7: 
// Undeclared exception!
try { 
  Main.processInstruction("mov");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
// Undeclared exception!
try { 
  Main.processInstruction("cpy");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
// Undeclared exception!
try { 
  Main.processInstruction("set");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
// Undeclared exception!
try { 
  Main.processInstruction("del");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 11: 
// Undeclared exception!
try { 
  Main.processInstruction("arr");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 12: 
// Undeclared exception!
try { 
  Main.processInstruction("var");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 13: 
// Undeclared exception!
try { 
  Main.processInstruction("inc");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
// Undeclared exception!
try { 
  Main.processInstruction("dec");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
// Undeclared exception!
try { 
  Main.processInstruction("add");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
// Undeclared exception!
try { 
  Main.processInstruction("sub");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
// Undeclared exception!
try { 
  Main.processInstruction("mul");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
// Undeclared exception!
try { 
  Main.processInstruction("div");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
// Undeclared exception!
try { 
  Main.processInstruction("mod");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
// Undeclared exception!
try { 
  Main.processInstruction("xor");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
// Undeclared exception!
try { 
  Main.processInstruction("or");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
// Undeclared exception!
try { 
  Main.processInstruction("and");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Main.processInstruction("jmp");
Test 24: 
// Undeclared exception!
try { 
  Main.processInstruction("jnz");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
// Undeclared exception!
try { 
  Main.processInstruction("ja");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
// Undeclared exception!
try { 
  Main.processInstruction("jae");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
// Undeclared exception!
try { 
  Main.processInstruction("jb");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 28: 
// Undeclared exception!
try { 
  Main.processInstruction("jbe");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
// Undeclared exception!
try { 
  Main.processInstruction("jz");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 30: 
// Undeclared exception!
try { 
  Main.processInstruction("je");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
// Undeclared exception!
try { 
  Main.processInstruction("jne");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 32: 
// Undeclared exception!
try { 
  Main.processInstruction("cmp");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 33: 
// Undeclared exception!
try { 
  Main.loadInstructions("q");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 34: 
Main.removeComment(" i;aV~vv6*~=REie");
Test 35: 
Main.removeComment("%o*V^[L;oE'_&\"|yE?m");
Test 36: 
Main.splitArguments("G0U,bHI(ioOjO6(\"Bo");
Test 37: 
Main.processInstruction(" \"x,\"VW&U[?##-Ck&aFY");
Test 38: 
Main.getValue("7");
Test 39: 
SystemInUtil.addInputLine("del");
Main.readValue();
Test 40: 
SystemInUtil.addInputLine("0");
Main.readValue();
Test 41: 
Main.getStringValue(" \"x,\"VW&U?##-Ck&aFY");
Test 42: 
Main.getStringValue("\"L[j@Cb");
Test 43: 
Main.getStringValue("ch\"");
Test 44: 
Main.isNumeric(" i;aV~vv6*~=REie");
Test 45: 
Main.opcodes.toOpcode("");
Test 46: 
// Undeclared exception!
try { 
  Main.loadInstructions("");
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 47: 
Main.loadInstructions("mod");
Test 48: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("n");
FileSystemHandling.appendLineToFile(evoSuiteFile, "sub");
Main.loadInstructions("n");
Test 49: 
Main.removeComment("o[l");
Test 50: 
Main.resetInstructions();
Test 51: 
Main.splitArguments("E_e)O=XxPmAl:");
Test 52: 
Main.splitArguments("UR U9#.*J#0\"xU,(");
Test 53: 
Main.getValue("*");
Test 54: 
Main.getJumpValue("9zcu3u'ty");
Test 55: 
SystemInUtil.addInputLine("");
Main.getFileName();
Test 56: 
SystemInUtil.addInputLine("*");
Main.getFileName();
Test 57: 
Main.getJumpValue("49");
Test 58: 
Main.getJumpValue("1");
Test 59: 
Main.getValue("dT=r/\"P*vG");
Test 60: 
Main.isNumeric("0");
Test 61: 
Main.removeComment("");
Test 62: 
Main.getStringValue("Alice");

Test 63: 
Main main = new Main();
Main.main((String[]) null);

Test 64: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "This is a test.", (String) null);
String[] stringArray = new String[1];
Main.main(stringArray);

Test 65: 
String[] stringArray = new String[9];
stringArray[0] = "AND";
stringArray[0] = "OR";
stringArray[0] = "NOT";
stringArray[0] = "XOR";
stringArray[0] = "NAND";
stringArray[0] = "NOR";
stringArray[0] = "XNOR";
stringArray[0] = "A&B";
stringArray[0] = "A|B";
Main.main(stringArray);

Test 66: 
Main.processInstruction("start");
Main.processInstruction("pause");
Main.processInstruction("resume");
Main.processInstruction("halt");

Test 67: 
Main.processInstruction("in");
String string = "out";
Main.processInstruction(string);
String string = "invalid";
Main.processInstruction(string);

Test 68: 
Main.processInstruction("enter");
Main.processInstruction("exit");
Main.processInstruction("move");
Main.processInstruction("turn left");
Main.processInstruction("turn right");

Test 69: 
Main.processInstruction("cpy");

Test 70: 

Test 71: 
Main.processInstruction("delete");

Test 72: 
Main.processInstruction("age");

Test 73: 

Test 74: 
Main.processInstruction("subtract");

Test 75: 
Main.processInstruction("add");

Test 76: 
Main.processInstruction("add");

Test 77: 

Test 78: 
Main.processInstruction("and");
String string = "or";
Main.processInstruction(string);
String string = "not";
Main.processInstruction(string);

Test 79: 
Main.processInstruction("and");
String string = "not";
Main.processInstruction(string);
String string = "equal";
Main.processInstruction(string);
String string = "greaterThan";
Main.processInstruction(string);
String string = "lessThan";
Main.processInstruction(string);

Test 80: 
Main.processInstruction("1234567890");

Test 81: 
Main.processInstruction("-1");

Test 82: 
Main.processInstruction("jump-if-non-zero");

Test 83: 
Main.processInstruction("jump");

Test 84: 
Main.processInstruction("jumpToDestinationA");

Test 85: 
Main.processInstruction("jmp");

Test 86: 

Test 87: 
String string = "je";
Main.processInstruction((String) 1234);
Main.processInstruction(string);

Test 88: 

Test 89: 
Main.processInstruction("add");
String string = "sub";
Main.processInstruction(string);
String string = "mul";
Main.processInstruction(string);
String string = "div";
Main.processInstruction(string);
String string = "mod";
Main.processInstruction(string);

Test 90: 
Main.loadInstructions("quit");

Test 91: 
Main.removeComment("This is a test comment");

Test 92: 
Main.removeComment("This is a test comment with special characters. #$%^&*()_+-=[]{}|;':\",.<>/");
Main.removeComment("");
Main.removeComment((String) null);
String string = "@#$%^&*()_+-=[]{}|;':\"\\,./<>?";
Main.removeComment(string);

Test 93: 
Main.processInstruction("\"x, y, z\",VW&U[?##-Ck&aFY");

Test 94: 
Main.getValue("apple");

Test 95: 
SystemInUtil.addInputLine("12345");
Main.readValue();

Test 96: 
SystemInUtil.addInputLine("123456789");
Main.readValue();
SystemInUtil.addInputLine("-9876543210");
Main.readValue();
SystemInUtil.addInputLine("10");
Main.readValue();

Test 97: 
Main.getStringValue("\"123-abc\",VW&U?##-Ck&aFY");

Test 98: 
Main.getStringValue("[Alice, Bob, Charlie, David, Eve]");

Test 99: 
Main.getStringValue("hello");
Main.getStringValue("world");

Test 100: 
Main.isNumeric("3.14");

Test 101: 
Main.opcodes.toOpcode("ABCDEFGHIJKLMNOPQRSTUVWXYZ");

Test 102: 
Main.loadInstructions("Load the washing machine with 5 kilograms of dirty laundry.");

Test 103: 
Main.loadInstructions("mod");

Test 104: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "sub", (String) null);
String string = "1234567890";
Main.loadInstructions(string);

Test 105: 
Main.removeComment("Hello, World!");

Test 106: 
Main.splitArguments("John Doe's birthday is on January 1st");

Test 107: 
Main.splitArguments("UR U9#.*J#0\"xU,(");

Test 108: 
Main.getValue("banana");
Main.getValue((String) 2);
double _double = 2.0;
Main.getValue((String) _double);
char _char = 'b';
Main.getValue((String) _char);

Test 109: 
Main.getJumpValue("!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");

Test 110: 
SystemInUtil.addInputLine("C:UsersJohnDoeDocumentsTestFile.txt");
Main.getFileName();

Test 111: 
SystemInUtil.addInputLine("ABC1234567890");
SystemInUtil.addInputLine("1234567890");
SystemInUtil.addInputLine("XYZ1234567890");
SystemInUtil.addInputLine("09876543210");
Main.getFileName();

Test 112: 

Test 113: 
Main.getJumpValue("jumpValue1");
Main.getJumpValue("jumpValue2");

Test 114: 
Main.getValue("dT=r/\"P*vG");
Main.getValue("dT=r/\"P*vG");
Main.getValue("1234567890");

Test 115: 


* Generated after the refinement and before minimization 116 tests with total length 194
* test suite isTestSuite: 116
Test 0: 
Main.getStringValue("B*p");
Test 1: 
Main main = new Main();
// Undeclared exception!
try { 
  Main.main(main.instruction);
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("vk[ot'");
FileSystemHandling.appendLineToFile(evoSuiteFile, "vk[ot'");
String[] stringArray = new String[1];
stringArray[0] = "vk[ot'";
// Undeclared exception!
try { 
  Main.main(stringArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
String[] stringArray = new String[9];
stringArray[0] = "&";
// Undeclared exception!
Main.main(stringArray);
Test 4: 
// Undeclared exception!
try { 
  Main.processInstruction("halt");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 5: 
// Undeclared exception!
try { 
  Main.processInstruction("out");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Main", e);
}

Test 6: 
// Undeclared exception!
try { 
  Main.processInstruction("in");
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 7: 
// Undeclared exception!
try { 
  Main.processInstruction("mov");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
// Undeclared exception!
try { 
  Main.processInstruction("cpy");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
// Undeclared exception!
try { 
  Main.processInstruction("set");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
// Undeclared exception!
try { 
  Main.processInstruction("del");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 11: 
// Undeclared exception!
try { 
  Main.processInstruction("arr");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 12: 
// Undeclared exception!
try { 
  Main.processInstruction("var");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 13: 
// Undeclared exception!
try { 
  Main.processInstruction("inc");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
// Undeclared exception!
try { 
  Main.processInstruction("dec");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
// Undeclared exception!
try { 
  Main.processInstruction("add");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
// Undeclared exception!
try { 
  Main.processInstruction("sub");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
// Undeclared exception!
try { 
  Main.processInstruction("mul");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
// Undeclared exception!
try { 
  Main.processInstruction("div");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
// Undeclared exception!
try { 
  Main.processInstruction("mod");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
// Undeclared exception!
try { 
  Main.processInstruction("xor");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
// Undeclared exception!
try { 
  Main.processInstruction("or");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
// Undeclared exception!
try { 
  Main.processInstruction("and");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Main.processInstruction("jmp");
Test 24: 
// Undeclared exception!
try { 
  Main.processInstruction("jnz");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
// Undeclared exception!
try { 
  Main.processInstruction("ja");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
// Undeclared exception!
try { 
  Main.processInstruction("jae");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
// Undeclared exception!
try { 
  Main.processInstruction("jb");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 28: 
// Undeclared exception!
try { 
  Main.processInstruction("jbe");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
// Undeclared exception!
try { 
  Main.processInstruction("jz");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 30: 
// Undeclared exception!
try { 
  Main.processInstruction("je");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
// Undeclared exception!
try { 
  Main.processInstruction("jne");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 32: 
// Undeclared exception!
try { 
  Main.processInstruction("cmp");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 33: 
// Undeclared exception!
try { 
  Main.loadInstructions("q");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 34: 
Main.removeComment(" i;aV~vv6*~=REie");
Test 35: 
Main.removeComment("%o*V^[L;oE'_&\"|yE?m");
Test 36: 
Main.splitArguments("G0U,bHI(ioOjO6(\"Bo");
Test 37: 
Main.processInstruction(" \"x,\"VW&U[?##-Ck&aFY");
Test 38: 
Main.getValue("7");
Test 39: 
SystemInUtil.addInputLine("del");
Main.readValue();
Test 40: 
SystemInUtil.addInputLine("0");
Main.readValue();
Test 41: 
Main.getStringValue(" \"x,\"VW&U?##-Ck&aFY");
Test 42: 
Main.getStringValue("\"L[j@Cb");
Test 43: 
Main.getStringValue("ch\"");
Test 44: 
Main.isNumeric(" i;aV~vv6*~=REie");
Test 45: 
Main.opcodes.toOpcode("");
Test 46: 
// Undeclared exception!
try { 
  Main.loadInstructions("");
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 47: 
Main.loadInstructions("mod");
Test 48: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("n");
FileSystemHandling.appendLineToFile(evoSuiteFile, "sub");
Main.loadInstructions("n");
Test 49: 
Main.removeComment("o[l");
Test 50: 
Main.resetInstructions();
Test 51: 
Main.splitArguments("E_e)O=XxPmAl:");
Test 52: 
Main.splitArguments("UR U9#.*J#0\"xU,(");
Test 53: 
Main.getValue("*");
Test 54: 
Main.getJumpValue("9zcu3u'ty");
Test 55: 
SystemInUtil.addInputLine("");
Main.getFileName();
Test 56: 
SystemInUtil.addInputLine("*");
Main.getFileName();
Test 57: 
Main.getJumpValue("49");
Test 58: 
Main.getJumpValue("1");
Test 59: 
Main.getValue("dT=r/\"P*vG");
Test 60: 
Main.isNumeric("0");
Test 61: 
Main.removeComment("");
Test 62: 
Main.getStringValue("Alice");

Test 63: 
Main main = new Main();
Main.main((String[]) null);

Test 64: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "This is a test.", (String) null);
String[] stringArray = new String[1];
Main.main(stringArray);

Test 65: 
String[] stringArray = new String[9];
stringArray[0] = "AND";
stringArray[0] = "OR";
stringArray[0] = "NOT";
stringArray[0] = "XOR";
stringArray[0] = "NAND";
stringArray[0] = "NOR";
stringArray[0] = "XNOR";
stringArray[0] = "A&B";
stringArray[0] = "A|B";
Main.main(stringArray);

Test 66: 
Main.processInstruction("start");
Main.processInstruction("pause");
Main.processInstruction("resume");
Main.processInstruction("halt");

Test 67: 
Main.processInstruction("in");
String string = "out";
Main.processInstruction(string);
String string = "invalid";
Main.processInstruction(string);

Test 68: 
Main.processInstruction("enter");
Main.processInstruction("exit");
Main.processInstruction("move");
Main.processInstruction("turn left");
Main.processInstruction("turn right");

Test 69: 
Main.processInstruction("cpy");

Test 70: 

Test 71: 
Main.processInstruction("delete");

Test 72: 
Main.processInstruction("age");

Test 73: 

Test 74: 
Main.processInstruction("subtract");

Test 75: 
Main.processInstruction("add");

Test 76: 
Main.processInstruction("add");

Test 77: 

Test 78: 
Main.processInstruction("and");
String string = "or";
Main.processInstruction(string);
String string = "not";
Main.processInstruction(string);

Test 79: 
Main.processInstruction("and");
String string = "not";
Main.processInstruction(string);
String string = "equal";
Main.processInstruction(string);
String string = "greaterThan";
Main.processInstruction(string);
String string = "lessThan";
Main.processInstruction(string);

Test 80: 
Main.processInstruction("1234567890");

Test 81: 
Main.processInstruction("-1");

Test 82: 
Main.processInstruction("jump-if-non-zero");

Test 83: 
Main.processInstruction("jump");

Test 84: 
Main.processInstruction("jumpToDestinationA");

Test 85: 
Main.processInstruction("jmp");

Test 86: 

Test 87: 
String string = "je";
Main.processInstruction((String) 1234);
Main.processInstruction(string);

Test 88: 

Test 89: 
Main.processInstruction("add");
String string = "sub";
Main.processInstruction(string);
String string = "mul";
Main.processInstruction(string);
String string = "div";
Main.processInstruction(string);
String string = "mod";
Main.processInstruction(string);

Test 90: 
Main.loadInstructions("quit");

Test 91: 
Main.removeComment("This is a test comment");

Test 92: 
Main.removeComment("This is a test comment with special characters. #$%^&*()_+-=[]{}|;':\",.<>/");
Main.removeComment("");
Main.removeComment((String) null);
String string = "@#$%^&*()_+-=[]{}|;':\"\\,./<>?";
Main.removeComment(string);

Test 93: 
Main.processInstruction("\"x, y, z\",VW&U[?##-Ck&aFY");

Test 94: 
Main.getValue("apple");

Test 95: 
SystemInUtil.addInputLine("12345");
Main.readValue();

Test 96: 
SystemInUtil.addInputLine("123456789");
Main.readValue();
SystemInUtil.addInputLine("-9876543210");
Main.readValue();
SystemInUtil.addInputLine("10");
Main.readValue();

Test 97: 
Main.getStringValue("\"123-abc\",VW&U?##-Ck&aFY");

Test 98: 
Main.getStringValue("[Alice, Bob, Charlie, David, Eve]");

Test 99: 
Main.getStringValue("hello");
Main.getStringValue("world");

Test 100: 
Main.isNumeric("3.14");

Test 101: 
Main.opcodes.toOpcode("ABCDEFGHIJKLMNOPQRSTUVWXYZ");

Test 102: 
Main.loadInstructions("Load the washing machine with 5 kilograms of dirty laundry.");

Test 103: 
Main.loadInstructions("mod");

Test 104: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "sub", (String) null);
String string = "1234567890";
Main.loadInstructions(string);

Test 105: 
Main.removeComment("Hello, World!");

Test 106: 
Main.splitArguments("John Doe's birthday is on January 1st");

Test 107: 
Main.splitArguments("UR U9#.*J#0\"xU,(");

Test 108: 
Main.getValue("banana");
Main.getValue((String) 2);
double _double = 2.0;
Main.getValue((String) _double);
char _char = 'b';
Main.getValue((String) _char);

Test 109: 
Main.getJumpValue("!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");

Test 110: 
SystemInUtil.addInputLine("C:UsersJohnDoeDocumentsTestFile.txt");
Main.getFileName();

Test 111: 
SystemInUtil.addInputLine("ABC1234567890");
SystemInUtil.addInputLine("1234567890");
SystemInUtil.addInputLine("XYZ1234567890");
SystemInUtil.addInputLine("09876543210");
Main.getFileName();

Test 112: 

Test 113: 
Main.getJumpValue("jumpValue1");
Main.getJumpValue("jumpValue2");

Test 114: 
Main.getValue("dT=r/\"P*vG");
Main.getValue("dT=r/\"P*vG");
Main.getValue("1234567890");

Test 115: 


* Minimizing test suite
* test suite isTestSuite: 60
Test 0: 
Main.getJumpValue("!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
Test 1: 
Main main = new Main();
// Undeclared exception!
try { 
  Main.main(main.instruction);
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 2: 
Main.processInstruction("jmp");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("vk[ot'");
FileSystemHandling.appendLineToFile(evoSuiteFile, "vk[ot'");
String[] stringArray = new String[1];
stringArray[0] = "vk[ot'";
// Undeclared exception!
try { 
  Main.main(stringArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
String[] stringArray = new String[9];
stringArray[0] = "AND";
// Undeclared exception!
Main.main(stringArray);
Test 5: 
// Undeclared exception!
try { 
  Main.processInstruction("halt");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 6: 
// Undeclared exception!
try { 
  Main.processInstruction("out");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Main", e);
}

Test 7: 
// Undeclared exception!
try { 
  Main.processInstruction("in");
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 8: 
// Undeclared exception!
try { 
  Main.processInstruction("mov");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
// Undeclared exception!
try { 
  Main.processInstruction("cpy");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
// Undeclared exception!
try { 
  Main.processInstruction("set");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
// Undeclared exception!
try { 
  Main.processInstruction("del");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 12: 
// Undeclared exception!
try { 
  Main.processInstruction("arr");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 13: 
// Undeclared exception!
try { 
  Main.processInstruction("var");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}

Test 14: 
// Undeclared exception!
try { 
  Main.processInstruction("inc");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
// Undeclared exception!
try { 
  Main.processInstruction("dec");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
// Undeclared exception!
try { 
  Main.processInstruction("add");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
// Undeclared exception!
try { 
  Main.processInstruction("sub");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
// Undeclared exception!
try { 
  Main.processInstruction("mul");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
// Undeclared exception!
try { 
  Main.processInstruction("div");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
// Undeclared exception!
try { 
  Main.processInstruction("mod");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
// Undeclared exception!
try { 
  Main.processInstruction("xor");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
// Undeclared exception!
try { 
  Main.processInstruction("or");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
// Undeclared exception!
try { 
  Main.processInstruction("and");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
// Undeclared exception!
try { 
  Main.processInstruction("jnz");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
// Undeclared exception!
try { 
  Main.processInstruction("ja");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
// Undeclared exception!
try { 
  Main.processInstruction("jae");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
// Undeclared exception!
try { 
  Main.processInstruction("jb");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 28: 
// Undeclared exception!
try { 
  Main.processInstruction("jbe");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
// Undeclared exception!
try { 
  Main.processInstruction("jz");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 30: 
// Undeclared exception!
try { 
  Main.processInstruction("je");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
// Undeclared exception!
try { 
  Main.processInstruction("jne");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 32: 
// Undeclared exception!
try { 
  Main.processInstruction("cmp");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 33: 
// Undeclared exception!
try { 
  Main.loadInstructions("q");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 34: 
Main.removeComment("This is a test comment with special characters. #$%^&*()_+-=[]{}|;':\",.<>/");
Test 35: 
Main.removeComment(" i;aV~vv6*~=REie");
Test 36: 
Main.processInstruction(" \"x,\"VW&U[?##-Ck&aFY");
Test 37: 
Main.getValue("1234567890");
Test 38: 
Main.getJumpValue("1");
Test 39: 
SystemInUtil.addInputLine("123456789");
Main.readValue();
SystemInUtil.addInputLine("-9876543210");
Main.readValue();
Test 40: 
Main.getStringValue("\"123-abc\",VW&U?##-Ck&aFY");
Test 41: 
Main.getStringValue("Alice");
Test 42: 
Main.getStringValue(" \"x,\"VW&U?##-Ck&aFY");
Test 43: 
Main.getStringValue("ch\"");
Test 44: 
Main.isNumeric("3.14");
Test 45: 
Main.opcodes.toOpcode("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
Test 46: 
// Undeclared exception!
try { 
  Main.loadInstructions("");
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}

Test 47: 
Main.loadInstructions("Load the washing machine with 5 kilograms of dirty laundry.");
Test 48: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("n");
FileSystemHandling.appendLineToFile(evoSuiteFile, "sub");
Main.loadInstructions("n");
Test 49: 
Main.removeComment("");
Test 50: 
Main.resetInstructions();
Test 51: 
Main.splitArguments("E_e)O=XxPmAl:");
Test 52: 
Main.splitArguments("G0U,bHI(ioOjO6(\"Bo");
Test 53: 
Main.splitArguments("UR U9#.*J#0\"xU,(");
Test 54: 
Main.getValue("*");
Test 55: 
SystemInUtil.addInputLine("");
Main.getFileName();
Test 56: 
SystemInUtil.addInputLine("*");
Main.getFileName();
Test 57: 
Main.getJumpValue("49");
Test 58: 
Main.getValue("apple");
Test 59: 
Main.isNumeric("0");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 134
* Number of covered goals: 113
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 80%
* Total number of goals: 161
* Number of covered goals: 128
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 72%
* Total number of goals: 25
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 134
* Number of covered goals: 112
* Generated 60 tests with total length 74
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 61%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int jumpValue = Main.getJumpValue("!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
assertEquals((-2), jumpValue);


** It was a parseable test case! 
refined test name is: testValidInputForGetJumpValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Main main = new Main();
// Undeclared exception!
try { 
  Main.main(main.instruction);
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInstructionThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Main.processInstruction("jmp");

** It was a parseable test case! 
refined test name is: testProcessInstructionJump
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[9];
arg0[0] = "AND";
// Undeclared exception!
Main.main(arg0);

** It was a parseable test case! 
refined test name is: testMainNoExceptionThrown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("halt");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testThatProgramHaltsOnInstructionHalt
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("out");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Main", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionWithNullInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("in");
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionthrowsNoSuchElementException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("mov");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 1
   //
   verifyException("jipa.Main", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionWithInvalidArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("cpy");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 1
   //
   verifyException("jipa.Main", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionOutOfBounds
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("set");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 1
   //
   verifyException("jipa.Main", e);
}


** It was a parseable test case! 
refined test name is: testSetInstructionThrowsExceptionWhenOutOfBounds
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("del");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testDeleteUninitializedVariable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("arr");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("var");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("inc");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("dec");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("add");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionWithInvalidArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("sub");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionInvalidInstruction
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("mul");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionInvalidInstruction
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("div");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testDivideByZero
* Compiling Tests
refined test name is: testInvalidDivisionByZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("mod");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionUndeclaredException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("xor");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionInvalidInstruction
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("or");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("and");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionuninitializedVariable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("jnz");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionWithInvalidArgumentThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("ja");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionInvalidArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("jae");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testNullPointerException
* Compiling Tests
refined test name is: testProcessInstructionThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("jb");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("jbe");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testUndeclaredException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("jz");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInvalidInstructionThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("je");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testThrowingExceptionForUninitializedVariable
* Compiling Tests
refined test name is: testInvalidInstruction
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("jne");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jipa.Variable", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionInvalidInstruction
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.processInstruction("cmp");
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 1
   //
   verifyException("jipa.Main", e);
}


** It was a parseable test case! 
refined test name is: testProcessInstructionWithCmp
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.loadInstructions("q");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testLoadInstructionsWithInvalidFilePath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String removeComment = Main.removeComment("This is a test comment with special characters. #$%^&*()_+-=[]{}|;':\",.<>/");
assertEquals("This is a test comment with special characters. #$%^&*()_+-=[]{}|;':\",.<>/", removeComment);


** It was a parseable test case! 
refined test name is: testRemoveCommentSpecialCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String removeComment = Main.removeComment(" i;aV~vv6*~=REie");
assertEquals("i", removeComment);


** It was a parseable test case! 
refined test name is: testRemoveCommentbasic
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Main.processInstruction(" \"x,\"VW&U[?##-Ck&aFY");

** It was a parseable test case! 
refined test name is: testProcessInstructionWithInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int value = Main.getValue("1234567890");
assertEquals(1234567890, value);


** It was a parseable test case! 
refined test name is: testGetValueValidInputReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int jumpValue = Main.getJumpValue("1");
assertEquals(0, jumpValue);


** It was a parseable test case! 
refined test name is: testGetJumpValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String stringValue = Main.getStringValue("\"123-abc\",VW&U?##-Ck&aFY");
assertEquals("123-abc0", stringValue);


** It was a parseable test case! 
refined test name is: testStringValueWithValidInputReturnsExpectedOutput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String stringValue = Main.getStringValue("Alice");
assertEquals("0", stringValue);


** It was a parseable test case! 
refined test name is: testGetStringValueReturnsZeroForNameAlice
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String stringValue = Main.getStringValue(" \"x,\"VW&U?##-Ck&aFY");
assertEquals("0x,0", stringValue);


** It was a parseable test case! 
refined test name is: testDecodeStringWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String stringValue = Main.getStringValue("ch\"");
assertEquals("0", stringValue);


** It was a parseable test case! 
refined test name is: testGetStringValueWithDoubleQuote
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean numeric = Main.isNumeric("3.14");
assertFalse(numeric);


** It was a parseable test case! 
refined test name is: testValidNumberIsRecognizedAsSuch
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Main.opcodes opcode = Main.opcodes.toOpcode("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
assertEquals(Main.opcodes.novalue, opcode);


** It was a parseable test case! 
refined test name is: testToOpcodeWithAllUppercaseLettersReturnsNovalue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Main.loadInstructions("");
  fail("Expecting exception: NoSuchElementException");

} catch(NoSuchElementException e) {
   //
   // No line found
   //
   verifyException("java.util.Scanner", e);
}


** It was a parseable test case! 
refined test name is: testLoadInstructionsThrowsNoSuchElementException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean loadInstructions = Main.loadInstructions("Load the washing machine with 5 kilograms of dirty laundry.");
assertFalse(loadInstructions);


** It was a parseable test case! 
refined test name is: testLoadLaundryWithOverCapacity
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("n");
FileSystemHandling.appendLineToFile(arg0, "sub");
boolean loadInstructions = Main.loadInstructions("n");
assertTrue(loadInstructions);


** It was a parseable test case! 
refined test name is: testAppendLineToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String removeComment = Main.removeComment("");
assertEquals("", removeComment);


** It was a parseable test case! 
refined test name is: testRemoveEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Main.resetInstructions();

** It was a parseable test case! 
refined test name is: testResetInstructions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] splitArguments = Main.splitArguments("E_e)O=XxPmAl:");
assertEquals(1, splitArguments.length);


** It was a parseable test case! 
refined test name is: testSplitArgumentsWithMultipleArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] splitArguments = Main.splitArguments("G0U,bHI(ioOjO6(\"Bo");
assertEquals(2, splitArguments.length);


** It was a parseable test case! 
refined test name is: testSplitArgumentsWithSingleArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] splitArguments = Main.splitArguments("UR U9#.*J#0\"xU,(");
assertEquals(1, splitArguments.length);


** It was a parseable test case! 
refined test name is: testSplitArgumentsWithInvalidArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int value = Main.getValue("*");
assertEquals((-1), value);


** It was a parseable test case! 
refined test name is: testGetValueForInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SystemInUtil.addInputLine("");
String fileName = Main.getFileName();
assertEquals("", fileName);


** It was a parseable test case! 
refined test name is: testEmptyInputLineReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SystemInUtil.addInputLine("*");
String fileName = Main.getFileName();
assertEquals("*", fileName);


** It was a parseable test case! 
refined test name is: testGetFileNameWithInputLineAsterisk
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int jumpValue = Main.getJumpValue("49");
assertEquals(48, jumpValue);


** It was a parseable test case! 
refined test name is: testGetJumpValueValidInputReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int value = Main.getValue("apple");
assertEquals(0, value);


** It was a parseable test case! 
refined test name is: testGetValueWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean numeric = Main.isNumeric("0");
assertTrue(numeric);


** It was a parseable test case! 
refined test name is: testIsNumericValidNumberReturnsTrue
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:49.052 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:49.087 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:49.187 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:49.189 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:49.280 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:49.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:50.524 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:50.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:50.662 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:50.664 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:50.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:50.777 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:50.892 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:50.895 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.003 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.104 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.106 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.202 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.204 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.282 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.283 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.341 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.342 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.405 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.406 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.469 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.471 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.540 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.542 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.608 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.683 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.761 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:25:51.762 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.845 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.846 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:51.945 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:51.954 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:52.044 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:52.139 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:52.229 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.231 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:52.325 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.326 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:52.427 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.429 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:25:52.535 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.537 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:52.639 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.641 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:52.743 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.745 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:52.855 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.857 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:25:52.972 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:52.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:53.084 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:53.086 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:53.197 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:53.199 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:53.315 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:53.317 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:53.424 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:53.426 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:53.536 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:53.537 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:53.649 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:53.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
[MASTER] 00:25:53.758 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:53.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:53.868 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:53.870 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:53.978 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:53.980 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:54.100 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:54.109 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:54.222 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:54.224 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:54.337 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:54.339 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:54.455 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:54.457 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:54.572 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:54.574 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:54.695 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:54.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:54.818 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:54.820 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:54.936 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:54.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.054 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.056 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.168 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.170 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.282 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.284 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.401 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.403 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.516 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.518 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.633 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.635 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.751 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.753 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.870 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.872 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:55.992 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:55.993 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:56.112 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:56.114 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:25:56.238 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:25:56.242 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 18 called: 0 to improve: false
** Write a test suite: 25 called: 1 to improve: false
** Write a test suite: 29 called: 2 to improve: false
[MASTER] 00:26:00.340 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:26:00.342 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 28 called: 0 to improve: false
** Write a test suite: 32 called: 1 to improve: false
** Write a test suite: 39 called: 2 to improve: false
[MASTER] 00:26:04.641 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar1061200841079165592.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:26:04.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1061200841079165592.jar
* Writing tests to file
* Writing JUnit test case 'Main_ESTest' to evosuite-tests
** Write a test suite: 28 called: 0 to improve: false
** Write a test suite: 32 called: 1 to improve: false
** Write a test suite: 39 called: 2 to improve: false
* Done!

* Computation finished
