* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: jipa.Variable
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/26_jipa/evosuite-files/evosuite.properties
* Connecting to master process on port 3592
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:51:32.512 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:51:32.523 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:51:32.524 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:51:32.531 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class jipa.Variable
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 92
* Using seed 1710219091026
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 39 / 92
[Progress:>                             0%] [Cov:===================================100%]
* Search finished after 1s and 0 generations, 659 statements, best individual has fitness: 0.0
* Generated before the refinement 6 tests with total length 16
statement is: getVariableValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int variableValue = Variable.getVariableValue("*")
test data is: Variable.getVariableValue("*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Variable.getVariableValue("a");// retrieving a variable named "a"

        Variable.getVariableValue("abc");// retrieving a variable named "abc"

        Variable.getVariableValue("123");// retrieving a variable with the value of 123

        Variable.getVariableValue("true");// retrieving a variable with the value of true

        Variable.getVariableValue("false");// retrieving a variable with the value of false

        Variable.getVariableValue("null");// retrieving a variable with the value of null

        Variable.getVariableValue("undefined");// retrieving a variable with the value of undefined }}

    }
}
statement is: Variable.getVariableValue("a")// retrieving a variable named "a"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("a")// retrieving a variable named "a"
 target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.getVariableValue("abc")// retrieving a variable named "abc"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("abc")// retrieving a variable named "abc"
 target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.getVariableValue("123")// retrieving a variable with the value of 123
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("123")// retrieving a variable with the value of 123
 target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.getVariableValue("true")// retrieving a variable with the value of true
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("true")// retrieving a variable with the value of true
 target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.getVariableValue("false")// retrieving a variable with the value of false
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("false")// retrieving a variable with the value of false
 target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.getVariableValue("null")// retrieving a variable with the value of null
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("null")// retrieving a variable with the value of null
 target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.getVariableValue("undefined")// retrieving a variable with the value of undefined }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("undefined")// retrieving a variable with the value of undefined }}
 target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
TestCase is: String string = "a";
Variable.getVariableValue(string);
String string = "abc";
Variable.getVariableValue(string);
String string = "123";
Variable.getVariableValue(string);
String string = "true";
Variable.getVariableValue(string);
String string = "false";
Variable.getVariableValue(string);
String string = "null";
Variable.getVariableValue(string);
String string = "undefined";
Variable.getVariableValue(string);

statement is: getVariableValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int variableValue = Variable.getVariableValue("tO](")
test data is: Variable.getVariableValue("tO](");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Variable.getVariableValue("12345");// a random but positive integer value }}

    }
}
statement is: Variable.getVariableValue("12345")// a random but positive integer value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("12345")// a random but positive integer value }}
 target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
TestCase is: String string = "12345";
Variable.getVariableValue(string);

statement is: setVariableValue(Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.setVariableValue("&", 7166)
test data is: Variable.setVariableValue("&", 7166);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Variable.setVariableValue("&", "Rhythm");
    }
}
statement is: Variable.setVariableValue("&", "Rhythm"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("&", "Rhythm") target is: Variable method is: setVariableValue(java.lang.String,java.lang.String)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
TestCase is: String string = "&";
String string = "Rhythm";
Variable.setVariableValue(string, (int) string);

statement is: addVariable(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addVariable = Variable.addVariable("*")
statement is: setVariableValue(Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.setVariableValue("*", 2818)
statement is: setVariableValue(Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.setVariableValue("*", 0)
statement is: removeVariable(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.removeVariable("jipa.Variable")
statement is: addVariable(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addVariable = Variable.addVariable("r/3l'=$p[]E=L|&`ML")
test data is: Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.addVariable("r/3l'=$p[]E=L|&`ML");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Variable.addVariable("*");
        Variable.setVariableValue("*", 2818);
        Variable.setVariableValue("*", 0);
        Variable.removeVariable("jipa.Variable");
        Variable.addVariable("r/3l'=$p[]E=L|&`ML");
    }
}
statement is: Variable.addVariable("*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.addVariable("*") target is: Variable method is: addVariable(java.lang.String)
Matched Method is: addVariable(Ljava/lang/String;)Z
statement is: Variable.setVariableValue("*", 2818), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("*", 2818) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.setVariableValue("*", 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("*", 0) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.removeVariable("jipa.Variable"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.removeVariable("jipa.Variable") target is: Variable method is: removeVariable(java.lang.String)
Matched Method is: removeVariable(Ljava/lang/String;)V
statement is: Variable.addVariable("r/3l'=$p[]E=L|&`ML"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.addVariable("r/3l'=$p[]E=L|&`ML") target is: Variable method is: addVariable(java.lang.String)
Matched Method is: addVariable(Ljava/lang/String;)Z
TestCase is: String string = "*";
Variable.addVariable(string);
String string = "*";
int _int = 2818;
Variable.setVariableValue(string, _int);
String string = "*";
int _int = 0;
Variable.setVariableValue(string, _int);
String string = "jipa.Variable";
Variable.removeVariable(string);
String string = "r/3l'=$p[]E=L|&`ML";
Variable.addVariable(string);

statement is: addVariable(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addVariable = Variable.addVariable("*")
statement is: setVariableValue(Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.setVariableValue("*", 2818)
statement is: setVariableValue(Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.setVariableValue("*", 0)
statement is: removeVariable(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.removeVariable("jipa.Variable")
statement is: removeVariable(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.removeVariable("r/3l'=$p[]E=L|&`ML")
statement is: removeVariable(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Variable.removeVariable("s3q8bvuJ95[<!")
statement is: getVariableValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int variableValue = Variable.getVariableValue("*")
test data is: Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.removeVariable("r/3l'=$p[]E=L|&`ML");
Variable.removeVariable("s3q8bvuJ95[<!");
Variable.getVariableValue("*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Variable.addVariable("AGE");
        Variable.setVariableValue("AGE", 25);
        Variable.setVariableValue("AGE", 35);
        Variable.removeVariable("AGE");
        Variable.getVariableValue("AGE");
        Variable.addVariable("HEIGHT");
        Variable.setVariableValue("HEIGHT", 180);
        Variable.setVariableValue("HEIGHT", 175);
        Variable.removeVariable("HEIGHT");
        Variable.getVariableValue("HEIGHT");
        Variable.addVariable("WEIGHT");
        Variable.setVariableValue("WEIGHT", 65);
        Variable.setVariableValue("WEIGHT", 70);
        Variable.removeVariable("WEIGHT");
        Variable.getVariableValue("WEIGHT");
        Variable.addVariable("INCOME");
        Variable.setVariableValue("INCOME", 45000);
        Variable.setVariableValue("INCOME", 50000);
        Variable.removeVariable("INCOME");
        Variable.getVariableValue("INCOME");
        Variable.addVariable("MARRIED");
        Variable.setVariableValue("MARRIED", true);
        Variable.setVariableValue("MARRIED", false);
        Variable.removeVariable("MARRIED");
        Variable.getVariableValue("MARRIED");
        Variable.addVariable("JOB_TYPE");
        Variable.setVariableValue("JOB_TYPE", "manager");
        Variable.setVariableValue("JOB_TYPE", "developer");
        Variable.removeVariable("JOB_TYPE");
        Variable.getVariableValue("JOB_TYPE");
    }
}
statement is: Variable.addVariable("AGE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.addVariable("AGE") target is: Variable method is: addVariable(java.lang.String)
Matched Method is: addVariable(Ljava/lang/String;)Z
statement is: Variable.setVariableValue("AGE", 25), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("AGE", 25) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.setVariableValue("AGE", 35), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("AGE", 35) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.removeVariable("AGE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.removeVariable("AGE") target is: Variable method is: removeVariable(java.lang.String)
Matched Method is: removeVariable(Ljava/lang/String;)V
statement is: Variable.getVariableValue("AGE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("AGE") target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.addVariable("HEIGHT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.addVariable("HEIGHT") target is: Variable method is: addVariable(java.lang.String)
Matched Method is: addVariable(Ljava/lang/String;)Z
statement is: Variable.setVariableValue("HEIGHT", 180), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("HEIGHT", 180) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.setVariableValue("HEIGHT", 175), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("HEIGHT", 175) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.removeVariable("HEIGHT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.removeVariable("HEIGHT") target is: Variable method is: removeVariable(java.lang.String)
Matched Method is: removeVariable(Ljava/lang/String;)V
statement is: Variable.getVariableValue("HEIGHT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("HEIGHT") target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.addVariable("WEIGHT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.addVariable("WEIGHT") target is: Variable method is: addVariable(java.lang.String)
Matched Method is: addVariable(Ljava/lang/String;)Z
statement is: Variable.setVariableValue("WEIGHT", 65), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("WEIGHT", 65) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.setVariableValue("WEIGHT", 70), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("WEIGHT", 70) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.removeVariable("WEIGHT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.removeVariable("WEIGHT") target is: Variable method is: removeVariable(java.lang.String)
Matched Method is: removeVariable(Ljava/lang/String;)V
statement is: Variable.getVariableValue("WEIGHT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("WEIGHT") target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.addVariable("INCOME"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.addVariable("INCOME") target is: Variable method is: addVariable(java.lang.String)
Matched Method is: addVariable(Ljava/lang/String;)Z
statement is: Variable.setVariableValue("INCOME", 45000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("INCOME", 45000) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.setVariableValue("INCOME", 50000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("INCOME", 50000) target is: Variable method is: setVariableValue(java.lang.String,int)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.removeVariable("INCOME"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.removeVariable("INCOME") target is: Variable method is: removeVariable(java.lang.String)
Matched Method is: removeVariable(Ljava/lang/String;)V
statement is: Variable.getVariableValue("INCOME"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("INCOME") target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.addVariable("MARRIED"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.addVariable("MARRIED") target is: Variable method is: addVariable(java.lang.String)
Matched Method is: addVariable(Ljava/lang/String;)Z
statement is: Variable.setVariableValue("MARRIED", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("MARRIED", true) target is: Variable method is: setVariableValue(java.lang.String,boolean)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.setVariableValue("MARRIED", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("MARRIED", false) target is: Variable method is: setVariableValue(java.lang.String,boolean)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.removeVariable("MARRIED"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.removeVariable("MARRIED") target is: Variable method is: removeVariable(java.lang.String)
Matched Method is: removeVariable(Ljava/lang/String;)V
statement is: Variable.getVariableValue("MARRIED"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("MARRIED") target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
statement is: Variable.addVariable("JOB_TYPE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.addVariable("JOB_TYPE") target is: Variable method is: addVariable(java.lang.String)
Matched Method is: addVariable(Ljava/lang/String;)Z
statement is: Variable.setVariableValue("JOB_TYPE", "manager"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("JOB_TYPE", "manager") target is: Variable method is: setVariableValue(java.lang.String,java.lang.String)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.setVariableValue("JOB_TYPE", "developer"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.setVariableValue("JOB_TYPE", "developer") target is: Variable method is: setVariableValue(java.lang.String,java.lang.String)
Matched Method is: setVariableValue(Ljava/lang/String;I)V
statement is: Variable.removeVariable("JOB_TYPE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.removeVariable("JOB_TYPE") target is: Variable method is: removeVariable(java.lang.String)
Matched Method is: removeVariable(Ljava/lang/String;)V
statement is: Variable.getVariableValue("JOB_TYPE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Variable.getVariableValue("JOB_TYPE") target is: Variable method is: getVariableValue(java.lang.String)
Matched Method is: getVariableValue(Ljava/lang/String;)I
TestCase is: String string = "AGE";
Variable.addVariable(string);
String string = "AGE";
int _int = 25;
Variable.setVariableValue(string, _int);
String string = "AGE";
int _int = 35;
Variable.setVariableValue(string, _int);
String string = "AGE";
Variable.removeVariable(string);
String string = "AGE";
Variable.getVariableValue(string);
String string = "HEIGHT";
Variable.addVariable(string);
String string = "HEIGHT";
int _int = 180;
Variable.setVariableValue(string, _int);
String string = "HEIGHT";
int _int = 175;
Variable.setVariableValue(string, _int);
String string = "HEIGHT";
Variable.removeVariable(string);
String string = "HEIGHT";
Variable.getVariableValue(string);
String string = "WEIGHT";
Variable.addVariable(string);
String string = "WEIGHT";
int _int = 65;
Variable.setVariableValue(string, _int);
String string = "WEIGHT";
int _int = 70;
Variable.setVariableValue(string, _int);
String string = "WEIGHT";
Variable.removeVariable(string);
String string = "WEIGHT";
Variable.getVariableValue(string);
String string = "INCOME";
Variable.addVariable(string);
String string = "INCOME";
int _int = 45000;
Variable.setVariableValue(string, _int);
String string = "INCOME";
int _int = 50000;
Variable.setVariableValue(string, _int);
String string = "INCOME";
Variable.removeVariable(string);
String string = "INCOME";
Variable.getVariableValue(string);
String string = "MARRIED";
Variable.addVariable(string);
String string = "MARRIED";
boolean _boolean = true;
Variable.setVariableValue(string, (int) _boolean);
String string = "MARRIED";
boolean _boolean = false;
Variable.setVariableValue(string, (int) _boolean);
String string = "MARRIED";
Variable.removeVariable(string);
String string = "MARRIED";
Variable.getVariableValue(string);
String string = "JOB_TYPE";
Variable.addVariable(string);
String string = "JOB_TYPE";
String string = "manager";
Variable.setVariableValue(string, (int) string);
String string = "JOB_TYPE";
String string = "developer";
Variable.setVariableValue(string, (int) string);
String string = "JOB_TYPE";
Variable.removeVariable(string);
String string = "JOB_TYPE";
Variable.getVariableValue(string);

statement is: getVariableValue(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int variableValue = Variable.getVariableValue("jipa.Variable")
test data is: Variable.getVariableValue("jipa.Variable");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        // Primitive values
        int intPrimitive = 123;
        double doublePrimitive = 123.456;
        String stringPrimitive = "Hello World";
        char charPrimitive = 'A';
        boolean booleanPrimitive = true;
        // String objects
        String stringObject = new String("Hello World");
        StringBuilder stringBuilder = new StringBuilder("Hello World");
        // Arrays and collections
        int[] intArray = new int[]{ 1, 2, 3, 4, 5 };
        List<Integer> listOfIntegers = Arrays.asList(intArray);
        Map<String, Integer> mapOfStringsToIntegers = new HashMap<>();
        mapOfStringsToIntegers.put("one", 1);
        mapOfStringsToIntegers.put("two", 2);
        mapOfStringsToIntegers.put("three", 3);
        // Dates and times
        LocalDate localDate = LocalDate.of(2022, FEBRUARY, 28);
        LocalTime localTime = LocalTime.of(14, 30, 59);
        LocalDateTime localDateTime = LocalDateTime.of(localDate, localTime);
        ZonedDateTime zonedDateTime = ZonedDateTime.of(localDateTime, ZoneId.systemDefault());
    }
}
statement is: // Improved test data
// Primitive values
int intPrimitive = 123, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doublePrimitive = 123.456, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringPrimitive = "Hello World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charPrimitive = 'A', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean booleanPrimitive = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // String objects
String stringObject = new String("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringBuilder stringBuilder = new StringBuilder("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Arrays and collections
int[] intArray = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: List<Integer> listOfIntegers = Arrays.asList(intArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList(intArray) target is: Arrays method is: asList(int[])
statement is: Map<String, Integer> mapOfStringsToIntegers = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mapOfStringsToIntegers.put("one", 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mapOfStringsToIntegers.put("one", 1) target is: mapOfStringsToIntegers method is: put(java.lang.String,int)
statement is: mapOfStringsToIntegers.put("two", 2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mapOfStringsToIntegers.put("two", 2) target is: mapOfStringsToIntegers method is: put(java.lang.String,int)
statement is: mapOfStringsToIntegers.put("three", 3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mapOfStringsToIntegers.put("three", 3) target is: mapOfStringsToIntegers method is: put(java.lang.String,int)
statement is: // Dates and times
LocalDate localDate = LocalDate.of(2022, FEBRUARY, 28), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: LocalDate.of(2022, FEBRUARY, 28) target is: LocalDate method is: of(int,int)
statement is: LocalTime localTime = LocalTime.of(14, 30, 59), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: LocalTime.of(14, 30, 59) target is: LocalTime method is: of(int,int,int)
statement is: LocalDateTime localDateTime = LocalDateTime.of(localDate, localTime), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: LocalDateTime.of(localDate, localTime) target is: LocalDateTime method is: of(LocalDate,LocalTime)
statement is: ZonedDateTime zonedDateTime = ZonedDateTime.of(localDateTime, ZoneId.systemDefault()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ZonedDateTime.of(localDateTime, ZoneId.systemDefault()) target is: ZonedDateTime method is: of(LocalDateTime)
* this is vulnerable: int _int = 123
* this is vulnerable: double _double = 123.456
* this is vulnerable: String string = "Hello World"
* this is vulnerable: char _char = 'A'
* this is vulnerable: boolean _boolean = true
TestCase is: int _int = 123;
double _double = 123.456;
String string = "Hello World";
char _char = 'A';
boolean _boolean = true;

* test suite isTestSuite: 12
Test 0: 
Variable.getVariableValue("*");

Test 1: 
Variable.getVariableValue("tO](");
Test 2: 
Variable.setVariableValue("&", 7166);
Test 3: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.addVariable("r/3l'=$p[]E=L|&`ML");
Test 4: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.removeVariable("r/3l'=$p[]E=L|&`ML");
Variable.removeVariable("s3q8bvuJ95[<!");
Variable.getVariableValue("*");
Test 5: 
Variable.getVariableValue("jipa.Variable");
Test 6: 
Variable.getVariableValue("a");
Variable.getVariableValue("abc");
Variable.getVariableValue("123");
Variable.getVariableValue("true");
Variable.getVariableValue("false");
Variable.getVariableValue("null");
Variable.getVariableValue("undefined");

Test 7: 
Variable.getVariableValue("12345");

Test 8: 
Variable.setVariableValue("&", (int) "Rhythm");

Test 9: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.addVariable("r/3l'=$p[]E=L|&`ML");

Test 10: 
Variable.addVariable("AGE");
Variable.setVariableValue("AGE", 25);
Variable.setVariableValue("AGE", 35);
Variable.removeVariable("AGE");
Variable.getVariableValue("AGE");
Variable.addVariable("HEIGHT");
Variable.setVariableValue("HEIGHT", 180);
Variable.setVariableValue("HEIGHT", 175);
Variable.removeVariable("HEIGHT");
Variable.getVariableValue("HEIGHT");
Variable.addVariable("WEIGHT");
Variable.setVariableValue("WEIGHT", 65);
Variable.setVariableValue("WEIGHT", 70);
Variable.removeVariable("WEIGHT");
Variable.getVariableValue("WEIGHT");
Variable.addVariable("INCOME");
Variable.setVariableValue("INCOME", 45000);
Variable.setVariableValue("INCOME", 50000);
Variable.removeVariable("INCOME");
Variable.getVariableValue("INCOME");
Variable.addVariable("MARRIED");
Variable.setVariableValue("MARRIED", (int) true);
String string = "MARRIED";
boolean _boolean = false;
Variable.setVariableValue(string, (int) _boolean);
String string = "MARRIED";
Variable.removeVariable(string);
String string = "MARRIED";
Variable.getVariableValue(string);
String string = "JOB_TYPE";
Variable.addVariable(string);
String string = "JOB_TYPE";
String string = "manager";
Variable.setVariableValue(string, (int) string);
String string = "JOB_TYPE";
String string = "developer";
Variable.setVariableValue(string, (int) string);
String string = "JOB_TYPE";
Variable.removeVariable(string);
String string = "JOB_TYPE";
Variable.getVariableValue(string);

Test 11: 


* Generated after the refinement and before minimization 12 tests with total length 71
* test suite isTestSuite: 12
Test 0: 
Variable.getVariableValue("*");

Test 1: 
Variable.getVariableValue("tO](");
Test 2: 
Variable.setVariableValue("&", 7166);
Test 3: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.addVariable("r/3l'=$p[]E=L|&`ML");
Test 4: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.removeVariable("r/3l'=$p[]E=L|&`ML");
Variable.removeVariable("s3q8bvuJ95[<!");
Variable.getVariableValue("*");
Test 5: 
Variable.getVariableValue("jipa.Variable");
Test 6: 
Variable.getVariableValue("a");
Variable.getVariableValue("abc");
Variable.getVariableValue("123");
Variable.getVariableValue("true");
Variable.getVariableValue("false");
Variable.getVariableValue("null");
Variable.getVariableValue("undefined");

Test 7: 
Variable.getVariableValue("12345");

Test 8: 
Variable.setVariableValue("&", (int) "Rhythm");

Test 9: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.addVariable("r/3l'=$p[]E=L|&`ML");

Test 10: 
Variable.addVariable("AGE");
Variable.setVariableValue("AGE", 25);
Variable.setVariableValue("AGE", 35);
Variable.removeVariable("AGE");
Variable.getVariableValue("AGE");
Variable.addVariable("HEIGHT");
Variable.setVariableValue("HEIGHT", 180);
Variable.setVariableValue("HEIGHT", 175);
Variable.removeVariable("HEIGHT");
Variable.getVariableValue("HEIGHT");
Variable.addVariable("WEIGHT");
Variable.setVariableValue("WEIGHT", 65);
Variable.setVariableValue("WEIGHT", 70);
Variable.removeVariable("WEIGHT");
Variable.getVariableValue("WEIGHT");
Variable.addVariable("INCOME");
Variable.setVariableValue("INCOME", 45000);
Variable.setVariableValue("INCOME", 50000);
Variable.removeVariable("INCOME");
Variable.getVariableValue("INCOME");
Variable.addVariable("MARRIED");
Variable.setVariableValue("MARRIED", (int) true);
String string = "MARRIED";
boolean _boolean = false;
Variable.setVariableValue(string, (int) _boolean);
String string = "MARRIED";
Variable.removeVariable(string);
String string = "MARRIED";
Variable.getVariableValue(string);
String string = "JOB_TYPE";
Variable.addVariable(string);
String string = "JOB_TYPE";
String string = "manager";
Variable.setVariableValue(string, (int) string);
String string = "JOB_TYPE";
String string = "developer";
Variable.setVariableValue(string, (int) string);
String string = "JOB_TYPE";
Variable.removeVariable(string);
String string = "JOB_TYPE";
Variable.getVariableValue(string);

Test 11: 


* Minimizing test suite
* test suite isTestSuite: 7
Test 0: 
Variable.getVariableValue("tO](");
Test 1: 
Variable.addVariable("*");
Test 2: 
Variable.addVariable("AGE");
Variable.setVariableValue("AGE", 25);
Variable.setVariableValue("AGE", 35);
Test 3: 
Variable.removeVariable("AGE");
Test 4: 
Variable.getVariableValue("*");
Test 5: 
Variable.getVariableValue("AGE");
Test 6: 
Variable.setVariableValue("&", 7166);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 80%
* Total number of goals: 5
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 7 tests with total length 9
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 74%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int variableValue = Variable.getVariableValue("tO](");
assertEquals(0, variableValue);


** It was a parseable test case! 
refined test name is: testGetVariableValueShouldReturnZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean addVariable = Variable.addVariable("*");
assertTrue(addVariable);


** It was a parseable test case! 
refined test name is: testAddVariableWithAsterisk
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Variable.addVariable("AGE");
Variable.setVariableValue("AGE", 25);
Variable.setVariableValue("AGE", 35);

** It was a parseable test case! 
refined test name is: testAddAndSetVariableValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Variable.removeVariable("AGE");

** It was a parseable test case! 
refined test name is: testRemoveVariable
* Compiling Tests
refined test name is: testRemoveVariable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int variableValue = Variable.getVariableValue("*");
assertEquals((-1), variableValue);


** It was a parseable test case! 
refined test name is: testGetVariableValueWithDefaultWildcard
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int variableValue = Variable.getVariableValue("AGE");
assertEquals(0, variableValue);


** It was a parseable test case! 
refined test name is: testCreatePersonWithAgeOfZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Variable.setVariableValue("&", 7166);

** It was a parseable test case! 
refined test name is: testGetVariableValueShouldReturnExpectedValue
* Compiling Tests
refined test name is: testGetVariableValue
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:50.093 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.122 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:50.191 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:50.263 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.265 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:58:50.330 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.331 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:50.393 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:58:50.459 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.461 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:58:50.540 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.541 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
[MASTER] 04:58:50.649 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
[MASTER] 04:58:50.769 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:50.772 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
[MASTER] 04:58:50.882 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 6
Test 0: 
Variable.getVariableValue("*");

Test 1: 
Variable.getVariableValue("tO](");
Test 2: 
Variable.setVariableValue("&", 7166);
Test 3: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.addVariable("r/3l'=$p[]E=L|&`ML");
Test 4: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.removeVariable("r/3l'=$p[]E=L|&`ML");
Variable.removeVariable("s3q8bvuJ95[<!");
Variable.getVariableValue("*");
Test 5: 
Variable.getVariableValue("jipa.Variable");

* Minimizing test suite
* test suite isTestSuite: 5
Test 0: 
Variable.getVariableValue("tO](");
Test 1: 
Variable.addVariable("*");
Variable.setVariableValue("*", 2818);
Variable.setVariableValue("*", 0);
Variable.removeVariable("jipa.Variable");
Variable.removeVariable("r/3l'=$p[]E=L|&`ML");
Variable.removeVariable("s3q8bvuJ95[<!");
Variable.getVariableValue("*");
Test 2: 
Variable.removeVariable("jipa.Variable");
Test 3: 
Variable.getVariableValue("jipa.Variable");
Test 4: 
Variable.setVariableValue("&", 7166);

[MASTER] 04:58:52.583 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 23
* Number of covered goals: 21
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 37
* Number of covered goals: 30
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 60%
* Total number of goals: 5
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 23
* Number of covered goals: 21
* Generated 5 tests with total length 11
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
[MASTER] 04:58:52.612 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generating assertions
* Resulting test suite's mutation score: 80%
* Compiling and checking tests
[MASTER] 04:58:53.015 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:58:53.234 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:53.235 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:58:53.277 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:53.278 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:58:53.362 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:53.363 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 04:58:53.440 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:53.442 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:58:53.507 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:53.508 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
[MASTER] 04:58:53.593 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:53.594 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
[MASTER] 04:58:53.674 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1077888463264335974.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:58:53.674 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1077888463264335974.jar
* Writing tests to file
[MASTER] 04:58:53.676 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'Variable_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
* Writing JUnit test case 'Variable_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
* Done!

* Computation finished
