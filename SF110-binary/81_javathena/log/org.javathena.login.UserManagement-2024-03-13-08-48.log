* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.javathena.login.UserManagement
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/81_javathena/evosuite-files/evosuite.properties
* Connecting to master process on port 13278
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:48:23.251 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:48:23.266 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:48:23.267 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:48:24.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 08:48:24.479 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:48:24.481 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:48:24.485 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:48:25.980 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 08:48:25.988 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 08:48:25.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 08:48:26.306 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 08:48:26.317 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 08:48:26.320 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 08:48:26.332 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 08:48:26.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 08:48:26.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 08:48:26.412 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 08:48:26.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.javathena.login.UserManagement
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1851
* Using seed 1710319693074
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 845 / 1851
[MASTER] 08:48:27.792 [logback-1] WARN  TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[Progress:>                             0%] [Cov:====>                              14%][Progress:>                             1%] [Cov:======>                            18%][Progress:>                             3%] [Cov:=======>                           20%][MASTER] 08:48:35.691 [logback-1] WARN  TestCluster - Failed to check cache for javolution.util.FastComparator<T> : Type points to itself
[Progress:=>                            4%] [Cov:=======>                           20%][Progress:=>                            4%] [Cov:=======>                           21%][Progress:=>                            5%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:=======>                           22%][Progress:=>                            6%] [Cov:========>                          25%][Progress:==>                           7%] [Cov:========>                          25%][Progress:==>                           7%] [Cov:========>                          25%][Progress:==>                           8%] [Cov:=========>                         26%][Progress:==>                           8%] [Cov:=========>                         26%][Progress:==>                           8%] [Cov:=========>                         27%][Progress:==>                           9%] [Cov:=========>                         27%][Progress:==>                           9%] [Cov:=========>                         27%][Progress:==>                           9%] [Cov:=========>                         27%][Progress:===>                          10%] [Cov:=========>                         27%][Progress:===>                          10%] [Cov:=========>                         28%][Progress:===>                          10%] [Cov:==========>                        29%][Progress:===>                          10%] [Cov:==========>                        29%][Progress:===>                          11%] [Cov:==========>                        29%][Progress:===>                          11%] [Cov:==========>                        29%][Progress:===>                          11%] [Cov:==========>                        29%][Progress:===>                          12%] [Cov:==========>                        29%][Progress:===>                          12%] [Cov:==========>                        29%][Progress:===>                          12%] [Cov:==========>                        29%][Progress:===>                          12%] [Cov:==========>                        29%][Progress:===>                          12%] [Cov:==========>                        29%][Progress:===>                          13%] [Cov:==========>                        29%][Progress:===>                          13%] [Cov:==========>                        30%][Progress:===>                          13%] [Cov:==========>                        30%][Progress:===>                          13%] [Cov:==========>                        30%][Progress:===>                          13%] [Cov:==========>                        30%][Progress:===>                          13%] [Cov:==========>                        30%][Progress:====>                         14%] [Cov:==========>                        30%][Progress:====>                         14%] [Cov:==========>                        30%][Progress:====>                         14%] [Cov:==========>                        30%][Progress:====>                         14%] [Cov:==========>                        30%][Progress:====>                         15%] [Cov:==========>                        30%][Progress:====>                         15%] [Cov:==========>                        30%][Progress:====>                         15%] [Cov:==========>                        30%][Progress:====>                         15%] [Cov:==========>                        30%][Progress:====>                         15%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:=====>                        17%] [Cov:==========>                        30%][Progress:=====>                        17%] [Cov:==========>                        30%][Progress:=====>                        17%] [Cov:==========>                        30%][Progress:=====>                        17%] [Cov:==========>                        30%][Progress:=====>                        17%] [Cov:==========>                        30%][Progress:=====>                        18%] [Cov:==========>                        30%][Progress:=====>                        18%] [Cov:==========>                        30%][Progress:=====>                        18%] [Cov:==========>                        30%][Progress:=====>                        18%] [Cov:==========>                        30%][Progress:=====>                        19%] [Cov:==========>                        30%][Progress:=====>                        19%] [Cov:==========>                        30%][Progress:=====>                        19%] [Cov:==========>                        30%][Progress:=====>                        19%] [Cov:==========>                        30%][Progress:=====>                        19%] [Cov:==========>                        30%][Progress:=====>                        19%] [Cov:==========>                        30%][Progress:=====>                        19%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       21%] [Cov:==========>                        30%][Progress:======>                       21%] [Cov:==========>                        30%][Progress:======>                       21%] [Cov:==========>                        30%][Progress:======>                       21%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:=======>                      24%] [Cov:==========>                        31%][Progress:=======>                      24%] [Cov:==========>                        31%][Progress:=======>                      24%] [Cov:==========>                        31%][Progress:=======>                      24%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      25%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:========>                     27%] [Cov:==========>                        31%][Progress:========>                     27%] [Cov:==========>                        31%][Progress:========>                     27%] [Cov:==========>                        31%][Progress:========>                     27%] [Cov:==========>                        31%][Progress:========>                     27%] [Cov:==========>                        31%][Progress:========>                     27%] [Cov:==========>                        31%][Progress:========>                     27%] [Cov:==========>                        31%][Progress:========>                     28%] [Cov:==========>                        31%][Progress:========>                     28%] [Cov:==========>                        31%][Progress:========>                     28%] [Cov:==========>                        31%][MASTER] 08:49:24.717 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Class<T> : Type points to itself
[Progress:========>                     28%] [Cov:==========>                        31%][Progress:========>                     29%] [Cov:==========>                        31%][Progress:========>                     29%] [Cov:==========>                        31%][Progress:========>                     29%] [Cov:==========>                        31%][Progress:========>                     29%] [Cov:==========>                        31%][Progress:========>                     29%] [Cov:==========>                        31%][Progress:========>                     29%] [Cov:==========>                        31%][Progress:========>                     29%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    31%] [Cov:==========>                        31%][Progress:=========>                    32%] [Cov:==========>                        31%][Progress:=========>                    32%] [Cov:==========>                        31%][Progress:=========>                    32%] [Cov:==========>                        31%][Progress:=========>                    32%] [Cov:==========>                        31%][Progress:=========>                    32%] [Cov:==========>                        31%][Progress:=========>                    32%] [Cov:==========>                        31%][Progress:=========>                    32%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   34%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:==========>                   35%] [Cov:==========>                        31%][Progress:===========>                  37%] [Cov:==========>                        31%][Progress:===========>                  37%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  38%] [Cov:==========>                        31%][Progress:===========>                  39%] [Cov:==========>                        31%][Progress:===========>                  39%] [Cov:==========>                        31%][Progress:===========>                  39%] [Cov:==========>                        31%][Progress:===========>                  39%] [Cov:==========>                        31%][Progress:===========>                  39%] [Cov:==========>                        31%][Progress:===========>                  39%] [Cov:==========>                        31%][Progress:===========>                  39%] [Cov:==========>                        31%][Progress:===========>                  39%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 40%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 41%] [Cov:==========>                        31%][Progress:============>                 42%] [Cov:==========>                        31%][Progress:============>                 42%] [Cov:==========>                        31%][Progress:============>                 42%] [Cov:==========>                        31%][Progress:============>                 42%] [Cov:==========>                        31%][Progress:============>                 42%] [Cov:==========>                        31%][Progress:============>                 42%] [Cov:==========>                        31%][Progress:============>                 42%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:============>                 43%] [Cov:==========>                        31%][Progress:=============>                44%] [Cov:==========>                        31%][Progress:=============>                44%] [Cov:==========>                        31%][Progress:=============>                44%] [Cov:==========>                        31%][Progress:=============>                44%] [Cov:==========>                        31%][Progress:=============>                44%] [Cov:==========>                        31%][Progress:=============>                44%] [Cov:==========>                        31%][Progress:=============>                44%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                45%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:=============>                46%] [Cov:==========>                        31%][Progress:==============>               47%] [Cov:==========>                        31%][Progress:==============>               47%] [Cov:==========>                        31%][Progress:==============>               47%] [Cov:==========>                        31%][Progress:==============>               47%] [Cov:==========>                        31%][Progress:==============>               47%] [Cov:==========>                        31%][Progress:==============>               47%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:==============>               49%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              50%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              51%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              52%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:===============>              53%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             54%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             55%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:================>             56%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            57%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            58%] [Cov:==========>                        31%][Progress:=================>            59%] [Cov:==========>                        31%][Progress:=================>            59%] [Cov:==========>                        31%][Progress:=================>            59%] [Cov:==========>                        31%][Progress:=================>            59%] [Cov:==========>                        31%][Progress:=================>            59%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:======================>       76%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:========================>     82%] [Cov:===========>                       32%][Progress:=========================>    84%] [Cov:===========>                       32%][Progress:=========================>    84%] [Cov:===========>                       32%][Progress:=========================>    84%] [Cov:===========>                       32%][Progress:=========================>    84%] [Cov:===========>                       32%][Progress:=========================>    84%] [Cov:===========>                       32%][Progress:=========================>    84%] [Cov:===========>                       32%][Progress:=========================>    84%] [Cov:===========>                       32%][Progress:=========================>    84%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    85%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:=========================>    86%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   87%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   88%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:==========================>   89%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  90%] [Cov:===========>                       32%][Progress:===========================>  91%] [Cov:===========>                       32%][Progress:===========================>  91%] [Cov:===========>                       32%][Progress:===========================>  91%] [Cov:===========>                       32%][Progress:===========================>  91%] [Cov:===========>                       32%][Progress:===========================>  91%] [Cov:===========>                       32%][Progress:===========================>  91%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:===========================>  93%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 94%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][MASTER] 08:51:38.822 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 95%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:============================> 96%] [Cov:===========>                       32%][Progress:=============================>98%] [Cov:===========>                       32%][Progress:=============================>98%] [Cov:===========>                       32%][Progress:=============================>98%] [Cov:===========>                       32%][Progress:=============================>98%] [Cov:===========>                       32%][Progress:=============================>98%] [Cov:===========>                       32%][Progress:=============================>98%] [Cov:===========>                       32%][Progress:=============================>98%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:=============================>99%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%][Progress:==============================100%] [Cov:===========>                       32%]
* Search finished after 201s and 763 generations, 183391 statements, best individual has fitness: 1369.0
* Generated before the refinement 83 tests with total length 250
statement is: addAccountIdCount(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addAccountIdCount(925)
test data is: UserManagement.addAccountIdCount(925);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addAccountIdCount(1000);
    }
}
statement is: UserManagement.addAccountIdCount(1000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addAccountIdCount(1000) target is: UserManagement method is: addAccountIdCount(int)
Matched Method is: addAccountIdCount(I)V
TestCase is: int _int = 1000;
UserManagement.addAccountIdCount(_int);

statement is: getNBGM()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int nBGM = UserManagement.getNBGM()
test data is: UserManagement.getNBGM();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getNBGM();
        // Test data for the getNBGM() method
        int[][] testData = new int[][]{ new int[]{ 10, 20, 30 }, // input 1: array of three integers
        new int[]{ 40, 50, 60 }, // input 2: array of three integers
        new int[]{ "apple", "banana", "cherry" }, // input 3: array of three strings
        new int[]{ 7.0, 8.0, 9.0 }, // input 4: array of three doubles
        new int[]{ 'a', 'b', 'c' }// input 5: array of three chars
        // input 5: array of three chars
        // input 5: array of three chars
         };
        // Expected output for the getNBGM() method
        int[][] expectedOutput = new int[][]{  };
    }
}
statement is: UserManagement.getNBGM(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getNBGM() target is: UserManagement method is: getNBGM()
Matched Method is: getNBGM()I
statement is: // Test data for the getNBGM() method
int[][] testData = new int[][]{ new int[]{ 10, 20, 30 }, // input 1: array of three integers
new int[]{ 40, 50, 60 }, // input 2: array of three integers
new int[]{ "apple", "banana", "cherry" }, // input 3: array of three strings
new int[]{ 7.0, 8.0, 9.0 }, // input 4: array of three doubles
new int[]{ 'a', 'b', 'c' }// input 5: array of three chars
// input 5: array of three chars
// input 5: array of three chars
 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: // Expected output for the getNBGM() method
int[][] expectedOutput = new int[][]{  }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
TestCase is: UserManagement.getNBGM();

statement is: setAccountIdCount(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.setAccountIdCount((-394))
test data is: UserManagement.setAccountIdCount((-394));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.setAccountIdCount(1234);
    }
}
statement is: UserManagement.setAccountIdCount(1234), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.setAccountIdCount(1234) target is: UserManagement method is: setAccountIdCount(int)
Matched Method is: setAccountIdCount(I)V
TestCase is: int _int = 1234;
UserManagement.setAccountIdCount(_int);

statement is: debugXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.debugXML()
test data is: UserManagement.debugXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.debugXML(new User("John Doe", "john.doe@example.com", "+1234567890", "123 Main St.", "New York", "NY", "10001"), new User("Jane Smith", "jane.smith@example.com", "+9876543210", "456 Elm St.", "Austin", "TX", "78701"));
    }
}
statement is: UserManagement.debugXML(new User("John Doe", "john.doe@example.com", "+1234567890", "123 Main St.", "New York", "NY", "10001"), new User("Jane Smith", "jane.smith@example.com", "+9876543210", "456 Elm St.", "Austin", "TX", "78701")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.debugXML(new User("John Doe", "john.doe@example.com", "+1234567890", "123 Main St.", "New York", "NY", "10001"), new User("Jane Smith", "jane.smith@example.com", "+9876543210", "456 Elm St.", "Austin", "TX", "78701")) target is: UserManagement method is: debugXML(User,User)
statement is: org.javathena.login.parse.FromAdmin()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromAdmin
statement code is: FromAdmin fromAdmin = new FromAdmin()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null, arg1)
statement is: unLogServer(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.unLogServer(arg0)
test data is: FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.unLogServer(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FromAdmin fromAdmin = new FromAdmin();
        fromAdmin.setUserID("test123");
        fromAdmin.setRole("admin");
        Socket_data socket_data = new Socket_data(((Socket) (null)), fromAdmin);
        UserManagement.unLogServer(socket_data);
    }
}
statement is: FromAdmin fromAdmin = new FromAdmin(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fromAdmin.setUserID("test123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromAdmin.setUserID("test123") target is: fromAdmin method is: setUserID(java.lang.String)
statement is: fromAdmin.setRole("admin"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromAdmin.setRole("admin") target is: fromAdmin method is: setRole(java.lang.String)
statement is: Socket_data socket_data = new Socket_data(((Socket) (null)), fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.unLogServer(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.unLogServer(socket_data) target is: UserManagement method is: unLogServer(Socket_data)
Matched Method is: unLogServer(Lorg/javathena/core/data/Socket_data;)V
TestCase is: FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) fromAdmin, fromAdmin);
UserManagement.unLogServer(socket_data);

statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: toBecomeGM(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.toBecomeGM(arg0)
test data is: Socket_data socket_data = new Socket_data((Socket) null);
UserManagement.toBecomeGM(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Socket_data socket_data1 = new Socket_data("192.168.0.1", 8080, "johndoe", "password");
        UserManagement.toBecomeGM(socket_data1);
        Socket_data socket_data2 = new Socket_data("192.168.0.2", 8080, "janedoe", "password");
        UserManagement.toBecomeGM(socket_data2);
    }
}
statement is: Socket_data socket_data1 = new Socket_data("192.168.0.1", 8080, "johndoe", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.toBecomeGM(socket_data1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.toBecomeGM(socket_data1) target is: UserManagement method is: toBecomeGM(Socket_data)
Matched Method is: toBecomeGM(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Socket_data socket_data2 = new Socket_data("192.168.0.2", 8080, "janedoe", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.toBecomeGM(socket_data2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.toBecomeGM(socket_data2) target is: UserManagement method is: toBecomeGM(Socket_data)
Matched Method is: toBecomeGM(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.toBecomeGM(socket_data);
Socket_data socket_data = null;
UserManagement.toBecomeGM(socket_data);

statement is: addUserSQL(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserSQL = UserManagement.addUserSQL("SELECT `%s`,`%s`,`%s`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`%s`,`email` FROM `%s` WHERE BINARY `%s`='%s'", (String) null, (String) null, 32)
test data is: UserManagement.addUserSQL("SELECT `%s`,`%s`,`%s`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`%s`,`email` FROM `%s` WHERE BINARY `%s`='%s'", (String) null, (String) null, 32);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserSQL("SELECT `username`,`password`,`email`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`country`,`email` FROM `users` WHERE BINARY `username`='johndoe'");
    }
}
statement is: UserManagement.addUserSQL("SELECT `username`,`password`,`email`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`country`,`email` FROM `users` WHERE BINARY `username`='johndoe'"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserSQL("SELECT `username`,`password`,`email`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`country`,`email` FROM `users` WHERE BINARY `username`='johndoe'") target is: UserManagement method is: addUserSQL(java.lang.String)
statement is: getAccountIdCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int accountIdCount = UserManagement.getAccountIdCount()
test data is: UserManagement.getAccountIdCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("user1", "user2", "user3")));
        UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("admin1", "admin2", "admin3")));
        UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("guest1", "guest2", "guest3")));
    }
}
statement is: UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("user1", "user2", "user3"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("user1", "user2", "user3"))) target is: UserManagement method is: getAccountIdCount(ArrayList)
statement is: UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("admin1", "admin2", "admin3"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("admin1", "admin2", "admin3"))) target is: UserManagement method is: getAccountIdCount(ArrayList)
statement is: UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("guest1", "guest2", "guest3"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountIdCount(new ArrayList<String>(Arrays.asList("guest1", "guest2", "guest3"))) target is: UserManagement method is: getAccountIdCount(ArrayList)
statement is: getUserSQL(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userSQL = UserManagement.getUserSQL("A='")
test data is: UserManagement.getUserSQL("A='");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getUserSQL("SELECT * FROM users WHERE username = 'johndoe' AND password = 'mypassword'");
    }
}
statement is: UserManagement.getUserSQL("SELECT * FROM users WHERE username = 'johndoe' AND password = 'mypassword'"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserSQL("SELECT * FROM users WHERE username = 'johndoe' AND password = 'mypassword'") target is: UserManagement method is: getUserSQL(java.lang.String)
Matched Method is: getUserSQL(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "SELECT * FROM users WHERE username = 'johndoe' AND password = 'mypassword'";
UserManagement.getUserSQL(string);

statement is: numberOfUser(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.numberOfUser((Socket_data) null, (byte[]) null)
test data is: UserManagement.numberOfUser((Socket_data) null, (byte[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.numberOfUser("John Doe", new byte[]{ 0x12, 0x34 });
    }
}
statement is: UserManagement.numberOfUser("John Doe", new byte[]{ 0x12, 0x34 }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.numberOfUser("John Doe", new byte[]{ 0x12, 0x34 }) target is: UserManagement method is: numberOfUser(java.lang.String,byte[])
Matched Method is: numberOfUser(Lorg/javathena/core/data/Socket_data;[B)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: String string = "John Doe";
byte[] byteArray = null;
UserManagement.numberOfUser((Socket_data) string, byteArray);

statement is: getUserTxt(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userTxt = UserManagement.getUserTxt((Integer) null)
test data is: UserManagement.getUserTxt((Integer) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getUserTxt(123456789);
    }
}
statement is: UserManagement.getUserTxt(123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserTxt(123456789) target is: UserManagement method is: getUserTxt(int)
Matched Method is: getUserTxt(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data;
TestCase is: int _int = 123456789;
UserManagement.getUserTxt((Integer) _int);

statement is: org.javathena.login.parse.FromAdmin()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromAdmin
statement code is: FromAdmin fromAdmin = new FromAdmin()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null, arg1)
statement is: addSession(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addSession(arg0)
test data is: FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.addSession(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FromAdmin fromAdmin = new FromAdmin();
        Socket_data socket_data = new Socket_data("localhost", 80, fromAdmin);
        UserManagement.addSession(socket_data);
    }
}
statement is: FromAdmin fromAdmin = new FromAdmin(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data("localhost", 80, fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addSession(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addSession(socket_data) target is: UserManagement method is: addSession(Socket_data)
Matched Method is: addSession(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = null;
UserManagement.addSession(socket_data);

statement is: addAccountIdCount()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addAccountIdCount()
test data is: UserManagement.addAccountIdCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int accountId = 1234;
        String name = "John Doe";
        double balance = 1000.0;
        UserManagement.addAccount(accountId, name, balance);
    }
}
statement is: int accountId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double balance = 1000.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.addAccount(accountId, name, balance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addAccount(accountId, name, balance) target is: UserManagement method is: addAccount(int,java.lang.String,double)
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "John Doe"
* this is vulnerable: double _double = 1000.0
TestCase is: int _int = 1234;
String string = "John Doe";
double _double = 1000.0;

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(101)
statement is: getUserSQL(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userSQL = UserManagement.getUserSQL(arg0)
test data is: Integer integer = new Integer(101);
UserManagement.getUserSQL(integer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer = new Integer(10);// Changed from 101 to a smaller value

        UserManagement.getUserSQL(integer);
    }
}
statement is: Integer integer = new Integer(10)// Changed from 101 to a smaller value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.getUserSQL(integer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserSQL(integer) target is: UserManagement method is: getUserSQL(java.lang.Integer)
Matched Method is: getUserSQL(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data;
TestCase is: int _int = 10;
Integer integer = new Integer(_int);
UserManagement.getUserSQL(integer);

statement is: getAccountID(Ljava/lang/String;)Ljava/lang/Integer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer accountID = UserManagement.getAccountID((String) null)
test data is: UserManagement.getAccountID((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getAccountID("A12345678");// Improved test data }}

    }
}
statement is: UserManagement.getAccountID("A12345678")// Improved test data }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountID("A12345678")// Improved test data }}
 target is: UserManagement method is: getAccountID(java.lang.String)
Matched Method is: getAccountID(Ljava/lang/String;)Ljava/lang/Integer;
TestCase is: String string = "A12345678";
UserManagement.getAccountID(string);

statement is: getNBSession()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int nBSession = UserManagement.getNBSession()
test data is: UserManagement.getNBSession();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getNBSession();
        // Improved test data
        int userId = 1234;
        String sessionId = "ABC123";
        // Original test data
        int userId = 5678;
        String sessionId = "DEF456";
    }
}
statement is: UserManagement.getNBSession(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getNBSession() target is: UserManagement method is: getNBSession()
Matched Method is: getNBSession()I
statement is: // Improved test data
int userId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String sessionId = "ABC123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Original test data
int userId = 5678, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String sessionId = "DEF456", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "ABC123"
* this is vulnerable: int _int = 5678
* this is vulnerable: String string = "DEF456"
TestCase is: UserManagement.getNBSession();
int _int = 1234;
String string = "ABC123";
int _int = 5678;
String string = "DEF456";

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(99)
statement is: remove_online_user(Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.remove_online_user(arg0)
test data is: Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        double balance = 100.5;
        UserManagement.remove_online_user(balance);
    }
}
statement is: // Improved test data
double balance = 100.5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.remove_online_user(balance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.remove_online_user(balance) target is: UserManagement method is: remove_online_user(double)
Matched Method is: remove_online_user(Ljava/lang/Integer;)V
TestCase is: double _double = 100.5;
UserManagement.remove_online_user((Integer) _double);

statement is: getAuth_dats()Ljavolution/util/FastMap; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastMap<java.lang.Integer, org.javathena.core.data.Auth_data>
statement code is: FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats()
statement is: setAuth_dats(Ljavolution/util/FastMap;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.setAuth_dats(arg0)
test data is: FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
UserManagement.setAuth_dats(auth_dats);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
        UserManagement.setAuth_dats(auth_dats);
        // Replace the primitive values with more descriptive examples
        int userId = 1234;
        double balance = 1000.5;
        String username = "John Doe";
        char gender = 'M';
        // Add a new Auth_data object to the map
        auth_dats.put(userId, new Auth_data(balance, username, gender));
    }
}
statement is: FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAuth_dats() target is: UserManagement method is: getAuth_dats()
Matched Method is: getAuth_dats()Ljavolution/util/FastMap;
statement is: UserManagement.setAuth_dats(auth_dats), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.setAuth_dats(auth_dats) target is: UserManagement method is: setAuth_dats(FastMap)
Matched Method is: setAuth_dats(Ljavolution/util/FastMap;)V
statement is: // Replace the primitive values with more descriptive examples
int userId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double balance = 1000.5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char gender = 'M', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Add a new Auth_data object to the map
auth_dats.put(userId, new Auth_data(balance, username, gender)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add a new Auth_data object to the map
auth_dats.put(userId, new Auth_data(balance, username, gender)) target is: auth_dats method is: put(int,Auth_data)
* this is vulnerable: int _int = 1234
* this is vulnerable: double _double = 1000.5
* this is vulnerable: String string = "John Doe"
* this is vulnerable: char _char = 'M'
TestCase is: FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
UserManagement.setAuth_dats(auth_dats);
int _int = 1234;
double _double = 1000.5;
String string = "John Doe";
char _char = 'M';

statement is: getNBUser()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int nBUser = UserManagement.getNBUser()
test data is: UserManagement.getNBUser();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int userId = 24680;
        String username = "Zelda Zhang";
    }
}
statement is: int userId = 24680, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "Zelda Zhang", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 24680
* this is vulnerable: String string = "Zelda Zhang"
TestCase is: int _int = 24680;
String string = "Zelda Zhang";

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: removeUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data removeUser = UserManagement.removeUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
UserManagement.removeUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data("TestUser", "password123", "John Doe");
        UserManagement.removeUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data("TestUser", "password123", "John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.removeUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.removeUser(auth_data) target is: UserManagement method is: removeUser(Auth_data)
Matched Method is: removeUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Auth_data auth_data = null;
UserManagement.removeUser(auth_data);

statement is: org.evosuite.testcase.statements.ArrayStatement@f90327dd type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[41]
statement is: connectionOfClient(Lorg/javathena/core/data/Socket_data;[BZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.connectionOfClient((Socket_data) null, arg1, false)
test data is: byte[] byteArray = new byte[41];
UserManagement.connectionOfClient((Socket_data) null, byteArray, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[42];
        String clientId = "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        UserManagement.connectionOfClient(clientId, byteArray, false);
    }
}
statement is: byte[] byteArray = new byte[42], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [42] Ct is: byte[] byteArray = new byte[41] isAssignment: false Array: new byte[42] Elements: []
lengths: [41] [42]
Their type are: class [B byte[]
statement is: String clientId = "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.connectionOfClient(clientId, byteArray, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfClient(clientId, byteArray, false) target is: UserManagement method is: connectionOfClient(java.lang.String,byte[],boolean)
Matched Method is: connectionOfClient(Lorg/javathena/core/data/Socket_data;[BZ)V
TestCase is: byte[] byteArray = new byte[41];
String string = "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ";
boolean _boolean = false;
UserManagement.connectionOfClient((Socket_data) string, byteArray, _boolean);

statement is: org.evosuite.testcase.statements.ArrayStatement@204d8419 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[8]
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: connectionOfClient(Lorg/javathena/core/data/Socket_data;[BZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.connectionOfClient(arg0, arg1, true)
test data is: byte[] byteArray = new byte[8];
Socket_data socket_data = new Socket_data((Socket) null);
UserManagement.connectionOfClient(socket_data, byteArray, true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        byte[] byteArray = new byte[8];// Changed to a more descriptive and representative example

        Socket socket = mock(Socket.class);// Created a mock Socket object using the Mockito library

        UserManagement.connectionOfClient(socket_data, byteArray, true);// Updated the test data with the mock Socket object }}

    }
}
statement is: // Improved test data
byte[] byteArray = new byte[8]// Changed to a more descriptive and representative example
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: byte[] byteArray = new byte[8] isAssignment: false Array: new byte[8] Elements: []
lengths: [8] [8]
Their type are: class [B byte[]
statement is: Socket socket = mock(Socket.class)// Created a mock Socket object using the Mockito library
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Socket.class) target is:  method is: mock(java.lang.Class)
statement is: UserManagement.connectionOfClient(socket_data, byteArray, true)// Updated the test data with the mock Socket object }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfClient(socket_data, byteArray, true)// Updated the test data with the mock Socket object }}
 target is: UserManagement method is: connectionOfClient(byte[],boolean)
Matched Method is: connectionOfClient(Lorg/javathena/core/data/Socket_data;[BZ)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: byte[] byteArray = new byte[8];
boolean _boolean = true;
boolean _boolean = null;
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) _boolean, _boolean);

statement is: levelIsValid(ILjava/lang/String;II)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int levelIsValid = UserManagement.levelIsValid(9, "", 150, (-2368))
test data is: UserManagement.levelIsValid(9, "", 150, (-2368));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.levelIsValid(9, "Professional", 150, 25);
    }
}
statement is: UserManagement.levelIsValid(9, "Professional", 150, 25), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.levelIsValid(9, "Professional", 150, 25) target is: UserManagement method is: levelIsValid(int,java.lang.String,int,int)
Matched Method is: levelIsValid(ILjava/lang/String;II)I
TestCase is: int _int = 9;
String string = "Professional";
int _int = 150;
int _int = 25;
UserManagement.levelIsValid(_int, string, _int, _int);

statement is: levelIsValid(ILjava/lang/String;II)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int levelIsValid = UserManagement.levelIsValid(0, (String) null, 0, 0)
test data is: UserManagement.levelIsValid(0, (String) null, 0, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.levelIsValid(-1, "Invalid level", -1, 0);
        UserManagement.levelIsValid(25, "Level out of range", 0, 10);
        UserManagement.levelIsValid(5, "Valid level", 5, 10);
    }
}
statement is: UserManagement.levelIsValid(-1, "Invalid level", -1, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.levelIsValid(-1, "Invalid level", -1, 0) target is: UserManagement method is: levelIsValid(int,java.lang.String,int,int)
Matched Method is: levelIsValid(ILjava/lang/String;II)I
i 2 Parameters size() 2 Num of Method Parameters: 4
i 3 Parameters size() 2 Num of Method Parameters: 4
statement is: UserManagement.levelIsValid(25, "Level out of range", 0, 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.levelIsValid(25, "Level out of range", 0, 10) target is: UserManagement method is: levelIsValid(int,java.lang.String,int,int)
Matched Method is: levelIsValid(ILjava/lang/String;II)I
statement is: UserManagement.levelIsValid(5, "Valid level", 5, 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.levelIsValid(5, "Valid level", 5, 10) target is: UserManagement method is: levelIsValid(int,java.lang.String,int,int)
Matched Method is: levelIsValid(ILjava/lang/String;II)I
TestCase is: String string = "Invalid level";
int _int = 0;
int _int = null;
int _int = null;
UserManagement.levelIsValid((int) string, (String) _int, _int, _int);
int _int = 25;
String string = "Level out of range";
int _int = 0;
int _int = 10;
UserManagement.levelIsValid(_int, string, _int, _int);
int _int = 5;
String string = "Valid level";
int _int = 5;
int _int = 10;
UserManagement.levelIsValid(_int, string, _int, _int);

statement is: levelIsValid(ILjava/lang/String;II)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int levelIsValid = UserManagement.levelIsValid(287, "", 287, 287)
test data is: UserManagement.levelIsValid(287, "", 287, 287);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.levelIsValid("admin", "123456", "admin", "123456");
    }
}
statement is: UserManagement.levelIsValid("admin", "123456", "admin", "123456"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.levelIsValid("admin", "123456", "admin", "123456") target is: UserManagement method is: levelIsValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Matched Method is: levelIsValid(ILjava/lang/String;II)I
TestCase is: String string = "admin";
String string = "123456";
String string = "admin";
String string = "123456";
UserManagement.levelIsValid((int) string, string, (int) string, (int) string);

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(26)
statement is: remove_online_user(Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.remove_online_user(arg0)
test data is: Integer integer = new Integer(26);
UserManagement.remove_online_user(integer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer = new Integer(100);
        UserManagement.remove_online_user(integer);
    }
}
statement is: Integer integer = new Integer(100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.remove_online_user(integer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.remove_online_user(integer) target is: UserManagement method is: remove_online_user(java.lang.Integer)
Matched Method is: remove_online_user(Ljava/lang/Integer;)V
TestCase is: int _int = 100;
Integer integer = new Integer(_int);
UserManagement.remove_online_user(integer);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("a@a.com", "a@a.com", "a@a.com", '=')
test data is: UserManagement.addUserTXT("a@a.com", "a@a.com", "a@a.com", '=');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserTXT("john.doe@example.com", "John Doe", "123 Main St.", 'M');
    }
}
statement is: UserManagement.addUserTXT("john.doe@example.com", "John Doe", "123 Main St.", 'M'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("john.doe@example.com", "John Doe", "123 Main St.", 'M') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "john.doe@example.com";
String string = "John Doe";
String string = "123 Main St.";
char _char = 'M';
UserManagement.addUserTXT(string, string, string, _char);

statement is: isGM(J)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int gM = UserManagement.isGM(274L)
test data is: UserManagement.isGM(274L);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        return userId == 9138006L;// Changed the hardcoded value to a more descriptive example. }}

    }
}
statement is: return userId == 9138006L// Changed the hardcoded value to a more descriptive example. }}
, class spoon.support.reflect.code.CtReturnImpl
statement is: getAccountIds()Ljavolution/util/FastTable; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastTable<java.lang.Integer>
statement code is: FastTable<Integer> accountIds = UserManagement.getAccountIds()
statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer((-174))
statement is: is_user_online(Ljava/lang/Integer;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean is_user_online = UserManagement.is_user_online(arg0)
statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogin_id2(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id2(0)
statement is: add_online_user(Lorg/javathena/core/data/Auth_data;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int add_online_user = UserManagement.add_online_user(arg0)
statement is: getNBUser()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int nBUser = UserManagement.getNBUser()
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
statement is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userTxt = UserManagement.getUserTxt((String) null)
statement is: org.evosuite.testcase.statements.ArrayStatement@57571547 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: tabHexToInt([B)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int tabHexToInt = UserManagement.tabHexToInt(arg0)
statement is: getSessionAt(I)Lorg/javathena/core/data/Socket_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data sessionAt = UserManagement.getSessionAt(0)
statement is: numberOfUser(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.numberOfUser(arg0, arg1)
statement is: toChangeAnEmail(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.toChangeAnEmail(arg0)
test data is: UserManagement.getAccountIds();
Integer integer = new Integer((-174));
UserManagement.is_user_online(integer);
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(0);
UserManagement.add_online_user(auth_data);
UserManagement.getNBUser();
UserManagement.addUser(auth_data);
UserManagement.getUserTxt((String) null);
byte[] byteArray = new byte[0];
UserManagement.tabHexToInt(byteArray);
Socket_data sessionAt = UserManagement.getSessionAt(0);
UserManagement.numberOfUser(sessionAt, byteArray);
UserManagement.toChangeAnEmail(sessionAt);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getAccountIds();// Returns a list of account IDs

        Integer integer = new Integer(1234567890);// An example of an arbitrary positive integer

        UserManagement.is_user_online(integer);// Returns true if the user is online, false otherwise

        Auth_data auth_data = new Auth_data();// A sample authentication data object

        auth_data.setLogin_id2("test@example.com");// An example of a valid email address

        UserManagement.add_online_user(auth_data);// Adds the user to the online users list

        UserManagement.getNBUser();// Returns the number of registered users

        UserManagement.addUser(auth_data);// Adds the user to the user database

        UserManagement.getUserTxt("john.doe@example.com");// Returns a sample user object with the email address "john.doe@example.com"

        byte[] byteArray = new byte[]{ 1, 2, 3 };// An example of a byte array containing the hexadecimal representation of an integer

        UserManagement.tabHexToInt(byteArray);// Converts the byte array to an integer

        Socket_data sessionAt = UserManagement.getSessionAt(0);// Returns a sample socket data object at position 0

        UserManagement.numberOfUser(sessionAt, byteArray);// Returns the number of users connected through the given socket

        UserManagement.toChangeAnEmail(sessionAt);// Changes the email address of the user associated with the given socket to "jane.doe@example.com" }}

    }
}
statement is: UserManagement.getAccountIds()// Returns a list of account IDs
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountIds()// Returns a list of account IDs
 target is: UserManagement method is: getAccountIds()
Matched Method is: getAccountIds()Ljavolution/util/FastTable;
statement is: Integer integer = new Integer(1234567890)// An example of an arbitrary positive integer
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.is_user_online(integer)// Returns true if the user is online, false otherwise
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.is_user_online(integer)// Returns true if the user is online, false otherwise
 target is: UserManagement method is: is_user_online(java.lang.Integer)
Matched Method is: is_user_online(Ljava/lang/Integer;)Z
statement is: Auth_data auth_data = new Auth_data()// A sample authentication data object
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogin_id2("test@example.com")// An example of a valid email address
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogin_id2("test@example.com")// An example of a valid email address
 target is: auth_data method is: setLogin_id2(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 3, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setLogin_id2(I)V
statement is: UserManagement.add_online_user(auth_data)// Adds the user to the online users list
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.add_online_user(auth_data)// Adds the user to the online users list
 target is: UserManagement method is: add_online_user(Auth_data)
Matched Method is: add_online_user(Lorg/javathena/core/data/Auth_data;)I
statement is: UserManagement.getNBUser()// Returns the number of registered users
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getNBUser()// Returns the number of registered users
 target is: UserManagement method is: getNBUser()
Matched Method is: getNBUser()I
statement is: UserManagement.addUser(auth_data)// Adds the user to the user database
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data)// Adds the user to the user database
 target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
statement is: UserManagement.getUserTxt("john.doe@example.com")// Returns a sample user object with the email address "john.doe@example.com"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserTxt("john.doe@example.com")// Returns a sample user object with the email address "john.doe@example.com"
 target is: UserManagement method is: getUserTxt(java.lang.String)
Matched Method is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data;
statement is: byte[] byteArray = new byte[]{ 1, 2, 3 }// An example of a byte array containing the hexadecimal representation of an integer
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ 1, 2, 3 } Elements: [1, 2, 3]
lengths: [0] []
statement is: UserManagement.tabHexToInt(byteArray)// Converts the byte array to an integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.tabHexToInt(byteArray)// Converts the byte array to an integer
 target is: UserManagement method is: tabHexToInt(byte[])
Matched Method is: tabHexToInt([B)I
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Socket_data sessionAt = UserManagement.getSessionAt(0)// Returns a sample socket data object at position 0
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getSessionAt(0) target is: UserManagement method is: getSessionAt(int)
Matched Method is: getSessionAt(I)Lorg/javathena/core/data/Socket_data;
statement is: UserManagement.numberOfUser(sessionAt, byteArray)// Returns the number of users connected through the given socket
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.numberOfUser(sessionAt, byteArray)// Returns the number of users connected through the given socket
 target is: UserManagement method is: numberOfUser(Socket_data,byte[])
Matched Method is: numberOfUser(Lorg/javathena/core/data/Socket_data;[B)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: UserManagement.toChangeAnEmail(sessionAt)// Changes the email address of the user associated with the given socket to "jane.doe@example.com" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.toChangeAnEmail(sessionAt)// Changes the email address of the user associated with the given socket to "jane.doe@example.com" }}
 target is: UserManagement method is: toChangeAnEmail(Socket_data)
Matched Method is: toChangeAnEmail(Lorg/javathena/core/data/Socket_data;)V
TestCase is: UserManagement.getAccountIds();
int _int = 1234567890;
Integer integer = new Integer(_int);
boolean is_user_online = UserManagement.is_user_online(integer);
Auth_data auth_data = new Auth_data();
String string = "test@example.com";
((Auth_data) is_user_online).setLogin_id2((int) string);
UserManagement.add_online_user(auth_data);
UserManagement.getNBUser();
UserManagement.addUser(auth_data);
String string = "john.doe@example.com";
UserManagement.getUserTxt(string);
byte[] byteArray = null;
UserManagement.tabHexToInt(byteArray);
int _int = 0;
Socket_data sessionAt = UserManagement.getSessionAt(_int);
byte[] byteArray = null;
UserManagement.numberOfUser(sessionAt, byteArray);
UserManagement.toChangeAnEmail(sessionAt);

statement is: dynamicFailBanCheckTXT(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.dynamicFailBanCheckTXT("297")
test data is: UserManagement.dynamicFailBanCheckTXT("297");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.dynamicFailBanCheckTXT("1029384756");
    }
}
statement is: UserManagement.dynamicFailBanCheckTXT("1029384756"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckTXT("1029384756") target is: UserManagement method is: dynamicFailBanCheckTXT(java.lang.String)
Matched Method is: dynamicFailBanCheckTXT(Ljava/lang/String;)V
TestCase is: String string = "1029384756";
UserManagement.dynamicFailBanCheckTXT(string);

statement is: String string = "9" type is: class org.evosuite.testcase.statements.StringPrimitiveStatement return type class java.lang.String
statement code is: String string = "9"
statement is: dynamicFailBanCheckTXT(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.dynamicFailBanCheckTXT("9")
statement is: sendMessageOnTcp(Lorg/evosuite/runtime/testdata/EvoSuiteLocalAddress;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean sendMessageOnTcp = NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "9")
statement is: org.javathena.login.parse.FromAdmin()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromAdmin
statement code is: FromAdmin fromAdmin = new FromAdmin()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null, arg1)
statement is: org.evosuite.testcase.statements.ArrayStatement@518d1824 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a4d8c913 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)9
statement is: org.evosuite.testcase.statements.AssignmentStatement@d627480b type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)112
statement is: receiveAllOnlinAccounts(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.receiveAllOnlinAccounts(arg0, arg1)
statement is: addIpToBanListMySQL(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addIpToBanListMySQL("N)")
statement is: getAccountIds()Ljavolution/util/FastTable; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastTable<java.lang.Integer>
statement code is: FastTable<Integer> accountIds = UserManagement.getAccountIds()
statement is: getLocalHost()Ljava/net/InetAddress; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.net.InetAddress
statement code is: InetAddress localHost = MockInetAddress.getLocalHost()
statement is: IParse iParse = null type is: class org.evosuite.testcase.statements.NullStatement return type interface org.javathena.core.data.IParse
statement code is: IParse iParse = null
statement is: int _int = 87 type is: class org.evosuite.testcase.statements.numeric.IntPrimitiveStatement return type int
statement code is: int _int = 87
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0, arg1)
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: setFunc_parse(Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: socket_data.setFunc_parse(arg0)
statement is: SessionType sessionType = SessionType.SESSION_MAX type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.data.SessionType
statement code is: SessionType sessionType = SessionType.SESSION_MAX
statement is: setType(Lorg/javathena/core/data/SessionType;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: socket_data.setType(arg0)
statement is: addSession(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addSession(arg0)
test data is: String string = "9";
UserManagement.dynamicFailBanCheckTXT("9");
NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "9");
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
byteArray[1] = (byte)112;
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
UserManagement.addIpToBanListMySQL("N)");
UserManagement.getAccountIds();
MockInetAddress.getLocalHost();
IParse iParse = null;
int _int = 87;
MockSocket mockSocket = new MockSocket(string, _int);
Socket_data socket_data = new Socket_data(mockSocket);
socket_data.setFunc_parse(iParse);
SessionType sessionType = SessionType.SESSION_MAX;
socket_data.setType(sessionType);
UserManagement.addSession(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String string = "9";
        UserManagement.dynamicFailBanCheckTXT("12345678");
        NetworkHandling.sendMessageOnTcp(((EvoSuiteLocalAddress) (null)), "ABCDEFGHIJKLMNOPQRSTUVWXYZ");
        FromAdmin fromAdmin = new FromAdmin();
        Socket_data socket_data = new Socket_data(((Socket) (null)), fromAdmin);
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (9));
        byteArray[1] = ((byte) (112));
        UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
        UserManagement.addIpToBanListMySQL("127.0.0.1");
        UserManagement.getAccountIds();
        MockInetAddress.getLocalHost();
        IParse iParse = null;
        int _int = 87;
        MockSocket mockSocket = new MockSocket(string, _int);
        Socket_data socket_data = new Socket_data(mockSocket);
        socket_data.setFunc_parse(iParse);
        SessionType sessionType = SessionType.SESSION_MAX;
        socket_data.setType(sessionType);
        UserManagement.addSession(socket_data);
    }
}
statement is: String string = "9", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.dynamicFailBanCheckTXT("12345678"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckTXT("12345678") target is: UserManagement method is: dynamicFailBanCheckTXT(java.lang.String)
Matched Method is: dynamicFailBanCheckTXT(Ljava/lang/String;)V
statement is: NetworkHandling.sendMessageOnTcp(((EvoSuiteLocalAddress) (null)), "ABCDEFGHIJKLMNOPQRSTUVWXYZ"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: NetworkHandling.sendMessageOnTcp(((EvoSuiteLocalAddress) (null)), "ABCDEFGHIJKLMNOPQRSTUVWXYZ") target is: NetworkHandling method is: sendMessageOnTcp(EvoSuiteLocalAddress,java.lang.String)
Matched Method is: sendMessageOnTcp(Lorg/evosuite/runtime/testdata/EvoSuiteLocalAddress;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: FromAdmin fromAdmin = new FromAdmin(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(((Socket) (null)), fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (9)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (9)) Ct is: byteArray[0] = ((byte) (9))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@fbb1124f
statement is: byteArray[1] = ((byte) (112)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (112)) Ct is: byteArray[1] = ((byte) (112))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@efb0aa4f
statement is: UserManagement.receiveAllOnlinAccounts(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.receiveAllOnlinAccounts(socket_data, byteArray) target is: UserManagement method is: receiveAllOnlinAccounts(Socket_data,byte[])
Matched Method is: receiveAllOnlinAccounts(Lorg/javathena/core/data/Socket_data;[B)V
statement is: UserManagement.addIpToBanListMySQL("127.0.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addIpToBanListMySQL("127.0.0.1") target is: UserManagement method is: addIpToBanListMySQL(java.lang.String)
Matched Method is: addIpToBanListMySQL(Ljava/lang/String;)V
statement is: UserManagement.getAccountIds(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountIds() target is: UserManagement method is: getAccountIds()
Matched Method is: getAccountIds()Ljavolution/util/FastTable;
statement is: MockInetAddress.getLocalHost(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: MockInetAddress.getLocalHost() target is: MockInetAddress method is: getLocalHost()
Matched Method is: getLocalHost()Ljava/net/InetAddress;
statement is: IParse iParse = null, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int _int = 87, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: MockSocket mockSocket = new MockSocket(string, _int), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: socket_data.setFunc_parse(iParse), class spoon.support.reflect.code.CtInvocationImpl
invocation is: socket_data.setFunc_parse(iParse) target is: socket_data method is: setFunc_parse(IParse)
source statement: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V callee: VariableReference: Statement 15, type org.javathena.core.data.Socket_dataindex is: 19
Matched Method is: setFunc_parse(Lorg/javathena/core/data/IParse;)V
statement is: SessionType sessionType = SessionType.SESSION_MAX, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: SessionType.SESSION_MAX is SessionType
statement is: socket_data.setType(sessionType), class spoon.support.reflect.code.CtInvocationImpl
invocation is: socket_data.setType(sessionType) target is: socket_data method is: setType(SessionType)
source statement: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V callee: VariableReference: Statement 15, type org.javathena.core.data.Socket_dataindex is: 19
Matched Method is: setType(Lorg/javathena/core/data/SessionType;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addSession(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addSession(socket_data) target is: UserManagement method is: addSession(Socket_data)
Matched Method is: addSession(Lorg/javathena/core/data/Socket_data;)V
* this is vulnerable: int _int = 9
* this is vulnerable: int _int = 112
TestCase is: String string = "9";
String string = "12345678";
UserManagement.dynamicFailBanCheckTXT(string);
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
String string = null;
NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) string, string);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) fromAdmin, (IParse) string);
byte[] byteArray = new byte[2];
int _int = 9;
int _int = 112;
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
String string = "127.0.0.1";
UserManagement.addIpToBanListMySQL(string);
UserManagement.getAccountIds();
InetAddress localHost = MockInetAddress.getLocalHost();
IParse iParse = null;
int _int = 87;
MockSocket mockSocket = new MockSocket(string, _int);
Socket_data socket_data = new Socket_data(mockSocket);
((Socket_data) localHost).setFunc_parse(iParse);
SessionType sessionType = null;
((Socket_data) localHost).setType(sessionType);
UserManagement.addSession(socket_data);

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer((-2680))
statement is: org.evosuite.testcase.statements.ArrayStatement@d425dfe7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1d3eaf3d type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte) (-45)
statement is: org.evosuite.testcase.statements.AssignmentStatement@32f4e38f type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)4
statement is: org.evosuite.testcase.statements.AssignmentStatement@20910411 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte) (-103)
statement is: org.evosuite.testcase.statements.AssignmentStatement@6541b2ca type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[3] = (byte)56
statement is: org.evosuite.testcase.statements.AssignmentStatement@6042db6e type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[4] = (byte)44
statement is: org.evosuite.testcase.statements.AssignmentStatement@2d390abb type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[5] = (byte) (-110)
statement is: charif_sendallwos(I[B)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int charif_sendallwos = UserManagement.charif_sendallwos((-2680), arg1)
statement is: sendUserList(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.sendUserList((Socket_data) null)
statement is: org.evosuite.testcase.statements.ArrayStatement@dcc1ffad type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8d6c7360 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = (int) (byte) (-103)
statement is: org.evosuite.testcase.statements.AssignmentStatement@8962d71 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[1] = 0
statement is: charif_sendallwos(I[I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int charif_sendallwos = UserManagement.charif_sendallwos((int) (byte) (-103), arg1)
test data is: Integer integer = new Integer((-2680));
byte[] byteArray = new byte[6];
byteArray[0] = (byte) (-45);
byteArray[1] = (byte)4;
byteArray[0] = (byte) (-103);
byteArray[3] = (byte)56;
byteArray[4] = (byte)44;
byteArray[5] = (byte) (-110);
UserManagement.charif_sendallwos((-2680), byteArray);
UserManagement.sendUserList((Socket_data) null);
int[] intArray = new int[2];
intArray[0] = (int) (byte) (-103);
intArray[1] = 0;
UserManagement.charif_sendallwos((int) (byte) (-103), intArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer = new Integer(0);
        byte[] byteArray = new byte[6];
        byteArray[0] = ((byte) (10));
        byteArray[1] = ((byte) (-45));
        byteArray[2] = ((byte) (103));
        byteArray[3] = ((byte) (56));
        byteArray[4] = ((byte) (44));
        byteArray[5] = ((byte) (110));
        UserManagement.charif_sendallwos(0, byteArray);
        UserManagement.sendUserList(((Socket_data) (null)));
        int[] intArray = new int[2];
        intArray[0] = ((int) (103));
        intArray[1] = 0;
        UserManagement.charif_sendallwos(103, intArray);
    }
}
statement is: Integer integer = new Integer(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[6] Elements: []
lengths: [6] [6]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (10)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (10)) Ct is: byteArray[0] = ((byte) (10))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@8ff19062
statement is: byteArray[1] = ((byte) (-45)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-45)) Ct is: byteArray[1] = ((byte) (-45))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@e275f8a0
statement is: byteArray[2] = ((byte) (103)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (103)) Ct is: byteArray[2] = ((byte) (103))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@8ff19062
statement is: byteArray[3] = ((byte) (56)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (56)) Ct is: byteArray[3] = ((byte) (56))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3da4da5f
statement is: byteArray[4] = ((byte) (44)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (44)) Ct is: byteArray[4] = ((byte) (44))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@25b652b4
statement is: byteArray[5] = ((byte) (110)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (110)) Ct is: byteArray[5] = ((byte) (110))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@97147d03
statement is: UserManagement.charif_sendallwos(0, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charif_sendallwos(0, byteArray) target is: UserManagement method is: charif_sendallwos(int,byte[])
Matched Method is: charif_sendallwos(I[B)I
statement is: UserManagement.sendUserList(((Socket_data) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.sendUserList(((Socket_data) (null))) target is: UserManagement method is: sendUserList(Socket_data)
Matched Method is: sendUserList(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: int[] intArray = new int[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new int[2] Elements: []
lengths: [6] [2]
Their type are: class [B int[]
Dimension: [2] Ct is: int[] intArray = new int[2] isAssignment: false Array: new int[2] Elements: []
lengths: [2] [2]
Their type are: class [I int[]
statement is: intArray[0] = ((int) (103)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:((int) (103)) Ct is: intArray[0] = ((int) (103))
target : intArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@ae0e7a29
statement is: intArray[1] = 0, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:0 Ct is: intArray[1] = 0
target : intArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@c3e47fb3
statement is: UserManagement.charif_sendallwos(103, intArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charif_sendallwos(103, intArray) target is: UserManagement method is: charif_sendallwos(int,int[])
Matched Method is: charif_sendallwos(I[B)I
* this is vulnerable: int _int = 10
* this is vulnerable: int _int = 56
* this is vulnerable: int _int = 44
* this is vulnerable: int _int = 110
* this is vulnerable: int _int = 103
* this is vulnerable: int _int = 0
TestCase is: int _int = 0;
Integer integer = new Integer(_int);
byte[] byteArray = new byte[6];
int _int = 10;
int _int = 56;
int _int = 44;
int _int = 110;
int _int = 0;
UserManagement.charif_sendallwos(_int, byteArray);
Socket_data socket_data = null;
UserManagement.sendUserList(socket_data);
int[] intArray = new int[2];
int _int = 103;
int _int = 0;
int _int = 103;
UserManagement.charif_sendallwos(_int, (byte[]) intArray);

statement is: online_db_final()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int online_db_final = UserManagement.online_db_final()
test data is: UserManagement.online_db_final();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Example: Test data for testing the online database connection
        int userId = 1234;
        String username = "johndoe";
        String password = "password123";
        boolean isOnline = true;
        UserManagement.online_db_final(userId, username, password, isOnline);
    }
}
statement is: // Example: Test data for testing the online database connection
int userId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isOnline = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.online_db_final(userId, username, password, isOnline), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.online_db_final(userId, username, password, isOnline) target is: UserManagement method is: online_db_final(int,java.lang.String,java.lang.String,boolean)
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: boolean _boolean = true
TestCase is: int _int = 1234;
String string = "johndoe";
String string = "password123";
boolean _boolean = true;

statement is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userTxt = UserManagement.getUserTxt((String) null)
statement is: removeUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data removeUser = UserManagement.removeUser((Auth_data) null)
test data is: UserManagement.getUserTxt((String) null);
UserManagement.removeUser((Auth_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getUserTxt("admin");
        UserManagement.removeUser(new Auth_data("admin", "AdminPassword"));
    }
}
statement is: UserManagement.getUserTxt("admin"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserTxt("admin") target is: UserManagement method is: getUserTxt(java.lang.String)
Matched Method is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data;
statement is: UserManagement.removeUser(new Auth_data("admin", "AdminPassword")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.removeUser(new Auth_data("admin", "AdminPassword")) target is: UserManagement method is: removeUser(Auth_data)
Matched Method is: removeUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "admin";
UserManagement.getUserTxt(string);
Auth_data auth_data = null;
UserManagement.removeUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: javolution.util.FastMap(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type javolution.util.FastMap<java.lang.String, java.lang.String>
statement code is: FastMap<String, String> fastMap = new FastMap<String, String>("AQ?==l5'{|")
statement is: String string = "Unknown Error." type is: class org.evosuite.testcase.statements.StringPrimitiveStatement return type class java.lang.String
statement code is: String string = "Unknown Error."
statement is: String string = "@I3tH.\\{Lnu3<" type is: class org.evosuite.testcase.statements.StringPrimitiveStatement return type class java.lang.String
statement code is: String string = "@I3tH.\\{Lnu3<"
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = fastMap.put(arg0, arg1)
statement is: setAccount_reg2(Ljavolution/util/FastMap;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setAccount_reg2(arg0)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
statement is: getLoopbackAddress()Ljava/net/InetAddress; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.net.Inet4Address
statement code is: Inet4Address loopbackAddress = (Inet4Address)MockInetAddress.getLoopbackAddress()
statement is: int _int = (-1000) type is: class org.evosuite.testcase.statements.numeric.IntPrimitiveStatement return type int
statement code is: int _int = (-1000)
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg2, arg3, arg2, arg3)
statement is: org.javathena.login.parse.FromAdmin()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromAdmin
statement code is: FromAdmin fromAdmin = new FromAdmin()
statement is: shutdownInput()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.shutdownInput()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: changeSex(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.changeSex(arg0)
test data is: Auth_data auth_data = new Auth_data();
FastMap<String, String> fastMap = new FastMap<String, String>("AQ?==l5'{|");
String string = "Unknown Error.";
String string = "@I3tH.\\{Lnu3<";
fastMap.put(string, string);
auth_data.setAccount_reg2(fastMap);
UserManagement.addUser(auth_data);
Inet4Address loopbackAddress = (Inet4Address)MockInetAddress.getLoopbackAddress();
int _int = (-1000);
MockSocket mockSocket = new MockSocket(loopbackAddress, _int, loopbackAddress, _int);
FromAdmin fromAdmin = new FromAdmin();
mockSocket.shutdownInput();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
UserManagement.changeSex(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        FastMap<String, String> fastMap = new FastMap<String, String>("AQ?==l5'{|");
        String string = "Unknown Error.";
        String string = "@I3tH.\\{Lnu3<";
        fastMap.put(string, string);
        auth_data.setAccount_reg2(fastMap);
        UserManagement.addUser(auth_data);
        Inet4Address loopbackAddress = ((Inet4Address) (MockInetAddress.getLoopbackAddress()));
        int _int = -1000;
        MockSocket mockSocket = new MockSocket(loopbackAddress, _int, loopbackAddress, _int);
        FromAdmin fromAdmin = new FromAdmin();
        mockSocket.shutdownInput();
        Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
        UserManagement.changeSex(socket_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FastMap<String, String> fastMap = new FastMap<String, String>("AQ?==l5'{|"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String string = "Unknown Error.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String string = "@I3tH.\\{Lnu3<", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: fastMap.put(string, string), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fastMap.put(string, string) target is: fastMap method is: put(java.lang.String,java.lang.String)
source statement: javolution.util.FastMap(Ljava/lang/String;)V callee: VariableReference: Statement 1, type javolution.util.FastMap<java.lang.String, java.lang.String>index is: 2
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: auth_data.setAccount_reg2(fastMap), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setAccount_reg2(fastMap) target is: auth_data method is: setAccount_reg2(FastMap)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setAccount_reg2(Ljavolution/util/FastMap;)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
statement is: Inet4Address loopbackAddress = ((Inet4Address) (MockInetAddress.getLoopbackAddress())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Inet4Address) (MockInetAddress.getLoopbackAddress())) target is: MockInetAddress method is: getLoopbackAddress()
Matched Method is: getLoopbackAddress()Ljava/net/InetAddress;
statement is: int _int = -1000, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -1000
statement is: MockSocket mockSocket = new MockSocket(loopbackAddress, _int, loopbackAddress, _int), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromAdmin fromAdmin = new FromAdmin(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.shutdownInput(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.shutdownInput() target is: mockSocket method is: shutdownInput()
source statement: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V callee: VariableReference: Statement 9, type org.evosuite.runtime.mock.java.net.MockSocketindex is: 9
Matched Method is: shutdownInput()V
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.changeSex(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.changeSex(socket_data) target is: UserManagement method is: changeSex(Socket_data)
Matched Method is: changeSex(Lorg/javathena/core/data/Socket_data;)V
* this is vulnerable: String string = "Unknown Error."
TestCase is: Auth_data auth_data = new Auth_data();
String string = "AQ?==l5'{|";
FastMap<String, String> fastMap = new FastMap<String, String>(string);
String string = "Unknown Error.";
String string = "@I3tH.\\{Lnu3<";
((FastMap) string).put(string, string);
auth_data.setAccount_reg2(fastMap);
Auth_data addUser = UserManagement.addUser(auth_data);
Inet4Address loopbackAddress = (Inet4Address)MockInetAddress.getLoopbackAddress();
MockSocket mockSocket = new MockSocket(loopbackAddress, (int) loopbackAddress, (InetAddress) addUser, (int) loopbackAddress);
FromAdmin fromAdmin = new FromAdmin();
mockSocket.shutdownInput();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
UserManagement.changeSex(socket_data);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e')
statement is: setBan_until_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setBan_until_time((-1L))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time((-1L));
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("username345", "password345", "username345", 'e');
        addUserTXT.setBan_until_time(-1L);
        UserManagement.addUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("username345", "password345", "username345", 'e'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("username345", "password345", "username345", 'e') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: addUserTXT.setBan_until_time(-1L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addUserTXT.setBan_until_time(-1L) target is: addUserTXT method is: setBan_until_time(long)
source statement: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setBan_until_time(J)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(addUserTXT) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "username345";
String string = "password345";
String string = "username345";
char _char = 'e';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
long _long = null;
((Auth_data) string).setBan_until_time(_long);
UserManagement.addUser(addUserTXT);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e')
statement is: setBan_until_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setBan_until_time('e')
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time('e');
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setCharserver(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setCharserver(342)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setCharserver(342);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setCharserver(98765);// Changed the value of charserver to a more illustrative example

        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setCharserver(98765)// Changed the value of charserver to a more illustrative example
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setCharserver(98765)// Changed the value of charserver to a more illustrative example
 target is: auth_data method is: setCharserver(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setCharserver(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 98765;
auth_data.setCharserver(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setClientType(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setClientType((-1377))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setClientType((-1377));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        Auth_data auth_data = new Auth_data();
        auth_data.setClientType(-256);// -1377 is a negative integer, but it's not descriptive enough. We can change it to a more illustrative example like (-256) which is also a negative integer.

        UserManagement.addUser(auth_data);
    }
}
statement is: // Improved test data for the above code snippet
Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setClientType(-256)// -1377 is a negative integer, but it's not descriptive enough. We can change it to a more illustrative example like (-256) which is also a negative integer.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setClientType(-256)// -1377 is a negative integer, but it's not descriptive enough. We can change it to a more illustrative example like (-256) which is also a negative integer.
 target is: auth_data method is: setClientType(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setClientType(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = null;
auth_data.setClientType(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setClientType(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setClientType(636)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setClientType(636);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setClientType("Corporate");// Improved: Changed the client type from a numerical value to a more descriptive string

        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setClientType("Corporate")// Improved: Changed the client type from a numerical value to a more descriptive string
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setClientType("Corporate")// Improved: Changed the client type from a numerical value to a more descriptive string
 target is: auth_data method is: setClientType(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setClientType(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "Corporate";
auth_data.setClientType((int) string);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setConnect_until_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setConnect_until_time((-1112L))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-1112L));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setConnect_until_time(((long) (1476592000)));// This is a more descriptive example of a long value, representing the date when the user will be disconnected

        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setConnect_until_time(((long) (1476592000)))// This is a more descriptive example of a long value, representing the date when the user will be disconnected
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setConnect_until_time(((long) (1476592000)))// This is a more descriptive example of a long value, representing the date when the user will be disconnected
 target is: auth_data method is: setConnect_until_time(long)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setConnect_until_time(J)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 1476592000;
auth_data.setConnect_until_time(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setConnect_until_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setConnect_until_time(3458L)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(3458L);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data loginData = new Auth_data();
        loginData.setConnect_until_time(1598572348L);
        UserManagement.addUser(loginData);
        String userId = "user123";
        UserManagement.logIn(userId);
    }
}
statement is: Auth_data loginData = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: loginData.setConnect_until_time(1598572348L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: loginData.setConnect_until_time(1598572348L) target is: loginData method is: setConnect_until_time(long)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setConnect_until_time(J)V
statement is: UserManagement.addUser(loginData), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(loginData) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
statement is: String userId = "user123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.logIn(userId), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.logIn(userId) target is: UserManagement method is: logIn(java.lang.String)
* this is vulnerable: String string = "user123"
TestCase is: Auth_data auth_data = new Auth_data();
long _long = 1598572348L;
auth_data.setConnect_until_time(_long);
UserManagement.addUser(auth_data);
String string = "user123";

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setDelflag(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setDelflag((-174))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-174));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setDelflag(-23);
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setDelflag(-23), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setDelflag(-23) target is: auth_data method is: setDelflag(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setDelflag(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = null;
auth_data.setDelflag(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setDelflag(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setDelflag(1162)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1162);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setDelflag(100);
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setDelflag(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setDelflag(100) target is: auth_data method is: setDelflag(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setDelflag(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 100;
auth_data.setDelflag(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLevel(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLevel(256)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLevel(256);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLevel("Admin");
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLevel("Admin"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLevel("Admin") target is: auth_data method is: setLevel(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLevel(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "Admin";
auth_data.setLevel((int) string);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogin_id1(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id1((-1000))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1000));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogin_id1("unique-identifier");
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogin_id1("unique-identifier"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogin_id1("unique-identifier") target is: auth_data method is: setLogin_id1(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLogin_id1(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "unique-identifier";
auth_data.setLogin_id1((int) string);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogin_id1(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id1(342)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(342);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogin_id1(87923546);
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogin_id1(87923546), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogin_id1(87923546) target is: auth_data method is: setLogin_id1(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLogin_id1(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 87923546;
auth_data.setLogin_id1(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogin_id2(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id2((-100))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-100));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogin_id2(-999999);// Changed the value to a more descriptive negative number

        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogin_id2(-999999)// Changed the value to a more descriptive negative number
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogin_id2(-999999)// Changed the value to a more descriptive negative number
 target is: auth_data method is: setLogin_id2(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLogin_id2(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = null;
auth_data.setLogin_id2(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogin_id2(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id2(344)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(344);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogin_id2("johndoe");
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogin_id2("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogin_id2("johndoe") target is: auth_data method is: setLogin_id2(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLogin_id2(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "johndoe";
auth_data.setLogin_id2((int) string);
UserManagement.addUser(auth_data);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT((String) null, "", "", '3')
statement is: setLogincount(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogincount((-2432))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT((String) null, "", "", '3');
addUserTXT.setLogincount((-2432));
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("Test user", "test@email.com", "1234567890", 'A');
        addUserTXT.setLogincount(3);
        UserManagement.addUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("Test user", "test@email.com", "1234567890", 'A'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("Test user", "test@email.com", "1234567890", 'A') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: addUserTXT.setLogincount(3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addUserTXT.setLogincount(3) target is: addUserTXT method is: setLogincount(int)
source statement: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setLogincount(I)V
statement is: UserManagement.addUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(addUserTXT) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "Test user";
String string = "test@email.com";
String string = "1234567890";
char _char = 'A';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
int _int = 3;
((Auth_data) string).setLogincount(_int);
UserManagement.addUser(addUserTXT);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogincount(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogincount(1286)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogincount(1286);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogincount(3);
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogincount(3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogincount(3) target is: auth_data method is: setLogincount(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLogincount(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 3;
auth_data.setLogincount(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setState(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setState(113)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setState(113);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setState("Active");
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setState("Active"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setState("Active") target is: auth_data method is: setState(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setState(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "Active";
auth_data.setState((int) string);
UserManagement.addUser(auth_data);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e')
statement is: setVersion(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setVersion((-542))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setVersion((-542));
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("John Doe", "johndoe@email.com", "1234567890", 'm');
        addUserTXT.setVersion(-542);
        UserManagement.addUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("John Doe", "johndoe@email.com", "1234567890", 'm'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("John Doe", "johndoe@email.com", "1234567890", 'm') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: addUserTXT.setVersion(-542), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addUserTXT.setVersion(-542) target is: addUserTXT method is: setVersion(int)
source statement: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setVersion(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(addUserTXT) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "John Doe";
String string = "johndoe@email.com";
String string = "1234567890";
char _char = 'm';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
int _int = null;
((Auth_data) string).setVersion(_int);
UserManagement.addUser(addUserTXT);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setVersion(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setVersion(17)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setVersion(17);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setVersion(1234567890);
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setVersion(1234567890), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setVersion(1234567890) target is: auth_data method is: setVersion(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setVersion(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 1234567890;
auth_data.setVersion(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setResetLogincoun(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setResetLogincoun(true)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setResetLogincoun(true);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data authData = new Auth_data();
        authData.setResetLoginCount(0);
        authData.setUsername("user123");
        authData.setPassword("password123");
        UserManagement.addNewUser(authData);
    }
}
statement is: Auth_data authData = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: authData.setResetLoginCount(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: authData.setResetLoginCount(0) target is: authData method is: setResetLoginCount(int)
statement is: authData.setUsername("user123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: authData.setUsername("user123") target is: authData method is: setUsername(java.lang.String)
statement is: authData.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: authData.setPassword("password123") target is: authData method is: setPassword(java.lang.String)
statement is: UserManagement.addNewUser(authData), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addNewUser(authData) target is: UserManagement method is: addNewUser(Auth_data)
TestCase is: Auth_data auth_data = new Auth_data();

statement is: getAccountID(Ljava/lang/String;)Ljava/lang/Integer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer accountID = UserManagement.getAccountID("UR5_)xXMJBR?)Nn+-")
test data is: UserManagement.getAccountID("UR5_)xXMJBR?)Nn+-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getAccountID("INVALID_ACCOUNT_ID");
    }
}
statement is: UserManagement.getAccountID("INVALID_ACCOUNT_ID"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountID("INVALID_ACCOUNT_ID") target is: UserManagement method is: getAccountID(java.lang.String)
Matched Method is: getAccountID(Ljava/lang/String;)Ljava/lang/Integer;
TestCase is: String string = "INVALID_ACCOUNT_ID";
UserManagement.getAccountID(string);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT(" @ ", "", "(^u{N/4lJD", '&')
statement is: getAccountIdCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int accountIdCount = UserManagement.getAccountIdCount()
test data is: UserManagement.addUserTXT(" @ ", "", "(^u{N/4lJD", '&');
UserManagement.getAccountIdCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserTXT("john.doe@example.com", "John Doe", "password123!", '@');
        UserManagement.getAccountIdCount();
    }
}
statement is: UserManagement.addUserTXT("john.doe@example.com", "John Doe", "password123!", '@'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("john.doe@example.com", "John Doe", "password123!", '@') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: UserManagement.getAccountIdCount(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountIdCount() target is: UserManagement method is: getAccountIdCount()
Matched Method is: getAccountIdCount()I
TestCase is: String string = "john.doe@example.com";
String string = "John Doe";
String string = "password123!";
char _char = '@';
UserManagement.addUserTXT(string, string, string, _char);
UserManagement.getAccountIdCount();

statement is: javolution.util.FastMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type javolution.util.FastMap<java.lang.Integer, org.javathena.core.data.Auth_data>
statement code is: FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>()
statement is: valueOf(I)Ljava/lang/Integer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer valueOf = Integer.valueOf(472)
statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data put = fastMap.put(arg0, arg1)
statement is: setAuth_dats(Ljavolution/util/FastMap;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.setAuth_dats(arg0)
statement is: getUserTxt(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userTxt = UserManagement.getUserTxt(arg0)
test data is: FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
Integer valueOf = Integer.valueOf(472);
Auth_data auth_data = new Auth_data();
fastMap.put(valueOf, auth_data);
UserManagement.setAuth_dats(fastMap);
UserManagement.getUserTxt(valueOf);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
        Integer valueOf = Integer.valueOf(123456789);// Improved test data: using a larger value to demonstrate the impact on performance

        Auth_data auth_data = new Auth_data();
        auth_data.setName("John Doe");// Improved test data: using a more descriptive name for the user

        fastMap.put(valueOf, auth_data);
        UserManagement.setAuth_dats(fastMap);
        UserManagement.getUserTxt(valueOf);
    }
}
statement is: FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Integer valueOf = Integer.valueOf(123456789)// Improved test data: using a larger value to demonstrate the impact on performance
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Integer.valueOf(123456789) target is: Integer method is: valueOf(int)
Matched Method is: valueOf(I)Ljava/lang/Integer;
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setName("John Doe")// Improved test data: using a more descriptive name for the user
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setName("John Doe")// Improved test data: using a more descriptive name for the user
 target is: auth_data method is: setName(java.lang.String)
statement is: fastMap.put(valueOf, auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fastMap.put(valueOf, auth_data) target is: fastMap method is: put(java.lang.Integer,Auth_data)
source statement: javolution.util.FastMap()V callee: VariableReference: Statement 0, type javolution.util.FastMap<java.lang.Integer, org.javathena.core.data.Auth_data>index is: 0
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: UserManagement.setAuth_dats(fastMap), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.setAuth_dats(fastMap) target is: UserManagement method is: setAuth_dats(FastMap)
Matched Method is: setAuth_dats(Ljavolution/util/FastMap;)V
statement is: UserManagement.getUserTxt(valueOf), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserTxt(valueOf) target is: UserManagement method is: getUserTxt(java.lang.Integer)
Matched Method is: getUserTxt(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data;
TestCase is: FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
int _int = 123456789;
Integer valueOf = Integer.valueOf(_int);
Auth_data auth_data = new Auth_data();
fastMap.put(valueOf, auth_data);
UserManagement.setAuth_dats(fastMap);
UserManagement.getUserTxt(valueOf);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userTxt = UserManagement.getUserTxt((String) null)
test data is: Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setUsername("John Doe");
        auth_data.setPassword("password123");
        auth_data.setEmail("johndoe@example.com");
        UserManagement.getUserTxt(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setUsername("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setUsername("John Doe") target is: auth_data method is: setUsername(java.lang.String)
statement is: auth_data.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setPassword("password123") target is: auth_data method is: setPassword(java.lang.String)
statement is: auth_data.setEmail("johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setEmail("johndoe@example.com") target is: auth_data method is: setEmail(java.lang.String)
statement is: UserManagement.getUserTxt(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserTxt(auth_data) target is: UserManagement method is: getUserTxt(Auth_data)
Matched Method is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) auth_data);

statement is: getAccountIds()Ljavolution/util/FastTable; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastTable<java.lang.Integer>
statement code is: FastTable<Integer> accountIds = UserManagement.getAccountIds()
statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userTxt = UserManagement.getUserTxt((String) null)
test data is: UserManagement.getAccountIds();
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Integer[] accountIds = new Integer[]{ 1, 2, 3, 4 };
        Auth_data auth_data = new Auth_data(1);
        String userTxt = "John Doe";
        UserManagement.getAccountIds();// Returns the array of account IDs

        Auth_data auth_data = new Auth_data(1);
        UserManagement.getUserTxt(((String) (null)));// Returns the text representation of the user's name }}

    }
}
statement is: // Improved test data
Integer[] accountIds = new Integer[]{ 1, 2, 3, 4 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: Auth_data auth_data = new Auth_data(1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String userTxt = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.getAccountIds()// Returns the array of account IDs
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountIds()// Returns the array of account IDs
 target is: UserManagement method is: getAccountIds()
Matched Method is: getAccountIds()Ljavolution/util/FastTable;
statement is: Auth_data auth_data = new Auth_data(1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.getUserTxt(((String) (null)))// Returns the text representation of the user's name }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserTxt(((String) (null)))// Returns the text representation of the user's name }}
 target is: UserManagement method is: getUserTxt(java.lang.String)
Matched Method is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data;
i 0 Parameters size() 0 Num of Method Parameters: 1
* this is vulnerable: String string = "John Doe"
TestCase is: String string = "John Doe";
UserManagement.getAccountIds();
String string = null;
UserManagement.getUserTxt(string);

statement is: getInteger(Ljava/lang/String;I)Ljava/lang/Integer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer integer = Integer.getInteger((String) null, 0)
statement is: is_user_online(Ljava/lang/Integer;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean is_user_online = UserManagement.is_user_online(arg0)
test data is: Integer integer = Integer.getInteger((String) null, 0);
UserManagement.is_user_online(integer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer = Integer.valueOf("1234567890");
        UserManagement.is_user_online(integer);
    }
}
statement is: Integer integer = Integer.valueOf("1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Integer.valueOf("1234567890") target is: Integer method is: valueOf(java.lang.String)
statement is: UserManagement.is_user_online(integer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.is_user_online(integer) target is: UserManagement method is: is_user_online(java.lang.Integer)
Matched Method is: is_user_online(Ljava/lang/Integer;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Integer integer = null;
UserManagement.is_user_online(integer);

statement is: org.evosuite.testcase.statements.ArrayStatement@a930dee5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f6502833 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[8] = (byte)116
statement is: tabHexToInt([B)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int tabHexToInt = UserManagement.tabHexToInt(arg0)
test data is: byte[] byteArray = new byte[9];
byteArray[8] = (byte)116;
UserManagement.tabHexToInt(byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[9];
        // Use a more descriptive value for the last element of the array
        byteArray[8] = ((byte) ('f'));
        // Use a more descriptive variable name for the expected result
        int expectedIntValue = 105;
        int actualIntValue = UserManagement.tabHexToInt(byteArray);
        assertEquals(expectedIntValue, actualIntValue);
    }
}
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: // Use a more descriptive value for the last element of the array
byteArray[8] = ((byte) ('f')), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('f')) Ct is: // Use a more descriptive value for the last element of the array
byteArray[8] = ((byte) ('f'))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // Use a more descriptive variable name for the expected result
int expectedIntValue = 105, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int actualIntValue = UserManagement.tabHexToInt(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.tabHexToInt(byteArray) target is: UserManagement method is: tabHexToInt(byte[])
Matched Method is: tabHexToInt([B)I
statement is: assertEquals(expectedIntValue, actualIntValue), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedIntValue, actualIntValue) target is:  method is: assertEquals(int,int)
* this is vulnerable: int _int = 105
TestCase is: byte[] byteArray = new byte[9];
char _char = 'f';
byteArray[8] = (byte) _char;
int _int = 105;
UserManagement.tabHexToInt(byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@8cbc730 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@808293ea type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[8] = (byte) (-43)
statement is: tabHexToInt([B)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int tabHexToInt = UserManagement.tabHexToInt(arg0)
test data is: byte[] byteArray = new byte[9];
byteArray[8] = (byte) (-43);
UserManagement.tabHexToInt(byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[9];
        byteArray[0] = ((byte) (127));
        byteArray[1] = ((byte) (-128));
        byteArray[2] = ((byte) (0));
        byteArray[3] = ((byte) (5));
        byteArray[4] = ((byte) (10));
        byteArray[5] = ((byte) (255));
        byteArray[6] = ((byte) (-128));
        byteArray[7] = ((byte) (127));
        byteArray[8] = ((byte) (-43));
        UserManagement.tabHexToInt(byteArray);
    }
}
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (127)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (127)) Ct is: byteArray[0] = ((byte) (127))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (-128)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-128)) Ct is: byteArray[1] = ((byte) (-128))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[2] = ((byte) (0)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (0)) Ct is: byteArray[2] = ((byte) (0))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[3] = ((byte) (5)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (5)) Ct is: byteArray[3] = ((byte) (5))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[4] = ((byte) (10)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (10)) Ct is: byteArray[4] = ((byte) (10))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[5] = ((byte) (255)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (255)) Ct is: byteArray[5] = ((byte) (255))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[6] = ((byte) (-128)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-128)) Ct is: byteArray[6] = ((byte) (-128))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[7] = ((byte) (127)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (127)) Ct is: byteArray[7] = ((byte) (127))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[8] = ((byte) (-43)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-43)) Ct is: byteArray[8] = ((byte) (-43))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.tabHexToInt(byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.tabHexToInt(byteArray) target is: UserManagement method is: tabHexToInt(byte[])
Matched Method is: tabHexToInt([B)I
TestCase is: byte[] byteArray = new byte[9];
int _int = 127;
byteArray[8] = (byte) _int;
byteArray[8] = (byte) _int;
int _int = 0;
byteArray[8] = (byte) _int;
int _int = 5;
byteArray[8] = (byte) _int;
int _int = 10;
byteArray[8] = (byte) _int;
int _int = 255;
byteArray[8] = (byte) _int;
byteArray[8] = (byte) _int;
int _int = 127;
byteArray[8] = (byte) _int;
byteArray[8] = (byte) _int;
UserManagement.tabHexToInt(byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@e5842574 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: account_idToOffline(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.account_idToOffline((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[5];
UserManagement.account_idToOffline((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the byteArray parameter of the UserManagement.account_idToOffline method
        byte[] byteArray = new byte[]{ ((byte) (0xab)), ((byte) (0xcd)), ((byte) (0xef)), ((byte) (0x12)), ((byte) (0x34)) };
    }
}
statement is: // Improved test data for the byteArray parameter of the UserManagement.account_idToOffline method
byte[] byteArray = new byte[]{ ((byte) (0xab)), ((byte) (0xcd)), ((byte) (0xef)), ((byte) (0x12)), ((byte) (0x34)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[]{ ((byte) (0xab)), ((byte) (0xcd)), ((byte) (0xef)), ((byte) (0x12)), ((byte) (0x34)) } Elements: [((byte) (0xab)), ((byte) (0xcd)), ((byte) (0xef)), ((byte) (0x12)), ((byte) (0x34))]
lengths: [5] []
statement is: org.evosuite.testcase.statements.ArrayStatement@91b42935 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[23]
statement is: account_idToOnline(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.account_idToOnline((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[23];
UserManagement.account_idToOnline((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3 };
        UserManagement.account_idToOnline(((Socket_data) (null)), byteArray);
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[23] isAssignment: false Array: new byte[]{ 1, 2, 3 } Elements: [1, 2, 3]
lengths: [23] []
statement is: UserManagement.account_idToOnline(((Socket_data) (null)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.account_idToOnline(((Socket_data) (null)), byteArray) target is: UserManagement method is: account_idToOnline(Socket_data,byte[])
Matched Method is: account_idToOnline(Lorg/javathena/core/data/Socket_data;[B)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: Socket_data socket_data = null;
byte[] byteArray = null;
UserManagement.account_idToOnline(socket_data, byteArray);

statement is: addGM(II)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addGM = UserManagement.addGM(10, 10)
test data is: UserManagement.addGM(10, 10);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for addGM method
        int userId = 1234;// Replace with a more descriptive ID value

        int groupId = 5678;// Replace with a more descriptive ID value

        UserManagement.addGM(userId, groupId);
    }
}
statement is: // Test data for addGM method
int userId = 1234// Replace with a more descriptive ID value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int groupId = 5678// Replace with a more descriptive ID value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.addGM(userId, groupId), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addGM(userId, groupId) target is: UserManagement method is: addGM(int,int)
Matched Method is: addGM(II)Z
TestCase is: int _int = 1234;
int _int = 5678;
UserManagement.addGM(_int, _int);

statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: administationLogin(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.administationLogin(arg0)
test data is: Socket_data socket_data = new Socket_data((Socket) null);
UserManagement.administationLogin(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for better clarity and effectiveness
        Socket_data socket_data = new Socket_data("192.168.0.1", 5555);
        UserManagement.administationLogin(socket_data);
    }
}
statement is: // Improved test data for better clarity and effectiveness
Socket_data socket_data = new Socket_data("192.168.0.1", 5555), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.administationLogin(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.administationLogin(socket_data) target is: UserManagement method is: administationLogin(Socket_data)
Matched Method is: administationLogin(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.administationLogin(socket_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: banResquest(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.banResquest(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.banResquest(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("192.168.0.1", 8080);
        Socket_data socket_data = new Socket_data(mockSocket, "Jane Smith");
        UserManagement.banResquest(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket("192.168.0.1", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, "Jane Smith"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.banResquest(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.banResquest(socket_data) target is: UserManagement method is: banResquest(Socket_data)
Matched Method is: banResquest(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.banResquest(socket_data);

statement is: Proxy.Type proxy_Type = Proxy.Type.SOCKS type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class java.net.Proxy$Type
statement code is: Proxy.Type proxy_Type = Proxy.Type.SOCKS
statement is: org.evosuite.runtime.mock.java.net.MockInetSocketAddress(Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockInetSocketAddress
statement code is: MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("*VQ;E#Cc{90GSH_f", 995)
statement is: java.net.Proxy(Ljava/net/Proxy$Type;Ljava/net/SocketAddress;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.net.Proxy
statement code is: Proxy proxy = new Proxy(arg0, arg1)
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0)
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: changeSex(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.changeSex(arg0)
test data is: Proxy.Type proxy_Type = Proxy.Type.SOCKS;
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("*VQ;E#Cc{90GSH_f", 995);
Proxy proxy = new Proxy(proxy_Type, mockInetSocketAddress);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSex(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Proxy.Type proxy_Type = Type.SOCKS;
        MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("192.168.0.1", 995);
        Proxy proxy = new Proxy(proxy_Type, mockInetSocketAddress);
        MockSocket mockSocket = new MockSocket(proxy);
        Socket_data socket_data = new Socket_data(mockSocket);
        UserManagement.changeSex(socket_data);
    }
}
statement is: Proxy.Type proxy_Type = Type.SOCKS, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.SOCKS is Type
statement is: MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("192.168.0.1", 995), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Proxy proxy = new Proxy(proxy_Type, mockInetSocketAddress), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.changeSex(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.changeSex(socket_data) target is: UserManagement method is: changeSex(Socket_data)
Matched Method is: changeSex(Lorg/javathena/core/data/Socket_data;)V
TestCase is: String string = "192.168.0.1";
int _int = 995;
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress(string, _int);
Proxy proxy = new Proxy((Proxy.Type) mockInetSocketAddress, (SocketAddress) _int);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSex(socket_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: changeSexChrif_changesex(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.changeSexChrif_changesex(arg0)
test data is: MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSexChrif_changesex(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        mockSocket.close();
        // Improve the test data by changing the primitive values and Strings to more descriptive examples.
        Socket_data socket_data = new Socket_data(mockSocket);
        UserManagement.changeSexChrif_changesex(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.close() target is: mockSocket method is: close()
source statement: org.evosuite.runtime.mock.java.net.MockSocket()V callee: VariableReference: Statement 0, type org.evosuite.runtime.mock.java.net.MockSocketindex is: 0
Matched Method is: close()V
statement is: // Improve the test data by changing the primitive values and Strings to more descriptive examples.
Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.changeSexChrif_changesex(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.changeSexChrif_changesex(socket_data) target is: UserManagement method is: changeSexChrif_changesex(Socket_data)
Matched Method is: changeSexChrif_changesex(Lorg/javathena/core/data/Socket_data;)V
TestCase is: MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSexChrif_changesex(socket_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@da38d1c9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.charServerToAuthentify(arg0, arg1)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[7];
        UserManagement.charServerToAuthentify(socket_data, byteArray);
        // Improved test data
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[10];
        UserManagement.charServerToAuthentify(socket_data, byteArray);
        // Improved test data
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[15];
        UserManagement.charServerToAuthentify(socket_data, byteArray);
        // Improved test data
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[20];
        UserManagement.charServerToAuthentify(socket_data, byteArray);
        // Improved test data
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[25];
        UserManagement.charServerToAuthentify(socket_data, byteArray);
        // Improved test data
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[30];
        UserManagement.charServerToAuthentify(socket_data, byteArray);
        // Improved test data }}
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: UserManagement.charServerToAuthentify(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charServerToAuthentify(socket_data, byteArray) target is: UserManagement method is: charServerToAuthentify(Socket_data,byte[])
Matched Method is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // Improved test data
MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[10] Elements: []
lengths: [7] [10]
Their type are: class [B byte[]
statement is: UserManagement.charServerToAuthentify(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charServerToAuthentify(socket_data, byteArray) target is: UserManagement method is: charServerToAuthentify(Socket_data,byte[])
Matched Method is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // Improved test data
MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[15], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [15] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[15] Elements: []
lengths: [7] [15]
Their type are: class [B byte[]
statement is: UserManagement.charServerToAuthentify(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charServerToAuthentify(socket_data, byteArray) target is: UserManagement method is: charServerToAuthentify(Socket_data,byte[])
Matched Method is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // Improved test data
MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[20], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [20] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[20] Elements: []
lengths: [7] [20]
Their type are: class [B byte[]
statement is: UserManagement.charServerToAuthentify(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charServerToAuthentify(socket_data, byteArray) target is: UserManagement method is: charServerToAuthentify(Socket_data,byte[])
Matched Method is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // Improved test data
MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[25], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [25] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[25] Elements: []
lengths: [7] [25]
Their type are: class [B byte[]
statement is: UserManagement.charServerToAuthentify(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charServerToAuthentify(socket_data, byteArray) target is: UserManagement method is: charServerToAuthentify(Socket_data,byte[])
Matched Method is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // Improved test data
MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[30], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [30] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[30] Elements: []
lengths: [7] [30]
Their type are: class [B byte[]
statement is: UserManagement.charServerToAuthentify(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charServerToAuthentify(socket_data, byteArray) target is: UserManagement method is: charServerToAuthentify(Socket_data,byte[])
Matched Method is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // Improved test data }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@9261b7c9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: connectionOfCharServer(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.connectionOfCharServer(arg0, arg1)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.connectionOfCharServer(socket_data, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[7];
        UserManagement.connectionOfCharServer(socket_data, byteArray);
        // Improved test data
        MockSocket mockSocket = new MockSocket("127.0.0.1", 8080);
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[7];
        UserManagement.connectionOfCharServer(socket_data, byteArray);
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: UserManagement.connectionOfCharServer(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfCharServer(socket_data, byteArray) target is: UserManagement method is: connectionOfCharServer(Socket_data,byte[])
Matched Method is: connectionOfCharServer(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // Improved test data
MockSocket mockSocket = new MockSocket("127.0.0.1", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: UserManagement.connectionOfCharServer(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfCharServer(socket_data, byteArray) target is: UserManagement method is: connectionOfCharServer(Socket_data,byte[])
Matched Method is: connectionOfCharServer(Lorg/javathena/core/data/Socket_data;[B)V
TestCase is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.connectionOfCharServer(socket_data, byteArray);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.connectionOfCharServer(socket_data, byteArray);

statement is: connectionOfClientEncrypted(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.connectionOfClientEncrypted((Socket_data) null)
test data is: UserManagement.connectionOfClientEncrypted((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Arrange
        Socket socket = mock(Socket.class);
        when(socket.getInputStream()).thenReturn(new ByteArrayInputStream("Hello World!".getBytes()));
        when(socket.getOutputStream()).thenReturn(new ByteArrayOutputStream());
        UserManagement.connectionOfClientEncrypted(socket);
        // Assert
        verify(socket).close();
    }
}
statement is: // Arrange
Socket socket = mock(Socket.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Socket.class) target is:  method is: mock(java.lang.Class)
statement is: when(socket.getInputStream()).thenReturn(new ByteArrayInputStream("Hello World!".getBytes())), class spoon.support.reflect.code.CtInvocationImpl
invocation is: when(socket.getInputStream()).thenReturn(new ByteArrayInputStream("Hello World!".getBytes())) target is: when(socket.getInputStream()) method is: thenReturn(ByteArrayInputStream)
statement is: when(socket.getOutputStream()).thenReturn(new ByteArrayOutputStream()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: when(socket.getOutputStream()).thenReturn(new ByteArrayOutputStream()) target is: when(socket.getOutputStream()) method is: thenReturn(ByteArrayOutputStream)
statement is: UserManagement.connectionOfClientEncrypted(socket), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfClientEncrypted(socket) target is: UserManagement method is: connectionOfClientEncrypted(Socket)
Matched Method is: connectionOfClientEncrypted(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // Assert
verify(socket).close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Assert
verify(socket).close() target is: verify(socket) method is: close()
TestCase is: Socket_data socket_data = null;
UserManagement.connectionOfClientEncrypted(socket_data);

statement is: dynamicFailBanCheckMySQL(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.dynamicFailBanCheckMySQL("maxRows")
test data is: UserManagement.dynamicFailBanCheckMySQL("maxRows");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.dynamicFailBanCheckMySQL(25);
        UserManagement.dynamicFailBanCheckMySQL(50);
        UserManagement.dynamicFailBanCheckMySQL(1000);
    }
}
statement is: UserManagement.dynamicFailBanCheckMySQL(25), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckMySQL(25) target is: UserManagement method is: dynamicFailBanCheckMySQL(int)
Matched Method is: dynamicFailBanCheckMySQL(Ljava/lang/String;)V
statement is: UserManagement.dynamicFailBanCheckMySQL(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckMySQL(50) target is: UserManagement method is: dynamicFailBanCheckMySQL(int)
Matched Method is: dynamicFailBanCheckMySQL(Ljava/lang/String;)V
statement is: UserManagement.dynamicFailBanCheckMySQL(1000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckMySQL(1000) target is: UserManagement method is: dynamicFailBanCheckMySQL(int)
Matched Method is: dynamicFailBanCheckMySQL(Ljava/lang/String;)V
TestCase is: int _int = 25;
UserManagement.dynamicFailBanCheckMySQL((String) _int);
int _int = 50;
UserManagement.dynamicFailBanCheckMySQL((String) _int);
int _int = 1000;
UserManagement.dynamicFailBanCheckMySQL((String) _int);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: emailCreation(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.emailCreation(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.emailCreation(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("example@domain.com", "password");
        Socket_data socket_data = new Socket_data(mockSocket);
        UserManagement.emailCreation(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket("example@domain.com", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V
statement is: UserManagement.emailCreation(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.emailCreation(socket_data) target is: UserManagement method is: emailCreation(Socket_data)
Matched Method is: emailCreation(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.emailCreation(socket_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.login.parse.FromClient()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromClient
statement code is: FromClient fromClient = new FromClient()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: emailLimitedTime(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.emailLimitedTime(arg0)
test data is: MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
UserManagement.emailLimitedTime(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("192.168.1.1", 8080);
        FromClient fromClient = new FromClient();
        fromClient.setName("John Doe");
        fromClient.setEmail("johndoe@example.com");
        mockSocket.close();
        Socket_data socket_data = new Socket_data(mockSocket, fromClient);
        UserManagement.emailLimitedTime(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket("192.168.1.1", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromClient fromClient = new FromClient(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fromClient.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromClient.setName("John Doe") target is: fromClient method is: setName(java.lang.String)
statement is: fromClient.setEmail("johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromClient.setEmail("johndoe@example.com") target is: fromClient method is: setEmail(java.lang.String)
statement is: mockSocket.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.close() target is: mockSocket method is: close()
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromClient), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V
statement is: UserManagement.emailLimitedTime(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.emailLimitedTime(socket_data) target is: UserManagement method is: emailLimitedTime(Socket_data)
Matched Method is: emailLimitedTime(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: FromClient fromClient = new FromClient();
Socket_data socket_data = null;
UserManagement.emailLimitedTime(socket_data);

statement is: getUserSQL(Ljava/sql/ResultSet;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userSQL = UserManagement.getUserSQL((ResultSet) null)
test data is: UserManagement.getUserSQL((ResultSet) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    @Override
    public String getString(String columnLabel) throws SQLException {
        return "John Doe";
    }
}
statement is: return "John Doe", class spoon.support.reflect.code.CtReturnImpl
statement is: org.evosuite.testcase.statements.ArrayStatement@a24627d7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: receiveAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.receiveAccountReg2((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[9];
UserManagement.receiveAccountReg2((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[9];
        UserManagement.receiveAccountReg2(((Socket_data) (null)), byteArray);
        // Improved test data:
        byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9 };
        UserManagement.receiveAccountReg2(((Socket_data) (null)), byteArray);
        // Explanation:
        The test;
        has been;
        by using;
        descriptive and;
        representative examples;
    }
}
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: UserManagement.receiveAccountReg2(((Socket_data) (null)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.receiveAccountReg2(((Socket_data) (null)), byteArray) target is: UserManagement method is: receiveAccountReg2(Socket_data,byte[])
Matched Method is: receiveAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: // Improved test data:
byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9 } Elements: [0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9]
lengths: [9] []
statement is: UserManagement.receiveAccountReg2(((Socket_data) (null)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.receiveAccountReg2(((Socket_data) (null)), byteArray) target is: UserManagement method is: receiveAccountReg2(Socket_data,byte[])
Matched Method is: receiveAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: // Explanation:
The test, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: has been, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: by using, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: descriptive and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: representative examples, class spoon.support.reflect.code.CtLocalVariableImpl
TestCase is: byte[] byteArray = new byte[9];
byte[] byteArray = null;
UserManagement.receiveAccountReg2((Socket_data) byteArray, byteArray);
byte[] byteArray = null;
UserManagement.receiveAccountReg2((Socket_data) byteArray, byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@4a019354 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.javathena.login.parse.FromChar()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromChar
statement code is: FromChar fromChar = new FromChar()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null, arg1)
statement is: requestAccountData(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.requestAccountData(arg0, arg1)
test data is: byte[] byteArray = new byte[6];
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
UserManagement.requestAccountData(socket_data, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[6];
        Random random = new Random();
        for (int i = 0; i < byteArray.length; i++) {
            byteArray[i] = ((byte) (random.nextInt(256)));
        }
        FromChar fromChar = new FromChar(1, "user", "password");
        Socket_data socket_data = new Socket_data(new Socket(), fromChar);
        UserManagement.requestAccountData(socket_data, byteArray);
    }
}
statement is: byte[] byteArray = new byte[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[6] Elements: []
lengths: [6] [6]
Their type are: class [B byte[]
statement is: Random random = new Random(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: for (int i = 0; i < byteArray.length; i++) {
    byteArray[i] = ((byte) (random.nextInt(256)));
}, class spoon.support.reflect.code.CtForImpl
statement is: FromChar fromChar = new FromChar(1, "user", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(new Socket(), fromChar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V
statement is: UserManagement.requestAccountData(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.requestAccountData(socket_data, byteArray) target is: UserManagement method is: requestAccountData(Socket_data,byte[])
Matched Method is: requestAccountData(Lorg/javathena/core/data/Socket_data;[B)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: byte[] byteArray = new byte[6];
byte[] byteArray = null;
UserManagement.requestAccountData((Socket_data) byteArray, byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@7ae04f13 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[11]
statement is: requestAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.requestAccountReg2((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[11];
UserManagement.requestAccountReg2((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4 };
        UserManagement.requestAccountReg2(((Socket_data) (null)), byteArray);
    }
}
statement is: byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[11] isAssignment: false Array: new byte[]{ 0x1, 0x2, 0x3, 0x4 } Elements: [0x1, 0x2, 0x3, 0x4]
lengths: [11] []
statement is: UserManagement.requestAccountReg2(((Socket_data) (null)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.requestAccountReg2(((Socket_data) (null)), byteArray) target is: UserManagement method is: requestAccountReg2(Socket_data,byte[])
Matched Method is: requestAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: Socket_data socket_data = null;
byte[] byteArray = null;
UserManagement.requestAccountReg2(socket_data, byteArray);

statement is: org.evosuite.testcase.statements.FieldStatement@eb578169 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.net.Proxy
statement code is: Proxy proxy = Proxy.NO_PROXY
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0)
statement is: org.javathena.login.parse.FromAdmin()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromAdmin
statement code is: FromAdmin fromAdmin = new FromAdmin()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: org.evosuite.testcase.statements.ArrayStatement@e0009d15 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: statusChange(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.statusChange(arg0, arg1)
test data is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Proxy proxy = Proxy.NO_PROXY;
        MockSocket mockSocket = new MockSocket(proxy);
        FromAdmin fromAdmin = new FromAdmin();
        Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
        byte[] byteArray = new byte[6];
        UserManagement.statusChange(socket_data, byteArray);
        // The test data has been improved by using more descriptive and representative values for the primitive types and strings.
        Proxy proxy = Proxy.HTTPS;
        MockSocket mockSocket = new MockSocket(proxy);
        FromAdmin fromAdmin = new FromAdmin("1234567890", "username");
        Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
        byte[] byteArray = new byte[6];
        UserManagement.statusChange(socket_data, byteArray);
        // The test data has been improved by using more descriptive and representative values for the primitive types and strings.
        Proxy proxy = Proxy.HTTPS;
        MockSocket mockSocket = new MockSocket(proxy);
        FromAdmin fromAdmin = new FromAdmin("1234567890", "username");
        Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
        byte[] byteArray = new byte[6];
        UserManagement.statusChange(socket_data, byteArray);
        // The test data has been improved by using more descriptive and representative values for the primitive types and strings.
        Proxy proxy = Proxy.HTTPS;
        MockSocket mockSocket = new MockSocket(proxy);
        FromAdmin fromAdmin = new FromAdmin("1234567890", "username");
        Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
        byte[] byteArray = new byte[6];
        UserManagement.statusChange(socket_data, byteArray);
        // The test data has been improved by using more descriptive and representative values for the primitive types and strings. }}
    }
}
statement is: Proxy proxy = Proxy.NO_PROXY, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Proxy.NO_PROXY is Proxy
CtField is: public static final java.net.Proxy java.net.Proxy.NO_PROXY Proxy NO_PROXY
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromAdmin fromAdmin = new FromAdmin(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[6] Elements: []
lengths: [6] [6]
Their type are: class [B byte[]
statement is: UserManagement.statusChange(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.statusChange(socket_data, byteArray) target is: UserManagement method is: statusChange(Socket_data,byte[])
Matched Method is: statusChange(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // The test data has been improved by using more descriptive and representative values for the primitive types and strings.
Proxy proxy = Proxy.HTTPS, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Proxy.HTTPS is Proxy
CtField is: public static final java.net.Proxy java.net.Proxy.NO_PROXY Proxy NO_PROXY
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromAdmin fromAdmin = new FromAdmin("1234567890", "username"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[6] Elements: []
lengths: [6] [6]
Their type are: class [B byte[]
statement is: UserManagement.statusChange(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.statusChange(socket_data, byteArray) target is: UserManagement method is: statusChange(Socket_data,byte[])
Matched Method is: statusChange(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // The test data has been improved by using more descriptive and representative values for the primitive types and strings.
Proxy proxy = Proxy.HTTPS, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Proxy.HTTPS is Proxy
CtField is: public static final java.net.Proxy java.net.Proxy.NO_PROXY Proxy NO_PROXY
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromAdmin fromAdmin = new FromAdmin("1234567890", "username"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[6] Elements: []
lengths: [6] [6]
Their type are: class [B byte[]
statement is: UserManagement.statusChange(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.statusChange(socket_data, byteArray) target is: UserManagement method is: statusChange(Socket_data,byte[])
Matched Method is: statusChange(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // The test data has been improved by using more descriptive and representative values for the primitive types and strings.
Proxy proxy = Proxy.HTTPS, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Proxy.HTTPS is Proxy
CtField is: public static final java.net.Proxy java.net.Proxy.NO_PROXY Proxy NO_PROXY
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromAdmin fromAdmin = new FromAdmin("1234567890", "username"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[6] Elements: []
lengths: [6] [6]
Their type are: class [B byte[]
statement is: UserManagement.statusChange(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.statusChange(socket_data, byteArray) target is: UserManagement method is: statusChange(Socket_data,byte[])
Matched Method is: statusChange(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // The test data has been improved by using more descriptive and representative values for the primitive types and strings. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.login.parse.FromAdmin()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromAdmin
statement code is: FromAdmin fromAdmin = new FromAdmin()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: toChangeAnEmail(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.toChangeAnEmail(arg0)
test data is: MockSocket mockSocket = new MockSocket();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
UserManagement.toChangeAnEmail(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: unban(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.unban(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
UserManagement.unban(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("192.168.0.1", 80);
        Socket_data socket_data = new Socket_data(mockSocket, "johndoe@example.com");
        mockSocket.close();
        UserManagement.unban(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket("192.168.0.1", 80), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, "johndoe@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.close() target is: mockSocket method is: close()
statement is: UserManagement.unban(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.unban(socket_data) target is: UserManagement method is: unban(Socket_data)
Matched Method is: unban(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.unban(socket_data);

* test suite isTestSuite: 158
Test 0: 
UserManagement.addAccountIdCount(925);
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount((-394));
Test 3: 
UserManagement.debugXML();
Test 4: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.unLogServer(socket_data);
Test 5: 
Socket_data socket_data = new Socket_data((Socket) null);
UserManagement.toBecomeGM(socket_data);
Test 6: 
UserManagement.addUserSQL("SELECT `%s`,`%s`,`%s`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`%s`,`email` FROM `%s` WHERE BINARY `%s`='%s'", (String) null, (String) null, 32);
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("A='");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
UserManagement.getUserTxt((Integer) null);
Test 11: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.addSession(socket_data);
Test 12: 
UserManagement.addAccountIdCount();
Test 13: 
Integer integer = new Integer(101);
// Undeclared exception!
try { 
  UserManagement.getUserSQL(integer);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 14: 
UserManagement.getAccountID((String) null);
Test 15: 
UserManagement.getNBSession();
Test 16: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 17: 
FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
UserManagement.setAuth_dats(auth_dats);
Test 18: 
UserManagement.getNBUser();
Test 19: 
Auth_data auth_data = new Auth_data();
UserManagement.removeUser(auth_data);
Test 20: 
byte[] byteArray = new byte[41];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 54
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 21: 
byte[] byteArray = new byte[8];
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 22: 
UserManagement.levelIsValid(9, "", 150, (-2368));
Test 23: 
UserManagement.levelIsValid(0, (String) null, 0, 0);
Test 24: 
UserManagement.levelIsValid(287, "", 287, 287);
Test 25: 
Integer integer = new Integer(26);
UserManagement.remove_online_user(integer);
Test 26: 
UserManagement.addUserTXT("a@a.com", "a@a.com", "a@a.com", '=');
Test 27: 
UserManagement.isGM(274L);
Test 28: 
UserManagement.getAccountIds();
Integer integer = new Integer((-174));
UserManagement.is_user_online(integer);
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(0);
UserManagement.add_online_user(auth_data);
UserManagement.getNBUser();
UserManagement.addUser(auth_data);
UserManagement.getUserTxt((String) null);
byte[] byteArray = new byte[0];
UserManagement.tabHexToInt(byteArray);
// Undeclared exception!
Socket_data sessionAt = null;
try { 
  sessionAt = UserManagement.getSessionAt(0);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

UserManagement.numberOfUser(sessionAt, byteArray);
UserManagement.toChangeAnEmail(sessionAt);
Test 29: 
UserManagement.dynamicFailBanCheckTXT("297");
Test 30: 
String string = "9";
UserManagement.dynamicFailBanCheckTXT("9");
NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "9");
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
byteArray[1] = (byte)112;
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("N)");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000005\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

UserManagement.getAccountIds();
MockInetAddress.getLocalHost();
IParse iParse = null;
int _int = 87;
MockSocket mockSocket = new MockSocket(string, _int);
Socket_data socket_data = new Socket_data(mockSocket);
socket_data.setFunc_parse(iParse);
SessionType sessionType = SessionType.SESSION_MAX;
socket_data.setType(sessionType);
UserManagement.addSession(socket_data);
Test 31: 
Integer integer = new Integer((-2680));
byte[] byteArray = new byte[6];
byteArray[0] = (byte) (-45);
byteArray[1] = (byte)4;
byteArray[0] = (byte) (-103);
byteArray[3] = (byte)56;
byteArray[4] = (byte)44;
byteArray[5] = (byte) (-110);
UserManagement.charif_sendallwos((-2680), byteArray);
UserManagement.sendUserList((Socket_data) null);
int[] intArray = new int[2];
intArray[0] = (int) (byte) (-103);
intArray[1] = 0;
UserManagement.charif_sendallwos((int) (byte) (-103), intArray);
Test 32: 
UserManagement.online_db_final();
Test 33: 
UserManagement.getUserTxt((String) null);
// Undeclared exception!
try { 
  UserManagement.removeUser((Auth_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 34: 
Auth_data auth_data = new Auth_data();
FastMap<String, String> fastMap = null;
try {
  fastMap = new FastMap<String, String>("AQ?==l5'{|");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Identifier AQ?==l5'{| already in use
   //
   verifyException("javolution.context.PersistentContext$Reference", e);
}

String string = "Unknown Error.";
String string = "@I3tH.\\{Lnu3<";
fastMap.put(string, string);
auth_data.setAccount_reg2(fastMap);
UserManagement.addUser(auth_data);
Inet4Address loopbackAddress = (Inet4Address)MockInetAddress.getLoopbackAddress();
int _int = (-1000);
MockSocket mockSocket = new MockSocket(loopbackAddress, _int, loopbackAddress, _int);
FromAdmin fromAdmin = new FromAdmin();
mockSocket.shutdownInput();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
UserManagement.changeSex(socket_data);
Test 35: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time((-1L));
UserManagement.addUser(addUserTXT);
Test 36: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time('e');
UserManagement.addUser(addUserTXT);
Test 37: 
Auth_data auth_data = new Auth_data();
auth_data.setCharserver(342);
UserManagement.addUser(auth_data);
Test 38: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((-1377));
UserManagement.addUser(auth_data);
Test 39: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(636);
UserManagement.addUser(auth_data);
Test 40: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-1112L));
UserManagement.addUser(auth_data);
Test 41: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(3458L);
UserManagement.addUser(auth_data);
Test 42: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-174));
UserManagement.addUser(auth_data);
Test 43: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1162);
UserManagement.addUser(auth_data);
Test 44: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(256);
UserManagement.addUser(auth_data);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1000));
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(342);
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-100));
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(344);
UserManagement.addUser(auth_data);
Test 49: 
Auth_data addUserTXT = UserManagement.addUserTXT((String) null, "", "", '3');
addUserTXT.setLogincount((-2432));
UserManagement.addUser(addUserTXT);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(1286);
UserManagement.addUser(auth_data);
Test 51: 
Auth_data auth_data = new Auth_data();
auth_data.setState(113);
UserManagement.addUser(auth_data);
Test 52: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setVersion((-542));
UserManagement.addUser(addUserTXT);
Test 53: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(17);
UserManagement.addUser(auth_data);
Test 54: 
Auth_data auth_data = new Auth_data();
auth_data.setResetLogincoun(true);
UserManagement.addUser(auth_data);
Test 55: 
UserManagement.getAccountID("UR5_)xXMJBR?)Nn+-");
Test 56: 
UserManagement.addUserTXT(" @ ", "", "(^u{N/4lJD", '&');
UserManagement.getAccountIdCount();
Test 57: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
Integer valueOf = Integer.valueOf(472);
Auth_data auth_data = new Auth_data();
fastMap.put(valueOf, auth_data);
UserManagement.setAuth_dats(fastMap);
UserManagement.getUserTxt(valueOf);
Test 58: 
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);
Test 59: 
UserManagement.getAccountIds();
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);
Test 60: 
Integer integer = Integer.getInteger((String) null, 0);
UserManagement.is_user_online(integer);
Test 61: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte)116;
UserManagement.tabHexToInt(byteArray);
Test 62: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) (-43);
UserManagement.tabHexToInt(byteArray);
Test 63: 
byte[] byteArray = new byte[5];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 64: 
byte[] byteArray = new byte[23];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
// Undeclared exception!
try { 
  UserManagement.addGM(10, 10);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 66: 
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.administationLogin(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 67: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 68: 
Proxy.Type proxy_Type = Proxy.Type.SOCKS;
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("*VQ;E#Cc{90GSH_f", 995);
Proxy proxy = new Proxy(proxy_Type, mockInetSocketAddress);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 69: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 70: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 71: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 72: 
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 73: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL("maxRows");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 74: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 75: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 76: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 78: 
byte[] byteArray = new byte[6];
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
// Undeclared exception!
try { 
  UserManagement.requestAccountData(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 79: 
byte[] byteArray = new byte[11];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 80: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 81: 
MockSocket mockSocket = new MockSocket();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 82: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 83: 
UserManagement.addAccountIdCount(1000);

Test 84: 
UserManagement.getNBGM();

Test 85: 
UserManagement.setAccountIdCount(1234);

Test 86: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) fromAdmin, fromAdmin);
UserManagement.unLogServer(socket_data);

Test 87: 
UserManagement.toBecomeGM((Socket_data) null);
UserManagement.toBecomeGM((Socket_data) null);

Test 88: 
UserManagement.getUserSQL("SELECT * FROM users WHERE username = 'johndoe' AND password = 'mypassword'");

Test 89: 
UserManagement.numberOfUser((Socket_data) "John Doe", (byte[]) null);

Test 90: 
UserManagement.getUserTxt((Integer) 123456789);

Test 91: 
FromAdmin fromAdmin = new FromAdmin();
UserManagement.addSession((Socket_data) null);

Test 92: 

Test 93: 
Integer integer = new Integer(10);
UserManagement.getUserSQL(integer);

Test 94: 
UserManagement.getAccountID("A12345678");

Test 95: 
UserManagement.getNBSession();

Test 96: 
UserManagement.remove_online_user((Integer) 100.5);

Test 97: 
FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
UserManagement.setAuth_dats(auth_dats);

Test 98: 

Test 99: 
UserManagement.removeUser((Auth_data) null);

Test 100: 
byte[] byteArray = new byte[41];
UserManagement.connectionOfClient((Socket_data) "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ", byteArray, false);

Test 101: 
byte[] byteArray = new byte[8];
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) true, (boolean) (Boolean) null);

Test 102: 
UserManagement.levelIsValid(9, "Professional", 150, 25);

Test 103: 
UserManagement.levelIsValid((int) "Invalid level", (String) 0, (int) (Integer) null, (int) (Integer) null);
int _int = 25;
String string = "Level out of range";
int _int = 0;
int _int = 10;
UserManagement.levelIsValid(_int, string, _int, _int);
int _int = 5;
String string = "Valid level";
int _int = 5;
int _int = 10;
UserManagement.levelIsValid(_int, string, _int, _int);

Test 104: 
UserManagement.levelIsValid((int) "admin", "123456", (int) "admin", (int) "123456");

Test 105: 
Integer integer = new Integer(100);
UserManagement.remove_online_user(integer);

Test 106: 
UserManagement.addUserTXT("john.doe@example.com", "John Doe", "123 Main St.", 'M');

Test 107: 
UserManagement.getAccountIds();
Integer integer = new Integer(1234567890);
UserManagement.is_user_online(integer);
Auth_data auth_data = new Auth_data();
((Auth_data)false).setLogin_id2((int) "test@example.com");
UserManagement.add_online_user(auth_data);
UserManagement.getNBUser();
UserManagement.addUser(auth_data);
String string = "john.doe@example.com";
UserManagement.getUserTxt(string);
byte[] byteArray = null;
UserManagement.tabHexToInt(byteArray);
int _int = 0;
Socket_data sessionAt = UserManagement.getSessionAt(_int);
byte[] byteArray = null;
UserManagement.numberOfUser(sessionAt, byteArray);
UserManagement.toChangeAnEmail(sessionAt);

Test 108: 
UserManagement.dynamicFailBanCheckTXT("1029384756");

Test 109: 
String string = "9";
UserManagement.dynamicFailBanCheckTXT("12345678");
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) "ABCDEFGHIJKLMNOPQRSTUVWXYZ", (String) null);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) fromAdmin, (IParse) string);
byte[] byteArray = new byte[2];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
String string = "127.0.0.1";
UserManagement.addIpToBanListMySQL(string);
UserManagement.getAccountIds();
InetAddress localHost = MockInetAddress.getLocalHost();
IParse iParse = null;
int _int = 87;
MockSocket mockSocket = new MockSocket(string, _int);
Socket_data socket_data = new Socket_data(mockSocket);
((Socket_data) localHost).setFunc_parse(iParse);
SessionType sessionType = null;
((Socket_data) localHost).setType(sessionType);
UserManagement.addSession(socket_data);

Test 110: 
Integer integer = new Integer(0);
byte[] byteArray = new byte[6];
UserManagement.charif_sendallwos(0, byteArray);
UserManagement.sendUserList((Socket_data) null);
int[] intArray = new int[2];
int _int = 103;
UserManagement.charif_sendallwos(_int, (byte[]) intArray);

Test 111: 

Test 112: 
UserManagement.getUserTxt("admin");
UserManagement.removeUser((Auth_data) null);

Test 113: 
Auth_data auth_data = new Auth_data();
String string = "AQ?==l5'{|";
FastMap<String, String> fastMap = new FastMap<String, String>("AQ?==l5'{|");
String string = "@I3tH.\\{Lnu3<";
((FastMap) string).put(string, string);
auth_data.setAccount_reg2(fastMap);
Auth_data addUser = UserManagement.addUser(auth_data);
Inet4Address loopbackAddress = (Inet4Address)MockInetAddress.getLoopbackAddress();
MockSocket mockSocket = new MockSocket(loopbackAddress, (int) loopbackAddress, (InetAddress) addUser, (int) loopbackAddress);
FromAdmin fromAdmin = new FromAdmin();
mockSocket.shutdownInput();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
UserManagement.changeSex(socket_data);

Test 114: 
Auth_data addUserTXT = UserManagement.addUserTXT("username345", "password345", "username345", 'e');
((Auth_data)"username345").setBan_until_time((long) (Long) null);
UserManagement.addUser(addUserTXT);

Test 115: 
Auth_data auth_data = new Auth_data();
auth_data.setCharserver(98765);
UserManagement.addUser(auth_data);

Test 116: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((int) (Integer) null);
UserManagement.addUser(auth_data);

Test 117: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((int) "Corporate");
UserManagement.addUser(auth_data);

Test 118: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(1476592000);
UserManagement.addUser(auth_data);

Test 119: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(1598572348L);
UserManagement.addUser(auth_data);

Test 120: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((int) (Integer) null);
UserManagement.addUser(auth_data);

Test 121: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(100);
UserManagement.addUser(auth_data);

Test 122: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel((int) "Admin");
UserManagement.addUser(auth_data);

Test 123: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((int) "unique-identifier");
UserManagement.addUser(auth_data);

Test 124: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(87923546);
UserManagement.addUser(auth_data);

Test 125: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((int) (Integer) null);
UserManagement.addUser(auth_data);

Test 126: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((int) "johndoe");
UserManagement.addUser(auth_data);

Test 127: 
Auth_data addUserTXT = UserManagement.addUserTXT("Test user", "test@email.com", "1234567890", 'A');
((Auth_data)"Test user").setLogincount(3);
UserManagement.addUser(addUserTXT);

Test 128: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(3);
UserManagement.addUser(auth_data);

Test 129: 
Auth_data auth_data = new Auth_data();
auth_data.setState((int) "Active");
UserManagement.addUser(auth_data);

Test 130: 
Auth_data addUserTXT = UserManagement.addUserTXT("John Doe", "johndoe@email.com", "1234567890", 'm');
((Auth_data)"John Doe").setVersion((int) (Integer) null);
UserManagement.addUser(addUserTXT);

Test 131: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(1234567890);
UserManagement.addUser(auth_data);

Test 132: 
Auth_data auth_data = new Auth_data();

Test 133: 
UserManagement.getAccountID("INVALID_ACCOUNT_ID");

Test 134: 
UserManagement.addUserTXT("john.doe@example.com", "John Doe", "password123!", '@');
UserManagement.getAccountIdCount();

Test 135: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
Integer valueOf = Integer.valueOf(123456789);
Auth_data auth_data = new Auth_data();
fastMap.put(valueOf, auth_data);
UserManagement.setAuth_dats(fastMap);
UserManagement.getUserTxt(valueOf);

Test 136: 
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) auth_data);

Test 137: 
UserManagement.getAccountIds();
UserManagement.getUserTxt((String) null);

Test 138: 
UserManagement.is_user_online((Integer) null);

Test 139: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) 'f';
UserManagement.tabHexToInt(byteArray);

Test 140: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) 127;
byteArray[8] = (byte) 127;
byteArray[8] = (byte) 0;
byteArray[8] = (byte) 5;
byteArray[8] = (byte) 10;
byteArray[8] = (byte) 255;
byteArray[8] = (byte) 255;
byteArray[8] = (byte) 127;
byteArray[8] = (byte) 127;
UserManagement.tabHexToInt(byteArray);

Test 141: 
UserManagement.account_idToOnline((Socket_data) null, (byte[]) null);

Test 142: 
UserManagement.addGM(1234, 5678);

Test 143: 
UserManagement.administationLogin((Socket_data) null);

Test 144: 
UserManagement.banResquest((Socket_data) null);

Test 145: 
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("192.168.0.1", 995);
Proxy proxy = new Proxy((Proxy.Type) mockInetSocketAddress, (SocketAddress) 995);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSex(socket_data);

Test 146: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSexChrif_changesex(socket_data);

Test 147: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);

Test 148: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.connectionOfCharServer(socket_data, byteArray);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.connectionOfCharServer(socket_data, byteArray);

Test 149: 
UserManagement.connectionOfClientEncrypted((Socket_data) null);

Test 150: 
UserManagement.dynamicFailBanCheckMySQL((String) 25);
int _int = 50;
UserManagement.dynamicFailBanCheckMySQL((String) _int);
int _int = 1000;
UserManagement.dynamicFailBanCheckMySQL((String) _int);

Test 151: 
UserManagement.emailCreation((Socket_data) null);

Test 152: 
FromClient fromClient = new FromClient();
UserManagement.emailLimitedTime((Socket_data) null);

Test 153: 
byte[] byteArray = new byte[9];
UserManagement.receiveAccountReg2((Socket_data) byteArray, (byte[]) null);
byte[] byteArray = null;
UserManagement.receiveAccountReg2((Socket_data) byteArray, byteArray);

Test 154: 
byte[] byteArray = new byte[6];
UserManagement.requestAccountData((Socket_data) byteArray, (byte[]) null);

Test 155: 
UserManagement.requestAccountReg2((Socket_data) null, (byte[]) null);

Test 156: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);

Test 157: 
UserManagement.unban((Socket_data) null);


* Generated after the refinement and before minimization 158 tests with total length 516
* test suite isTestSuite: 158
Test 0: 
UserManagement.addAccountIdCount(925);
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount((-394));
Test 3: 
UserManagement.debugXML();
Test 4: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.unLogServer(socket_data);
Test 5: 
Socket_data socket_data = new Socket_data((Socket) null);
UserManagement.toBecomeGM(socket_data);
Test 6: 
UserManagement.addUserSQL("SELECT `%s`,`%s`,`%s`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`%s`,`email` FROM `%s` WHERE BINARY `%s`='%s'", (String) null, (String) null, 32);
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("A='");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
UserManagement.getUserTxt((Integer) null);
Test 11: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.addSession(socket_data);
Test 12: 
UserManagement.addAccountIdCount();
Test 13: 
Integer integer = new Integer(101);
// Undeclared exception!
try { 
  UserManagement.getUserSQL(integer);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 14: 
UserManagement.getAccountID((String) null);
Test 15: 
UserManagement.getNBSession();
Test 16: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 17: 
FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
UserManagement.setAuth_dats(auth_dats);
Test 18: 
UserManagement.getNBUser();
Test 19: 
Auth_data auth_data = new Auth_data();
UserManagement.removeUser(auth_data);
Test 20: 
byte[] byteArray = new byte[41];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 54
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 21: 
byte[] byteArray = new byte[8];
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 22: 
UserManagement.levelIsValid(9, "", 150, (-2368));
Test 23: 
UserManagement.levelIsValid(0, (String) null, 0, 0);
Test 24: 
UserManagement.levelIsValid(287, "", 287, 287);
Test 25: 
Integer integer = new Integer(26);
UserManagement.remove_online_user(integer);
Test 26: 
UserManagement.addUserTXT("a@a.com", "a@a.com", "a@a.com", '=');
Test 27: 
UserManagement.isGM(274L);
Test 28: 
UserManagement.getAccountIds();
Integer integer = new Integer((-174));
UserManagement.is_user_online(integer);
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(0);
UserManagement.add_online_user(auth_data);
UserManagement.getNBUser();
UserManagement.addUser(auth_data);
UserManagement.getUserTxt((String) null);
byte[] byteArray = new byte[0];
UserManagement.tabHexToInt(byteArray);
// Undeclared exception!
Socket_data sessionAt = null;
try { 
  sessionAt = UserManagement.getSessionAt(0);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

UserManagement.numberOfUser(sessionAt, byteArray);
UserManagement.toChangeAnEmail(sessionAt);
Test 29: 
UserManagement.dynamicFailBanCheckTXT("297");
Test 30: 
String string = "9";
UserManagement.dynamicFailBanCheckTXT("9");
NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "9");
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
byteArray[1] = (byte)112;
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("N)");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000005\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

UserManagement.getAccountIds();
MockInetAddress.getLocalHost();
IParse iParse = null;
int _int = 87;
MockSocket mockSocket = new MockSocket(string, _int);
Socket_data socket_data = new Socket_data(mockSocket);
socket_data.setFunc_parse(iParse);
SessionType sessionType = SessionType.SESSION_MAX;
socket_data.setType(sessionType);
UserManagement.addSession(socket_data);
Test 31: 
Integer integer = new Integer((-2680));
byte[] byteArray = new byte[6];
byteArray[0] = (byte) (-45);
byteArray[1] = (byte)4;
byteArray[0] = (byte) (-103);
byteArray[3] = (byte)56;
byteArray[4] = (byte)44;
byteArray[5] = (byte) (-110);
UserManagement.charif_sendallwos((-2680), byteArray);
UserManagement.sendUserList((Socket_data) null);
int[] intArray = new int[2];
intArray[0] = (int) (byte) (-103);
intArray[1] = 0;
UserManagement.charif_sendallwos((int) (byte) (-103), intArray);
Test 32: 
UserManagement.online_db_final();
Test 33: 
UserManagement.getUserTxt((String) null);
// Undeclared exception!
try { 
  UserManagement.removeUser((Auth_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 34: 
Auth_data auth_data = new Auth_data();
FastMap<String, String> fastMap = null;
try {
  fastMap = new FastMap<String, String>("AQ?==l5'{|");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Identifier AQ?==l5'{| already in use
   //
   verifyException("javolution.context.PersistentContext$Reference", e);
}

String string = "Unknown Error.";
String string = "@I3tH.\\{Lnu3<";
fastMap.put(string, string);
auth_data.setAccount_reg2(fastMap);
UserManagement.addUser(auth_data);
Inet4Address loopbackAddress = (Inet4Address)MockInetAddress.getLoopbackAddress();
int _int = (-1000);
MockSocket mockSocket = new MockSocket(loopbackAddress, _int, loopbackAddress, _int);
FromAdmin fromAdmin = new FromAdmin();
mockSocket.shutdownInput();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
UserManagement.changeSex(socket_data);
Test 35: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time((-1L));
UserManagement.addUser(addUserTXT);
Test 36: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time('e');
UserManagement.addUser(addUserTXT);
Test 37: 
Auth_data auth_data = new Auth_data();
auth_data.setCharserver(342);
UserManagement.addUser(auth_data);
Test 38: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((-1377));
UserManagement.addUser(auth_data);
Test 39: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(636);
UserManagement.addUser(auth_data);
Test 40: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-1112L));
UserManagement.addUser(auth_data);
Test 41: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(3458L);
UserManagement.addUser(auth_data);
Test 42: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-174));
UserManagement.addUser(auth_data);
Test 43: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1162);
UserManagement.addUser(auth_data);
Test 44: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(256);
UserManagement.addUser(auth_data);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1000));
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(342);
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-100));
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(344);
UserManagement.addUser(auth_data);
Test 49: 
Auth_data addUserTXT = UserManagement.addUserTXT((String) null, "", "", '3');
addUserTXT.setLogincount((-2432));
UserManagement.addUser(addUserTXT);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(1286);
UserManagement.addUser(auth_data);
Test 51: 
Auth_data auth_data = new Auth_data();
auth_data.setState(113);
UserManagement.addUser(auth_data);
Test 52: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setVersion((-542));
UserManagement.addUser(addUserTXT);
Test 53: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(17);
UserManagement.addUser(auth_data);
Test 54: 
Auth_data auth_data = new Auth_data();
auth_data.setResetLogincoun(true);
UserManagement.addUser(auth_data);
Test 55: 
UserManagement.getAccountID("UR5_)xXMJBR?)Nn+-");
Test 56: 
UserManagement.addUserTXT(" @ ", "", "(^u{N/4lJD", '&');
UserManagement.getAccountIdCount();
Test 57: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
Integer valueOf = Integer.valueOf(472);
Auth_data auth_data = new Auth_data();
fastMap.put(valueOf, auth_data);
UserManagement.setAuth_dats(fastMap);
UserManagement.getUserTxt(valueOf);
Test 58: 
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);
Test 59: 
UserManagement.getAccountIds();
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);
Test 60: 
Integer integer = Integer.getInteger((String) null, 0);
UserManagement.is_user_online(integer);
Test 61: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte)116;
UserManagement.tabHexToInt(byteArray);
Test 62: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) (-43);
UserManagement.tabHexToInt(byteArray);
Test 63: 
byte[] byteArray = new byte[5];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 64: 
byte[] byteArray = new byte[23];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
// Undeclared exception!
try { 
  UserManagement.addGM(10, 10);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 66: 
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.administationLogin(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 67: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 68: 
Proxy.Type proxy_Type = Proxy.Type.SOCKS;
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("*VQ;E#Cc{90GSH_f", 995);
Proxy proxy = new Proxy(proxy_Type, mockInetSocketAddress);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 69: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 70: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 71: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 72: 
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 73: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL("maxRows");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 74: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 75: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 76: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 78: 
byte[] byteArray = new byte[6];
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
// Undeclared exception!
try { 
  UserManagement.requestAccountData(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 79: 
byte[] byteArray = new byte[11];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 80: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 81: 
MockSocket mockSocket = new MockSocket();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 82: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 83: 
UserManagement.addAccountIdCount(1000);

Test 84: 
UserManagement.getNBGM();

Test 85: 
UserManagement.setAccountIdCount(1234);

Test 86: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) fromAdmin, fromAdmin);
UserManagement.unLogServer(socket_data);

Test 87: 
UserManagement.toBecomeGM((Socket_data) null);
UserManagement.toBecomeGM((Socket_data) null);

Test 88: 
UserManagement.getUserSQL("SELECT * FROM users WHERE username = 'johndoe' AND password = 'mypassword'");

Test 89: 
UserManagement.numberOfUser((Socket_data) "John Doe", (byte[]) null);

Test 90: 
UserManagement.getUserTxt((Integer) 123456789);

Test 91: 
FromAdmin fromAdmin = new FromAdmin();
UserManagement.addSession((Socket_data) null);

Test 92: 

Test 93: 
Integer integer = new Integer(10);
UserManagement.getUserSQL(integer);

Test 94: 
UserManagement.getAccountID("A12345678");

Test 95: 
UserManagement.getNBSession();

Test 96: 
UserManagement.remove_online_user((Integer) 100.5);

Test 97: 
FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
UserManagement.setAuth_dats(auth_dats);

Test 98: 

Test 99: 
UserManagement.removeUser((Auth_data) null);

Test 100: 
byte[] byteArray = new byte[41];
UserManagement.connectionOfClient((Socket_data) "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ", byteArray, false);

Test 101: 
byte[] byteArray = new byte[8];
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) true, (boolean) (Boolean) null);

Test 102: 
UserManagement.levelIsValid(9, "Professional", 150, 25);

Test 103: 
UserManagement.levelIsValid((int) "Invalid level", (String) 0, (int) (Integer) null, (int) (Integer) null);
int _int = 25;
String string = "Level out of range";
int _int = 0;
int _int = 10;
UserManagement.levelIsValid(_int, string, _int, _int);
int _int = 5;
String string = "Valid level";
int _int = 5;
int _int = 10;
UserManagement.levelIsValid(_int, string, _int, _int);

Test 104: 
UserManagement.levelIsValid((int) "admin", "123456", (int) "admin", (int) "123456");

Test 105: 
Integer integer = new Integer(100);
UserManagement.remove_online_user(integer);

Test 106: 
UserManagement.addUserTXT("john.doe@example.com", "John Doe", "123 Main St.", 'M');

Test 107: 
UserManagement.getAccountIds();
Integer integer = new Integer(1234567890);
UserManagement.is_user_online(integer);
Auth_data auth_data = new Auth_data();
((Auth_data)false).setLogin_id2((int) "test@example.com");
UserManagement.add_online_user(auth_data);
UserManagement.getNBUser();
UserManagement.addUser(auth_data);
String string = "john.doe@example.com";
UserManagement.getUserTxt(string);
byte[] byteArray = null;
UserManagement.tabHexToInt(byteArray);
int _int = 0;
Socket_data sessionAt = UserManagement.getSessionAt(_int);
byte[] byteArray = null;
UserManagement.numberOfUser(sessionAt, byteArray);
UserManagement.toChangeAnEmail(sessionAt);

Test 108: 
UserManagement.dynamicFailBanCheckTXT("1029384756");

Test 109: 
String string = "9";
UserManagement.dynamicFailBanCheckTXT("12345678");
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) "ABCDEFGHIJKLMNOPQRSTUVWXYZ", (String) null);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) fromAdmin, (IParse) string);
byte[] byteArray = new byte[2];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
String string = "127.0.0.1";
UserManagement.addIpToBanListMySQL(string);
UserManagement.getAccountIds();
InetAddress localHost = MockInetAddress.getLocalHost();
IParse iParse = null;
int _int = 87;
MockSocket mockSocket = new MockSocket(string, _int);
Socket_data socket_data = new Socket_data(mockSocket);
((Socket_data) localHost).setFunc_parse(iParse);
SessionType sessionType = null;
((Socket_data) localHost).setType(sessionType);
UserManagement.addSession(socket_data);

Test 110: 
Integer integer = new Integer(0);
byte[] byteArray = new byte[6];
UserManagement.charif_sendallwos(0, byteArray);
UserManagement.sendUserList((Socket_data) null);
int[] intArray = new int[2];
int _int = 103;
UserManagement.charif_sendallwos(_int, (byte[]) intArray);

Test 111: 

Test 112: 
UserManagement.getUserTxt("admin");
UserManagement.removeUser((Auth_data) null);

Test 113: 
Auth_data auth_data = new Auth_data();
String string = "AQ?==l5'{|";
FastMap<String, String> fastMap = new FastMap<String, String>("AQ?==l5'{|");
String string = "@I3tH.\\{Lnu3<";
((FastMap) string).put(string, string);
auth_data.setAccount_reg2(fastMap);
Auth_data addUser = UserManagement.addUser(auth_data);
Inet4Address loopbackAddress = (Inet4Address)MockInetAddress.getLoopbackAddress();
MockSocket mockSocket = new MockSocket(loopbackAddress, (int) loopbackAddress, (InetAddress) addUser, (int) loopbackAddress);
FromAdmin fromAdmin = new FromAdmin();
mockSocket.shutdownInput();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
UserManagement.changeSex(socket_data);

Test 114: 
Auth_data addUserTXT = UserManagement.addUserTXT("username345", "password345", "username345", 'e');
((Auth_data)"username345").setBan_until_time((long) (Long) null);
UserManagement.addUser(addUserTXT);

Test 115: 
Auth_data auth_data = new Auth_data();
auth_data.setCharserver(98765);
UserManagement.addUser(auth_data);

Test 116: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((int) (Integer) null);
UserManagement.addUser(auth_data);

Test 117: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((int) "Corporate");
UserManagement.addUser(auth_data);

Test 118: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(1476592000);
UserManagement.addUser(auth_data);

Test 119: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(1598572348L);
UserManagement.addUser(auth_data);

Test 120: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((int) (Integer) null);
UserManagement.addUser(auth_data);

Test 121: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(100);
UserManagement.addUser(auth_data);

Test 122: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel((int) "Admin");
UserManagement.addUser(auth_data);

Test 123: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((int) "unique-identifier");
UserManagement.addUser(auth_data);

Test 124: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(87923546);
UserManagement.addUser(auth_data);

Test 125: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((int) (Integer) null);
UserManagement.addUser(auth_data);

Test 126: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((int) "johndoe");
UserManagement.addUser(auth_data);

Test 127: 
Auth_data addUserTXT = UserManagement.addUserTXT("Test user", "test@email.com", "1234567890", 'A');
((Auth_data)"Test user").setLogincount(3);
UserManagement.addUser(addUserTXT);

Test 128: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(3);
UserManagement.addUser(auth_data);

Test 129: 
Auth_data auth_data = new Auth_data();
auth_data.setState((int) "Active");
UserManagement.addUser(auth_data);

Test 130: 
Auth_data addUserTXT = UserManagement.addUserTXT("John Doe", "johndoe@email.com", "1234567890", 'm');
((Auth_data)"John Doe").setVersion((int) (Integer) null);
UserManagement.addUser(addUserTXT);

Test 131: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(1234567890);
UserManagement.addUser(auth_data);

Test 132: 
Auth_data auth_data = new Auth_data();

Test 133: 
UserManagement.getAccountID("INVALID_ACCOUNT_ID");

Test 134: 
UserManagement.addUserTXT("john.doe@example.com", "John Doe", "password123!", '@');
UserManagement.getAccountIdCount();

Test 135: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
Integer valueOf = Integer.valueOf(123456789);
Auth_data auth_data = new Auth_data();
fastMap.put(valueOf, auth_data);
UserManagement.setAuth_dats(fastMap);
UserManagement.getUserTxt(valueOf);

Test 136: 
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) auth_data);

Test 137: 
UserManagement.getAccountIds();
UserManagement.getUserTxt((String) null);

Test 138: 
UserManagement.is_user_online((Integer) null);

Test 139: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) 'f';
UserManagement.tabHexToInt(byteArray);

Test 140: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) 127;
byteArray[8] = (byte) 127;
byteArray[8] = (byte) 0;
byteArray[8] = (byte) 5;
byteArray[8] = (byte) 10;
byteArray[8] = (byte) 255;
byteArray[8] = (byte) 255;
byteArray[8] = (byte) 127;
byteArray[8] = (byte) 127;
UserManagement.tabHexToInt(byteArray);

Test 141: 
UserManagement.account_idToOnline((Socket_data) null, (byte[]) null);

Test 142: 
UserManagement.addGM(1234, 5678);

Test 143: 
UserManagement.administationLogin((Socket_data) null);

Test 144: 
UserManagement.banResquest((Socket_data) null);

Test 145: 
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("192.168.0.1", 995);
Proxy proxy = new Proxy((Proxy.Type) mockInetSocketAddress, (SocketAddress) 995);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSex(socket_data);

Test 146: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSexChrif_changesex(socket_data);

Test 147: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.charServerToAuthentify(socket_data, byteArray);

Test 148: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.connectionOfCharServer(socket_data, byteArray);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
UserManagement.connectionOfCharServer(socket_data, byteArray);

Test 149: 
UserManagement.connectionOfClientEncrypted((Socket_data) null);

Test 150: 
UserManagement.dynamicFailBanCheckMySQL((String) 25);
int _int = 50;
UserManagement.dynamicFailBanCheckMySQL((String) _int);
int _int = 1000;
UserManagement.dynamicFailBanCheckMySQL((String) _int);

Test 151: 
UserManagement.emailCreation((Socket_data) null);

Test 152: 
FromClient fromClient = new FromClient();
UserManagement.emailLimitedTime((Socket_data) null);

Test 153: 
byte[] byteArray = new byte[9];
UserManagement.receiveAccountReg2((Socket_data) byteArray, (byte[]) null);
byte[] byteArray = null;
UserManagement.receiveAccountReg2((Socket_data) byteArray, byteArray);

Test 154: 
byte[] byteArray = new byte[6];
UserManagement.requestAccountData((Socket_data) byteArray, (byte[]) null);

Test 155: 
UserManagement.requestAccountReg2((Socket_data) null, (byte[]) null);

Test 156: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
UserManagement.statusChange(socket_data, byteArray);

Test 157: 
UserManagement.unban((Socket_data) null);


* Minimizing test suite
* test suite isTestSuite: 82
Test 0: 
UserManagement.addAccountIdCount(1000);
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount(1234);
Test 3: 
UserManagement.debugXML();
Test 4: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.unLogServer(socket_data);
Test 5: 
UserManagement.toBecomeGM((Socket_data) null);
Test 6: 
UserManagement.addUserSQL("SELECT `%s`,`%s`,`%s`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`%s`,`email` FROM `%s` WHERE BINARY `%s`='%s'", (String) null, (String) null, 32);
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("SELECT * FROM users WHERE username = 'johndoe' AND password = 'mypassword'");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
UserManagement.getUserTxt((Integer) 123456789);
Test 11: 
UserManagement.addSession((Socket_data) null);
Test 12: 
// Undeclared exception!
try { 
  UserManagement.getSessionAt(0);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

Test 13: 
UserManagement.addAccountIdCount();
Test 14: 
Integer integer = new Integer(10);
// Undeclared exception!
try { 
  UserManagement.getUserSQL(integer);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 15: 
UserManagement.getAccountID("A12345678");
Test 16: 
UserManagement.getNBSession();
Test 17: 
UserManagement.online_db_final();
Test 18: 
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("N)");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 19: 
Auth_data auth_data = new Auth_data();
UserManagement.removeUser(auth_data);
Test 20: 
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 21: 
UserManagement.getAccountIds();
Integer integer = new Integer((-174));
UserManagement.is_user_online(integer);
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(0);
UserManagement.add_online_user(auth_data);
UserManagement.getNBUser();
UserManagement.addUser(auth_data);
UserManagement.getUserTxt((String) null);
byte[] byteArray = new byte[0];
UserManagement.tabHexToInt(byteArray);
// Undeclared exception!
Socket_data sessionAt = null;
try { 
  sessionAt = UserManagement.getSessionAt(0);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

UserManagement.numberOfUser(sessionAt, byteArray);
UserManagement.toChangeAnEmail(sessionAt);
Test 22: 
byte[] byteArray = new byte[41];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 54
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 23: 
byte[] byteArray = new byte[8];
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 24: 
UserManagement.levelIsValid(9, "Professional", 150, 25);
Test 25: 
UserManagement.levelIsValid(0, (String) null, 0, 0);
Test 26: 
UserManagement.levelIsValid(287, "", 287, 287);
Test 27: 
Integer integer = new Integer(100);
UserManagement.remove_online_user(integer);
Test 28: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 29: 
int[] intArray = new int[2];
UserManagement.charif_sendallwos((int) (byte) (-103), intArray);
Test 30: 
byte[] byteArray = new byte[6];
UserManagement.charif_sendallwos(0, byteArray);
Test 31: 
UserManagement.addUserTXT("a@a.com", "a@a.com", "a@a.com", '=');
Test 32: 
UserManagement.isGM(274L);
Test 33: 
UserManagement.getUserTxt("admin");
Test 34: 
UserManagement.dynamicFailBanCheckTXT("297");
Test 35: 
// Undeclared exception!
try { 
  UserManagement.sendUserList((Socket_data) null);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

Test 36: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
Integer valueOf = Integer.valueOf(123456789);
Auth_data auth_data = new Auth_data();
fastMap.put(valueOf, auth_data);
UserManagement.setAuth_dats(fastMap);
UserManagement.getUserTxt(valueOf);
Test 37: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
byte[] byteArray = new byte[2];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
Test 38: 
UserManagement.getAuth_dats();
Test 39: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time((-1L));
UserManagement.addUser(addUserTXT);
Test 40: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time('e');
UserManagement.addUser(addUserTXT);
Test 41: 
Auth_data auth_data = new Auth_data();
auth_data.setCharserver(342);
UserManagement.addUser(auth_data);
Test 42: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((-1377));
UserManagement.addUser(auth_data);
Test 43: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(636);
UserManagement.addUser(auth_data);
Test 44: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-1112L));
UserManagement.addUser(auth_data);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(1476592000);
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-174));
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(100);
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(256);
UserManagement.addUser(auth_data);
Test 49: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1000));
UserManagement.addUser(auth_data);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(342);
UserManagement.addUser(auth_data);
Test 51: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-100));
UserManagement.addUser(auth_data);
Test 52: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(344);
UserManagement.addUser(auth_data);
Test 53: 
Auth_data addUserTXT = UserManagement.addUserTXT((String) null, "", "", '3');
addUserTXT.setLogincount((-2432));
UserManagement.addUser(addUserTXT);
Test 54: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(1286);
UserManagement.addUser(auth_data);
Test 55: 
Auth_data auth_data = new Auth_data();
auth_data.setState(113);
UserManagement.addUser(auth_data);
Test 56: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setVersion((-542));
UserManagement.addUser(addUserTXT);
Test 57: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(1234567890);
UserManagement.addUser(auth_data);
Test 58: 
Auth_data auth_data = new Auth_data();
auth_data.setResetLogincoun(true);
UserManagement.addUser(auth_data);
Test 59: 
UserManagement.addUserTXT(" @ ", "", "(^u{N/4lJD", '&');
UserManagement.getAccountIdCount();
Test 60: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) 'f';
UserManagement.tabHexToInt(byteArray);
Test 61: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) (-43);
UserManagement.tabHexToInt(byteArray);
Test 62: 
byte[] byteArray = new byte[5];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 63: 
byte[] byteArray = new byte[23];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 64: 
// Undeclared exception!
try { 
  UserManagement.addGM(10, 10);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
// Undeclared exception!
try { 
  UserManagement.administationLogin((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 66: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 67: 
Proxy.Type proxy_Type = Proxy.Type.SOCKS;
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("*VQ;E#Cc{90GSH_f", 995);
Proxy proxy = new Proxy(proxy_Type, mockInetSocketAddress);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 68: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 69: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 70: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 71: 
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 72: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL("maxRows");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 73: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 74: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 75: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 76: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
byte[] byteArray = new byte[6];
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
// Undeclared exception!
try { 
  UserManagement.requestAccountData(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 78: 
byte[] byteArray = new byte[11];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 79: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 80: 
MockSocket mockSocket = new MockSocket();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 81: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 17%
* Total number of goals: 329
* Number of covered goals: 55
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 28%
* Total number of goals: 711
* Number of covered goals: 200
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 24%
* Total number of goals: 423
* Number of covered goals: 100
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 59
* Number of covered goals: 59
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 17%
* Total number of goals: 329
* Number of covered goals: 55
* Generated 82 tests with total length 200
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addAccountIdCount(1000);

** It was a parseable test case! 
refined test name is: testAddAccountIdCount
* Compiling Tests
refined test name is: testAddAccountIdCountIncrementByOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int nBGM = UserManagement.getNBGM();
assertEquals(0, nBGM);


** It was a parseable test case! 
refined test name is: testGetNBGMAsInitializationWithNoUsers
* Compiling Tests
refined test name is: testGetNBGMMustBeZeroWhenNoUsersInitialized
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.setAccountIdCount(1234);

** It was a parseable test case! 
refined test name is: testSetAccountIdCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.debugXML();

** It was a parseable test case! 
refined test name is: testDebugXML
* Compiling Tests
refined test name is: testDebugXML
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FromAdmin arg1 = new FromAdmin();
Socket_data arg0 = new Socket_data((Socket) null, arg1);
UserManagement.unLogServer(arg0);
assertNull(arg0.getName());


** It was a parseable test case! 
refined test name is: testUnLogServernullSocket
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.toBecomeGM((Socket_data) null);

** It was a parseable test case! 
refined test name is: testToBecomeGMMustHandleNullArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data addUserSQL = UserManagement.addUserSQL("SELECT `%s`,`%s`,`%s`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`%s`,`email` FROM `%s` WHERE BINARY `%s`='%s'", (String) null, (String) null, 32);
assertNull(addUserSQL);


** It was a parseable test case! 
refined test name is: testAddUserSQLreturnsNonNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int accountIdCount = UserManagement.getAccountIdCount();
assertEquals(0, accountIdCount);


** It was a parseable test case! 
refined test name is: testAddNewUserIncrementsAccountIdCount
* Compiling Tests
refined test name is: testAddNewUserIncrementsAccountIdCountByOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.getUserSQL("SELECT * FROM users WHERE username = 'johndoe' AND password = 'mypassword'");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}


** It was a parseable test case! 
refined test name is: testGetUserSQLInvalidQuery
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testNumberOfUserThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data userTxt = UserManagement.getUserTxt((Integer) 123456789);
assertNull(userTxt);


** It was a parseable test case! 
refined test name is: testGetUserTxtReturnsNullWhenUserDoesNotExist
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addSession((Socket_data) null);

** It was a parseable test case! 
refined test name is: testAddSessionWithNullSocketData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Socket_data sessionAt = UserManagement.getSessionAt(0);
assertNull(sessionAt);


** It was a parseable test case! 
refined test name is: testSessionAtIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addAccountIdCount();

** It was a parseable test case! 
refined test name is: testAddAccountIdCountIncrementsTotalCountByOne
* Compiling Tests
refined test name is: testAddAccountIdCountIncrementsCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer arg0 = new Integer(10);
// Undeclared exception!
try { 
  UserManagement.getUserSQL(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}


** It was a parseable test case! 
refined test name is: testGetUserSQL
* Compiling Tests
refined test name is: testGetUserSQLWithValidId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer accountID = UserManagement.getAccountID("A12345678");
assertNull(accountID);


** It was a parseable test case! 
refined test name is: testGetAccountIDInvalidUserReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int nBSession = UserManagement.getNBSession();
assertEquals(0, nBSession);


** It was a parseable test case! 
refined test name is: testInitialNumberOfActiveSessionsIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int online_db_final = UserManagement.online_db_final();
assertEquals(0, online_db_final);


** It was a parseable test case! 
refined test name is: testOnlineDbFinalValueIsZero
* Compiling Tests
refined test name is: testGetOnlineDBFinalValueIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("N)");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}


** It was a parseable test case! 
refined test name is: testAddInvalidIpToBanListMySQL
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
Auth_data removeUser = UserManagement.removeUser(arg0);
assertNull(removeUser);


** It was a parseable test case! 
refined test name is: testRemoveUserReturnsNull
* Compiling Tests
refined test name is: testRemoveUserSuccessfullyRemovesUser
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
int add_online_user = UserManagement.add_online_user(arg0);
assertEquals(0, add_online_user);


** It was a parseable test case! 
refined test name is: testAddOnlineUserSuccess
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg1 = new byte[41];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, arg1, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 54
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testNullSocketDataArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg1 = new byte[8];
Socket_data arg0 = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(arg0, arg1, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}


** It was a parseable test case! 
refined test name is: testConnectionOfClientEmptySocketDataArray
* Compiling Tests
refined test name is: testConnectionOfClientInvalidSocketData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int levelIsValid = UserManagement.levelIsValid(9, "Professional", 150, 25);
assertEquals(9, levelIsValid);


** It was a parseable test case! 
refined test name is: testLevelIsValidForProfessionalUserWithEnoughXp
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int levelIsValid = UserManagement.levelIsValid(0, (String) null, 0, 0);
assertEquals((-1), levelIsValid);


** It was a parseable test case! 
refined test name is: testLevelIsValidWithNullInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int levelIsValid = UserManagement.levelIsValid(287, "", 287, 287);
assertEquals(99, levelIsValid);


** It was a parseable test case! 
refined test name is: testLevelIsValidReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer arg0 = new Integer(100);
UserManagement.remove_online_user(arg0);

** It was a parseable test case! 
refined test name is: testRemoveOnlineUser
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer arg0 = new Integer(99);
UserManagement.remove_online_user(arg0);

** It was a parseable test case! 
refined test name is: testRemovingOnlineUserSetsUserOffline
* Compiling Tests
refined test name is: testRemoveOnlineUserById
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int[] arg1 = new int[2];
int charif_sendallwos = UserManagement.charif_sendallwos((int) (byte) (-103), arg1);
assertEquals(0, charif_sendallwos);


** It was a parseable test case! 
refined test name is: testCharifSendAllWos
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg1 = new byte[6];
int charif_sendallwos = UserManagement.charif_sendallwos(0, arg1);
assertEquals(0, charif_sendallwos);


** It was a parseable test case! 
refined test name is: testCharifSendallwosSuccess
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data addUserTXT = UserManagement.addUserTXT("a@a.com", "a@a.com", "a@a.com", '=');
assertEquals(0, addUserTXT.getState());
assertEquals(0, addUserTXT.getLogincount());
assertNotNull(addUserTXT);
assertEquals('=', addUserTXT.getSex());
assertEquals(0, (int)addUserTXT.getAccount_id());


** It was a parseable test case! 
refined test name is: testAddUserWithValidEmailAddress
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int gM = UserManagement.isGM(274L);
assertEquals((-1), gM);


** It was a parseable test case! 
refined test name is: testIsGMWithInvalidID
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data userTxt = UserManagement.getUserTxt("admin");
assertNull(userTxt);


** It was a parseable test case! 
refined test name is: testGetNonExistentUserTxtReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.dynamicFailBanCheckTXT("297");

** It was a parseable test case! 
refined test name is: dynamicFailBanCheckTXT
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.sendUserList((Socket_data) null);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}


** It was a parseable test case! 
refined test name is: testSendUserListThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
assertEquals(0, auth_dats.size());


** It was a parseable test case! 
refined test name is: testEmptyAuthDataMap
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
assertNotNull(arg0);

arg0.setBan_until_time((-1L));
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, (int)addUser.getAccount_id());
assertEquals("-", addUser.getEmail());
assertEquals(0, addUser.getState());
assertEquals(0, addUser.getLogincount());
assertEquals('e', addUser.getSex());


** It was a parseable test case! 
refined test name is: testAddUserWithValidEmailAndPassword
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
arg0.setBan_until_time('e');
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getState());
assertEquals('e', addUser.getSex());
assertEquals("-", addUser.getEmail());
assertEquals(0, (int)addUser.getAccount_id());
assertEquals(0, addUser.getLogincount());


** It was a parseable test case! 
refined test name is: testAddUserTXT
* Compiling Tests
refined test name is: testAddUserSuccessfulValidArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setCharserver(342);
Auth_data addUser = UserManagement.addUser(arg0);
assertSame(arg0, addUser);


** It was a parseable test case! 
refined test name is: testAddUserWithValidCharserver
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setClientType((-1377));
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getAccount_reg2_num());


** It was a parseable test case! 
refined test name is: testAddUserWithNegativeClientType
* Compiling Tests
refined test name is: testInvalidClientType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setClientType(636);
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getLast_ip());


** It was a parseable test case! 
refined test name is: testAddUsershouldSetLastIpToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setConnect_until_time((-1112L));
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getLevel());


** It was a parseable test case! 
refined test name is: testAddUserWithNegativeConnectUntilTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setConnect_until_time(1476592000);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(1476592000L, addUser.getConnect_until_time());


** It was a parseable test case! 
refined test name is: testAddUserExpirationTimeIsSetCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setDelflag((-174));
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getPass());


** It was a parseable test case! 
refined test name is: testAddUserWithValidIdShouldReturnNullPass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setDelflag(100);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getClientType());


** It was a parseable test case! 
refined test name is: testAddUserWithDelflag100
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLevel(256);
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getLast_ip());


** It was a parseable test case! 
refined test name is: testAddNewUserWithLevel256
* Compiling Tests
refined test name is: testAddNewUserWithLevel256
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogin_id1((-1000));
Auth_data addUser = UserManagement.addUser(arg0);
assertSame(arg0, addUser);


** It was a parseable test case! 
refined test name is: testAddUserWithNegativeLoginId
* Compiling Tests
refined test name is: testAddUserNegativeLoginId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogin_id1(342);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(342, addUser.getLogin_id1());


** It was a parseable test case! 
refined test name is: testAddUserValidInputShouldReturnCorrectLoginId
* Compiling Tests
refined test name is: testAddUserWithValidAuthData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogin_id2((-100));
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getUserid());


** It was a parseable test case! 
refined test name is: testAddUserNegativeLoginId
* Compiling Tests
refined test name is: testAddUserWithNegativeLoginIdReturnsNullUserId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogin_id2(344);
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getLast_ip());


** It was a parseable test case! 
refined test name is: testGetLastIpWhenNoIpAddressIsSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT((String) null, "", "", '3');
assertEquals(0, arg0.getLogincount());

arg0.setLogincount((-2432));
UserManagement.addUser(arg0);
assertEquals(0, (int)arg0.getAccount_id());


** It was a parseable test case! 
refined test name is: testAddUserWithNullUsernameAndEmptyPassword
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogincount(1286);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0L, addUser.getConnect_until_time());


** It was a parseable test case! 
refined test name is: testAddUserWithLoginCountOf1286
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setState(113);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, (int)addUser.getAccount_id());


** It was a parseable test case! 
refined test name is: testAddUserWithStateaddsUserAndSetsAccountIdToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
arg0.setVersion((-542));
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals("-", addUser.getEmail());
assertEquals(0, (int)addUser.getAccount_id());
assertEquals('e', addUser.getSex());
assertEquals(0, addUser.getLogincount());
assertEquals(0, addUser.getState());


** It was a parseable test case! 
refined test name is: testAddNewUserWithValidData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setVersion(1234567890);
Auth_data addUser = UserManagement.addUser(arg0);
assertSame(addUser, arg0);


** It was a parseable test case! 
refined test name is: testAddUserWithValidAuthData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setResetLogincoun(true);
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getUserid());


** It was a parseable test case! 
refined test name is: testAddUserWithResetLoginCountReturnsNullUserID
* Compiling Tests
refined test name is: testAddUserResetLoginCountTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data addUserTXT = UserManagement.addUserTXT(" @ ", "", "(^u{N/4lJD", '&');
assertEquals(0, (int)addUserTXT.getAccount_id());
assertEquals("-", addUserTXT.getEmail());
assertEquals('&', addUserTXT.getSex());
assertEquals(" @ ", addUserTXT.getUserid());
assertEquals(0, addUserTXT.getState());
assertEquals(0, addUserTXT.getLogincount());
assertEquals("", addUserTXT.getPass());

int accountIdCount = UserManagement.getAccountIdCount();
assertEquals(1, accountIdCount);


** It was a parseable test case! 
refined test name is: testAddUserTXTValidInputReturnsCorrectValues
* Compiling Tests
refined test name is: testAddNewUserShouldIncrementAccountIdCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[9];
arg0[8] = (byte) 'f';
int tabHexToInt = UserManagement.tabHexToInt(arg0);
assertEquals((-102), tabHexToInt);


** It was a parseable test case! 
refined test name is: testTabHexToIntPositiveValueReturnsNegativeValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[9];
arg0[8] = (byte) (-43);
int tabHexToInt = UserManagement.tabHexToInt(arg0);
assertEquals(2147483435, tabHexToInt);


** It was a parseable test case! 
refined test name is: testTabHexToIntConversionFromValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg1 = new byte[5];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, arg1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testAccountIdToOfflineThrowsNullPointerException
* Compiling Tests
refined test name is: testNullPointerExceptionThrownWhenSocketDataIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg1 = new byte[23];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, arg1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testNullSocketDataThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.addGM(10, 10);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testAddGMNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.administationLogin((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testAdministrationLoginWithNullSocketData
* Compiling Tests
refined test name is: testAdministrationLoginWithNullSocketDataObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testNullSocketDataThrowsNullPointerException
* Compiling Tests
refined test name is: testNullSocketDataThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL("maxRows");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}


** It was a parseable test case! 
refined test name is: testDynamicFailBanCheckMySQLNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testGetUserSQLThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg1 = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, arg1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testReceiveAccountReg2NullSocketData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg1 = new byte[11];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, arg1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testRequestAccountRegistrationNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:49.578 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:49.606 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:49.661 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:49.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:49.716 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:49.717 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:49.798 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:49.799 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:49.867 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:49.868 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:49.938 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:49.939 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:49.998 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:49.999 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:50.047 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.048 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.105 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.106 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.166 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.167 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.215 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.216 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.278 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.279 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.335 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.336 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:50.397 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.398 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:50.458 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.459 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.515 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.516 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.570 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.570 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:50.622 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.623 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.674 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.675 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:50.733 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.737 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.800 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.801 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:50.862 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.863 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:50.958 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:50.958 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.031 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.106 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.106 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
[MASTER] 11:20:51.179 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:20:51.180 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
* Compiling Tests
[MASTER] 11:20:51.262 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:51.341 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.342 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.412 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.481 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.554 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.555 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.618 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.677 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.677 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.745 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.745 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.829 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.830 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:51.909 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:20:51.984 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:51.985 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:52.065 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:52.066 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:52.142 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:52.142 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:52.230 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:52.247 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:52.328 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:52.328 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:52.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:52.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:52.748 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:52.749 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:52.894 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:52.895 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:52.950 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:52.951 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:53.006 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.007 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:53.070 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.071 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:53.126 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.129 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:53.197 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.264 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.265 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.323 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.324 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.379 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.380 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
[MASTER] 11:20:53.437 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.438 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.501 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.503 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.560 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.561 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:53.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.618 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:53.680 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.681 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.735 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.736 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.791 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.791 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:53.838 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.838 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.884 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.885 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:53.930 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.931 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:53.975 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:53.975 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:20:54.010 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:54.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
[MASTER] 11:20:54.045 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:54.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:54.079 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:54.079 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:20:54.112 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:20:54.112 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
* Compiling Tests
[MASTER] 11:20:54.144 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:54.145 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
** Write a test suite: 13 called: 4 to improve: false
** Write a test suite: 14 called: 5 to improve: false
** Write a test suite: 17 called: 6 to improve: false
** Write a test suite: 19 called: 7 to improve: false
** Write a test suite: 22 called: 8 to improve: false
** Write a test suite: 27 called: 9 to improve: false
** Write a test suite: 37 called: 10 to improve: false
** Write a test suite: 39 called: 11 to improve: false
** Write a test suite: 45 called: 12 to improve: false
** Write a test suite: 46 called: 13 to improve: false
** Write a test suite: 47 called: 14 to improve: false
** Write a test suite: 48 called: 15 to improve: false
** Write a test suite: 55 called: 16 to improve: false
** Write a test suite: 56 called: 17 to improve: false
** Write a test suite: 59 called: 18 to improve: false
** Write a test suite: 62 called: 19 to improve: false
** Write a test suite: 63 called: 20 to improve: false
[MASTER] 11:20:54.631 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:54.632 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
** Write a test suite: 11 called: 3 to improve: false
** Write a test suite: 12 called: 4 to improve: false
** Write a test suite: 19 called: 5 to improve: false
** Write a test suite: 20 called: 6 to improve: false
** Write a test suite: 21 called: 7 to improve: false
** Write a test suite: 22 called: 8 to improve: false
** Write a test suite: 28 called: 9 to improve: false
** Write a test suite: 30 called: 10 to improve: false
** Write a test suite: 40 called: 11 to improve: false
** Write a test suite: 45 called: 12 to improve: false
** Write a test suite: 48 called: 13 to improve: false
** Write a test suite: 50 called: 14 to improve: false
** Write a test suite: 53 called: 15 to improve: false
** Write a test suite: 54 called: 16 to improve: false
** Write a test suite: 60 called: 17 to improve: false
** Write a test suite: 64 called: 18 to improve: false
** Write a test suite: 66 called: 19 to improve: false
** Write a test suite: 67 called: 20 to improve: false
[MASTER] 11:20:55.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:20:55.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
[MASTER] 11:20:57.538 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 80
Test 0: 
UserManagement.addAccountIdCount(925);
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount((-394));
Test 3: 
UserManagement.debugXML();
Test 4: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.unLogServer(socket_data);
Test 5: 
UserManagement.addUserSQL("SELECT `%s`,`%s`,`%s`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`%s`,`email` FROM `%s` WHERE BINARY `%s`='%s'", (String) null, (String) null, 32);
Test 6: 
UserManagement.getAccountIdCount();
Test 7: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("A='");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 8: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 9: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.addSession(socket_data);
Test 10: 
UserManagement.addAccountIdCount();
Test 11: 
Integer integer = new Integer(101);
// Undeclared exception!
try { 
  UserManagement.getUserSQL(integer);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 12: 
UserManagement.getAccountID((String) null);
Test 13: 
UserManagement.getNBSession();
Test 14: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 15: 
FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
UserManagement.setAuth_dats(auth_dats);
Test 16: 
UserManagement.getNBUser();
Test 17: 
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.account_idToOnline(socket_data, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
byte[] byteArray = new byte[3];
UserManagement.tabHexToInt(byteArray);
Test 19: 
Auth_data auth_data = new Auth_data();
UserManagement.removeUser(auth_data);
Test 20: 
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 21: 
byte[] byteArray = new byte[41];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 54
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 22: 
byte[] byteArray = new byte[8];
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 23: 
UserManagement.levelIsValid(9, "", 150, (-2368));
Test 24: 
UserManagement.levelIsValid(0, (String) null, 0, 0);
Test 25: 
UserManagement.levelIsValid(287, "", 287, 287);
Test 26: 
Integer integer = new Integer(26);
UserManagement.remove_online_user(integer);
Test 27: 
UserManagement.addUserTXT("a@a.com", "a@a.com", "a@a.com", '=');
Test 28: 
UserManagement.isGM(274L);
Test 29: 
UserManagement.getAccountIds();
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);
Test 30: 
String string = "9";
UserManagement.dynamicFailBanCheckTXT("9");
NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "9");
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
byteArray[1] = (byte)112;
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("N)");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000005\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

UserManagement.getAccountIds();
MockInetAddress.getLocalHost();
IParse iParse = null;
int _int = 87;
MockSocket mockSocket = new MockSocket(string, _int);
Socket_data socket_data = new Socket_data(mockSocket);
socket_data.setFunc_parse(iParse);
SessionType sessionType = SessionType.SESSION_MAX;
socket_data.setType(sessionType);
UserManagement.addSession(socket_data);
UserManagement.unban(socket_data);
Test 31: 
Integer integer = new Integer((-2680));
byte[] byteArray = new byte[6];
byteArray[0] = (byte) (-45);
byteArray[1] = (byte)4;
byteArray[0] = (byte) (-103);
byteArray[3] = (byte)56;
byteArray[4] = (byte)44;
byteArray[5] = (byte) (-110);
UserManagement.charif_sendallwos((-2680), byteArray);
// Undeclared exception!
UserManagement.sendUserList((Socket_data) null);
int[] intArray = new int[2];
intArray[0] = (int) (byte) (-103);
intArray[1] = 0;
UserManagement.charif_sendallwos((int) (byte) (-103), intArray);
Test 32: 
UserManagement.online_db_final();
Test 33: 
UserManagement.is_user_online((Integer) null);
Test 34: 
UserManagement.dynamicFailBanCheckTXT("297");
Test 35: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time((-1L));
UserManagement.addUser(addUserTXT);
Test 36: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time('e');
UserManagement.addUser(addUserTXT);
Test 37: 
Auth_data auth_data = new Auth_data();
auth_data.setCharserver(342);
UserManagement.addUser(auth_data);
Test 38: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((-1377));
UserManagement.addUser(auth_data);
Test 39: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(636);
UserManagement.addUser(auth_data);
Test 40: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-1112L));
UserManagement.addUser(auth_data);
Test 41: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(3458L);
UserManagement.addUser(auth_data);
Test 42: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-174));
UserManagement.addUser(auth_data);
Test 43: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1162);
UserManagement.addUser(auth_data);
Test 44: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(256);
UserManagement.addUser(auth_data);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1000));
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(342);
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-100));
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(344);
UserManagement.addUser(auth_data);
Test 49: 
Auth_data addUserTXT = UserManagement.addUserTXT((String) null, "", "", '3');
addUserTXT.setLogincount((-2432));
UserManagement.addUser(addUserTXT);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(1286);
UserManagement.addUser(auth_data);
Test 51: 
Auth_data auth_data = new Auth_data();
auth_data.setState(113);
UserManagement.addUser(auth_data);
Test 52: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setVersion((-542));
UserManagement.addUser(addUserTXT);
Test 53: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(17);
UserManagement.addUser(auth_data);
Test 54: 
Auth_data auth_data = new Auth_data();
auth_data.setResetLogincoun(true);
UserManagement.addUser(auth_data);
Test 55: 
UserManagement.getAccountID("UR5_)xXMJBR?)Nn+-");
Test 56: 
UserManagement.getUserTxt("HtI&e_E^Q");
Socket_data socket_data = new Socket_data((Socket) null);
UserManagement.toBecomeGM(socket_data);
byte[] byteArray = new byte[9];
byteArray[1] = (byte)10;
FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(auth_dats);
UserManagement.setAuth_dats(fastMap);
Socket_data socket_data = new Socket_data((Socket) null);
Test 57: 
Socket_data sessionAt = UserManagement.getSessionAt(0);
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted(sessionAt);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 58: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>();
FastTable<Integer> fastTable = new FastTable<Integer>(0);
Integer valueOf = Integer.valueOf(472);
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt(valueOf);
Test 59: 
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);
Test 60: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte)116;
UserManagement.tabHexToInt(byteArray);
Test 61: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) (-43);
UserManagement.tabHexToInt(byteArray);
Test 62: 
byte[] byteArray = new byte[5];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 63: 
// Undeclared exception!
try { 
  UserManagement.addGM(10, 10);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 64: 
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.administationLogin(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 65: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 66: 
Proxy.Type proxy_Type = Proxy.Type.SOCKS;
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("*VQ;E#Cc{90GSH_f", 995);
Proxy proxy = new Proxy(proxy_Type, mockInetSocketAddress);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 67: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 68: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 69: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 70: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL("maxRows");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 71: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 72: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 73: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 74: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 75: 
byte[] byteArray = new byte[6];
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
// Undeclared exception!
try { 
  UserManagement.requestAccountData(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 76: 
byte[] byteArray = new byte[11];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 78: 
MockSocket mockSocket = new MockSocket();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 79: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


* Minimizing test suite
* test suite isTestSuite: 82
Test 0: 
UserManagement.addAccountIdCount(925);
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount((-394));
Test 3: 
// Undeclared exception!
try { 
  UserManagement.debugXML();
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Could not call javolution.util.FastMap.writeObject() : Loop has been executed more times than the allowed 10000
   // ---- Debugging information ----
   // message             : Could not call javolution.util.FastMap.writeObject()
   // cause-exception     : org.evosuite.runtime.TooManyResourcesException
   // cause-message       : Loop has been executed more times than the allowed 10000
   // -------------------------------
   //
   verifyException("com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker", e);
}

Test 4: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.unLogServer(socket_data);
Test 5: 
Socket_data socket_data = new Socket_data((Socket) null);
UserManagement.toBecomeGM(socket_data);
Test 6: 
UserManagement.addUserSQL("SELECT `%s`,`%s`,`%s`,`lastlogin`,`logincount`,`sex`,`connect_until`,`last_ip`,`ban_until`,`state`,`%s`,`email` FROM `%s` WHERE BINARY `%s`='%s'", (String) null, (String) null, 32);
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("A='");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
Integer valueOf = Integer.valueOf(472);
UserManagement.getUserTxt(valueOf);
Test 11: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
UserManagement.addSession(socket_data);
Test 12: 
Socket_data sessionAt = UserManagement.getSessionAt(0);
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted(sessionAt);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 13: 
UserManagement.addAccountIdCount();
Test 14: 
UserManagement.is_user_online((Integer) null);
Test 15: 
Integer integer = new Integer(101);
// Undeclared exception!
try { 
  UserManagement.getUserSQL(integer);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 16: 
UserManagement.getAccountID("UR5_)xXMJBR?)Nn+-");
Test 17: 
UserManagement.getNBSession();
Test 18: 
UserManagement.online_db_final();
Test 19: 
FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
UserManagement.setAuth_dats(auth_dats);
Test 20: 
UserManagement.getNBUser();
Test 21: 
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.account_idToOnline(socket_data, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("N)");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 23: 
UserManagement.addUserTXT("a@a.com", "a@a.com", "a@a.com", '=');
Test 24: 
byte[] byteArray = new byte[3];
UserManagement.tabHexToInt(byteArray);
Test 25: 
Auth_data auth_data = new Auth_data();
UserManagement.removeUser(auth_data);
Test 26: 
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 27: 
byte[] byteArray = new byte[41];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 54
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 28: 
byte[] byteArray = new byte[8];
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 29: 
UserManagement.levelIsValid(287, "", 287, 287);
Test 30: 
UserManagement.levelIsValid(0, (String) null, 0, 0);
Test 31: 
UserManagement.levelIsValid(9, "", 150, (-2368));
Test 32: 
Integer integer = new Integer(26);
UserManagement.remove_online_user(integer);
Test 33: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 34: 
byte[] byteArray = new byte[6];
UserManagement.charif_sendallwos((-2680), byteArray);
Test 35: 
UserManagement.isGM(274L);
Test 36: 
UserManagement.getUserTxt("HtI&e_E^Q");
Test 37: 
UserManagement.getAccountIds();
Auth_data auth_data = new Auth_data();
UserManagement.getUserTxt((String) null);
Test 38: 
UserManagement.dynamicFailBanCheckTXT("9");
Test 39: 
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data((Socket) null, fromAdmin);
byte[] byteArray = new byte[2];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
Test 40: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time((-1L));
UserManagement.addUser(addUserTXT);
Test 41: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setBan_until_time('e');
UserManagement.addUser(addUserTXT);
Test 42: 
Auth_data auth_data = new Auth_data();
auth_data.setCharserver(342);
UserManagement.addUser(auth_data);
Test 43: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((-1377));
UserManagement.addUser(auth_data);
Test 44: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(636);
UserManagement.addUser(auth_data);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-1112L));
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(3458L);
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-174));
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1162);
UserManagement.addUser(auth_data);
Test 49: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(256);
UserManagement.addUser(auth_data);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1000));
UserManagement.addUser(auth_data);
Test 51: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(342);
UserManagement.addUser(auth_data);
Test 52: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-100));
UserManagement.addUser(auth_data);
Test 53: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2(344);
UserManagement.addUser(auth_data);
Test 54: 
Auth_data addUserTXT = UserManagement.addUserTXT((String) null, "", "", '3');
addUserTXT.setLogincount((-2432));
UserManagement.addUser(addUserTXT);
Test 55: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(1286);
UserManagement.addUser(auth_data);
Test 56: 
Auth_data auth_data = new Auth_data();
auth_data.setState(113);
UserManagement.addUser(auth_data);
Test 57: 
Auth_data addUserTXT = UserManagement.addUserTXT("s2O+dY", "s2O+dY", "s2O+dY", 'e');
addUserTXT.setVersion((-542));
UserManagement.addUser(addUserTXT);
Test 58: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(17);
UserManagement.addUser(auth_data);
Test 59: 
Auth_data auth_data = new Auth_data();
auth_data.setResetLogincoun(true);
UserManagement.addUser(auth_data);
Test 60: 
UserManagement.getAccountID((String) null);
Test 61: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte)116;
UserManagement.tabHexToInt(byteArray);
Test 62: 
byte[] byteArray = new byte[9];
byteArray[8] = (byte) (-43);
UserManagement.tabHexToInt(byteArray);
Test 63: 
byte[] byteArray = new byte[5];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 64: 
// Undeclared exception!
try { 
  UserManagement.addGM(10, 10);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
Socket_data socket_data = new Socket_data((Socket) null);
// Undeclared exception!
try { 
  UserManagement.administationLogin(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 66: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 67: 
Proxy.Type proxy_Type = Proxy.Type.SOCKS;
MockInetSocketAddress mockInetSocketAddress = new MockInetSocketAddress("*VQ;E#Cc{90GSH_f", 995);
Proxy proxy = new Proxy(proxy_Type, mockInetSocketAddress);
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 68: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 69: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 70: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 71: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL("maxRows");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 72: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 73: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 74: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 75: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 76: 
byte[] byteArray = new byte[6];
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
// Undeclared exception!
try { 
  UserManagement.requestAccountData(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
byte[] byteArray = new byte[11];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 78: 
// Undeclared exception!
UserManagement.sendUserList((Socket_data) null);
Test 79: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 80: 
MockSocket mockSocket = new MockSocket();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 81: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


[MASTER] 11:21:14.985 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 16%
* Total number of goals: 329
* Number of covered goals: 52
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 711
* Number of covered goals: 192
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 423
* Number of covered goals: 91
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 59
* Number of covered goals: 58
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 16%
* Total number of goals: 329
* Number of covered goals: 52
* Generated 82 tests with total length 190
* Resulting test suite's coverage: 32% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 11:21:15.618 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 11:21:18.813 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.526 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.579 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.580 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.628 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.629 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.695 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.696 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.736 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.737 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.771 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.805 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.840 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.841 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.883 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.883 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.920 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:22.952 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:22.953 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.001 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.003 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.050 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.051 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.101 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.102 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.151 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.152 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.204 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.205 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.243 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.244 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.283 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.284 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.320 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.321 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.356 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.390 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.434 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.481 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.483 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
[MASTER] 11:21:23.538 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.539 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.592 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.594 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.642 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.694 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.695 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.743 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.744 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.781 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.782 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.823 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.824 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.867 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.868 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.921 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.921 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:23.958 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:23.959 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.017 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.018 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.079 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.080 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.159 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.160 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.282 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.284 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.343 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.343 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.397 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.398 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.455 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.456 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.506 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.507 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.588 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.589 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.659 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.660 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.817 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.818 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.866 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.867 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.906 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.907 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:24.951 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:24.952 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.011 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.074 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.075 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.140 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.205 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.206 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.257 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.257 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.319 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.463 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.529 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.531 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
[MASTER] 11:21:25.600 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.601 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.666 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.667 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.731 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.732 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.776 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.777 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.829 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.829 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.893 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.894 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:25.963 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:25.964 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:26.052 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:26.054 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:26.117 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:26.118 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:26.204 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:26.204 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:26.256 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:26.257 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:21:26.305 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:26.306 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
[MASTER] 11:21:28.728 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:28.729 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
[MASTER] 11:21:31.760 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar1732253275019719399.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:21:31.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1732253275019719399.jar
* Writing tests to file
[MASTER] 11:21:31.763 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'UserManagement_ESTest' to evosuite-tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
** Write a test suite: 11 called: 3 to improve: false
** Write a test suite: 12 called: 4 to improve: false
** Write a test suite: 19 called: 5 to improve: false
** Write a test suite: 20 called: 6 to improve: false
** Write a test suite: 21 called: 7 to improve: false
** Write a test suite: 22 called: 8 to improve: false
** Write a test suite: 28 called: 9 to improve: false
** Write a test suite: 30 called: 10 to improve: false
** Write a test suite: 40 called: 11 to improve: false
** Write a test suite: 45 called: 12 to improve: false
** Write a test suite: 48 called: 13 to improve: false
** Write a test suite: 50 called: 14 to improve: false
** Write a test suite: 53 called: 15 to improve: false
** Write a test suite: 54 called: 16 to improve: false
** Write a test suite: 60 called: 17 to improve: false
** Write a test suite: 64 called: 18 to improve: false
** Write a test suite: 66 called: 19 to improve: false
** Write a test suite: 67 called: 20 to improve: false
* Writing JUnit test case 'UserManagement_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
* Done!

* Computation finished
