* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.javathena.login.UserManagement
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/81_javathena/evosuite-files/evosuite.properties
* Connecting to master process on port 10404
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:09:47.912 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:09:47.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:09:47.924 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:09:48.772 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 01:09:48.891 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:09:48.900 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:09:48.909 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:09:50.322 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:09:50.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:09:50.330 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:09:50.548 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:09:50.550 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:09:50.551 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:09:50.552 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:09:50.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:09:50.555 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:09:50.587 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 01:09:50.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.javathena.login.UserManagement
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1851
* Using seed 1710378581777
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 845 / 1851
[MASTER] 01:09:55.446 [logback-1] WARN  TestCluster - Failed to check cache for javolution.util.FastComparator<T> : Type points to itself
[Progress:>                             2%] [Cov:=====>                             16%][Progress:>                             3%] [Cov:======>                            19%][Progress:>                             3%] [Cov:======>                            19%][Progress:=>                            4%] [Cov:=======>                           20%][Progress:=>                            4%] [Cov:=======>                           21%][Progress:=>                            5%] [Cov:========>                          23%][Progress:=>                            5%] [Cov:========>                          24%][Progress:=>                            5%] [Cov:========>                          24%][Progress:=>                            5%] [Cov:========>                          25%][Progress:=>                            6%] [Cov:=========>                         26%][Progress:=>                            6%] [Cov:=========>                         26%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:==>                           7%] [Cov:=========>                         27%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:==>                           9%] [Cov:=========>                         28%][Progress:===>                          10%] [Cov:=========>                         28%][Progress:===>                          10%] [Cov:=========>                         28%][Progress:===>                          10%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:====>                         14%] [Cov:=========>                         28%][Progress:====>                         14%] [Cov:=========>                         28%][Progress:====>                         14%] [Cov:=========>                         28%][Progress:====>                         14%] [Cov:=========>                         28%][Progress:====>                         14%] [Cov:=========>                         28%][Progress:====>                         14%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        17%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:==========>                        29%][Progress:=====>                        18%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:=====>                        19%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:==========>                        29%][MASTER] 01:10:33.326 [logback-1] WARN  TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       22%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:======>                       23%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      24%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:========>                     27%] [Cov:==========>                        29%][Progress:========>                     27%] [Cov:==========>                        29%][Progress:========>                     27%] [Cov:==========>                        29%][Progress:========>                     27%] [Cov:==========>                        29%][Progress:========>                     27%] [Cov:==========>                        29%][Progress:========>                     27%] [Cov:==========>                        29%][Progress:========>                     27%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:========>                     29%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    31%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    32%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][MASTER] 01:10:58.371 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Class<T> : Type points to itself
[Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:==========>                   34%] [Cov:==========>                        29%][Progress:==========>                   34%] [Cov:==========>                        29%][Progress:==========>                   34%] [Cov:==========>                        29%][Progress:==========>                   34%] [Cov:==========>                        29%][Progress:==========>                   35%] [Cov:==========>                        29%][Progress:==========>                   35%] [Cov:==========>                        29%][Progress:==========>                   35%] [Cov:==========>                        29%][Progress:===========>                  37%] [Cov:==========>                        29%][Progress:===========>                  37%] [Cov:==========>                        29%][Progress:===========>                  37%] [Cov:==========>                        29%][Progress:===========>                  37%] [Cov:==========>                        29%][Progress:===========>                  37%] [Cov:==========>                        29%][Progress:===========>                  37%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:===========>                  38%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:===========>                  39%] [Cov:==========>                        30%][Progress:============>                 40%] [Cov:==========>                        30%][Progress:============>                 40%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 41%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 42%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:============>                 43%] [Cov:==========>                        30%][Progress:=============>                44%] [Cov:==========>                        30%][Progress:=============>                44%] [Cov:==========>                        30%][Progress:=============>                44%] [Cov:==========>                        30%][Progress:=============>                44%] [Cov:==========>                        30%][Progress:=============>                44%] [Cov:==========>                        30%][Progress:=============>                44%] [Cov:==========>                        30%][Progress:=============>                44%] [Cov:==========>                        30%][Progress:=============>                44%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:=============>                46%] [Cov:==========>                        30%][Progress:==============>               47%] [Cov:==========>                        30%][Progress:==============>               47%] [Cov:==========>                        30%][Progress:==============>               47%] [Cov:==========>                        30%][Progress:==============>               47%] [Cov:==========>                        30%][Progress:==============>               47%] [Cov:==========>                        30%][Progress:==============>               47%] [Cov:==========>                        30%][Progress:==============>               47%] [Cov:==========>                        30%][Progress:==============>               47%] [Cov:==========>                        30%][Progress:==============>               49%] [Cov:==========>                        30%][Progress:==============>               49%] [Cov:==========>                        30%][Progress:==============>               49%] [Cov:==========>                        30%][Progress:==============>               49%] [Cov:==========>                        30%][Progress:==============>               49%] [Cov:==========>                        30%][Progress:==============>               49%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              51%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              52%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             54%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             55%] [Cov:==========>                        30%][Progress:================>             56%] [Cov:==========>                        30%][Progress:================>             56%] [Cov:==========>                        30%][Progress:=================>            57%] [Cov:==========>                        30%][Progress:=================>            57%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            58%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:=================>            59%] [Cov:==========>                        30%][Progress:==================>           61%] [Cov:==========>                        30%][Progress:==================>           61%] [Cov:==========>                        30%][Progress:==================>           61%] [Cov:==========>                        30%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           61%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           62%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:==================>           63%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          64%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          65%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:===================>          66%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         67%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         68%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:====================>         69%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        70%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        71%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        72%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:=====================>        73%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       74%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:======================>       75%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      77%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      78%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:=======================>      79%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     80%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     81%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     82%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:========================>     83%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    84%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:=========================>    86%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   87%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   88%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:==========================>   89%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  90%] [Cov:==========>                        31%][Progress:===========================>  91%] [Cov:==========>                        31%][Progress:===========================>  91%] [Cov:==========>                        31%][Progress:===========================>  91%] [Cov:==========>                        31%][Progress:===========================>  91%] [Cov:==========>                        31%][Progress:===========================>  91%] [Cov:==========>                        31%][Progress:===========================>  91%] [Cov:==========>                        31%][Progress:===========================>  91%] [Cov:==========>                        31%][Progress:===========================>  92%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:===========================>  93%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 94%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 95%] [Cov:==========>                        31%][Progress:============================> 96%] [Cov:==========>                        31%][Progress:============================> 96%] [Cov:==========>                        31%][Progress:=============================>97%] [Cov:==========>                        31%][Progress:=============================>97%] [Cov:==========>                        31%][Progress:=============================>97%] [Cov:==========>                        31%][Progress:=============================>97%] [Cov:==========>                        31%][Progress:=============================>97%] [Cov:==========>                        31%][Progress:=============================>97%] [Cov:==========>                        31%][Progress:=============================>97%] [Cov:==========>                        31%][Progress:=============================>98%] [Cov:==========>                        31%][Progress:=============================>98%] [Cov:==========>                        31%][Progress:=============================>99%] [Cov:==========>                        31%][Progress:=============================>99%] [Cov:==========>                        31%][Progress:=============================>99%] [Cov:==========>                        31%][Progress:=============================>99%] [Cov:==========>                        31%][Progress:=============================>99%] [Cov:==========>                        31%][Progress:=============================>99%] [Cov:==========>                        31%][Progress:==============================100%] [Cov:==========>                        31%]
* Search finished after 203s and 853 generations, 202771 statements, best individual has fitness: 1389.0
* Generated before the refinement 83 tests with total length 205
statement is: addAccountIdCount(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addAccountIdCount((-591))
test data is: UserManagement.addAccountIdCount((-591));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addAccountIdCount(Integer.MIN_VALUE);// Minimum value of integer type }}

    }
}
statement is: UserManagement.addAccountIdCount(Integer.MIN_VALUE)// Minimum value of integer type }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addAccountIdCount(Integer.MIN_VALUE)// Minimum value of integer type }}
 target is: UserManagement method is: addAccountIdCount(int)
Matched Method is: addAccountIdCount(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int _int = null;
UserManagement.addAccountIdCount(_int);

statement is: getNBGM()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int nBGM = UserManagement.getNBGM()
test data is: UserManagement.getNBGM();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before
        int id = 1;
        String name = "John Doe";
        double balance = 100.0;
        // After
        int id = RandomUtils.nextInt(100000000, 999999999);// Generate a random ID between 100 million and 999 million

        String name = String.format("User %d", RandomUtils.nextInt(100000000, 999999999));// Generate a random first and last name

        double balance = RandomUtils.nextDouble(100, 1000);// Generate a random balance between $100 and $1000 }}

    }
}
statement is: // Before
int id = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double balance = 100.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // After
int id = RandomUtils.nextInt(100000000, 999999999)// Generate a random ID between 100 million and 999 million
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: RandomUtils.nextInt(100000000, 999999999) target is: RandomUtils method is: nextInt(int,int)
statement is: String name = String.format("User %d", RandomUtils.nextInt(100000000, 999999999))// Generate a random first and last name
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: String.format("User %d", RandomUtils.nextInt(100000000, 999999999)) target is: String method is: format(java.lang.String,java.lang.Object[])
statement is: double balance = RandomUtils.nextDouble(100, 1000)// Generate a random balance between $100 and $1000 }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: RandomUtils.nextDouble(100, 1000) target is: RandomUtils method is: nextDouble(int,int)
* this is vulnerable: int _int = 1
* this is vulnerable: String string = "John Doe"
* this is vulnerable: double _double = 100.0
TestCase is: int _int = 1;
String string = "John Doe";
double _double = 100.0;

statement is: setAccountIdCount(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.setAccountIdCount((-1))
test data is: UserManagement.setAccountIdCount((-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.setAccountIdCount(5);
    }
}
statement is: UserManagement.setAccountIdCount(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.setAccountIdCount(5) target is: UserManagement method is: setAccountIdCount(int)
Matched Method is: setAccountIdCount(I)V
TestCase is: int _int = 5;
UserManagement.setAccountIdCount(_int);

statement is: debugXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.debugXML()
test data is: UserManagement.debugXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.debugXML();
        // Improved test data
        int userId = 5678;
        String username = "Jane Doe";
        String email = "janedoe@example.com";
        boolean isAdmin = false;
        UserManagement.addUser(userId, username, email, isAdmin);
    }
}
statement is: UserManagement.debugXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.debugXML() target is: UserManagement method is: debugXML()
Matched Method is: debugXML()V
statement is: // Improved test data
int userId = 5678, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "Jane Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String email = "janedoe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isAdmin = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.addUser(userId, username, email, isAdmin), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(userId, username, email, isAdmin) target is: UserManagement method is: addUser(int,java.lang.String,java.lang.String,boolean)
* this is vulnerable: int _int = 5678
* this is vulnerable: String string = "Jane Doe"
* this is vulnerable: String string = "janedoe@example.com"
* this is vulnerable: boolean _boolean = false
TestCase is: UserManagement.debugXML();
int _int = 5678;
String string = "Jane Doe";
String string = "janedoe@example.com";
boolean _boolean = false;

statement is: org.javathena.login.parse.FromChar()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromChar
statement code is: FromChar fromChar = new FromChar()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null, arg1)
statement is: unLogServer(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.unLogServer(arg0)
test data is: FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
UserManagement.unLogServer(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FromChar fromChar = new FromChar();
        Socket_data socket_data = new Socket_data(new Socket("127.0.0.1", 8080), fromChar);
        UserManagement.unLogServer(socket_data);
    }
}
statement is: FromChar fromChar = new FromChar(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(new Socket("127.0.0.1", 8080), fromChar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.unLogServer(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.unLogServer(socket_data) target is: UserManagement method is: unLogServer(Socket_data)
Matched Method is: unLogServer(Lorg/javathena/core/data/Socket_data;)V
TestCase is: FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) fromChar, fromChar);
UserManagement.unLogServer(socket_data);

statement is: toBecomeGM(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.toBecomeGM((Socket_data) null)
test data is: UserManagement.toBecomeGM((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.toBecomeGM(new Socket_data("username", 25));
        UserManagement.toBecomeGM(new Socket_data("admin", 42));
        UserManagement.toBecomeGM(new Socket_data("superuser", 100));
    }
}
statement is: UserManagement.toBecomeGM(new Socket_data("username", 25)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.toBecomeGM(new Socket_data("username", 25)) target is: UserManagement method is: toBecomeGM(Socket_data)
Matched Method is: toBecomeGM(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.toBecomeGM(new Socket_data("admin", 42)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.toBecomeGM(new Socket_data("admin", 42)) target is: UserManagement method is: toBecomeGM(Socket_data)
Matched Method is: toBecomeGM(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.toBecomeGM(new Socket_data("superuser", 100)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.toBecomeGM(new Socket_data("superuser", 100)) target is: UserManagement method is: toBecomeGM(Socket_data)
Matched Method is: toBecomeGM(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.toBecomeGM(socket_data);
Socket_data socket_data = null;
UserManagement.toBecomeGM(socket_data);
Socket_data socket_data = null;
UserManagement.toBecomeGM(socket_data);

statement is: addUserSQL(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserSQL = UserManagement.addUserSQL(":nh~:U[l'(3i", ":nh~:U[l'(3i", ":nh~:U[l'(3i", (-144))
test data is: UserManagement.addUserSQL(":nh~:U[l'(3i", ":nh~:U[l'(3i", ":nh~:U[l'(3i", (-144));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserSQL("John Doe", "johndoe@example.com", "password123", 10);
    }
}
statement is: UserManagement.addUserSQL("John Doe", "johndoe@example.com", "password123", 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserSQL("John Doe", "johndoe@example.com", "password123", 10) target is: UserManagement method is: addUserSQL(java.lang.String,java.lang.String,java.lang.String,int)
Matched Method is: addUserSQL(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "John Doe";
String string = "johndoe@example.com";
String string = "password123";
int _int = 10;
UserManagement.addUserSQL(string, string, string, _int);

statement is: getAccountIdCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int accountIdCount = UserManagement.getAccountIdCount()
test data is: UserManagement.getAccountIdCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int accountIdCount = 10;
    }
}
statement is: int accountIdCount = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
TestCase is: int _int = 10;

statement is: getUserSQL(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userSQL = UserManagement.getUserSQL("n#fAnZ|dlXXGu$O")
test data is: UserManagement.getUserSQL("n#fAnZ|dlXXGu$O");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getUserSQL("user1");
    }
}
statement is: UserManagement.getUserSQL("user1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserSQL("user1") target is: UserManagement method is: getUserSQL(java.lang.String)
Matched Method is: getUserSQL(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "user1";
UserManagement.getUserSQL(string);

statement is: numberOfUser(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.numberOfUser((Socket_data) null, (byte[]) null)
test data is: UserManagement.numberOfUser((Socket_data) null, (byte[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.numberOfUsers(new Socket_Data("localhost", 8080), new byte[]{ 0x12, 0x34, 0x56 });
    }
}
statement is: UserManagement.numberOfUsers(new Socket_Data("localhost", 8080), new byte[]{ 0x12, 0x34, 0x56 }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.numberOfUsers(new Socket_Data("localhost", 8080), new byte[]{ 0x12, 0x34, 0x56 }) target is: UserManagement method is: numberOfUsers(Socket_Data,byte[])
statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: getAccount_id()Ljava/lang/Integer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer account_id = auth_data.getAccount_id()
statement is: getUserTxt(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userTxt = UserManagement.getUserTxt(arg0)
statement is: getAccount_reg2()Ljavolution/util/FastMap; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastMap<java.lang.String, java.lang.String>
statement code is: FastMap<String, String> account_reg2 = auth_data.getAccount_reg2()
statement is: setShared(Z)Ljavolution/util/FastMap; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastMap<java.lang.String, java.lang.String>
statement code is: FastMap<String, String> setShared = fastMap.setShared(false)
statement is: setAccount_reg2(Ljavolution/util/FastMap;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setAccount_reg2(arg0)
statement is: setEmail(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setEmail("")
statement is: removeUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data removeUser = UserManagement.removeUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
Auth_data userTxt = UserManagement.getUserTxt(account_id);
FastMap<String, String> account_reg2 = userTxt.getAccount_reg2();
FastMap<String, String> setShared = account_reg2.setShared(false);
auth_data.setAccount_reg2(setShared);
auth_data.setEmail("");
UserManagement.removeUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        Integer account_id = auth_data.getAccount_id();
        Auth_data userTxt = UserManagement.getUserTxt(account_id);
        FastMap<String, String> account_reg2 = userTxt.getAccount_reg2();
        FastMap<String, String> setShared = account_reg2.setShared(false);
        auth_data.setAccount_reg2(setShared);
        auth_data.setEmail("user@example.com");
        UserManagement.removeUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Integer account_id = auth_data.getAccount_id(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.getAccount_id() target is: auth_data method is: getAccount_id()
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: getAccount_id()Ljava/lang/Integer;
statement is: Auth_data userTxt = UserManagement.getUserTxt(account_id), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserTxt(account_id) target is: UserManagement method is: getUserTxt(java.lang.Integer)
Matched Method is: getUserTxt(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data;
statement is: FastMap<String, String> account_reg2 = userTxt.getAccount_reg2(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: userTxt.getAccount_reg2() target is: userTxt method is: getAccount_reg2()
source statement: getUserTxt(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 2, type org.javathena.core.data.Auth_dataindex is: 2
Matched Method is: getAccount_reg2()Ljavolution/util/FastMap;
statement is: FastMap<String, String> setShared = account_reg2.setShared(false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: account_reg2.setShared(false) target is: account_reg2 method is: setShared(boolean)
source statement: getAccount_reg2()Ljavolution/util/FastMap; callee: VariableReference: Statement 3, type javolution.util.FastMap<java.lang.String, java.lang.String>index is: 3
Matched Method is: setShared(Z)Ljavolution/util/FastMap;
statement is: auth_data.setAccount_reg2(setShared), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setAccount_reg2(setShared) target is: auth_data method is: setAccount_reg2(FastMap)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setAccount_reg2(Ljavolution/util/FastMap;)V
statement is: auth_data.setEmail("user@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setEmail("user@example.com") target is: auth_data method is: setEmail(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setEmail(Ljava/lang/String;)V
statement is: UserManagement.removeUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.removeUser(auth_data) target is: UserManagement method is: removeUser(Auth_data)
Matched Method is: removeUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
Auth_data userTxt = UserManagement.getUserTxt(account_id);
FastMap<String, String> account_reg2 = userTxt.getAccount_reg2();
boolean _boolean = false;
FastMap<String, String> setShared = account_reg2.setShared(_boolean);
auth_data.setAccount_reg2(setShared);
String string = "user@example.com";
auth_data.setEmail(string);
UserManagement.removeUser(auth_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.login.parse.FromChar()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromChar
statement code is: FromChar fromChar = new FromChar()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: addSession(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addSession(arg0)
test data is: MockSocket mockSocket = new MockSocket();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
UserManagement.addSession(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("localhost", 8080);
        FromChar fromChar = new FromChar(new char[]{ 'h', 'e', 'l', 'l', 'o' });
        Socket_data socket_data = new Socket_data(mockSocket, fromChar);
        UserManagement.addSession(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket("localhost", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromChar fromChar = new FromChar(new char[]{ 'h', 'e', 'l', 'l', 'o' }), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromChar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V
statement is: UserManagement.addSession(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addSession(socket_data) target is: UserManagement method is: addSession(Socket_data)
Matched Method is: addSession(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.addSession(socket_data);

statement is: getSessionAt(I)Lorg/javathena/core/data/Socket_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data sessionAt = UserManagement.getSessionAt(154)
test data is: UserManagement.getSessionAt(154);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getSessionAt("2023-01-01", 456);
    }
}
statement is: UserManagement.getSessionAt("2023-01-01", 456), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getSessionAt("2023-01-01", 456) target is: UserManagement method is: getSessionAt(java.lang.String,int)
statement is: addAccountIdCount()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addAccountIdCount()
test data is: UserManagement.addAccountIdCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addAccountIdCount(10);
    }
}
statement is: UserManagement.addAccountIdCount(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addAccountIdCount(10) target is: UserManagement method is: addAccountIdCount(int)
statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: add_online_user(Lorg/javathena/core/data/Auth_data;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int add_online_user = UserManagement.add_online_user(arg0)
test data is: Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data authData = new Auth_data("johndoe", "password123", 3, 50);
        UserManagement.add_online_user(authData);
    }
}
statement is: Auth_data authData = new Auth_data("johndoe", "password123", 3, 50), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.add_online_user(authData), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.add_online_user(authData) target is: UserManagement method is: add_online_user(Auth_data)
Matched Method is: add_online_user(Lorg/javathena/core/data/Auth_data;)I
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Auth_data auth_data = null;
UserManagement.add_online_user(auth_data);

statement is: getAccountID(Ljava/lang/String;)Ljava/lang/Integer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer accountID = UserManagement.getAccountID("")
statement is: getUserSQL(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userSQL = UserManagement.getUserSQL(arg0)
test data is: Integer accountID = UserManagement.getAccountID("");
UserManagement.getUserSQL(accountID);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer accountID = UserManagement.getAccountID("9876543210");
        UserManagement.getUserSQL(accountID);
    }
}
statement is: Integer accountID = UserManagement.getAccountID("9876543210"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountID("9876543210") target is: UserManagement method is: getAccountID(java.lang.String)
Matched Method is: getAccountID(Ljava/lang/String;)Ljava/lang/Integer;
statement is: UserManagement.getUserSQL(accountID), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserSQL(accountID) target is: UserManagement method is: getUserSQL(java.lang.Integer)
Matched Method is: getUserSQL(Ljava/lang/Integer;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "9876543210";
Integer accountID = UserManagement.getAccountID(string);
UserManagement.getUserSQL(accountID);

statement is: online_db_final()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int online_db_final = UserManagement.online_db_final()
test data is: UserManagement.online_db_final();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Example 1: User Management
        // Define a user with some basic information
        String username = "johnsmith";
        String email = "johnsmith@example.com";
        String password = "Password!@#$%^&*";
        // Define a user with more detailed information
        String firstName = "John";
        String lastName = "Smith";
        String phoneNumber = "555-1234";
        String address = "123 Main St., Anytown, CA 12345";
        // Define a user with even more detailed information
        String employerName = "Acme Inc.";
        String jobTitle = "Software Engineer";
        String department = "Engineering";
        String workPhoneNumber = "555-6789";
        String workAddress = "456 Elm St., Anytown, CA 12345";
    }
}
statement is: // Example 1: User Management
// Define a user with some basic information
String username = "johnsmith", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String email = "johnsmith@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "Password!@#$%^&*", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Define a user with more detailed information
String firstName = "John", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String lastName = "Smith", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String phoneNumber = "555-1234", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String address = "123 Main St., Anytown, CA 12345", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Define a user with even more detailed information
String employerName = "Acme Inc.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String jobTitle = "Software Engineer", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String department = "Engineering", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String workPhoneNumber = "555-6789", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String workAddress = "456 Elm St., Anytown, CA 12345", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "johnsmith"
* this is vulnerable: String string = "johnsmith@example.com"
* this is vulnerable: String string = "Password!@#$%^&*"
* this is vulnerable: String string = "John"
* this is vulnerable: String string = "Smith"
* this is vulnerable: String string = "555-1234"
* this is vulnerable: String string = "123 Main St., Anytown, CA 12345"
* this is vulnerable: String string = "Acme Inc."
* this is vulnerable: String string = "Software Engineer"
* this is vulnerable: String string = "Engineering"
* this is vulnerable: String string = "555-6789"
* this is vulnerable: String string = "456 Elm St., Anytown, CA 12345"
TestCase is: String string = "johnsmith";
String string = "johnsmith@example.com";
String string = "Password!@#$%^&*";
String string = "John";
String string = "Smith";
String string = "555-1234";
String string = "123 Main St., Anytown, CA 12345";
String string = "Acme Inc.";
String string = "Software Engineer";
String string = "Engineering";
String string = "555-6789";
String string = "456 Elm St., Anytown, CA 12345";

statement is: getNBUser()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int nBUser = UserManagement.getNBUser()
test data is: UserManagement.getNBUser();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int userId = 12345;// Improve this to a more descriptive value, such as "johnDoe" or "janeDoe"

        String username = "johndoe";// Improve this to a more descriptive value, such as "john.doe@example.com" }}

    }
}
statement is: int userId = 12345// Improve this to a more descriptive value, such as "johnDoe" or "janeDoe"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "johndoe"// Improve this to a more descriptive value, such as "john.doe@example.com" }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 12345
* this is vulnerable: String string = "johndoe"
TestCase is: int _int = 12345;
String string = "johndoe";

statement is: addIpToBanListMySQL(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addIpToBanListMySQL("3+nU+")
test data is: UserManagement.addIpToBanListMySQL("3+nU+");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addIpToBanListMySQL("192.168.0.1");// Descriptive and representative IP address }}

    }
}
statement is: UserManagement.addIpToBanListMySQL("192.168.0.1")// Descriptive and representative IP address }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addIpToBanListMySQL("192.168.0.1")// Descriptive and representative IP address }}
 target is: UserManagement method is: addIpToBanListMySQL(java.lang.String)
Matched Method is: addIpToBanListMySQL(Ljava/lang/String;)V
TestCase is: String string = "192.168.0.1";
UserManagement.addIpToBanListMySQL(string);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("9w*", "9w*", "a@a.com", 't')
statement is: removeUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data removeUser = UserManagement.removeUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("9w*", "9w*", "a@a.com", 't');
UserManagement.removeUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("password1234", "password1234", "test@gmail.com", 't');
        UserManagement.removeUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("password1234", "password1234", "test@gmail.com", 't'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("password1234", "password1234", "test@gmail.com", 't') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: UserManagement.removeUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.removeUser(addUserTXT) target is: UserManagement method is: removeUser(Auth_data)
Matched Method is: removeUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "password1234";
String string = "password1234";
String string = "test@gmail.com";
char _char = 't';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
UserManagement.removeUser(addUserTXT);

statement is: org.evosuite.testcase.statements.ArrayStatement@7afa7f34 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: tabHexToInt([B)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int tabHexToInt = UserManagement.tabHexToInt(arg0)
test data is: byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before
        byte[] byteArray = new byte[2];
        UserManagement.tabHexToInt(byteArray);
        // After
        byte[] byteArray = new byte[]{ ((byte) (0xff)), ((byte) (0xaa)) };
        UserManagement.tabHexToInt(byteArray);
    }
}
statement is: // Before
byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: UserManagement.tabHexToInt(byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.tabHexToInt(byteArray) target is: UserManagement method is: tabHexToInt(byte[])
Matched Method is: tabHexToInt([B)I
statement is: // After
byte[] byteArray = new byte[]{ ((byte) (0xff)), ((byte) (0xaa)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ ((byte) (0xff)), ((byte) (0xaa)) } Elements: [((byte) (0xff)), ((byte) (0xaa))]
lengths: [2] []
statement is: UserManagement.tabHexToInt(byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.tabHexToInt(byteArray) target is: UserManagement method is: tabHexToInt(byte[])
Matched Method is: tabHexToInt([B)I
TestCase is: byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);
UserManagement.tabHexToInt(byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@15fa6ab6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: connectionOfClient(Lorg/javathena/core/data/Socket_data;[BZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.connectionOfClient((Socket_data) null, arg1, false)
test data is: byte[] byteArray = new byte[7];
UserManagement.connectionOfClient((Socket_data) null, byteArray, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] socketData = new byte[messageLength];
        String username = "janeDoe";
        double balance = 5000.0;
        UserManagement.connectionOfClient(((Socket_data) (null)), socketData, false);
    }
}
statement is: byte[] socketData = new byte[messageLength], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [messageLength] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[messageLength] Elements: []
lengths: [7] [messageLength]
Their type are: class [B byte[]
statement is: String username = "janeDoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double balance = 5000.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.connectionOfClient(((Socket_data) (null)), socketData, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfClient(((Socket_data) (null)), socketData, false) target is: UserManagement method is: connectionOfClient(Socket_data,byte[],boolean)
Matched Method is: connectionOfClient(Lorg/javathena/core/data/Socket_data;[BZ)V
i 2 Parameters size() 2 Num of Method Parameters: 3
* this is vulnerable: String string = "janeDoe"
* this is vulnerable: double _double = 5000.0
TestCase is: byte[] byteArray = new byte[7];
String string = "janeDoe";
double _double = 5000.0;
boolean _boolean = false;
boolean _boolean = null;
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) _boolean, _boolean);

statement is: levelIsValid(ILjava/lang/String;II)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int levelIsValid = UserManagement.levelIsValid(3, "", 3, 5)
test data is: UserManagement.levelIsValid(3, "", 3, 5);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.levelIsValid(3, "Engineer", 3, 5);
    }
}
statement is: UserManagement.levelIsValid(3, "Engineer", 3, 5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.levelIsValid(3, "Engineer", 3, 5) target is: UserManagement method is: levelIsValid(int,java.lang.String,int,int)
Matched Method is: levelIsValid(ILjava/lang/String;II)I
TestCase is: int _int = 3;
String string = "Engineer";
int _int = 3;
int _int = 5;
UserManagement.levelIsValid(_int, string, _int, _int);

statement is: levelIsValid(ILjava/lang/String;II)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int levelIsValid = UserManagement.levelIsValid((-257), "8\"AWsEQ", (-257), (-257))
test data is: UserManagement.levelIsValid((-257), "8\"AWsEQ", (-257), (-257));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.levelIsValid(-257, "8\"AWsEQ", -257, -257);
    }
}
statement is: UserManagement.levelIsValid(-257, "8\"AWsEQ", -257, -257), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.levelIsValid(-257, "8\"AWsEQ", -257, -257) target is: UserManagement method is: levelIsValid(int,java.lang.String,int,int)
Matched Method is: levelIsValid(ILjava/lang/String;II)I
i 1 Parameters size() 1 Num of Method Parameters: 4
i 2 Parameters size() 1 Num of Method Parameters: 4
i 3 Parameters size() 1 Num of Method Parameters: 4
TestCase is: String string = "8\"AWsEQ";
String string = null;
int _int = null;
int _int = null;
UserManagement.levelIsValid((int) string, string, _int, _int);

statement is: levelIsValid(ILjava/lang/String;II)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int levelIsValid = UserManagement.levelIsValid(129, "set users %s : %d\n", 129, 129)
test data is: UserManagement.levelIsValid(129, "set users %s : %d\n", 129, 129);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.levelIsValid(129, "set users %s : %d\n", 30, 30);
    }
}
statement is: UserManagement.levelIsValid(129, "set users %s : %d\n", 30, 30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.levelIsValid(129, "set users %s : %d\n", 30, 30) target is: UserManagement method is: levelIsValid(int,java.lang.String,int,int)
Matched Method is: levelIsValid(ILjava/lang/String;II)I
TestCase is: int _int = 129;
String string = "set users %s : %d\n";
int _int = 30;
int _int = 30;
UserManagement.levelIsValid(_int, string, _int, _int);

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(2)
statement is: remove_online_user(Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.remove_online_user(arg0)
test data is: Integer integer = new Integer(2);
UserManagement.remove_online_user(integer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer = new Integer(1000);
        UserManagement.remove_online_user("johndoe");
    }
}
statement is: Integer integer = new Integer(1000), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.remove_online_user("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.remove_online_user("johndoe") target is: UserManagement method is: remove_online_user(java.lang.String)
Matched Method is: remove_online_user(Ljava/lang/Integer;)V
TestCase is: int _int = 1000;
Integer integer = new Integer(_int);
String string = "johndoe";
UserManagement.remove_online_user((Integer) string);

statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer(99)
statement is: remove_online_user(Ljava/lang/Integer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.remove_online_user(arg0)
test data is: Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer integer = new Integer(1001);
        UserManagement.remove_online_user(integer);
    }
}
statement is: Integer integer = new Integer(1001), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.remove_online_user(integer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.remove_online_user(integer) target is: UserManagement method is: remove_online_user(java.lang.Integer)
Matched Method is: remove_online_user(Ljava/lang/Integer;)V
TestCase is: int _int = 1001;
Integer integer = new Integer(_int);
UserManagement.remove_online_user(integer);

statement is: org.evosuite.testcase.statements.ArrayStatement@4a7c516d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: charif_sendallwos(I[B)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int charif_sendallwos = UserManagement.charif_sendallwos(0, arg1)
test data is: byte[] byteArray = new byte[0];
UserManagement.charif_sendallwos(0, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3, 4 };
        UserManagement.charif_sendallwos(0, byteArray);
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ 1, 2, 3, 4 } Elements: [1, 2, 3, 4]
lengths: [0] []
statement is: UserManagement.charif_sendallwos(0, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charif_sendallwos(0, byteArray) target is: UserManagement method is: charif_sendallwos(int,byte[])
Matched Method is: charif_sendallwos(I[B)I
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: int _int = 0;
byte[] byteArray = null;
UserManagement.charif_sendallwos(_int, byteArray);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']')
statement is: getAccount_reg2()Ljavolution/util/FastMap; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastMap<java.lang.String, java.lang.String>
statement code is: FastMap<String, String> account_reg2 = auth_data.getAccount_reg2()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String put = fastMap.put(":", "_")
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
FastMap<String, String> account_reg2 = addUserTXT.getAccount_reg2();
account_reg2.put(":", "_");
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
        FastMap<String, String> account_reg2 = addUserTXT.getAccount_reg2();
        account_reg2.put("email", "johndoe@example.com");
        account_reg2.put("password", "1234567890");
        account_reg2.put("firstName", "John");
        account_reg2.put("lastName", "Doe");
        UserManagement.addUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: FastMap<String, String> account_reg2 = addUserTXT.getAccount_reg2(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: addUserTXT.getAccount_reg2() target is: addUserTXT method is: getAccount_reg2()
source statement: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: getAccount_reg2()Ljavolution/util/FastMap;
statement is: account_reg2.put("email", "johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: account_reg2.put("email", "johndoe@example.com") target is: account_reg2 method is: put(java.lang.String,java.lang.String)
source statement: getAccount_reg2()Ljavolution/util/FastMap; callee: VariableReference: Statement 1, type javolution.util.FastMap<java.lang.String, java.lang.String>index is: 5
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: account_reg2.put("password", "1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: account_reg2.put("password", "1234567890") target is: account_reg2 method is: put(java.lang.String,java.lang.String)
source statement: getAccount_reg2()Ljavolution/util/FastMap; callee: VariableReference: Statement 1, type javolution.util.FastMap<java.lang.String, java.lang.String>index is: 5
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: account_reg2.put("firstName", "John"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: account_reg2.put("firstName", "John") target is: account_reg2 method is: put(java.lang.String,java.lang.String)
source statement: getAccount_reg2()Ljavolution/util/FastMap; callee: VariableReference: Statement 1, type javolution.util.FastMap<java.lang.String, java.lang.String>index is: 5
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: account_reg2.put("lastName", "Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: account_reg2.put("lastName", "Doe") target is: account_reg2 method is: put(java.lang.String,java.lang.String)
source statement: getAccount_reg2()Ljavolution/util/FastMap; callee: VariableReference: Statement 1, type javolution.util.FastMap<java.lang.String, java.lang.String>index is: 5
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: UserManagement.addUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(addUserTXT) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "S0022";
String string = "S0022";
String string = "com.mysql.jdbc.BestResponseTimeBalanceStrategy";
char _char = ']';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
((Auth_data) string).getAccount_reg2();
String string = "email";
String string = "johndoe@example.com";
((FastMap) string).put(string, string);
String string = "password";
String string = "1234567890";
((FastMap) string).put(string, string);
String string = "firstName";
String string = "John";
((FastMap) string).put(string, string);
String string = "lastName";
String string = "Doe";
((FastMap) string).put(string, string);
UserManagement.addUser(addUserTXT);

statement is: isGM(J)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int gM = UserManagement.isGM(3431L)
test data is: UserManagement.isGM(3431L);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.isGM(GM_USER_ID);
        UserManagement.isGM(ANOTHER_GM_USER_ID);
    }
}
statement is: UserManagement.isGM(GM_USER_ID), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.isGM(GM_USER_ID) target is: UserManagement method is: isGM()
Matched Method is: isGM(J)I
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.isGM(ANOTHER_GM_USER_ID), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.isGM(ANOTHER_GM_USER_ID) target is: UserManagement method is: isGM()
Matched Method is: isGM(J)I
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: long _long = null;
UserManagement.isGM(_long);
long _long = null;
UserManagement.isGM(_long);

statement is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userTxt = UserManagement.getUserTxt((String) null)
test data is: UserManagement.getUserTxt((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getUserTxt("John Doe");
    }
}
statement is: UserManagement.getUserTxt("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserTxt("John Doe") target is: UserManagement method is: getUserTxt(java.lang.String)
Matched Method is: getUserTxt(Ljava/lang/String;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "John Doe";
UserManagement.getUserTxt(string);

statement is: getAccountIds()Ljavolution/util/FastTable; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastTable<java.lang.Integer>
statement code is: FastTable<Integer> accountIds = UserManagement.getAccountIds()
test data is: UserManagement.getAccountIds();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int accountId1 = 1234;
        String username1 = "johndoe";
        String password1 = "password123";
        String email1 = "johndoe@example.com";
        int accountId2 = 5678;
        String username2 = "janedoe";
        String password2 = "password456";
        String email2 = "janedoe@example.com";
    }
}
statement is: int accountId1 = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username1 = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password1 = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String email1 = "johndoe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int accountId2 = 5678, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username2 = "janedoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password2 = "password456", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String email2 = "janedoe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: String string = "johndoe@example.com"
* this is vulnerable: int _int = 5678
* this is vulnerable: String string = "janedoe"
* this is vulnerable: String string = "password456"
* this is vulnerable: String string = "janedoe@example.com"
TestCase is: int _int = 1234;
String string = "johndoe";
String string = "password123";
String string = "johndoe@example.com";
int _int = 5678;
String string = "janedoe";
String string = "password456";
String string = "janedoe@example.com";

statement is: dynamicFailBanCheckTXT(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.dynamicFailBanCheckTXT((String) null)
test data is: UserManagement.dynamicFailBanCheckTXT((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.dynamicFailBanCheckTXT("");
        UserManagement.dynamicFailBanCheckTXT(" ");
        UserManagement.dynamicFailBanCheckTXT("user");
        UserManagement.dynamicFailBanCheckTXT("1234567890");
    }
}
statement is: UserManagement.dynamicFailBanCheckTXT(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckTXT("") target is: UserManagement method is: dynamicFailBanCheckTXT(java.lang.String)
Matched Method is: dynamicFailBanCheckTXT(Ljava/lang/String;)V
statement is: UserManagement.dynamicFailBanCheckTXT(" "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckTXT(" ") target is: UserManagement method is: dynamicFailBanCheckTXT(java.lang.String)
Matched Method is: dynamicFailBanCheckTXT(Ljava/lang/String;)V
statement is: UserManagement.dynamicFailBanCheckTXT("user"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckTXT("user") target is: UserManagement method is: dynamicFailBanCheckTXT(java.lang.String)
Matched Method is: dynamicFailBanCheckTXT(Ljava/lang/String;)V
statement is: UserManagement.dynamicFailBanCheckTXT("1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckTXT("1234567890") target is: UserManagement method is: dynamicFailBanCheckTXT(java.lang.String)
Matched Method is: dynamicFailBanCheckTXT(Ljava/lang/String;)V
TestCase is: String string = "";
UserManagement.dynamicFailBanCheckTXT(string);
String string = " ";
UserManagement.dynamicFailBanCheckTXT(string);
String string = "user";
UserManagement.dynamicFailBanCheckTXT(string);
String string = "1234567890";
UserManagement.dynamicFailBanCheckTXT(string);

statement is: javolution.util.FastMap(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type javolution.util.FastMap<java.lang.Integer, org.javathena.core.data.Auth_data>
statement code is: FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0)
statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data put = fastMap.put((Integer) null, arg1)
statement is: setAuth_dats(Ljavolution/util/FastMap;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.setAuth_dats(arg0)
test data is: FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
Auth_data auth_data = new Auth_data();
fastMap.put((Integer) null, auth_data);
UserManagement.setAuth_dats(fastMap);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
        fastMap.put(((Integer) (null)), new Auth_data("Jane Doe", 32));
        UserManagement.setAuth_dats(fastMap);
    }
}
statement is: FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fastMap.put(((Integer) (null)), new Auth_data("Jane Doe", 32)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fastMap.put(((Integer) (null)), new Auth_data("Jane Doe", 32)) target is: fastMap method is: put(java.lang.Integer,Auth_data)
source statement: javolution.util.FastMap(I)V callee: VariableReference: Statement 0, type javolution.util.FastMap<java.lang.Integer, org.javathena.core.data.Auth_data>index is: 1
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: UserManagement.setAuth_dats(fastMap), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.setAuth_dats(fastMap) target is: UserManagement method is: setAuth_dats(FastMap)
Matched Method is: setAuth_dats(Ljavolution/util/FastMap;)V
TestCase is: int _int = 0;
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(_int);
Integer integer = null;
Auth_data auth_data = null;
((FastMap) _int).put(integer, auth_data);
UserManagement.setAuth_dats(fastMap);

statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: org.evosuite.testcase.statements.ArrayStatement@11d9e456 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: receiveAllOnlinAccounts(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.receiveAllOnlinAccounts(arg0, arg1)
test data is: Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        private static final String ONLINE_ACCOUNTS_JSON = "{\"online\": {\"account1\": { \"username\": \"john\", \"password\": \"123456\"}, \"account2\": { \"username\": \"jane\", \"password\": \"abcdef\"}}}";
        private static final Socket SOCKET = new Socket();
    }
}
statement is: // Improved test data
private static final String ONLINE_ACCOUNTS_JSON = "{\"online\": {\"account1\": { \"username\": \"john\", \"password\": \"123456\"}, \"account2\": { \"username\": \"jane\", \"password\": \"abcdef\"}}}", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: private static final Socket SOCKET = new Socket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: String string = "{\"online\": {\"account1\": { \"username\": \"john\", \"password\": \"123456\"}, \"account2\": { \"username\": \"jane\", \"password\": \"abcdef\"}}}"
TestCase is: String string = "{\"online\": {\"account1\": { \"username\": \"john\", \"password\": \"123456\"}, \"account2\": { \"username\": \"jane\", \"password\": \"abcdef\"}}}";

statement is: getAuth_dats()Ljavolution/util/FastMap; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastMap<java.lang.Integer, org.javathena.core.data.Auth_data>
statement code is: FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats()
test data is: UserManagement.getAuth_dats();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getAuth_dats(10, "System Administrator", "password123", "john.doe@email.com");
    }
}
statement is: UserManagement.getAuth_dats(10, "System Administrator", "password123", "john.doe@email.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAuth_dats(10, "System Administrator", "password123", "john.doe@email.com") target is: UserManagement method is: getAuth_dats(int,java.lang.String,java.lang.String,java.lang.String)
statement is: is_user_online(Ljava/lang/Integer;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean is_user_online = UserManagement.is_user_online((Integer) null)
test data is: UserManagement.is_user_online((Integer) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.is_user_online(1234567890);// user ID is a positive integer

        UserManagement.is_user_online(-1234567890);// user ID is a negative integer

        UserManagement.is_user_online(0);// user ID is 0 (invalid)

        UserManagement.is_user_online(1234567890, "John Doe");// user ID and name are provided

        UserManagement.is_user_online(-1234567890, "Jane Smith");// user ID and name are provided }}

    }
}
statement is: UserManagement.is_user_online(1234567890)// user ID is a positive integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.is_user_online(1234567890)// user ID is a positive integer
 target is: UserManagement method is: is_user_online(int)
Matched Method is: is_user_online(Ljava/lang/Integer;)Z
statement is: UserManagement.is_user_online(-1234567890)// user ID is a negative integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.is_user_online(-1234567890)// user ID is a negative integer
 target is: UserManagement method is: is_user_online(int)
Matched Method is: is_user_online(Ljava/lang/Integer;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.is_user_online(0)// user ID is 0 (invalid)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.is_user_online(0)// user ID is 0 (invalid)
 target is: UserManagement method is: is_user_online(int)
Matched Method is: is_user_online(Ljava/lang/Integer;)Z
statement is: UserManagement.is_user_online(1234567890, "John Doe")// user ID and name are provided
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.is_user_online(1234567890, "John Doe")// user ID and name are provided
 target is: UserManagement method is: is_user_online(int,java.lang.String)
statement is: UserManagement.is_user_online(-1234567890, "Jane Smith")// user ID and name are provided }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.is_user_online(-1234567890, "Jane Smith")// user ID and name are provided }}
 target is: UserManagement method is: is_user_online(int,java.lang.String)
TestCase is: int _int = 1234567890;
UserManagement.is_user_online((Integer) _int);
int _int = null;
UserManagement.is_user_online((Integer) _int);
int _int = 0;
UserManagement.is_user_online((Integer) _int);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@8e431f32 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1fa7da40 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)113
statement is: org.evosuite.testcase.statements.AssignmentStatement@9e6edf0b type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte) (-84)
statement is: org.evosuite.testcase.statements.AssignmentStatement@7af2cf23 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[3] = (byte) (-67)
statement is: org.evosuite.testcase.statements.AssignmentStatement@ab0f8362 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[4] = (byte)113
statement is: org.evosuite.testcase.statements.AssignmentStatement@a8ca0c1e type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[5] = (byte)114
statement is: org.evosuite.testcase.statements.AssignmentStatement@b77c9a70 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[6] = (byte)8
statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: add_online_user(Lorg/javathena/core/data/Auth_data;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int add_online_user = UserManagement.add_online_user(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
byteArray[1] = (byte)113;
byteArray[2] = (byte) (-84);
byteArray[3] = (byte) (-67);
byteArray[4] = (byte)113;
byteArray[5] = (byte)114;
byteArray[6] = (byte)8;
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[7];
        byteArray[1] = ((byte) ('M'));
        byteArray[2] = ((byte) (-84));// ASCII code for 'x'

        byteArray[3] = ((byte) (-67));// ASCII code for 'c'

        byteArray[4] = ((byte) ('M'));
        byteArray[5] = ((byte) ('D'));
        byteArray[6] = ((byte) (8));// ASCII code for 'b'

        Auth_data auth_data = new Auth_data();
        UserManagement.add_online_user(auth_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: byteArray[1] = ((byte) ('M')), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('M')) Ct is: byteArray[1] = ((byte) ('M'))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[2] = ((byte) (-84))// ASCII code for 'x'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-84)) Ct is: byteArray[2] = ((byte) (-84))// ASCII code for 'x'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[3] = ((byte) (-67))// ASCII code for 'c'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-67)) Ct is: byteArray[3] = ((byte) (-67))// ASCII code for 'c'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[4] = ((byte) ('M')), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('M')) Ct is: byteArray[4] = ((byte) ('M'))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[5] = ((byte) ('D')), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('D')) Ct is: byteArray[5] = ((byte) ('D'))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[6] = ((byte) (8))// ASCII code for 'b'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (8)) Ct is: byteArray[6] = ((byte) (8))// ASCII code for 'b'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.add_online_user(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.add_online_user(auth_data) target is: UserManagement method is: add_online_user(Auth_data)
Matched Method is: add_online_user(Lorg/javathena/core/data/Auth_data;)I
TestCase is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
char _char = 'M';
byteArray[1] = (byte) _char;
byteArray[2] = (byte) (-84);
byteArray[3] = (byte) (-67);
char _char = 'M';
byteArray[4] = (byte) _char;
char _char = 'D';
byteArray[5] = (byte) _char;
int _int = 8;
byteArray[6] = (byte) _int;
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setBan_until_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setBan_until_time((-966L))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setBan_until_time((-966L));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setBan_until_time(Long.MIN_VALUE);
        UserManagement.addUser(auth_data);
        Auth_data auth_data2 = new Auth_data();
        auth_data2.setBan_until_time(Long.MAX_VALUE);
        UserManagement.addUser(auth_data2);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setBan_until_time(Long.MIN_VALUE), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setBan_until_time(Long.MIN_VALUE) target is: auth_data method is: setBan_until_time(long)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setBan_until_time(J)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
statement is: Auth_data auth_data2 = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data2.setBan_until_time(Long.MAX_VALUE), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data2.setBan_until_time(Long.MAX_VALUE) target is: auth_data2 method is: setBan_until_time(long)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setBan_until_time(J)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(auth_data2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data2) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
long _long = null;
auth_data.setBan_until_time(_long);
UserManagement.addUser(auth_data);
Auth_data auth_data = new Auth_data();
long _long = null;
auth_data.setBan_until_time(_long);
UserManagement.addUser(auth_data);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o')
statement is: setBan_until_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setBan_until_time(3750L)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setBan_until_time(3750L);
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o')
statement is: setCharserver(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setCharserver(1242)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setCharserver(1242);
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("johnDoe", "password123", "123 Main St.", 'o');
        addUserTXT.setCharserver(1242);
        UserManagement.addUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("johnDoe", "password123", "123 Main St.", 'o'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("johnDoe", "password123", "123 Main St.", 'o') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: addUserTXT.setCharserver(1242), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addUserTXT.setCharserver(1242) target is: addUserTXT method is: setCharserver(int)
source statement: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setCharserver(I)V
statement is: UserManagement.addUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(addUserTXT) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "johnDoe";
String string = "password123";
String string = "123 Main St.";
char _char = 'o';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
int _int = 1242;
((Auth_data) string).setCharserver(_int);
UserManagement.addUser(addUserTXT);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l')
statement is: setCharserver(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setCharserver(0)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
addUserTXT.setCharserver(0);
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("John", "Doe", "", 'l');
        addUserTXT.setCharserver(0);
        UserManagement.addUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("John", "Doe", "", 'l'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("John", "Doe", "", 'l') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: addUserTXT.setCharserver(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addUserTXT.setCharserver(0) target is: addUserTXT method is: setCharserver(int)
source statement: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setCharserver(I)V
statement is: UserManagement.addUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(addUserTXT) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "John";
String string = "Doe";
String string = "";
char _char = 'l';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
int _int = 0;
((Auth_data) string).setCharserver(_int);
UserManagement.addUser(addUserTXT);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setClientType(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setClientType(9)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setClientType(9);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data userData = new Auth_data();
        userData.setClientType("Mobile");
        UserManagement.addUser(userData);
    }
}
statement is: Auth_data userData = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: userData.setClientType("Mobile"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: userData.setClientType("Mobile") target is: userData method is: setClientType(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setClientType(I)V
statement is: UserManagement.addUser(userData), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(userData) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "Mobile";
auth_data.setClientType((int) string);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setConnect_until_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setConnect_until_time((-17L))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-17L));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setConnect_until_time(-24L);// set a time in the past to simulate an expired connection

        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setConnect_until_time(-24L)// set a time in the past to simulate an expired connection
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setConnect_until_time(-24L)// set a time in the past to simulate an expired connection
 target is: auth_data method is: setConnect_until_time(long)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setConnect_until_time(J)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
long _long = null;
auth_data.setConnect_until_time(_long);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setConnect_until_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setConnect_until_time(219L)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(219L);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setConnect_until_time(219L);
        UserManagement.addUser(auth_data);
        // add user with connect_until_time set to a specific date in the future }}
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setConnect_until_time(219L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setConnect_until_time(219L) target is: auth_data method is: setConnect_until_time(long)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setConnect_until_time(J)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
statement is: // add user with connect_until_time set to a specific date in the future }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: Auth_data auth_data = new Auth_data();
long _long = 219L;
auth_data.setConnect_until_time(_long);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setDelflag(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setDelflag((-4936))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-4936));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setDelflag(-1);// changed to -1 to illustrate that the user is deleted

        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setDelflag(-1)// changed to -1 to illustrate that the user is deleted
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setDelflag(-1)// changed to -1 to illustrate that the user is deleted
 target is: auth_data method is: setDelflag(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setDelflag(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = null;
auth_data.setDelflag(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setDelflag(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setDelflag(1109)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1109);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setDelflag("active");
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setDelflag("active"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setDelflag("active") target is: auth_data method is: setDelflag(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setDelflag(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "active";
auth_data.setDelflag((int) string);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLevel(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLevel(3)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLevel(3);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLevel(9);
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLevel(9), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLevel(9) target is: auth_data method is: setLevel(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLevel(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 9;
auth_data.setLevel(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogin_id1(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id1((-1541))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1541));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogin_id1(1023456789);
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogin_id1(1023456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogin_id1(1023456789) target is: auth_data method is: setLogin_id1(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLogin_id1(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 1023456789;
auth_data.setLogin_id1(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogin_id1(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id1(123)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(123);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogin_id("johndoe");
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogin_id("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogin_id("johndoe") target is: auth_data method is: setLogin_id(java.lang.String)
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogin_id2(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id2((-671))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-671));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogin_id2("johndoe");
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogin_id2("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogin_id2("johndoe") target is: auth_data method is: setLogin_id2(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLogin_id2(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "johndoe";
auth_data.setLogin_id2((int) string);
UserManagement.addUser(auth_data);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT(" )uHN,C0", " )uHN,C0", " )uHN,C0", 'l')
statement is: setLogin_id2(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogin_id2(37)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT(" )uHN,C0", " )uHN,C0", " )uHN,C0", 'l');
addUserTXT.setLogin_id2(37);
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("Alice", "alice@example.com", "Password@123456", 'l');
        addUserTXT.setLogin_id2(10);
        UserManagement.addUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("Alice", "alice@example.com", "Password@123456", 'l'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("Alice", "alice@example.com", "Password@123456", 'l') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: addUserTXT.setLogin_id2(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addUserTXT.setLogin_id2(10) target is: addUserTXT method is: setLogin_id2(int)
source statement: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setLogin_id2(I)V
statement is: UserManagement.addUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(addUserTXT) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "Alice";
String string = "alice@example.com";
String string = "Password@123456";
char _char = 'l';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
int _int = 10;
((Auth_data) string).setLogin_id2(_int);
UserManagement.addUser(addUserTXT);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLogincount(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLogincount((-1))
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLogincount((-1));
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setLogincount(1234567890);
        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLogincount(1234567890), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLogincount(1234567890) target is: auth_data method is: setLogincount(int)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setLogincount(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
int _int = 1234567890;
auth_data.setLogincount(_int);
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setLastlogin()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setLastlogin()
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setLastlogin();
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        Auth_data auth_data = new Auth_data("john.doe@example.com", "qwerty12345", "John Doe");
        auth_data.setLastlogin();
        UserManagement.addUser(auth_data);
    }
}
statement is: // Improved test data for the code snippet
Auth_data auth_data = new Auth_data("john.doe@example.com", "qwerty12345", "John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setLastlogin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setLastlogin() target is: auth_data method is: setLastlogin()
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Auth_data auth_data = null;
UserManagement.addUser(auth_data);

statement is: org.javathena.core.data.Auth_data()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = new Auth_data()
statement is: setVersion(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setVersion(54)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data auth_data = new Auth_data();
auth_data.setVersion(54);
UserManagement.addUser(auth_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data auth_data = new Auth_data();
        auth_data.setVersion("v5.4");// using a descriptive string value instead of an integer

        UserManagement.addUser(auth_data);
    }
}
statement is: Auth_data auth_data = new Auth_data(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: auth_data.setVersion("v5.4")// using a descriptive string value instead of an integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: auth_data.setVersion("v5.4")// using a descriptive string value instead of an integer
 target is: auth_data method is: setVersion(java.lang.String)
source statement: org.javathena.core.data.Auth_data()V callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 0
Matched Method is: setVersion(I)V
statement is: UserManagement.addUser(auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(auth_data) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: Auth_data auth_data = new Auth_data();
String string = "v5.4";
auth_data.setVersion((int) string);
UserManagement.addUser(auth_data);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l')
statement is: setResetLogincoun(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: auth_data.setResetLogincoun(true)
statement is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUser = UserManagement.addUser(arg0)
test data is: Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
addUserTXT.setResetLogincoun(true);
UserManagement.addUser(addUserTXT);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
        addUserTXT.setResetLogincoun(true);
        UserManagement.addUser(addUserTXT);
    }
}
statement is: Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: addUserTXT.setResetLogincoun(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: addUserTXT.setResetLogincoun(true) target is: addUserTXT method is: setResetLogincoun(boolean)
source statement: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; callee: VariableReference: Statement 0, type org.javathena.core.data.Auth_dataindex is: 4
Matched Method is: setResetLogincoun(Z)V
statement is: UserManagement.addUser(addUserTXT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUser(addUserTXT) target is: UserManagement method is: addUser(Auth_data)
Matched Method is: addUser(Lorg/javathena/core/data/Auth_data;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "&^%5jDf";
String string = "&^%5jDf";
String string = " )uHN,C0";
char _char = 'l';
Auth_data addUserTXT = UserManagement.addUserTXT(string, string, string, _char);
boolean _boolean = true;
((Auth_data) string).setResetLogincoun(_boolean);
UserManagement.addUser(addUserTXT);

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("gM?#V|uZ", "gM?#V|uZ", "gM?#V|uZ", '[')
statement is: getAccountIdCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int accountIdCount = UserManagement.getAccountIdCount()
test data is: UserManagement.addUserTXT("gM?#V|uZ", "gM?#V|uZ", "gM?#V|uZ", '[');
UserManagement.getAccountIdCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserTXT("john.doe@example.com", "johndoe123", "John Doe", '[');
        UserManagement.getAccountIdCount();
    }
}
statement is: UserManagement.addUserTXT("john.doe@example.com", "johndoe123", "John Doe", '['), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("john.doe@example.com", "johndoe123", "John Doe", '[') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: UserManagement.getAccountIdCount(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getAccountIdCount() target is: UserManagement method is: getAccountIdCount()
Matched Method is: getAccountIdCount()I
TestCase is: String string = "john.doe@example.com";
String string = "johndoe123";
String string = "John Doe";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
UserManagement.getAccountIdCount();

statement is: getNBSession()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int nBSession = UserManagement.getNBSession()
statement is: org.evosuite.testcase.statements.ArrayStatement@a07373e5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[3]
statement is: charif_sendallwos(I[I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int charif_sendallwos = UserManagement.charif_sendallwos(2, arg1)
test data is: UserManagement.getNBSession();
int[] intArray = new int[3];
UserManagement.charif_sendallwos(2, intArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[] intArray = new int[]{ 100, 500, 800 };
    }
}
statement is: int[] intArray = new int[]{ 100, 500, 800 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[3] isAssignment: false Array: new int[]{ 100, 500, 800 } Elements: [100, 500, 800]
lengths: [3] []
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT(">", ">", ">", 'v')
statement is: getNBUser()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int nBUser = UserManagement.getNBUser()
test data is: UserManagement.addUserTXT(">", ">", ">", 'v');
UserManagement.getNBUser();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserTXT("John Smith", "johnsmith@example.com", "+1 (555) 123-4567", "Male");
        UserManagement.getNBUser();
        UserManagement.addUserTXT("Jane Doe", "janedoe@subdomain.example.com", "+1 (555) 987-6543", "Female");
        UserManagement.getNBUser();
        UserManagement.addUserTXT("John Johnson", "johnjohnson@example.org", "+1 (555) 234-5678", "Male");
        UserManagement.getNBUser();
    }
}
statement is: UserManagement.addUserTXT("John Smith", "johnsmith@example.com", "+1 (555) 123-4567", "Male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("John Smith", "johnsmith@example.com", "+1 (555) 123-4567", "Male") target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: UserManagement.getNBUser(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getNBUser() target is: UserManagement method is: getNBUser()
Matched Method is: getNBUser()I
statement is: UserManagement.addUserTXT("Jane Doe", "janedoe@subdomain.example.com", "+1 (555) 987-6543", "Female"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("Jane Doe", "janedoe@subdomain.example.com", "+1 (555) 987-6543", "Female") target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: UserManagement.getNBUser(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getNBUser() target is: UserManagement method is: getNBUser()
Matched Method is: getNBUser()I
statement is: UserManagement.addUserTXT("John Johnson", "johnjohnson@example.org", "+1 (555) 234-5678", "Male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("John Johnson", "johnjohnson@example.org", "+1 (555) 234-5678", "Male") target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: UserManagement.getNBUser(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getNBUser() target is: UserManagement method is: getNBUser()
Matched Method is: getNBUser()I
TestCase is: String string = "John Smith";
String string = "johnsmith@example.com";
String string = "+1 (555) 123-4567";
String string = "Male";
UserManagement.addUserTXT(string, string, string, (char) string);
UserManagement.getNBUser();
String string = "Jane Doe";
String string = "janedoe@subdomain.example.com";
String string = "+1 (555) 987-6543";
String string = "Female";
UserManagement.addUserTXT(string, string, string, (char) string);
UserManagement.getNBUser();
String string = "John Johnson";
String string = "johnjohnson@example.org";
String string = "+1 (555) 234-5678";
String string = "Male";
UserManagement.addUserTXT(string, string, string, (char) string);
UserManagement.getNBUser();

statement is: org.evosuite.testcase.statements.ArrayStatement@d30c864b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2869105e type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[6] = (byte) (-76)
statement is: tabHexToInt([B)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int tabHexToInt = UserManagement.tabHexToInt(arg0)
test data is: byte[] byteArray = new byte[7];
byteArray[6] = (byte) (-76);
UserManagement.tabHexToInt(byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[7];
        byteArray[0] = ((byte) (12));
        byteArray[1] = ((byte) (34));
        byteArray[2] = ((byte) (56));
        byteArray[3] = ((byte) (-78));
        byteArray[4] = ((byte) (90));
        byteArray[5] = ((byte) (-112));
        byteArray[6] = ((byte) (-76));
        UserManagement.tabHexToInt(byteArray);
    }
}
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (12)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (12)) Ct is: byteArray[0] = ((byte) (12))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (34)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (34)) Ct is: byteArray[1] = ((byte) (34))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[2] = ((byte) (56)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (56)) Ct is: byteArray[2] = ((byte) (56))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[3] = ((byte) (-78)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-78)) Ct is: byteArray[3] = ((byte) (-78))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[4] = ((byte) (90)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (90)) Ct is: byteArray[4] = ((byte) (90))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[5] = ((byte) (-112)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-112)) Ct is: byteArray[5] = ((byte) (-112))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[6] = ((byte) (-76)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-76)) Ct is: byteArray[6] = ((byte) (-76))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.tabHexToInt(byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.tabHexToInt(byteArray) target is: UserManagement method is: tabHexToInt(byte[])
Matched Method is: tabHexToInt([B)I
TestCase is: byte[] byteArray = new byte[7];
int _int = 12;
byteArray[6] = (byte) _int;
int _int = 34;
byteArray[6] = (byte) _int;
int _int = 56;
byteArray[6] = (byte) _int;
byteArray[6] = (byte) _int;
int _int = 90;
byteArray[6] = (byte) _int;
byteArray[6] = (byte) _int;
byteArray[6] = (byte) _int;
UserManagement.tabHexToInt(byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@81b420a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c4685a02 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[3] = (byte)90
statement is: tabHexToInt([B)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int tabHexToInt = UserManagement.tabHexToInt(arg0)
test data is: byte[] byteArray = new byte[4];
byteArray[3] = (byte)90;
UserManagement.tabHexToInt(byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[4];
        byteArray[3] = ((byte) (0x5a));// Hex value for 90

        UserManagement.tabHexToInt(byteArray);
    }
}
statement is: byte[] byteArray = new byte[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: byte[] byteArray = new byte[4] isAssignment: false Array: new byte[4] Elements: []
lengths: [4] [4]
Their type are: class [B byte[]
statement is: byteArray[3] = ((byte) (0x5a))// Hex value for 90
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (0x5a)) Ct is: byteArray[3] = ((byte) (0x5a))// Hex value for 90

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.tabHexToInt(byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.tabHexToInt(byteArray) target is: UserManagement method is: tabHexToInt(byte[])
Matched Method is: tabHexToInt([B)I
TestCase is: byte[] byteArray = new byte[4];
int _int = 90;
byteArray[3] = (byte) _int;
UserManagement.tabHexToInt(byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@fba893b6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: account_idToOffline(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.account_idToOffline((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[6];
UserManagement.account_idToOffline((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x1a, 0x2b, 0x3c, 0x4d, 0x5e, ((byte) (0xff)) };
        UserManagement.account_idToOffline(((Socket_data) (null)), byteArray);
    }
}
statement is: byte[] byteArray = new byte[]{ 0x1a, 0x2b, 0x3c, 0x4d, 0x5e, ((byte) (0xff)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[]{ 0x1a, 0x2b, 0x3c, 0x4d, 0x5e, ((byte) (0xff)) } Elements: [0x1a, 0x2b, 0x3c, 0x4d, 0x5e, ((byte) (0xff))]
lengths: [6] []
statement is: UserManagement.account_idToOffline(((Socket_data) (null)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.account_idToOffline(((Socket_data) (null)), byteArray) target is: UserManagement method is: account_idToOffline(Socket_data,byte[])
Matched Method is: account_idToOffline(Lorg/javathena/core/data/Socket_data;[B)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: Socket_data socket_data = null;
byte[] byteArray = null;
UserManagement.account_idToOffline(socket_data, byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@2303a6ca type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: account_idToOnline(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.account_idToOnline((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[9];
UserManagement.account_idToOnline((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9 };
        UserManagement.account_idToOnline(((Socket_data) (null)), byteArray);
    }
}
statement is: // Improved test data:
byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9 } Elements: [0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9]
lengths: [9] []
statement is: UserManagement.account_idToOnline(((Socket_data) (null)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.account_idToOnline(((Socket_data) (null)), byteArray) target is: UserManagement method is: account_idToOnline(Socket_data,byte[])
Matched Method is: account_idToOnline(Lorg/javathena/core/data/Socket_data;[B)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: Socket_data socket_data = null;
byte[] byteArray = null;
UserManagement.account_idToOnline(socket_data, byteArray);

statement is: addGM(II)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean addGM = UserManagement.addGM(10000, 10000)
test data is: UserManagement.addGM(10000, 10000);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addGM(10001, "GM1");// Add a user with ID 10001 and name GM1 as a GM }}

    }
}
statement is: UserManagement.addGM(10001, "GM1")// Add a user with ID 10001 and name GM1 as a GM }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addGM(10001, "GM1")// Add a user with ID 10001 and name GM1 as a GM }}
 target is: UserManagement method is: addGM(int,java.lang.String)
Matched Method is: addGM(II)Z
TestCase is: int _int = 10001;
String string = "GM1";
UserManagement.addGM(_int, (int) string);

statement is: administationLogin(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.administationLogin((Socket_data) null)
test data is: UserManagement.administationLogin((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        UserManagement.administrationLogin(new SocketData("john.doe@example.com", "password123"));
    }
}
statement is: // Improved test data
UserManagement.administrationLogin(new SocketData("john.doe@example.com", "password123")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
UserManagement.administrationLogin(new SocketData("john.doe@example.com", "password123")) target is: UserManagement method is: administrationLogin(SocketData)
statement is: org.evosuite.testcase.statements.FieldStatement@eb578169 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.net.Proxy
statement code is: Proxy proxy = Proxy.NO_PROXY
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0)
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: banResquest(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.banResquest(arg0)
test data is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.banResquest(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Proxy proxy = new Proxy("proxy.example.com", 8080);
        MockSocket mockSocket = new MockSocket("192.168.1.100", 80);
        Socket_data socket_data = new Socket_data(mockSocket);
        UserManagement.banResquest(socket_data);
    }
}
statement is: Proxy proxy = new Proxy("proxy.example.com", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket("192.168.1.100", 80), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V
statement is: UserManagement.banResquest(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.banResquest(socket_data) target is: UserManagement method is: banResquest(Socket_data)
Matched Method is: banResquest(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.banResquest(socket_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.login.parse.FromClient()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromClient
statement code is: FromClient fromClient = new FromClient()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: changeSex(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.changeSex(arg0)
test data is: MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
UserManagement.changeSex(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        FromClient fromClient = new FromClient();
        // Set up a mock user object with the initial values
        User user = new User(1, "John", 25, Sex.MALE);
        mockSocket.setUser(user);
        // Set up a socket_data object that contains the mock user and fromClient objects
        Socket_data socket_data = new Socket_data(mockSocket, fromClient);
        // Invoke the changeSex() method with a valid sex value
        UserManagement.changeSex(socket_data, FEMALE);
        // Verify that the user's sex has been changed to FEMALE
        assertEquals("User's sex should be changed to FEMALE", FEMALE, user.getSex());
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromClient fromClient = new FromClient(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Set up a mock user object with the initial values
User user = new User(1, "John", 25, Sex.MALE), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.setUser(user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.setUser(user) target is: mockSocket method is: setUser(User)
statement is: // Set up a socket_data object that contains the mock user and fromClient objects
Socket_data socket_data = new Socket_data(mockSocket, fromClient), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Invoke the changeSex() method with a valid sex value
UserManagement.changeSex(socket_data, FEMALE), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Invoke the changeSex() method with a valid sex value
UserManagement.changeSex(socket_data, FEMALE) target is: UserManagement method is: changeSex(Socket_data)
statement is: // Verify that the user's sex has been changed to FEMALE
assertEquals("User's sex should be changed to FEMALE", FEMALE, user.getSex()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Verify that the user's sex has been changed to FEMALE
assertEquals("User's sex should be changed to FEMALE", FEMALE, user.getSex()) target is:  method is: assertEquals(java.lang.String,<unknown>,<unknown>)
TestCase is: MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);

statement is: org.evosuite.testcase.statements.FieldStatement@eb578169 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.net.Proxy
statement code is: Proxy proxy = Proxy.NO_PROXY
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0)
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: changeSexChrif_changesex(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.changeSexChrif_changesex(arg0)
test data is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.changeSexChrif_changesex(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Proxy proxy = new Proxy("192.168.0.1", 8080, "username", "password");
        MockSocket mockSocket = new MockSocket(proxy);
        Socket_data socket_data = new Socket_data(mockSocket);
        UserManagement.changeSexChrif_changesex(socket_data);
    }
}
statement is: Proxy proxy = new Proxy("192.168.0.1", 8080, "username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V
statement is: UserManagement.changeSexChrif_changesex(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.changeSexChrif_changesex(socket_data) target is: UserManagement method is: changeSexChrif_changesex(Socket_data)
Matched Method is: changeSexChrif_changesex(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.changeSexChrif_changesex(socket_data);

statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: org.evosuite.testcase.statements.ArrayStatement@b9c47e59 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.charServerToAuthentify(arg0, arg1)
test data is: Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
UserManagement.charServerToAuthentify(socket_data, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Socket_data socket_data = new Socket_data(((Socket) ("127.0.0.1")));
        byte[] byteArray = new byte[9];
        UserManagement.charServerToAuthentify(socket_data, byteArray);
    }
}
statement is: Socket_data socket_data = new Socket_data(((Socket) ("127.0.0.1"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: UserManagement.charServerToAuthentify(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.charServerToAuthentify(socket_data, byteArray) target is: UserManagement method is: charServerToAuthentify(Socket_data,byte[])
Matched Method is: charServerToAuthentify(Lorg/javathena/core/data/Socket_data;[B)V
TestCase is: String string = "127.0.0.1";
Socket_data socket_data = new Socket_data((Socket) string);
byte[] byteArray = new byte[9];
UserManagement.charServerToAuthentify(socket_data, byteArray);

statement is: org.evosuite.testcase.statements.FieldStatement@eb578169 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.net.Proxy
statement code is: Proxy proxy = Proxy.NO_PROXY
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0)
statement is: org.javathena.login.parse.FromClient()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromClient
statement code is: FromClient fromClient = new FromClient()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: org.evosuite.testcase.statements.ArrayStatement@203330b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: connectionOfCharServer(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.connectionOfCharServer(arg0, arg1)
test data is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
UserManagement.connectionOfCharServer(socket_data, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Proxy proxy = Proxy.NO_PROXY;
        MockSocket mockSocket = new MockSocket(proxy);
        FromClient fromClient = new FromClient();
        Socket_data socket_data = new Socket_data(mockSocket, fromClient);
        byte[] byteArray = new byte[9];
        UserManagement.connectionOfCharServer(socket_data, byteArray);
        // Improved test data:
        Proxy proxy = Proxy.HTTPS;
        MockSocket mockSocket = new MockSocket("127.0.0.1", 8080);
        FromClient fromClient = new FromClient("username", "password");
        Socket_data socket_data = new Socket_data(mockSocket, fromClient);
        byte[] byteArray = new byte[9];
        UserManagement.connectionOfCharServer(socket_data, byteArray);
    }
}
statement is: Proxy proxy = Proxy.NO_PROXY, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Proxy.NO_PROXY is Proxy
CtField is: public static final java.net.Proxy java.net.Proxy.NO_PROXY Proxy NO_PROXY
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromClient fromClient = new FromClient(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromClient), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: UserManagement.connectionOfCharServer(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfCharServer(socket_data, byteArray) target is: UserManagement method is: connectionOfCharServer(Socket_data,byte[])
Matched Method is: connectionOfCharServer(Lorg/javathena/core/data/Socket_data;[B)V
statement is: // Improved test data:
Proxy proxy = Proxy.HTTPS, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Proxy.HTTPS is Proxy
CtField is: public static final java.net.Proxy java.net.Proxy.NO_PROXY Proxy NO_PROXY
statement is: MockSocket mockSocket = new MockSocket("127.0.0.1", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromClient fromClient = new FromClient("username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromClient), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: UserManagement.connectionOfCharServer(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfCharServer(socket_data, byteArray) target is: UserManagement method is: connectionOfCharServer(Socket_data,byte[])
Matched Method is: connectionOfCharServer(Lorg/javathena/core/data/Socket_data;[B)V
TestCase is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
UserManagement.connectionOfCharServer(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
UserManagement.connectionOfCharServer(socket_data, byteArray);

statement is: org.evosuite.testcase.statements.FieldStatement@eb578169 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.net.Proxy
statement code is: Proxy proxy = Proxy.NO_PROXY
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0)
statement is: org.javathena.login.parse.FromClient()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromClient
statement code is: FromClient fromClient = new FromClient()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: org.evosuite.testcase.statements.ArrayStatement@2e46fbd type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: connectionOfClient(Lorg/javathena/core/data/Socket_data;[BZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.connectionOfClient(arg0, arg1, true)
test data is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
UserManagement.connectionOfClient(socket_data, byteArray, true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Proxy proxy = Proxy.create("192.168.1.1", 8080);
        MockSocket mockSocket = new MockSocket(proxy);
        FromClient fromClient = new FromClient();
        Socket_data socket_data = new Socket_data(mockSocket, fromClient);
        byte[] byteArray = new byte[9];
        UserManagement.connectionOfClient(socket_data, byteArray, true);
    }
}
statement is: Proxy proxy = Proxy.create("192.168.1.1", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Proxy.create("192.168.1.1", 8080) target is: Proxy method is: create(java.lang.String,int)
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V
statement is: FromClient fromClient = new FromClient(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromClient), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: UserManagement.connectionOfClient(socket_data, byteArray, true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfClient(socket_data, byteArray, true) target is: UserManagement method is: connectionOfClient(Socket_data,byte[],boolean)
Matched Method is: connectionOfClient(Lorg/javathena/core/data/Socket_data;[BZ)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: FromClient fromClient = new FromClient();
byte[] byteArray = new byte[9];
boolean _boolean = true;
boolean _boolean = null;
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) _boolean, _boolean);

statement is: connectionOfClientEncrypted(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.connectionOfClientEncrypted((Socket_data) null)
test data is: UserManagement.connectionOfClientEncrypted((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.connectionOfClientEncrypted("localhost" = 8080);
    }
}
statement is: UserManagement.connectionOfClientEncrypted("localhost" = 8080), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.connectionOfClientEncrypted("localhost" = 8080) target is: UserManagement method is: connectionOfClientEncrypted()
Matched Method is: connectionOfClientEncrypted(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.connectionOfClientEncrypted(socket_data);

statement is: dynamicFailBanCheckMySQL(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.dynamicFailBanCheckMySQL(",P2{~")
test data is: UserManagement.dynamicFailBanCheckMySQL(",P2{~");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.dynamicFailBanCheckMySQL("192.168.0.1", "John Doe", "johndoe@email.com", "12345", 1, 1);
    }
}
statement is: UserManagement.dynamicFailBanCheckMySQL("192.168.0.1", "John Doe", "johndoe@email.com", "12345", 1, 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.dynamicFailBanCheckMySQL("192.168.0.1", "John Doe", "johndoe@email.com", "12345", 1, 1) target is: UserManagement method is: dynamicFailBanCheckMySQL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)
statement is: org.evosuite.testcase.statements.FieldStatement@eb578169 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.net.Proxy
statement code is: Proxy proxy = Proxy.NO_PROXY
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0)
statement is: org.javathena.login.parse.FromClient()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromClient
statement code is: FromClient fromClient = new FromClient()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: emailCreation(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.emailCreation(arg0)
test data is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
UserManagement.emailCreation(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Proxy proxy = new Proxy(Type.HTTP, new InetSocketAddress("localhost", 8080));
        MockSocket mockSocket = new MockSocket(proxy);
        FromClient fromClient = new FromClient();
        Socket_data socket_data = new Socket_data(mockSocket, fromClient);
        UserManagement.emailCreation(socket_data);
    }
}
statement is: Proxy proxy = new Proxy(Type.HTTP, new InetSocketAddress("localhost", 8080)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V
statement is: FromClient fromClient = new FromClient(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromClient), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V
statement is: UserManagement.emailCreation(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.emailCreation(socket_data) target is: UserManagement method is: emailCreation(Socket_data)
Matched Method is: emailCreation(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: FromClient fromClient = new FromClient();
Socket_data socket_data = null;
UserManagement.emailCreation(socket_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, (IParse) null)
statement is: emailLimitedTime(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.emailLimitedTime(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
UserManagement.emailLimitedTime(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket, ((IParse) (null)));
        UserManagement.emailLimitedTime(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, ((IParse) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.emailLimitedTime(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.emailLimitedTime(socket_data) target is: UserManagement method is: emailLimitedTime(Socket_data)
Matched Method is: emailLimitedTime(Lorg/javathena/core/data/Socket_data;)V
TestCase is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
UserManagement.emailLimitedTime(socket_data);

statement is: getUserSQL(Ljava/sql/ResultSet;)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data userSQL = UserManagement.getUserSQL((ResultSet) null)
test data is: UserManagement.getUserSQL((ResultSet) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.getUserSQL("SELECT * FROM users WHERE id = 1");
    }
}
statement is: UserManagement.getUserSQL("SELECT * FROM users WHERE id = 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.getUserSQL("SELECT * FROM users WHERE id = 1") target is: UserManagement method is: getUserSQL(java.lang.String)
Matched Method is: getUserSQL(Ljava/sql/ResultSet;)Lorg/javathena/core/data/Auth_data;
TestCase is: String string = "SELECT * FROM users WHERE id = 1";
UserManagement.getUserSQL((ResultSet) string);

statement is: org.evosuite.testcase.statements.ArrayStatement@7857f490 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: receiveAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.receiveAccountReg2((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[9];
UserManagement.receiveAccountReg2((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String data = "Sample Data";
        UserManagement.receiveAccountReg2(((Socket_data) (data)), byteArray);
    }
}
statement is: String data = "Sample Data", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: UserManagement.receiveAccountReg2(((Socket_data) (data)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.receiveAccountReg2(((Socket_data) (data)), byteArray) target is: UserManagement method is: receiveAccountReg2(Socket_data)
Matched Method is: receiveAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: String string = "Sample Data";
byte[] byteArray = null;
UserManagement.receiveAccountReg2((Socket_data) string, byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@499c769f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: requestAccountData(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.requestAccountData((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[7];
UserManagement.requestAccountData((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 };
        UserManagement.requestAccountData(((Socket_data) (null)), byteArray);
    }
}
statement is: byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 } Elements: [0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7]
lengths: [7] []
statement is: UserManagement.requestAccountData(((Socket_data) (null)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.requestAccountData(((Socket_data) (null)), byteArray) target is: UserManagement method is: requestAccountData(Socket_data,byte[])
Matched Method is: requestAccountData(Lorg/javathena/core/data/Socket_data;[B)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: Socket_data socket_data = null;
byte[] byteArray = null;
UserManagement.requestAccountData(socket_data, byteArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@5438a28f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[12]
statement is: requestAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.requestAccountReg2((Socket_data) null, arg1)
test data is: byte[] byteArray = new byte[12];
UserManagement.requestAccountReg2((Socket_data) null, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa };
        UserManagement.requestAccountReg2(((Socket_data) (null)), byteArray);
    }
}
statement is: // Improved test data for the above code snippet
byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[12] isAssignment: false Array: new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa } Elements: [0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa]
lengths: [12] []
statement is: UserManagement.requestAccountReg2(((Socket_data) (null)), byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.requestAccountReg2(((Socket_data) (null)), byteArray) target is: UserManagement method is: requestAccountReg2(Socket_data,byte[])
Matched Method is: requestAccountReg2(Lorg/javathena/core/data/Socket_data;[B)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: Socket_data socket_data = null;
byte[] byteArray = null;
UserManagement.requestAccountReg2(socket_data, byteArray);

statement is: sendUserList(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.sendUserList((Socket_data) null)
test data is: UserManagement.sendUserList((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.sendUserList(new Socket_data("johndoe", "password123"));
    }
}
statement is: UserManagement.sendUserList(new Socket_data("johndoe", "password123")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.sendUserList(new Socket_data("johndoe", "password123")) target is: UserManagement method is: sendUserList(Socket_data)
Matched Method is: sendUserList(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
UserManagement.sendUserList(socket_data);

statement is: org.evosuite.testcase.statements.FieldStatement@eb578169 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.net.Proxy
statement code is: Proxy proxy = Proxy.NO_PROXY
statement is: org.evosuite.runtime.mock.java.net.MockSocket(Ljava/net/Proxy;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket(arg0)
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@dd1af36d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: statusChange(Lorg/javathena/core/data/Socket_data;[B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.statusChange(arg0, arg1)
test data is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[3];
UserManagement.statusChange(socket_data, byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Proxy proxy = Proxy.NO_PROXY;
        MockSocket mockSocket = new MockSocket(proxy);
        Socket_data socket_data = new Socket_data(mockSocket);
        byte[] byteArray = new byte[]{ 1, 2, 3 };
        UserManagement.statusChange(socket_data, byteArray);
    }
}
statement is: Proxy proxy = Proxy.NO_PROXY, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Proxy.NO_PROXY is Proxy
CtField is: public static final java.net.Proxy java.net.Proxy.NO_PROXY Proxy NO_PROXY
statement is: MockSocket mockSocket = new MockSocket(proxy), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 1, 2, 3 } Elements: [1, 2, 3]
lengths: [3] []
statement is: UserManagement.statusChange(socket_data, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.statusChange(socket_data, byteArray) target is: UserManagement method is: statusChange(Socket_data,byte[])
Matched Method is: statusChange(Lorg/javathena/core/data/Socket_data;[B)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = null;
UserManagement.statusChange(socket_data, byteArray);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: toChangeAnEmail(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.toChangeAnEmail(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.toChangeAnEmail(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        // Changing the email address to a more descriptive and representative value
        Socket_data socket_data = new Socket_data(mockSocket, "johndoe@example.com");
        UserManagement.toChangeAnEmail(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changing the email address to a more descriptive and representative value
Socket_data socket_data = new Socket_data(mockSocket, "johndoe@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.toChangeAnEmail(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.toChangeAnEmail(socket_data) target is: UserManagement method is: toChangeAnEmail(Socket_data)
Matched Method is: toChangeAnEmail(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = null;
UserManagement.toChangeAnEmail(socket_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, (IParse) null)
statement is: unban(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.unban(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
UserManagement.unban(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("localhost", Socket_data.DEFAULT_PORT);
        Socket_data socketData = new Socket_data(mockSocket, "");
        UserManagement.unban(socketData);
    }
}
statement is: MockSocket mockSocket = new MockSocket("localhost", Socket_data.DEFAULT_PORT), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socketData = new Socket_data(mockSocket, ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.unban(socketData), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.unban(socketData) target is: UserManagement method is: unban(Socket_data)
Matched Method is: unban(Lorg/javathena/core/data/Socket_data;)V
TestCase is: String string = "";
Socket_data socket_data = new Socket_data((Socket) string, (IParse) null);
UserManagement.unban(socket_data);

* test suite isTestSuite: 158
Test 0: 
UserManagement.addAccountIdCount((-591));
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount((-1));
Test 3: 
UserManagement.debugXML();
Test 4: 
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
UserManagement.unLogServer(socket_data);
Test 5: 
UserManagement.toBecomeGM((Socket_data) null);
Test 6: 
UserManagement.addUserSQL(":nh~:U[l'(3i", ":nh~:U[l'(3i", ":nh~:U[l'(3i", (-144));
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("n#fAnZ|dlXXGu$O");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
Auth_data userTxt = UserManagement.getUserTxt(account_id);
// Undeclared exception!
FastMap<String, String> account_reg2 = null;
try { 
  account_reg2 = userTxt.getAccount_reg2();
  fail("Expecting exception: CodeUnderTestException");

} catch(Throwable e) {
}

FastMap<String, String> setShared = account_reg2.setShared(false);
auth_data.setAccount_reg2(setShared);
auth_data.setEmail("");
UserManagement.removeUser(auth_data);
Test 11: 
MockSocket mockSocket = new MockSocket();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
UserManagement.addSession(socket_data);
Test 12: 
// Undeclared exception!
try { 
  UserManagement.getSessionAt(154);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

Test 13: 
UserManagement.addAccountIdCount();
Test 14: 
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 15: 
UserManagement.getAccountID("");
// Undeclared exception!
try { 
  UserManagement.getUserSQL((Integer) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 16: 
UserManagement.online_db_final();
Test 17: 
UserManagement.getNBUser();
Test 18: 
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("3+nU+");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 19: 
Auth_data addUserTXT = UserManagement.addUserTXT("9w*", "9w*", "a@a.com", 't');
UserManagement.removeUser(addUserTXT);
Test 20: 
byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);
Test 21: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 22: 
UserManagement.levelIsValid(3, "", 3, 5);
Test 23: 
UserManagement.levelIsValid((-257), "8\"AWsEQ", (-257), (-257));
Test 24: 
UserManagement.levelIsValid(129, "set users %s : %d\n", 129, 129);
Test 25: 
Integer integer = new Integer(2);
UserManagement.remove_online_user(integer);
Test 26: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 27: 
byte[] byteArray = new byte[0];
UserManagement.charif_sendallwos(0, byteArray);
Test 28: 
Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
FastMap<String, String> account_reg2 = addUserTXT.getAccount_reg2();
account_reg2.put(":", "_");
UserManagement.addUser(addUserTXT);
Test 29: 
UserManagement.isGM(3431L);
Test 30: 
UserManagement.getUserTxt((String) null);
Test 31: 
UserManagement.getAccountIds();
Test 32: 
UserManagement.dynamicFailBanCheckTXT((String) null);
Test 33: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
Auth_data auth_data = new Auth_data();
fastMap.put((Integer) null, auth_data);
UserManagement.setAuth_dats(fastMap);
Test 34: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
Test 35: 
UserManagement.getAuth_dats();
Test 36: 
UserManagement.is_user_online((Integer) null);
Test 37: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
byteArray[1] = (byte)113;
byteArray[2] = (byte) (-84);
byteArray[3] = (byte) (-67);
byteArray[4] = (byte)113;
byteArray[5] = (byte)114;
byteArray[6] = (byte)8;
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 38: 
Auth_data auth_data = new Auth_data();
auth_data.setBan_until_time((-966L));
UserManagement.addUser(auth_data);
Test 39: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setBan_until_time(3750L);
UserManagement.addUser(addUserTXT);
Test 40: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setCharserver(1242);
UserManagement.addUser(addUserTXT);
Test 41: 
Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
addUserTXT.setCharserver(0);
UserManagement.addUser(addUserTXT);
Test 42: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(9);
UserManagement.addUser(auth_data);
Test 43: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-17L));
UserManagement.addUser(auth_data);
Test 44: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(219L);
UserManagement.addUser(auth_data);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-4936));
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1109);
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(3);
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1541));
UserManagement.addUser(auth_data);
Test 49: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(123);
UserManagement.addUser(auth_data);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-671));
UserManagement.addUser(auth_data);
Test 51: 
Auth_data addUserTXT = UserManagement.addUserTXT(" )uHN,C0", " )uHN,C0", " )uHN,C0", 'l');
addUserTXT.setLogin_id2(37);
UserManagement.addUser(addUserTXT);
Test 52: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount((-1));
UserManagement.addUser(auth_data);
Test 53: 
Auth_data auth_data = new Auth_data();
auth_data.setLastlogin();
UserManagement.addUser(auth_data);
Test 54: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(54);
UserManagement.addUser(auth_data);
Test 55: 
Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
addUserTXT.setResetLogincoun(true);
UserManagement.addUser(addUserTXT);
Test 56: 
UserManagement.addUserTXT("gM?#V|uZ", "gM?#V|uZ", "gM?#V|uZ", '[');
UserManagement.getAccountIdCount();
Test 57: 
UserManagement.getNBSession();
int[] intArray = new int[3];
UserManagement.charif_sendallwos(2, intArray);
Test 58: 
UserManagement.addUserTXT(">", ">", ">", 'v');
UserManagement.getNBUser();
Test 59: 
byte[] byteArray = new byte[7];
byteArray[6] = (byte) (-76);
UserManagement.tabHexToInt(byteArray);
Test 60: 
byte[] byteArray = new byte[4];
byteArray[3] = (byte)90;
UserManagement.tabHexToInt(byteArray);
Test 61: 
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 62: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 63: 
// Undeclared exception!
try { 
  UserManagement.addGM(10000, 10000);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 64: 
// Undeclared exception!
try { 
  UserManagement.administationLogin((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 66: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 67: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 68: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 69: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 70: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 71: 
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 72: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL(",P2{~");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 73: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 74: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 75: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 76: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.requestAccountData((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 78: 
byte[] byteArray = new byte[12];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 79: 
UserManagement.sendUserList((Socket_data) null);
Test 80: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[3];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 81: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 82: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 83: 
UserManagement.addAccountIdCount((int) (Integer) null);

Test 84: 

Test 85: 
UserManagement.setAccountIdCount(5);

Test 86: 
UserManagement.debugXML();

Test 87: 
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) fromChar, fromChar);
UserManagement.unLogServer(socket_data);

Test 88: 
UserManagement.toBecomeGM((Socket_data) null);
UserManagement.toBecomeGM((Socket_data) null);
UserManagement.toBecomeGM((Socket_data) null);

Test 89: 
UserManagement.addUserSQL("John Doe", "johndoe@example.com", "password123", 10);

Test 90: 

Test 91: 
UserManagement.getUserSQL("user1");

Test 92: 
Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
Auth_data userTxt = UserManagement.getUserTxt(account_id);
FastMap<String, String> account_reg2 = userTxt.getAccount_reg2();
boolean _boolean = false;
FastMap<String, String> setShared = account_reg2.setShared(_boolean);
auth_data.setAccount_reg2(setShared);
String string = "user@example.com";
auth_data.setEmail(string);
UserManagement.removeUser(auth_data);

Test 93: 
UserManagement.addSession((Socket_data) null);

Test 94: 
UserManagement.add_online_user((Auth_data) null);

Test 95: 
UserManagement.getAccountID("9876543210");
UserManagement.getUserSQL((Integer) null);

Test 96: 

Test 97: 

Test 98: 
UserManagement.addIpToBanListMySQL("192.168.0.1");

Test 99: 
Auth_data addUserTXT = UserManagement.addUserTXT("password1234", "password1234", "test@gmail.com", 't');
UserManagement.removeUser(addUserTXT);

Test 100: 
byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);
UserManagement.tabHexToInt(byteArray);

Test 101: 
byte[] byteArray = new byte[7];
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) false, (boolean) (Boolean) null);

Test 102: 
UserManagement.levelIsValid(3, "Engineer", 3, 5);

Test 103: 
UserManagement.levelIsValid((int) "8\"AWsEQ", (String) null, (int) (Integer) null, (int) (Integer) null);

Test 104: 
UserManagement.levelIsValid(129, "set users %s : %d\n", 30, 30);

Test 105: 
Integer integer = new Integer(1000);
UserManagement.remove_online_user((Integer) "johndoe");

Test 106: 
Integer integer = new Integer(1001);
UserManagement.remove_online_user(integer);

Test 107: 
UserManagement.charif_sendallwos(0, (byte[]) null);

Test 108: 
String string = "S0022";
Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
((Auth_data)"S0022").getAccount_reg2();
String string = "email";
String string = "johndoe@example.com";
((FastMap) string).put(string, string);
String string = "password";
String string = "1234567890";
((FastMap) string).put(string, string);
String string = "firstName";
String string = "John";
((FastMap) string).put(string, string);
String string = "lastName";
String string = "Doe";
((FastMap) string).put(string, string);
UserManagement.addUser(addUserTXT);

Test 109: 
UserManagement.isGM((long) (Long) null);
long _long = null;
UserManagement.isGM(_long);

Test 110: 
UserManagement.getUserTxt("John Doe");

Test 111: 

Test 112: 
UserManagement.dynamicFailBanCheckTXT("");
UserManagement.dynamicFailBanCheckTXT(" ");
UserManagement.dynamicFailBanCheckTXT("user");
UserManagement.dynamicFailBanCheckTXT("1234567890");

Test 113: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
((FastMap)0).put((Integer) null, (Auth_data) null);
UserManagement.setAuth_dats(fastMap);

Test 114: 

Test 115: 
UserManagement.is_user_online((Integer) 1234567890);
UserManagement.is_user_online((Integer) null);
UserManagement.is_user_online((Integer) 0);

Test 116: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
byteArray[1] = (byte) 'M';
byteArray[2] = (byte) (-84);
byteArray[3] = (byte) (-67);
byteArray[4] = (byte) 'M';
byteArray[5] = (byte) 'D';
byteArray[6] = (byte) 8;
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);

Test 117: 
Auth_data auth_data = new Auth_data();
auth_data.setBan_until_time((long) (Long) null);
UserManagement.addUser(auth_data);
Auth_data auth_data = new Auth_data();
long _long = null;
auth_data.setBan_until_time(_long);
UserManagement.addUser(auth_data);

Test 118: 
Auth_data addUserTXT = UserManagement.addUserTXT("johnDoe", "password123", "123 Main St.", 'o');
((Auth_data)"johnDoe").setCharserver(1242);
UserManagement.addUser(addUserTXT);

Test 119: 
Auth_data addUserTXT = UserManagement.addUserTXT("John", "Doe", "", 'l');
((Auth_data)"John").setCharserver(0);
UserManagement.addUser(addUserTXT);

Test 120: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((int) "Mobile");
UserManagement.addUser(auth_data);

Test 121: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((long) (Long) null);
UserManagement.addUser(auth_data);

Test 122: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(219L);
UserManagement.addUser(auth_data);

Test 123: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((int) (Integer) null);
UserManagement.addUser(auth_data);

Test 124: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((int) "active");
UserManagement.addUser(auth_data);

Test 125: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(9);
UserManagement.addUser(auth_data);

Test 126: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(1023456789);
UserManagement.addUser(auth_data);

Test 127: 
Auth_data auth_data = new Auth_data();
UserManagement.addUser(auth_data);

Test 128: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((int) "johndoe");
UserManagement.addUser(auth_data);

Test 129: 
Auth_data addUserTXT = UserManagement.addUserTXT("Alice", "alice@example.com", "Password@123456", 'l');
((Auth_data)"Alice").setLogin_id2(10);
UserManagement.addUser(addUserTXT);

Test 130: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(1234567890);
UserManagement.addUser(auth_data);

Test 131: 
UserManagement.addUser((Auth_data) null);

Test 132: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion((int) "v5.4");
UserManagement.addUser(auth_data);

Test 133: 
Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
((Auth_data)"&^%5jDf").setResetLogincoun(true);
UserManagement.addUser(addUserTXT);

Test 134: 
UserManagement.addUserTXT("john.doe@example.com", "johndoe123", "John Doe", '[');
UserManagement.getAccountIdCount();

Test 135: 
UserManagement.addUserTXT("John Smith", "johnsmith@example.com", "+1 (555) 123-4567", (char) "Male");
UserManagement.getNBUser();
String string = "Jane Doe";
String string = "janedoe@subdomain.example.com";
String string = "+1 (555) 987-6543";
String string = "Female";
UserManagement.addUserTXT(string, string, string, (char) string);
UserManagement.getNBUser();
String string = "John Johnson";
String string = "johnjohnson@example.org";
String string = "+1 (555) 234-5678";
String string = "Male";
UserManagement.addUserTXT(string, string, string, (char) string);
UserManagement.getNBUser();

Test 136: 
byte[] byteArray = new byte[7];
byteArray[6] = (byte) 12;
byteArray[6] = (byte) 34;
byteArray[6] = (byte) 56;
byteArray[6] = (byte) 56;
byteArray[6] = (byte) 90;
byteArray[6] = (byte) 90;
byteArray[6] = (byte) 90;
UserManagement.tabHexToInt(byteArray);

Test 137: 
byte[] byteArray = new byte[4];
byteArray[3] = (byte) 90;
UserManagement.tabHexToInt(byteArray);

Test 138: 
UserManagement.account_idToOffline((Socket_data) null, (byte[]) null);

Test 139: 
UserManagement.account_idToOnline((Socket_data) null, (byte[]) null);

Test 140: 
UserManagement.addGM(10001, (int) "GM1");

Test 141: 
UserManagement.banResquest((Socket_data) null);

Test 142: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);

Test 143: 
UserManagement.changeSexChrif_changesex((Socket_data) null);

Test 144: 
Socket_data socket_data = new Socket_data((Socket) "127.0.0.1");
byte[] byteArray = new byte[9];
UserManagement.charServerToAuthentify(socket_data, byteArray);

Test 145: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
UserManagement.connectionOfCharServer(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
UserManagement.connectionOfCharServer(socket_data, byteArray);

Test 146: 
FromClient fromClient = new FromClient();
byte[] byteArray = new byte[9];
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) true, (boolean) (Boolean) null);

Test 147: 
UserManagement.connectionOfClientEncrypted((Socket_data) null);

Test 148: 
FromClient fromClient = new FromClient();
UserManagement.emailCreation((Socket_data) null);

Test 149: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
UserManagement.emailLimitedTime(socket_data);

Test 150: 
UserManagement.getUserSQL((ResultSet) "SELECT * FROM users WHERE id = 1");

Test 151: 
UserManagement.receiveAccountReg2((Socket_data) "Sample Data", (byte[]) null);

Test 152: 
UserManagement.requestAccountData((Socket_data) null, (byte[]) null);

Test 153: 
UserManagement.requestAccountReg2((Socket_data) null, (byte[]) null);

Test 154: 
UserManagement.sendUserList((Socket_data) null);

Test 155: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.statusChange(socket_data, (byte[]) null);

Test 156: 
MockSocket mockSocket = new MockSocket();
UserManagement.toChangeAnEmail((Socket_data) null);

Test 157: 
Socket_data socket_data = new Socket_data((Socket) "", (IParse) null);
UserManagement.unban(socket_data);


* Generated after the refinement and before minimization 158 tests with total length 410
* test suite isTestSuite: 158
Test 0: 
UserManagement.addAccountIdCount((-591));
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount((-1));
Test 3: 
UserManagement.debugXML();
Test 4: 
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
UserManagement.unLogServer(socket_data);
Test 5: 
UserManagement.toBecomeGM((Socket_data) null);
Test 6: 
UserManagement.addUserSQL(":nh~:U[l'(3i", ":nh~:U[l'(3i", ":nh~:U[l'(3i", (-144));
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("n#fAnZ|dlXXGu$O");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
Auth_data userTxt = UserManagement.getUserTxt(account_id);
// Undeclared exception!
FastMap<String, String> account_reg2 = null;
try { 
  account_reg2 = userTxt.getAccount_reg2();
  fail("Expecting exception: CodeUnderTestException");

} catch(Throwable e) {
}

FastMap<String, String> setShared = account_reg2.setShared(false);
auth_data.setAccount_reg2(setShared);
auth_data.setEmail("");
UserManagement.removeUser(auth_data);
Test 11: 
MockSocket mockSocket = new MockSocket();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
UserManagement.addSession(socket_data);
Test 12: 
// Undeclared exception!
try { 
  UserManagement.getSessionAt(154);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

Test 13: 
UserManagement.addAccountIdCount();
Test 14: 
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 15: 
UserManagement.getAccountID("");
// Undeclared exception!
try { 
  UserManagement.getUserSQL((Integer) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 16: 
UserManagement.online_db_final();
Test 17: 
UserManagement.getNBUser();
Test 18: 
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("3+nU+");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 19: 
Auth_data addUserTXT = UserManagement.addUserTXT("9w*", "9w*", "a@a.com", 't');
UserManagement.removeUser(addUserTXT);
Test 20: 
byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);
Test 21: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 22: 
UserManagement.levelIsValid(3, "", 3, 5);
Test 23: 
UserManagement.levelIsValid((-257), "8\"AWsEQ", (-257), (-257));
Test 24: 
UserManagement.levelIsValid(129, "set users %s : %d\n", 129, 129);
Test 25: 
Integer integer = new Integer(2);
UserManagement.remove_online_user(integer);
Test 26: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 27: 
byte[] byteArray = new byte[0];
UserManagement.charif_sendallwos(0, byteArray);
Test 28: 
Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
FastMap<String, String> account_reg2 = addUserTXT.getAccount_reg2();
account_reg2.put(":", "_");
UserManagement.addUser(addUserTXT);
Test 29: 
UserManagement.isGM(3431L);
Test 30: 
UserManagement.getUserTxt((String) null);
Test 31: 
UserManagement.getAccountIds();
Test 32: 
UserManagement.dynamicFailBanCheckTXT((String) null);
Test 33: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
Auth_data auth_data = new Auth_data();
fastMap.put((Integer) null, auth_data);
UserManagement.setAuth_dats(fastMap);
Test 34: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
Test 35: 
UserManagement.getAuth_dats();
Test 36: 
UserManagement.is_user_online((Integer) null);
Test 37: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
byteArray[1] = (byte)113;
byteArray[2] = (byte) (-84);
byteArray[3] = (byte) (-67);
byteArray[4] = (byte)113;
byteArray[5] = (byte)114;
byteArray[6] = (byte)8;
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 38: 
Auth_data auth_data = new Auth_data();
auth_data.setBan_until_time((-966L));
UserManagement.addUser(auth_data);
Test 39: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setBan_until_time(3750L);
UserManagement.addUser(addUserTXT);
Test 40: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setCharserver(1242);
UserManagement.addUser(addUserTXT);
Test 41: 
Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
addUserTXT.setCharserver(0);
UserManagement.addUser(addUserTXT);
Test 42: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(9);
UserManagement.addUser(auth_data);
Test 43: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-17L));
UserManagement.addUser(auth_data);
Test 44: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(219L);
UserManagement.addUser(auth_data);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-4936));
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1109);
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(3);
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1541));
UserManagement.addUser(auth_data);
Test 49: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(123);
UserManagement.addUser(auth_data);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-671));
UserManagement.addUser(auth_data);
Test 51: 
Auth_data addUserTXT = UserManagement.addUserTXT(" )uHN,C0", " )uHN,C0", " )uHN,C0", 'l');
addUserTXT.setLogin_id2(37);
UserManagement.addUser(addUserTXT);
Test 52: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount((-1));
UserManagement.addUser(auth_data);
Test 53: 
Auth_data auth_data = new Auth_data();
auth_data.setLastlogin();
UserManagement.addUser(auth_data);
Test 54: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(54);
UserManagement.addUser(auth_data);
Test 55: 
Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
addUserTXT.setResetLogincoun(true);
UserManagement.addUser(addUserTXT);
Test 56: 
UserManagement.addUserTXT("gM?#V|uZ", "gM?#V|uZ", "gM?#V|uZ", '[');
UserManagement.getAccountIdCount();
Test 57: 
UserManagement.getNBSession();
int[] intArray = new int[3];
UserManagement.charif_sendallwos(2, intArray);
Test 58: 
UserManagement.addUserTXT(">", ">", ">", 'v');
UserManagement.getNBUser();
Test 59: 
byte[] byteArray = new byte[7];
byteArray[6] = (byte) (-76);
UserManagement.tabHexToInt(byteArray);
Test 60: 
byte[] byteArray = new byte[4];
byteArray[3] = (byte)90;
UserManagement.tabHexToInt(byteArray);
Test 61: 
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 62: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 63: 
// Undeclared exception!
try { 
  UserManagement.addGM(10000, 10000);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 64: 
// Undeclared exception!
try { 
  UserManagement.administationLogin((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 66: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 67: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 68: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 69: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 70: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 71: 
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 72: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL(",P2{~");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 73: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 74: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 75: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 76: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.requestAccountData((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 78: 
byte[] byteArray = new byte[12];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 79: 
UserManagement.sendUserList((Socket_data) null);
Test 80: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[3];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 81: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 82: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 83: 
UserManagement.addAccountIdCount((int) (Integer) null);

Test 84: 

Test 85: 
UserManagement.setAccountIdCount(5);

Test 86: 
UserManagement.debugXML();

Test 87: 
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) fromChar, fromChar);
UserManagement.unLogServer(socket_data);

Test 88: 
UserManagement.toBecomeGM((Socket_data) null);
UserManagement.toBecomeGM((Socket_data) null);
UserManagement.toBecomeGM((Socket_data) null);

Test 89: 
UserManagement.addUserSQL("John Doe", "johndoe@example.com", "password123", 10);

Test 90: 

Test 91: 
UserManagement.getUserSQL("user1");

Test 92: 
Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
Auth_data userTxt = UserManagement.getUserTxt(account_id);
FastMap<String, String> account_reg2 = userTxt.getAccount_reg2();
boolean _boolean = false;
FastMap<String, String> setShared = account_reg2.setShared(_boolean);
auth_data.setAccount_reg2(setShared);
String string = "user@example.com";
auth_data.setEmail(string);
UserManagement.removeUser(auth_data);

Test 93: 
UserManagement.addSession((Socket_data) null);

Test 94: 
UserManagement.add_online_user((Auth_data) null);

Test 95: 
UserManagement.getAccountID("9876543210");
UserManagement.getUserSQL((Integer) null);

Test 96: 

Test 97: 

Test 98: 
UserManagement.addIpToBanListMySQL("192.168.0.1");

Test 99: 
Auth_data addUserTXT = UserManagement.addUserTXT("password1234", "password1234", "test@gmail.com", 't');
UserManagement.removeUser(addUserTXT);

Test 100: 
byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);
UserManagement.tabHexToInt(byteArray);

Test 101: 
byte[] byteArray = new byte[7];
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) false, (boolean) (Boolean) null);

Test 102: 
UserManagement.levelIsValid(3, "Engineer", 3, 5);

Test 103: 
UserManagement.levelIsValid((int) "8\"AWsEQ", (String) null, (int) (Integer) null, (int) (Integer) null);

Test 104: 
UserManagement.levelIsValid(129, "set users %s : %d\n", 30, 30);

Test 105: 
Integer integer = new Integer(1000);
UserManagement.remove_online_user((Integer) "johndoe");

Test 106: 
Integer integer = new Integer(1001);
UserManagement.remove_online_user(integer);

Test 107: 
UserManagement.charif_sendallwos(0, (byte[]) null);

Test 108: 
String string = "S0022";
Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
((Auth_data)"S0022").getAccount_reg2();
String string = "email";
String string = "johndoe@example.com";
((FastMap) string).put(string, string);
String string = "password";
String string = "1234567890";
((FastMap) string).put(string, string);
String string = "firstName";
String string = "John";
((FastMap) string).put(string, string);
String string = "lastName";
String string = "Doe";
((FastMap) string).put(string, string);
UserManagement.addUser(addUserTXT);

Test 109: 
UserManagement.isGM((long) (Long) null);
long _long = null;
UserManagement.isGM(_long);

Test 110: 
UserManagement.getUserTxt("John Doe");

Test 111: 

Test 112: 
UserManagement.dynamicFailBanCheckTXT("");
UserManagement.dynamicFailBanCheckTXT(" ");
UserManagement.dynamicFailBanCheckTXT("user");
UserManagement.dynamicFailBanCheckTXT("1234567890");

Test 113: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
((FastMap)0).put((Integer) null, (Auth_data) null);
UserManagement.setAuth_dats(fastMap);

Test 114: 

Test 115: 
UserManagement.is_user_online((Integer) 1234567890);
UserManagement.is_user_online((Integer) null);
UserManagement.is_user_online((Integer) 0);

Test 116: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[7];
byteArray[1] = (byte) 'M';
byteArray[2] = (byte) (-84);
byteArray[3] = (byte) (-67);
byteArray[4] = (byte) 'M';
byteArray[5] = (byte) 'D';
byteArray[6] = (byte) 8;
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);

Test 117: 
Auth_data auth_data = new Auth_data();
auth_data.setBan_until_time((long) (Long) null);
UserManagement.addUser(auth_data);
Auth_data auth_data = new Auth_data();
long _long = null;
auth_data.setBan_until_time(_long);
UserManagement.addUser(auth_data);

Test 118: 
Auth_data addUserTXT = UserManagement.addUserTXT("johnDoe", "password123", "123 Main St.", 'o');
((Auth_data)"johnDoe").setCharserver(1242);
UserManagement.addUser(addUserTXT);

Test 119: 
Auth_data addUserTXT = UserManagement.addUserTXT("John", "Doe", "", 'l');
((Auth_data)"John").setCharserver(0);
UserManagement.addUser(addUserTXT);

Test 120: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType((int) "Mobile");
UserManagement.addUser(auth_data);

Test 121: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((long) (Long) null);
UserManagement.addUser(auth_data);

Test 122: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(219L);
UserManagement.addUser(auth_data);

Test 123: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((int) (Integer) null);
UserManagement.addUser(auth_data);

Test 124: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((int) "active");
UserManagement.addUser(auth_data);

Test 125: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(9);
UserManagement.addUser(auth_data);

Test 126: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(1023456789);
UserManagement.addUser(auth_data);

Test 127: 
Auth_data auth_data = new Auth_data();
UserManagement.addUser(auth_data);

Test 128: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((int) "johndoe");
UserManagement.addUser(auth_data);

Test 129: 
Auth_data addUserTXT = UserManagement.addUserTXT("Alice", "alice@example.com", "Password@123456", 'l');
((Auth_data)"Alice").setLogin_id2(10);
UserManagement.addUser(addUserTXT);

Test 130: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount(1234567890);
UserManagement.addUser(auth_data);

Test 131: 
UserManagement.addUser((Auth_data) null);

Test 132: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion((int) "v5.4");
UserManagement.addUser(auth_data);

Test 133: 
Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
((Auth_data)"&^%5jDf").setResetLogincoun(true);
UserManagement.addUser(addUserTXT);

Test 134: 
UserManagement.addUserTXT("john.doe@example.com", "johndoe123", "John Doe", '[');
UserManagement.getAccountIdCount();

Test 135: 
UserManagement.addUserTXT("John Smith", "johnsmith@example.com", "+1 (555) 123-4567", (char) "Male");
UserManagement.getNBUser();
String string = "Jane Doe";
String string = "janedoe@subdomain.example.com";
String string = "+1 (555) 987-6543";
String string = "Female";
UserManagement.addUserTXT(string, string, string, (char) string);
UserManagement.getNBUser();
String string = "John Johnson";
String string = "johnjohnson@example.org";
String string = "+1 (555) 234-5678";
String string = "Male";
UserManagement.addUserTXT(string, string, string, (char) string);
UserManagement.getNBUser();

Test 136: 
byte[] byteArray = new byte[7];
byteArray[6] = (byte) 12;
byteArray[6] = (byte) 34;
byteArray[6] = (byte) 56;
byteArray[6] = (byte) 56;
byteArray[6] = (byte) 90;
byteArray[6] = (byte) 90;
byteArray[6] = (byte) 90;
UserManagement.tabHexToInt(byteArray);

Test 137: 
byte[] byteArray = new byte[4];
byteArray[3] = (byte) 90;
UserManagement.tabHexToInt(byteArray);

Test 138: 
UserManagement.account_idToOffline((Socket_data) null, (byte[]) null);

Test 139: 
UserManagement.account_idToOnline((Socket_data) null, (byte[]) null);

Test 140: 
UserManagement.addGM(10001, (int) "GM1");

Test 141: 
UserManagement.banResquest((Socket_data) null);

Test 142: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);

Test 143: 
UserManagement.changeSexChrif_changesex((Socket_data) null);

Test 144: 
Socket_data socket_data = new Socket_data((Socket) "127.0.0.1");
byte[] byteArray = new byte[9];
UserManagement.charServerToAuthentify(socket_data, byteArray);

Test 145: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
UserManagement.connectionOfCharServer(socket_data, byteArray);
Proxy proxy = Proxy.NO_PROXY;
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
UserManagement.connectionOfCharServer(socket_data, byteArray);

Test 146: 
FromClient fromClient = new FromClient();
byte[] byteArray = new byte[9];
UserManagement.connectionOfClient((Socket_data) byteArray, (byte[]) true, (boolean) (Boolean) null);

Test 147: 
UserManagement.connectionOfClientEncrypted((Socket_data) null);

Test 148: 
FromClient fromClient = new FromClient();
UserManagement.emailCreation((Socket_data) null);

Test 149: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
UserManagement.emailLimitedTime(socket_data);

Test 150: 
UserManagement.getUserSQL((ResultSet) "SELECT * FROM users WHERE id = 1");

Test 151: 
UserManagement.receiveAccountReg2((Socket_data) "Sample Data", (byte[]) null);

Test 152: 
UserManagement.requestAccountData((Socket_data) null, (byte[]) null);

Test 153: 
UserManagement.requestAccountReg2((Socket_data) null, (byte[]) null);

Test 154: 
UserManagement.sendUserList((Socket_data) null);

Test 155: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
UserManagement.statusChange(socket_data, (byte[]) null);

Test 156: 
MockSocket mockSocket = new MockSocket();
UserManagement.toChangeAnEmail((Socket_data) null);

Test 157: 
Socket_data socket_data = new Socket_data((Socket) "", (IParse) null);
UserManagement.unban(socket_data);


* Minimizing test suite
* test suite isTestSuite: 84
Test 0: 
UserManagement.addAccountIdCount((-591));
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount(5);
Test 3: 
UserManagement.debugXML();
Test 4: 
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
UserManagement.unLogServer(socket_data);
Test 5: 
UserManagement.toBecomeGM((Socket_data) null);
Test 6: 
UserManagement.addUserSQL("John Doe", "johndoe@example.com", "password123", 10);
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("user1");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
UserManagement.getUserTxt(account_id);
Test 11: 
UserManagement.addSession((Socket_data) null);
Test 12: 
// Undeclared exception!
try { 
  UserManagement.getSessionAt(154);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

Test 13: 
UserManagement.addAccountIdCount();
Test 14: 
UserManagement.is_user_online((Integer) 1234567890);
Test 15: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((Integer) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 16: 
UserManagement.getAccountID("9876543210");
Test 17: 
UserManagement.getNBSession();
Test 18: 
UserManagement.online_db_final();
Test 19: 
UserManagement.getNBUser();
Test 20: 
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("192.168.0.1");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 21: 
byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);
Test 22: 
Auth_data addUserTXT = UserManagement.addUserTXT("password1234", "password1234", "test@gmail.com", 't');
UserManagement.removeUser(addUserTXT);
Test 23: 
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 24: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 25: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 26: 
UserManagement.levelIsValid(129, "set users %s : %d\n", 30, 30);
Test 27: 
UserManagement.levelIsValid((-257), "8\"AWsEQ", (-257), (-257));
Test 28: 
UserManagement.levelIsValid(3, "Engineer", 3, 5);
Test 29: 
Integer integer = new Integer(1001);
UserManagement.remove_online_user(integer);
Test 30: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 31: 
int[] intArray = new int[3];
UserManagement.charif_sendallwos(2, intArray);
Test 32: 
UserManagement.charif_sendallwos(0, (byte[]) null);
Test 33: 
UserManagement.isGM(3431L);
Test 34: 
UserManagement.getUserTxt("John Doe");
Test 35: 
UserManagement.getAccountIds();
Test 36: 
UserManagement.dynamicFailBanCheckTXT((String) null);
Test 37: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
Auth_data auth_data = new Auth_data();
fastMap.put((Integer) null, auth_data);
UserManagement.setAuth_dats(fastMap);
Test 38: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
Test 39: 
UserManagement.getAuth_dats();
Test 40: 
Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
FastMap<String, String> account_reg2 = addUserTXT.getAccount_reg2();
account_reg2.put(":", "_");
UserManagement.addUser(addUserTXT);
Test 41: 
Auth_data auth_data = new Auth_data();
auth_data.setBan_until_time((-966L));
UserManagement.addUser(auth_data);
Test 42: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setBan_until_time(3750L);
UserManagement.addUser(addUserTXT);
Test 43: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setCharserver(1242);
UserManagement.addUser(addUserTXT);
Test 44: 
Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
addUserTXT.setCharserver(0);
UserManagement.addUser(addUserTXT);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(9);
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-17L));
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(219L);
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-4936));
UserManagement.addUser(auth_data);
Test 49: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1109);
UserManagement.addUser(auth_data);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(3);
UserManagement.addUser(auth_data);
Test 51: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1541));
UserManagement.addUser(auth_data);
Test 52: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(1023456789);
UserManagement.addUser(auth_data);
Test 53: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-671));
UserManagement.addUser(auth_data);
Test 54: 
Auth_data addUserTXT = UserManagement.addUserTXT(" )uHN,C0", " )uHN,C0", " )uHN,C0", 'l');
addUserTXT.setLogin_id2(37);
UserManagement.addUser(addUserTXT);
Test 55: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount((-1));
UserManagement.addUser(auth_data);
Test 56: 
Auth_data auth_data = new Auth_data();
auth_data.setLastlogin();
UserManagement.addUser(auth_data);
Test 57: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(54);
UserManagement.addUser(auth_data);
Test 58: 
Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
addUserTXT.setResetLogincoun(true);
UserManagement.addUser(addUserTXT);
Test 59: 
UserManagement.addUserTXT("gM?#V|uZ", "gM?#V|uZ", "gM?#V|uZ", '[');
UserManagement.getAccountIdCount();
Test 60: 
UserManagement.addUserTXT(">", ">", ">", 'v');
UserManagement.getNBUser();
Test 61: 
byte[] byteArray = new byte[7];
byteArray[6] = (byte) (-76);
UserManagement.tabHexToInt(byteArray);
Test 62: 
byte[] byteArray = new byte[4];
byteArray[3] = (byte) 90;
UserManagement.tabHexToInt(byteArray);
Test 63: 
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 64: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
// Undeclared exception!
try { 
  UserManagement.addGM(10000, 10000);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 66: 
// Undeclared exception!
try { 
  UserManagement.administationLogin((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 67: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 68: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 69: 
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 70: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 71: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 72: 
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 73: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL(",P2{~");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 74: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 75: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 76: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 78: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.requestAccountData((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 79: 
byte[] byteArray = new byte[12];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 80: 
// Undeclared exception!
try { 
  UserManagement.sendUserList((Socket_data) null);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}

Test 81: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, (byte[]) null);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 82: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 83: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 16%
* Total number of goals: 329
* Number of covered goals: 51
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 711
* Number of covered goals: 190
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 423
* Number of covered goals: 73
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 59
* Number of covered goals: 59
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 16%
* Total number of goals: 329
* Number of covered goals: 51
* Generated 84 tests with total length 181
* Resulting test suite's coverage: 31% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addAccountIdCount((-591));

** It was a parseable test case! 
refined test name is: testAddingAccountIdCountNegativeValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int nBGM = UserManagement.getNBGM();
assertEquals(0, nBGM);


** It was a parseable test case! 
refined test name is: testNoCommentsWereAdded
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.setAccountIdCount(5);

** It was a parseable test case! 
refined test name is: testGetAllAccountsAndSetAccountIdCount
* Compiling Tests
refined test name is: testGetAllAccounts
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.debugXML();

** It was a parseable test case! 
refined test name is: testDebugXML
* Compiling Tests
refined test name is: testDebugXMLPrintsUsers
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FromChar arg1 = new FromChar();
Socket_data arg0 = new Socket_data((Socket) null, arg1);
UserManagement.unLogServer(arg0);
assertEquals(0L, arg0.scheduledExecutionTime());


** It was a parseable test case! 
refined test name is: testUnlogServer
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.toBecomeGM((Socket_data) null);

** It was a parseable test case! 
refined test name is: testToBecomeGMWithInvalidUserData
* Compiling Tests
refined test name is: testThrowNullPointerExceptionWhenInputDataIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data addUserSQL = UserManagement.addUserSQL("John Doe", "johndoe@example.com", "password123", 10);
assertNull(addUserSQL);


** It was a parseable test case! 
refined test name is: testAddUserSQLsuccessfulAddition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int accountIdCount = UserManagement.getAccountIdCount();
assertEquals(0, accountIdCount);


** It was a parseable test case! 
refined test name is: testCreateNewAccount
* Compiling Tests
refined test name is: testCreateNewAccountIncreasesAccountIdCountByOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.getUserSQL("user1");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}


** It was a parseable test case! 
refined test name is: testGetUserSQLthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}


** It was a parseable test case! 
refined test name is: testNullPointerExceptionInNumberOfUsers
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data auth_data = new Auth_data();
Integer arg0 = auth_data.getAccount_id();
Auth_data userTxt = UserManagement.getUserTxt(arg0);
assertNull(userTxt);


** It was a parseable test case! 
refined test name is: testGetUserTxtReturnsNullWhenAccountIdIsInvalid
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addSession((Socket_data) null);

** It was a parseable test case! 
refined test name is: testAddSessionWithNullData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.getSessionAt(154);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("javolution.util.FastTable", e);
}


** It was a parseable test case! 
refined test name is: testGetSessionAtthrowsIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addAccountIdCount();

** It was a parseable test case! 
refined test name is: testAddAccountIdCountIncreasesTotalCount
* Compiling Tests
refined test name is: testCreateNewAccountAndIncrementTotalAccountCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean is_user_online = UserManagement.is_user_online((Integer) 1234567890);
assertFalse(is_user_online);


** It was a parseable test case! 
refined test name is: testUserIsNotOnlineVerifyUserId
* Compiling Tests
refined test name is: testIsUserNotOnline
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.getUserSQL((Integer) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}


** It was a parseable test case! 
refined test name is: testGetUserSQLThrowsNPEOnNullUserId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer accountID = UserManagement.getAccountID("9876543210");
assertNull(accountID);


** It was a parseable test case! 
refined test name is: testGetAccountIDWithNonExistentUserIDReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int nBSession = UserManagement.getNBSession();
assertEquals(0, nBSession);


** It was a parseable test case! 
refined test name is: testGetNBSessionreturnsZeroSessions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int online_db_final = UserManagement.online_db_final();
assertEquals(0, online_db_final);


** It was a parseable test case! 
refined test name is: testOnlineDatabaseIsEmptyBeforeAnyOperation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int nBUser = UserManagement.getNBUser();
assertEquals(0, nBUser);


** It was a parseable test case! 
refined test name is: testGetNBUserWithNewUserExpectZeroUsers
* Compiling Tests
refined test name is: testGetNBUserWhenCalledWithNoUsersReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("192.168.0.1");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}


** It was a parseable test case! 
refined test name is: testAddIpToBanListMySQLInvalidIPAddress
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[2];
int tabHexToInt = UserManagement.tabHexToInt(arg0);
assertEquals(0, tabHexToInt);


** It was a parseable test case! 
refined test name is: testTabHexToIntSingleZeroCharacterReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("password1234", "password1234", "test@gmail.com", 't');
assertNotNull(arg0);

Auth_data removeUser = UserManagement.removeUser(arg0);
assertEquals("password1234", arg0.getPass());
assertEquals("password1234", arg0.getUserid());
assertEquals(0, arg0.getState());
assertNull(removeUser);
assertEquals(0, arg0.getLogincount());
assertEquals("test@gmail.com", arg0.getEmail());
assertEquals('t', arg0.getSex());
assertEquals(0, (int)arg0.getAccount_id());


** It was a parseable test case! 
refined test name is: testCreateAndRemoveUserWithValidCredentials
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
int add_online_user = UserManagement.add_online_user(arg0);
assertEquals(0, add_online_user);


** It was a parseable test case! 
refined test name is: testAddOnlineUserReturnsZero
* Compiling Tests
refined test name is: testAddOnlineUserValidAuthDataReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg1 = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, arg1, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}


** It was a parseable test case! 
refined test name is: testConnectionWithNullSocketData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int levelIsValid = UserManagement.levelIsValid(129, "set users %s : %d\n", 30, 30);
assertEquals(99, levelIsValid);


** It was a parseable test case! 
refined test name is: testLevelIsValid
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int levelIsValid = UserManagement.levelIsValid((-257), "8\"AWsEQ", (-257), (-257));
assertEquals((-1), levelIsValid);


** It was a parseable test case! 
refined test name is: testLevelIsValidNegativeInputReturnsMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int levelIsValid = UserManagement.levelIsValid(3, "Engineer", 3, 5);
assertEquals(3, levelIsValid);


** It was a parseable test case! 
refined test name is: testLevelIsValidShouldReturn1IfLevelIsInvalid
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer arg0 = new Integer(1001);
UserManagement.remove_online_user(arg0);

** It was a parseable test case! 
refined test name is: testRemoveOnlineUser
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Integer arg0 = new Integer(99);
UserManagement.remove_online_user(arg0);

** It was a parseable test case! 
refined test name is: testRemoveOnlineUserByIntegerArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int[] arg1 = new int[3];
int charif_sendallwos = UserManagement.charif_sendallwos(2, arg1);
assertEquals(0, charif_sendallwos);


** It was a parseable test case! 
refined test name is: testUserManagementFeatureAccess
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int charif_sendallwos = UserManagement.charif_sendallwos(0, (byte[]) null);
assertEquals(0, charif_sendallwos);


** It was a parseable test case! 
refined test name is: testSendAllWOsNullByteArray
* Compiling Tests
refined test name is: testNullByteArrayShouldReturnZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int gM = UserManagement.isGM(3431L);
assertEquals((-1), gM);


** It was a parseable test case! 
refined test name is: testIsGMReturnsNegativeOneWhenUserIdNotFound
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data userTxt = UserManagement.getUserTxt("John Doe");
assertNull(userTxt);


** It was a parseable test case! 
refined test name is: testGetUserTxtreturnsNullForNonExistentUserName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FastTable<Integer> accountIds = UserManagement.getAccountIds();
assertEquals(0, accountIds.size());


** It was a parseable test case! 
refined test name is: testGetAccountIdsShouldReturnEmptyList
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.dynamicFailBanCheckTXT((String) null);

** It was a parseable test case! 
refined test name is: testDynamicFailBanCheckWithNullString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FastMap<Integer, Auth_data> arg0 = new FastMap<Integer, Auth_data>(0);
Auth_data arg1 = new Auth_data();
arg0.put((Integer) null, arg1);
UserManagement.setAuth_dats(arg0);
assertFalse(arg0.isShared());


** It was a parseable test case! 
refined test name is: testSetAuthDatsShouldNotShareMap
* Compiling Tests
refined test name is: testSetAuthDatsShouldNotShareMapWhenNullIsPassed
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Socket_data arg0 = new Socket_data((Socket) null);
byte[] arg1 = new byte[9];
UserManagement.receiveAllOnlinAccounts(arg0, arg1);
assertNull(arg0.getMd5key());


** It was a parseable test case! 
refined test name is: testReceiveAllOnlinAccountsShouldSetMd5KeyToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FastMap<Integer, Auth_data> auth_dats = UserManagement.getAuth_dats();
assertEquals(0, auth_dats.size());


** It was a parseable test case! 
refined test name is: testAuthDataMapIsEmpty
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
FastMap<String, String> account_reg2 = arg0.getAccount_reg2();
account_reg2.put(":", "_");
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getState());
assertEquals(0, addUser.getLogincount());
assertEquals(']', addUser.getSex());
assertEquals(0, (int)addUser.getAccount_id());
assertEquals("S0022", addUser.getPass());
assertEquals("S0022", addUser.getUserid());
assertEquals("-", addUser.getEmail());


** It was a parseable test case! 
refined test name is: testAddUsersuccessfulAddition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setBan_until_time((-966L));
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals((-966L), addUser.getBan_until_time());


** It was a parseable test case! 
refined test name is: testAddUserWithNegativeBanTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
arg0.setBan_until_time(3750L);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getLogincount());
assertEquals(0, addUser.getState());
assertEquals("%~[=d`GICQ)", addUser.getUserid());
assertEquals("", addUser.getPass());
assertEquals(0, (int)addUser.getAccount_id());
assertEquals('o', addUser.getSex());
assertEquals("-", addUser.getEmail());


** It was a parseable test case! 
refined test name is: testAddUserWithBanUntilTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
arg0.setCharserver(1242);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getState());
assertEquals("-", addUser.getEmail());
assertEquals(0, (int)addUser.getAccount_id());
assertEquals('o', addUser.getSex());
assertEquals("", addUser.getPass());
assertEquals(0, addUser.getLogincount());
assertEquals("%~[=d`GICQ)", addUser.getUserid());


** It was a parseable test case! 
refined test name is: testAddUserValidInputReturnsCorrectValues
* Compiling Tests
refined test name is: testAddUserwithValidInputreturnsSuccessfulResult
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
arg0.setCharserver(0);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(" )uHN,C0", addUser.getPass());
assertEquals(0, addUser.getLogincount());
assertEquals(0, addUser.getState());
assertEquals("", addUser.getUserid());
assertEquals(0, (int)addUser.getAccount_id());
assertEquals("-", addUser.getEmail());
assertEquals('l', addUser.getSex());


** It was a parseable test case! 
refined test name is: testAddUserWithValidArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setClientType(9);
Auth_data addUser = UserManagement.addUser(arg0);
assertSame(arg0, addUser);


** It was a parseable test case! 
refined test name is: testAddUserWithClientTypeOf9ReturnsSameObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setConnect_until_time((-17L));
Auth_data addUser = UserManagement.addUser(arg0);
assertSame(arg0, addUser);


** It was a parseable test case! 
refined test name is: testAddUserWithValidConnectUntilTime
* Compiling Tests
refined test name is: testAddUserWithNegativeConnectUntilTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setConnect_until_time(219L);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getLogin_id1());


** It was a parseable test case! 
refined test name is: testAddUserWithValidDataReturnsNonNegativeInteger
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setDelflag((-4936));
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, (int)addUser.getAccount_id());


** It was a parseable test case! 
refined test name is: testAddNewUserWithNegativeDelflagValue
* Compiling Tests
refined test name is: testAddNewUserNegativeDelflagValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setDelflag(1109);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals('\u0000', addUser.getSex());


** It was a parseable test case! 
refined test name is: testAddUserWithValidDelflag
* Compiling Tests
refined test name is: testAddUserWithDelflagSetsSexToDefaultValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLevel(3);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0L, addUser.getConnect_until_time());


** It was a parseable test case! 
refined test name is: testAddNewUserWithLevel3connectUntilTimeIsZero
* Compiling Tests
refined test name is: testAddNewUserLevel3ConnectUntilTimeIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogin_id1((-1541));
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getPass());


** It was a parseable test case! 
refined test name is: testAddUser
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogin_id1(1023456789);
Auth_data addUser = UserManagement.addUser(arg0);
assertFalse(addUser.isResetLogincoun());


** It was a parseable test case! 
refined test name is: testAddUserShouldNotResetLoginCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogin_id2((-671));
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getEmail());


** It was a parseable test case! 
refined test name is: testAddUserWithNegativeLoginId2
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT(" )uHN,C0", " )uHN,C0", " )uHN,C0", 'l');
arg0.setLogin_id2(37);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getLogincount());
assertEquals("-", addUser.getEmail());
assertEquals(0, (int)addUser.getAccount_id());
assertEquals(0, addUser.getState());
assertEquals('l', addUser.getSex());


** It was a parseable test case! 
refined test name is: testAddUserTXTSuccess
* Compiling Tests
refined test name is: testAddUserTXTWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLogincount((-1));
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getLast_ip());


** It was a parseable test case! 
refined test name is: testAddUserWithNegativeLoginCount
* Compiling Tests
refined test name is: testAddUserWithInvalidLoginCount
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setLastlogin();
Auth_data addUser = UserManagement.addUser(arg0);
assertNull(addUser.getUserid());


** It was a parseable test case! 
refined test name is: testAddUserWithValidAuthData
* Compiling Tests
refined test name is: testAddUserWithLastLoginTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = new Auth_data();
arg0.setVersion(54);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals(0, addUser.getClientType());


** It was a parseable test case! 
refined test name is: testAddUserWithVersion54ExpectsZeroClientType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data arg0 = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
arg0.setResetLogincoun(true);
Auth_data addUser = UserManagement.addUser(arg0);
assertEquals("&^%5jDf", addUser.getUserid());
assertEquals(0, (int)addUser.getAccount_id());
assertEquals("-", addUser.getEmail());
assertEquals(0, addUser.getState());
assertEquals("&^%5jDf", addUser.getPass());
assertEquals('l', addUser.getSex());
assertEquals(0, addUser.getLogincount());


** It was a parseable test case! 
refined test name is: testAddUserSuccessful
* Compiling Tests
refined test name is: testAddUservalidInputsuccess
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Auth_data addUserTXT = UserManagement.addUserTXT("gM?#V|uZ", "gM?#V|uZ", "gM?#V|uZ", '[');
assertEquals("-", addUserTXT.getEmail());
assertEquals(0, (int)addUserTXT.getAccount_id());
assertEquals(0, addUserTXT.getLogincount());
assertEquals('[', addUserTXT.getSex());
assertEquals(0, addUserTXT.getState());

int accountIdCount = UserManagement.getAccountIdCount();
assertEquals(1, accountIdCount);


** It was a parseable test case! 
refined test name is: testAddUser
[MASTER] 06:48:26.176 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
[MASTER] 06:48:28.278 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 85
Test 0: 
UserManagement.addAccountIdCount((-591));
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount((-1));
Test 3: 
UserManagement.debugXML();
Test 4: 
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
UserManagement.unLogServer(socket_data);
Test 5: 
UserManagement.toBecomeGM((Socket_data) null);
Test 6: 
UserManagement.addUserSQL(":nh~:U[l'(3i", ":nh~:U[l'(3i", ":nh~:U[l'(3i", (-144));
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("n#fAnZ|dlXXGu$O");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
Auth_data userTxt = UserManagement.getUserTxt(account_id);
// Undeclared exception!
FastMap<String, String> account_reg2 = null;
try { 
  account_reg2 = userTxt.getAccount_reg2();
  fail("Expecting exception: CodeUnderTestException");

} catch(Throwable e) {
}

FastMap<String, String> setShared = account_reg2.setShared(false);
auth_data.setAccount_reg2(setShared);
auth_data.setEmail("");
UserManagement.removeUser(auth_data);
Test 11: 
MockSocket mockSocket = new MockSocket();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
UserManagement.addSession(socket_data);
Test 12: 
UserManagement.addAccountIdCount();
Test 13: 
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 14: 
UserManagement.getNBSession();
Test 15: 
UserManagement.online_db_final();
Test 16: 
UserManagement.getNBUser();
Test 17: 
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("3+nU+");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 18: 
Auth_data addUserTXT = UserManagement.addUserTXT("9w*", "9w*", "a@a.com", 't');
UserManagement.removeUser(addUserTXT);
Test 19: 
byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);
Test 20: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 21: 
UserManagement.levelIsValid(3, "", 3, 5);
Test 22: 
UserManagement.levelIsValid((-257), "8\"AWsEQ", (-257), (-257));
Test 23: 
UserManagement.levelIsValid(129, "set users %s : %d\n", 129, 129);
Test 24: 
Integer integer = new Integer(2);
UserManagement.remove_online_user(integer);
Test 25: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 26: 
UserManagement.charif_sendallwos(54, (int[]) null);
Test 27: 
byte[] byteArray = new byte[0];
UserManagement.charif_sendallwos(2, byteArray);
Test 28: 
Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
FastMap<String, String> account_reg2 = addUserTXT.getAccount_reg2();
account_reg2.put(":", "_");
UserManagement.addUser(addUserTXT);
Test 29: 
UserManagement.isGM(3431L);
Test 30: 
UserManagement.getUserTxt("}eBIW'j-E");
Test 31: 
UserManagement.getUserTxt((String) null);
Test 32: 
UserManagement.getAccountIds();
Test 33: 
UserManagement.dynamicFailBanCheckTXT("set users %s : %d\n");
Test 34: 
// Undeclared exception!
UserManagement.sendUserList((Socket_data) null);
Test 35: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
Auth_data auth_data = new Auth_data();
fastMap.put((Integer) null, auth_data);
UserManagement.setAuth_dats(fastMap);
Test 36: 
UserManagement.getAuth_dats();
Test 37: 
UserManagement.is_user_online((Integer) null);
Test 38: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
EvoSuiteRemoteAddress evoSuiteRemoteAddress = new EvoSuiteRemoteAddress("", 5);
NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress);
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 39: 
UserManagement.dynamicFailBanCheckTXT((String) null);
Test 40: 
Auth_data auth_data = new Auth_data();
auth_data.setBan_until_time((-966L));
UserManagement.addUser(auth_data);
Test 41: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setBan_until_time(3750L);
UserManagement.addUser(addUserTXT);
Test 42: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setCharserver(1242);
UserManagement.addUser(addUserTXT);
Test 43: 
Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
addUserTXT.setCharserver(0);
UserManagement.addUser(addUserTXT);
Test 44: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(9);
UserManagement.addUser(auth_data);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-17L));
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(219L);
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-4936));
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1109);
UserManagement.addUser(auth_data);
Test 49: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(3);
UserManagement.addUser(auth_data);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1541));
UserManagement.addUser(auth_data);
Test 51: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(123);
UserManagement.addUser(auth_data);
Test 52: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-671));
UserManagement.addUser(auth_data);
Test 53: 
Auth_data addUserTXT = UserManagement.addUserTXT(" )uHN,C0", " )uHN,C0", " )uHN,C0", 'l');
addUserTXT.setLogin_id2(37);
UserManagement.addUser(addUserTXT);
Test 54: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount((-1));
UserManagement.addUser(auth_data);
Test 55: 
Auth_data auth_data = new Auth_data();
auth_data.setLastlogin();
UserManagement.addUser(auth_data);
Test 56: 
Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
addUserTXT.setState(2);
UserManagement.addUser(addUserTXT);
Test 57: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(54);
UserManagement.addUser(auth_data);
Test 58: 
Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
addUserTXT.setResetLogincoun(true);
UserManagement.addUser(addUserTXT);
Test 59: 
EvoSuiteRemoteAddress evoSuiteRemoteAddress = new EvoSuiteRemoteAddress("", 30000);
UserManagement.addUserTXT("", " Kg)@%.*H", "(K&qaU6", '\"');
Integer accountID = UserManagement.getAccountID("");
// Undeclared exception!
try { 
  UserManagement.getUserSQL(accountID);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 60: 
Socket_data sessionAt = UserManagement.getSessionAt(2);
byte[] byteArray = new byte[0];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline(sessionAt, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 61: 
UserManagement.getUserTxt((Integer) 31002);
Test 62: 
byte[] byteArray = new byte[7];
byteArray[6] = (byte) (-76);
UserManagement.tabHexToInt(byteArray);
Test 63: 
byte[] byteArray = new byte[4];
byteArray[3] = (byte)90;
UserManagement.tabHexToInt(byteArray);
Test 64: 
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 66: 
// Undeclared exception!
try { 
  UserManagement.addGM(10000, 10000);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 67: 
// Undeclared exception!
try { 
  UserManagement.administationLogin((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 68: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 69: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 70: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 71: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 72: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 73: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 74: 
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 75: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL(",P2{~");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 76: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 77: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 78: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 79: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 80: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.requestAccountData((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 81: 
byte[] byteArray = new byte[12];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 82: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[3];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 83: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 84: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}


* Minimizing test suite
* test suite isTestSuite: 84
Test 0: 
UserManagement.addAccountIdCount((-591));
Test 1: 
UserManagement.getNBGM();
Test 2: 
UserManagement.setAccountIdCount((-1));
Test 3: 
UserManagement.debugXML();
Test 4: 
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data((Socket) null, fromChar);
UserManagement.unLogServer(socket_data);
Test 5: 
UserManagement.toBecomeGM((Socket_data) null);
Test 6: 
UserManagement.addUserSQL(":nh~:U[l'(3i", ":nh~:U[l'(3i", ":nh~:U[l'(3i", (-144));
Test 7: 
UserManagement.getAccountIdCount();
Test 8: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL("n#fAnZ|dlXXGu$O");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 9: 
// Undeclared exception!
try { 
  UserManagement.numberOfUser((Socket_data) null, (byte[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 10: 
UserManagement.getUserTxt((Integer) 31002);
Test 11: 
MockSocket mockSocket = new MockSocket();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
UserManagement.addSession(socket_data);
Test 12: 
UserManagement.getSessionAt(2);
Test 13: 
UserManagement.addAccountIdCount();
Test 14: 
UserManagement.is_user_online((Integer) null);
Test 15: 
UserManagement.getNBSession();
Test 16: 
UserManagement.online_db_final();
Test 17: 
UserManagement.getNBUser();
Test 18: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.account_idToOnline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 19: 
// Undeclared exception!
try { 
  UserManagement.addIpToBanListMySQL("3+nU+");
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"java.lang.String@0000000001\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 20: 
Auth_data addUserTXT = UserManagement.addUserTXT("9w*", "9w*", "a@a.com", 't');
UserManagement.removeUser(addUserTXT);
Test 21: 
byte[] byteArray = new byte[2];
UserManagement.tabHexToInt(byteArray);
Test 22: 
Auth_data auth_data = new Auth_data();
UserManagement.add_online_user(auth_data);
Test 23: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient((Socket_data) null, byteArray, false);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 24: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfClient(socket_data, byteArray, true);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 30
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 25: 
UserManagement.levelIsValid(129, "set users %s : %d\n", 129, 129);
Test 26: 
UserManagement.levelIsValid((-257), "8\"AWsEQ", (-257), (-257));
Test 27: 
UserManagement.levelIsValid(3, "", 3, 5);
Test 28: 
Integer integer = new Integer(2);
UserManagement.remove_online_user(integer);
Test 29: 
Integer integer = new Integer(99);
UserManagement.remove_online_user(integer);
Test 30: 
UserManagement.charif_sendallwos(54, (int[]) null);
Test 31: 
byte[] byteArray = new byte[0];
UserManagement.charif_sendallwos(2, byteArray);
Test 32: 
UserManagement.isGM(3431L);
Test 33: 
UserManagement.getUserTxt("}eBIW'j-E");
Test 34: 
UserManagement.getUserTxt((String) null);
Test 35: 
UserManagement.getAccountIds();
Test 36: 
UserManagement.dynamicFailBanCheckTXT("set users %s : %d\n");
Test 37: 
FastMap<Integer, Auth_data> fastMap = new FastMap<Integer, Auth_data>(0);
Auth_data auth_data = new Auth_data();
fastMap.put((Integer) null, auth_data);
UserManagement.setAuth_dats(fastMap);
Test 38: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
UserManagement.receiveAllOnlinAccounts(socket_data, byteArray);
Test 39: 
UserManagement.getAuth_dats();
Test 40: 
Auth_data addUserTXT = UserManagement.addUserTXT("S0022", "S0022", "com.mysql.jdbc.BestResponseTimeBalanceStrategy", ']');
FastMap<String, String> account_reg2 = addUserTXT.getAccount_reg2();
account_reg2.put(":", "_");
UserManagement.addUser(addUserTXT);
Test 41: 
Auth_data auth_data = new Auth_data();
auth_data.setBan_until_time((-966L));
UserManagement.addUser(auth_data);
Test 42: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setBan_until_time(3750L);
UserManagement.addUser(addUserTXT);
Test 43: 
Auth_data addUserTXT = UserManagement.addUserTXT("%~[=d`GICQ)", "", "pA`m|", 'o');
addUserTXT.setCharserver(1242);
UserManagement.addUser(addUserTXT);
Test 44: 
Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
addUserTXT.setCharserver(0);
UserManagement.addUser(addUserTXT);
Test 45: 
Auth_data auth_data = new Auth_data();
auth_data.setClientType(9);
UserManagement.addUser(auth_data);
Test 46: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time((-17L));
UserManagement.addUser(auth_data);
Test 47: 
Auth_data auth_data = new Auth_data();
auth_data.setConnect_until_time(219L);
UserManagement.addUser(auth_data);
Test 48: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag((-4936));
UserManagement.addUser(auth_data);
Test 49: 
Auth_data auth_data = new Auth_data();
auth_data.setDelflag(1109);
UserManagement.addUser(auth_data);
Test 50: 
Auth_data auth_data = new Auth_data();
auth_data.setLevel(3);
UserManagement.addUser(auth_data);
Test 51: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1((-1541));
UserManagement.addUser(auth_data);
Test 52: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id1(123);
UserManagement.addUser(auth_data);
Test 53: 
Auth_data auth_data = new Auth_data();
auth_data.setLogin_id2((-671));
UserManagement.addUser(auth_data);
Test 54: 
Auth_data addUserTXT = UserManagement.addUserTXT(" )uHN,C0", " )uHN,C0", " )uHN,C0", 'l');
addUserTXT.setLogin_id2(37);
UserManagement.addUser(addUserTXT);
Test 55: 
Auth_data auth_data = new Auth_data();
auth_data.setLogincount((-1));
UserManagement.addUser(auth_data);
Test 56: 
Auth_data auth_data = new Auth_data();
auth_data.setLastlogin();
UserManagement.addUser(auth_data);
Test 57: 
Auth_data addUserTXT = UserManagement.addUserTXT("", " )uHN,C0", "", 'l');
addUserTXT.setState(2);
UserManagement.addUser(addUserTXT);
Test 58: 
Auth_data auth_data = new Auth_data();
auth_data.setVersion(54);
UserManagement.addUser(auth_data);
Test 59: 
Auth_data addUserTXT = UserManagement.addUserTXT("&^%5jDf", "&^%5jDf", " )uHN,C0", 'l');
addUserTXT.setResetLogincoun(true);
UserManagement.addUser(addUserTXT);
Test 60: 
EvoSuiteRemoteAddress evoSuiteRemoteAddress = new EvoSuiteRemoteAddress("", 30000);
UserManagement.addUserTXT("", " Kg)@%.*H", "(K&qaU6", '\"');
Integer accountID = UserManagement.getAccountID("");
// Undeclared exception!
try { 
  UserManagement.getUserSQL(accountID);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 61: 
Auth_data auth_data = new Auth_data();
Integer account_id = auth_data.getAccount_id();
UserManagement.getUserTxt(account_id);
Test 62: 
byte[] byteArray = new byte[7];
byteArray[6] = (byte) (-76);
UserManagement.tabHexToInt(byteArray);
Test 63: 
byte[] byteArray = new byte[4];
byteArray[3] = (byte)90;
UserManagement.tabHexToInt(byteArray);
Test 64: 
byte[] byteArray = new byte[6];
// Undeclared exception!
try { 
  UserManagement.account_idToOffline((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 65: 
// Undeclared exception!
try { 
  UserManagement.addGM(10000, 10000);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 66: 
// Undeclared exception!
try { 
  UserManagement.administationLogin((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 67: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.banResquest(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 68: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.changeSex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 69: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.changeSexChrif_changesex(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 70: 
Socket_data socket_data = new Socket_data((Socket) null);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.charServerToAuthentify(socket_data, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 71: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.connectionOfCharServer(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 26
   //
   verifyException("org.javathena.core.utiles.Functions", e);
}

Test 72: 
// Undeclared exception!
try { 
  UserManagement.connectionOfClientEncrypted((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 73: 
// Undeclared exception!
try { 
  UserManagement.dynamicFailBanCheckMySQL(",P2{~");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.utiles.sql.MySQLConfig", e);
}

Test 74: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  UserManagement.emailCreation(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 75: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.emailLimitedTime(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 76: 
// Undeclared exception!
try { 
  UserManagement.getUserSQL((ResultSet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 77: 
byte[] byteArray = new byte[9];
// Undeclared exception!
try { 
  UserManagement.receiveAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 78: 
byte[] byteArray = new byte[7];
// Undeclared exception!
try { 
  UserManagement.requestAccountData((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 79: 
byte[] byteArray = new byte[12];
// Undeclared exception!
try { 
  UserManagement.requestAccountReg2((Socket_data) null, byteArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.UserManagement", e);
}

Test 80: 
// Undeclared exception!
UserManagement.sendUserList((Socket_data) null);
Test 81: 
Proxy proxy = Proxy.NO_PROXY;
MockSocket mockSocket = new MockSocket(proxy);
Socket_data socket_data = new Socket_data(mockSocket);
byte[] byteArray = new byte[3];
// Undeclared exception!
try { 
  UserManagement.statusChange(socket_data, byteArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 82: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  UserManagement.toChangeAnEmail(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 83: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
// Undeclared exception!
try { 
  UserManagement.unban(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
[MASTER] 06:48:44.128 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Coverage of criterion BRANCH: 16%
* Total number of goals: 329
* Number of covered goals: 53
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 27%
* Total number of goals: 711
* Number of covered goals: 189
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 423
* Number of covered goals: 91
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 59
* Number of covered goals: 59
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 16%
* Total number of goals: 329
* Number of covered goals: 53
* Generated 84 tests with total length 191
* Resulting test suite's coverage: 31% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 06:48:45.511 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 06:48:49.922 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:55.633 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:55.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:55.753 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:55.754 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:55.820 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:55.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:55.936 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:55.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:56.152 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:56.153 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:56.351 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:56.354 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:56.489 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:56.490 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:56.609 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:56.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:56.715 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:56.716 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:56.902 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:56.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.069 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.070 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.194 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.195 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.264 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.265 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.346 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.346 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.414 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.476 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.477 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.546 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.547 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.613 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.614 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.736 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.738 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.837 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.843 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.907 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.907 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:57.971 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:57.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.073 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.074 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
[MASTER] 06:48:58.144 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.145 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.224 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.224 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.318 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.330 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.531 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.669 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.674 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.771 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.772 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.869 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.870 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:58.965 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:58.972 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.066 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.067 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.195 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.196 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.285 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.286 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.368 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.369 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.446 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.447 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.533 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.534 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.663 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.664 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.783 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.789 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.885 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.885 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:48:59.992 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:48:59.993 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:49:00.238 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.239 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 06:49:00.428 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.428 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:00.497 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.499 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:00.585 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.586 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:00.642 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.644 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:00.689 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.690 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:00.740 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:00.791 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.791 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:00.832 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.833 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:00.897 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:00.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.003 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.004 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.115 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.117 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.175 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.176 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.229 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.229 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.295 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.336 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:49:01.337 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
[MASTER] 06:49:01.374 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.375 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:49:01.415 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.471 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.472 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.516 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.516 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.602 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.603 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.645 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.646 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.728 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.729 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.825 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.825 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.882 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.883 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.928 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.929 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:01.974 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:01.975 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:02.025 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:02.026 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:02.078 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:02.078 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:02.132 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:02.132 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:49:02.202 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:02.203 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
[MASTER] 06:49:03.179 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:03.180 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
[MASTER] 06:49:04.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar5653327233295928285.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:49:04.412 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5653327233295928285.jar
* Writing tests to file
[MASTER] 06:49:04.414 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'UserManagement_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 25 called: 24 to improve: false
** Write a test suite: 27 called: 25 to improve: false
** Write a test suite: 28 called: 26 to improve: false
** Write a test suite: 29 called: 27 to improve: false
** Write a test suite: 33 called: 28 to improve: false
** Write a test suite: 34 called: 29 to improve: false
** Write a test suite: 35 called: 30 to improve: false
** Write a test suite: 37 called: 31 to improve: false
** Write a test suite: 40 called: 32 to improve: false
** Write a test suite: 46 called: 33 to improve: false
** Write a test suite: 51 called: 34 to improve: false
** Write a test suite: 59 called: 35 to improve: false
** Write a test suite: 63 called: 36 to improve: false
** Write a test suite: 68 called: 37 to improve: false
** Write a test suite: 69 called: 38 to improve: false
** Write a test suite: 75 called: 39 to improve: false
** Write a test suite: 77 called: 40 to improve: false
** Write a test suite: 79 called: 41 to improve: false
** Write a test suite: 80 called: 42 to improve: false
* Writing JUnit test case 'UserManagement_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
* Done!

* Computation finished
