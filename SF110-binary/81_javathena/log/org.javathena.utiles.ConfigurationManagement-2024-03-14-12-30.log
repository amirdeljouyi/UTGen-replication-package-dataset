* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.javathena.utiles.ConfigurationManagement
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/81_javathena/evosuite-files/evosuite.properties
* Connecting to master process on port 21902
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:30:43.850 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:30:43.858 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:30:43.859 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:30:43.898 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class org.javathena.utiles.ConfigurationManagement
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1710419440639
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 354 / 838
[Progress:>                             0%] [Cov:=================>                 51%][Progress:>                             0%] [Cov:=================>                 51%][Progress:>                             1%] [Cov:=================>                 51%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             1%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                52%][Progress:>                             2%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               55%][Progress:======>                       21%] [Cov:===================>               56%][Progress:======>                       21%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     27%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     28%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        72%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:=====================>        73%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       74%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       75%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:======================>       76%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      77%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      78%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:=======================>      79%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     80%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     81%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     82%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:========================>     83%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    84%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    85%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:=========================>    86%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   87%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   88%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:==========================>   89%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%]
* Search finished after 201s and 1772 generations, 342738 statements, best individual has fitness: 409.0
* Generated before the refinement 73 tests with total length 106
statement is: getChar_txt()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String char_txt = ConfigurationManagement.getChar_txt()
test data is: ConfigurationManagement.getChar_txt();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the getChar_txt() method
        char[] expectedChars = new char[]{ 'A', 'B', 'C' };
        String expectedStr = "Hello, World!";
    }
}
statement is: // Improved test data for the getChar_txt() method
char[] expectedChars = new char[]{ 'A', 'B', 'C' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String expectedStr = "Hello, World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "Hello, World!"
TestCase is: String string = "Hello, World!";

statement is: getMax_connect_user()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String max_connect_user = ConfigurationManagement.getMax_connect_user()
test data is: ConfigurationManagement.getMax_connect_user();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.getMax_connect_user();// returns an integer value representing the maximum number of concurrent users allowed in the system }}

    }
}
statement is: ConfigurationManagement.getMax_connect_user()// returns an integer value representing the maximum number of concurrent users allowed in the system }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getMax_connect_user()// returns an integer value representing the maximum number of concurrent users allowed in the system }}
 target is: ConfigurationManagement method is: getMax_connect_user()
Matched Method is: getMax_connect_user()Ljava/lang/String;
TestCase is: ConfigurationManagement.getMax_connect_user();

statement is: addNum_regs()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.addNum_regs()
statement is: getNum_regs()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long num_regs = ConfigurationManagement.getNum_regs()
test data is: ConfigurationManagement.addNum_regs();
ConfigurationManagement.getNum_regs();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.addNum_regs(10);
        ConfigurationManagement.getNum_regs();
    }
}
statement is: ConfigurationManagement.addNum_regs(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.addNum_regs(10) target is: ConfigurationManagement method is: addNum_regs(int)
statement is: ConfigurationManagement.getNum_regs(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getNum_regs() target is: ConfigurationManagement method is: getNum_regs()
Matched Method is: getNum_regs()J
TestCase is: ConfigurationManagement.getNum_regs();

statement is: getSubneti()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] subneti = ConfigurationManagement.getSubneti()
test data is: ConfigurationManagement.getSubneti();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Increase
        the number;
        subnets by = 50 % to;
        a larger;
        with more;
        @Change
        the value;
        of the;
        variable to;
        more descriptive;
        CIDR block;
        CIDR such;
        (((50 % to) instanceof ) instanceof ) instanceof  = $missing$;
        of the;
        variable to;
        more descriptive;
        more such;
        "2000" = $missing$;
    }
}
statement is: @Increase
the number, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: subnets by = 50 % to, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: 50 % to
statement is: a larger, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: with more, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: @Change
the value, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: variable to, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: more descriptive, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: CIDR block, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: CIDR such, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: (((50 % to) instanceof ) instanceof ) instanceof  = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: of the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: variable to, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: more descriptive, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: more such, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: "2000" = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: getFriends_txt()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String friends_txt = ConfigurationManagement.getFriends_txt()
test data is: ConfigurationManagement.getFriends_txt();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int numFriends = 20;
        String[] friends = new String[]{ "Alice", "Bob", "Charlie", "David", "Eve", "Fred", "Grace", "Henry", "Irene", "Jack", "Kim", "Lily" };
        ConfigurationManagement.setNumFriends(numFriends);
        ConfigurationManagement.setFriends(friends);
    }
}
statement is: // Improved test data
int numFriends = 20, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] friends = new String[]{ "Alice", "Bob", "Charlie", "David", "Eve", "Fred", "Grace", "Henry", "Irene", "Jack", "Kim", "Lily" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: ConfigurationManagement.setNumFriends(numFriends), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setNumFriends(numFriends) target is: ConfigurationManagement method is: setNumFriends(int)
statement is: ConfigurationManagement.setFriends(friends), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setFriends(friends) target is: ConfigurationManagement method is: setFriends(java.lang.String[])
* this is vulnerable: int _int = 20
TestCase is: int _int = 20;

statement is: getChar_id_count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int char_id_count = ConfigurationManagement.getChar_id_count()
test data is: ConfigurationManagement.getChar_id_count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        return 10;
    }
}
statement is: return 10, class spoon.support.reflect.code.CtReturnImpl
statement is: setStart_limited_time(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setStart_limited_time((-415))
test data is: ConfigurationManagement.setStart_limited_time((-415));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setStart_limited_time(new Date());
    }
}
statement is: ConfigurationManagement.setStart_limited_time(new Date()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setStart_limited_time(new Date()) target is: ConfigurationManagement method is: setStart_limited_time(Date)
Matched Method is: setStart_limited_time(J)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int _int = null;
ConfigurationManagement.setStart_limited_time(_int);

statement is: getAccess_allownum()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access_allownum = ConfigurationManagement.getAccess_allownum()
test data is: ConfigurationManagement.getAccess_allownum();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int num = 0;
        if (Math.random() < 0.5) {
            num = 1;
        } else {
            num = 2;
        }
        return num;
    }
}
statement is: int num = 0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: if (Math.random() < 0.5) {
    num = 1;
} else {
    num = 2;
}, class spoon.support.reflect.code.CtIfImpl
statement is: return num, class spoon.support.reflect.code.CtReturnImpl
* this is vulnerable: int _int = 0
TestCase is: int _int = 0;

statement is: getGMMax()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int gMMax = ConfigurationManagement.getGMMax()
test data is: ConfigurationManagement.getGMMax();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int gmMax = 10;// original test data }}

    }
}
statement is: int gmMax = 10// original test data }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
TestCase is: int _int = 10;

statement is: getAuth_before_save_file()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_before_save_file = ConfigurationManagement.getAuth_before_save_file()
test data is: ConfigurationManagement.getAuth_before_save_file();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int userId = 5678;// Replace with a more descriptive value, such as the actual user ID of the person testing the feature.

        String fileName = "example2.txt";// Replace with a more descriptive value, such as the actual file name being used for testing. }}

    }
}
statement is: int userId = 5678// Replace with a more descriptive value, such as the actual user ID of the person testing the feature.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String fileName = "example2.txt"// Replace with a more descriptive value, such as the actual file name being used for testing. }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5678
* this is vulnerable: String string = "example2.txt"
TestCase is: int _int = 5678;
String string = "example2.txt";

statement is: isLogin_ip_set_()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean login_ip_set_ = ConfigurationManagement.isLogin_ip_set_()
test data is: ConfigurationManagement.isLogin_ip_set_();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int loginIpSet = ConfigurationManagement.isLogin_ip_set_();
        assertTrue(loginIpSet == 0, "Login IP set should be false by default");
        String ipAddress = "192.168.10.1";
        ConfigurationManagement.setLogin_ip_(ipAddress);
        int loginIpSetAfterUpdate = ConfigurationManagement.isLogin_ip_set_();
        assertTrue(loginIpSetAfterUpdate == 1, "Login IP set should be true after setting an IP address");
        String updatedIpAddress = ConfigurationManagement.getLogin_ip_();
        assertEquals(updatedIpAddress, ipAddress, "Updated IP address does not match the expected value");
        ConfigurationManagement.clearLogin_ip_();
        int loginIpSetAfterClear = ConfigurationManagement.isLogin_ip_set_();
        assertTrue(loginIpSetAfterClear == 0, "Login IP set should be false after clearing the IP address");
    }
}
statement is: int loginIpSet = ConfigurationManagement.isLogin_ip_set_(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.isLogin_ip_set_() target is: ConfigurationManagement method is: isLogin_ip_set_()
Matched Method is: isLogin_ip_set_()Z
statement is: assertTrue(loginIpSet == 0, "Login IP set should be false by default"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(loginIpSet == 0, "Login IP set should be false by default") target is:  method is: assertTrue(boolean,java.lang.String)
statement is: String ipAddress = "192.168.10.1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ConfigurationManagement.setLogin_ip_(ipAddress), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setLogin_ip_(ipAddress) target is: ConfigurationManagement method is: setLogin_ip_(java.lang.String)
statement is: int loginIpSetAfterUpdate = ConfigurationManagement.isLogin_ip_set_(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.isLogin_ip_set_() target is: ConfigurationManagement method is: isLogin_ip_set_()
Matched Method is: isLogin_ip_set_()Z
statement is: assertTrue(loginIpSetAfterUpdate == 1, "Login IP set should be true after setting an IP address"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(loginIpSetAfterUpdate == 1, "Login IP set should be true after setting an IP address") target is:  method is: assertTrue(boolean,java.lang.String)
statement is: String updatedIpAddress = ConfigurationManagement.getLogin_ip_(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getLogin_ip_() target is: ConfigurationManagement method is: getLogin_ip_()
statement is: assertEquals(updatedIpAddress, ipAddress, "Updated IP address does not match the expected value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(updatedIpAddress, ipAddress, "Updated IP address does not match the expected value") target is:  method is: assertEquals(java.lang.String,java.lang.String,java.lang.String)
statement is: ConfigurationManagement.clearLogin_ip_(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.clearLogin_ip_() target is: ConfigurationManagement method is: clearLogin_ip_()
statement is: int loginIpSetAfterClear = ConfigurationManagement.isLogin_ip_set_(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.isLogin_ip_set_() target is: ConfigurationManagement method is: isLogin_ip_set_()
Matched Method is: isLogin_ip_set_()Z
statement is: assertTrue(loginIpSetAfterClear == 0, "Login IP set should be false after clearing the IP address"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(loginIpSetAfterClear == 0, "Login IP set should be false after clearing the IP address") target is:  method is: assertTrue(boolean,java.lang.String)
* this is vulnerable: String string = "192.168.10.1"
TestCase is: ConfigurationManagement.isLogin_ip_set_();
String string = "192.168.10.1";
ConfigurationManagement.isLogin_ip_set_();
ConfigurationManagement.isLogin_ip_set_();

statement is: getStartLimitedTime()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long startLimitedTime = ConfigurationManagement.getStartLimitedTime()
test data is: ConfigurationManagement.getStartLimitedTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.getStartLimitedTime();
        // Improved test data
        int startLimitedTime = 10;// seconds

        String limitedTimeMessage = "You have 10 seconds left to complete your task. If you don't finish soon, you will lose points.";
        ConfigurationManagement.setStartLimitedTime(startLimitedTime);
        ConfigurationManagement.setLimitedTimeMessage(limitedTimeMessage);
    }
}
statement is: ConfigurationManagement.getStartLimitedTime(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getStartLimitedTime() target is: ConfigurationManagement method is: getStartLimitedTime()
Matched Method is: getStartLimitedTime()J
statement is: // Improved test data
int startLimitedTime = 10// seconds
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String limitedTimeMessage = "You have 10 seconds left to complete your task. If you don't finish soon, you will lose points.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ConfigurationManagement.setStartLimitedTime(startLimitedTime), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setStartLimitedTime(startLimitedTime) target is: ConfigurationManagement method is: setStartLimitedTime(int)
statement is: ConfigurationManagement.setLimitedTimeMessage(limitedTimeMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setLimitedTimeMessage(limitedTimeMessage) target is: ConfigurationManagement method is: setLimitedTimeMessage(java.lang.String)
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "You have 10 seconds left to complete your task. If you don't finish soon, you will lose points."
TestCase is: ConfigurationManagement.getStartLimitedTime();
int _int = 10;
String string = "You have 10 seconds left to complete your task. If you don't finish soon, you will lose points.";

statement is: getAutosave_time()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int autosave_time = ConfigurationManagement.getAutosave_time()
test data is: ConfigurationManagement.getAutosave_time();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int autosaveTime = 10;// In minutes

        String userName = "John Doe";
        String password = "password123";
        String emailAddress = "johndoe@example.com";
        String phoneNumber = "555-555-5555";
        String address = "123 Main St., Anytown, USA";
        boolean rememberMe = true;
    }
}
statement is: // Improved test data
int autosaveTime = 10// In minutes
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String userName = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String emailAddress = "johndoe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String phoneNumber = "555-555-5555", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String address = "123 Main St., Anytown, USA", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean rememberMe = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "John Doe"
* this is vulnerable: String string = "password123"
* this is vulnerable: String string = "johndoe@example.com"
* this is vulnerable: String string = "555-555-5555"
* this is vulnerable: String string = "123 Main St., Anytown, USA"
* this is vulnerable: boolean _boolean = true
TestCase is: int _int = 10;
String string = "John Doe";
String string = "password123";
String string = "johndoe@example.com";
String string = "555-555-5555";
String string = "123 Main St., Anytown, USA";
boolean _boolean = true;

statement is: getAccess_allow()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String access_allow = ConfigurationManagement.getAccess_allow()
test data is: ConfigurationManagement.getAccess_allow();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Set up mock objects and expected behavior
        AccessControlList acl = new AccessControlList(Arrays.asList("user1", "user2"));
        ConfigurationManagement configurationManagement = new ConfigurationManagement();
        configurationManagement.setAcl(acl);
        // Perform test
        List<String> accessAllow = configurationManagement.getAccessAllow();
        assertEquals(acl.getAllowedUsers(), accessAllow);
    }
}
statement is: // Set up mock objects and expected behavior
AccessControlList acl = new AccessControlList(Arrays.asList("user1", "user2")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement configurationManagement = new ConfigurationManagement(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: configurationManagement.setAcl(acl), class spoon.support.reflect.code.CtInvocationImpl
invocation is: configurationManagement.setAcl(acl) target is: configurationManagement method is: setAcl(AccessControlList)
statement is: // Perform test
List<String> accessAllow = configurationManagement.getAccessAllow(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: configurationManagement.getAccessAllow() target is: configurationManagement method is: getAccessAllow()
statement is: assertEquals(acl.getAllowedUsers(), accessAllow), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(acl.getAllowedUsers(), accessAllow) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: getNew_reg_tick()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long new_reg_tick = ConfigurationManagement.getNew_reg_tick()
test data is: ConfigurationManagement.getNew_reg_tick();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        assertEquals(0.123456789, Double.valueOf(ConfigurationManagement.getNew_reg_tick()));
    }
}
statement is: assertEquals(0.123456789, Double.valueOf(ConfigurationManagement.getNew_reg_tick())), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(0.123456789, Double.valueOf(ConfigurationManagement.getNew_reg_tick())) target is:  method is: assertEquals(double,<unknown>)
statement is: addNum_regs(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.addNum_regs(0L)
test data is: ConfigurationManagement.addNum_regs(0L);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.addNum_regs(100L);
    }
}
statement is: ConfigurationManagement.addNum_regs(100L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.addNum_regs(100L) target is: ConfigurationManagement method is: addNum_regs(long)
Matched Method is: addNum_regs(J)V
TestCase is: long _long = 100L;
ConfigurationManagement.addNum_regs(_long);

statement is: getAccess_order()Lorg/javathena/core/utiles/ACO; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO access_order = ConfigurationManagement.getAccess_order()
test data is: ConfigurationManagement.getAccess_order();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Example 1: Access order for a single item
        // Example 2: Access order for multiple items
    }
}
statement is: // Example 1: Access order for a single item, class spoon.support.reflect.code.CtCommentImpl
statement is: // Example 2: Access order for multiple items, class spoon.support.reflect.code.CtCommentImpl
statement is: lesslessAuth_before_save_file()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int lesslessAuth_before_save_file = ConfigurationManagement.lesslessAuth_before_save_file()
statement is: getAuth_before_save_file()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_before_save_file = ConfigurationManagement.getAuth_before_save_file()
test data is: ConfigurationManagement.lesslessAuth_before_save_file();
ConfigurationManagement.getAuth_before_save_file();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.lesslessAuth_before_save_file();
        ConfigurationManagement.getAuth_before_save_file();
    }
}
statement is: ConfigurationManagement.lesslessAuth_before_save_file(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.lesslessAuth_before_save_file() target is: ConfigurationManagement method is: lesslessAuth_before_save_file()
Matched Method is: lesslessAuth_before_save_file()I
statement is: ConfigurationManagement.getAuth_before_save_file(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAuth_before_save_file() target is: ConfigurationManagement method is: getAuth_before_save_file()
Matched Method is: getAuth_before_save_file()I
TestCase is: ConfigurationManagement.lesslessAuth_before_save_file();
ConfigurationManagement.getAuth_before_save_file();

statement is: getSubnetmaski()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] subnetmaski = ConfigurationManagement.getSubnetmaski()
test data is: ConfigurationManagement.getSubnetmaski();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        // Test case 1: Get subnet mask for a valid IP address with a default subnet mask
        String ipAddress = "192.168.0.1";
        int expectedSubnetMask = 24;
        assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress));
        // Test case 2: Get subnet mask for a valid IP address with an explicit subnet mask
        ipAddress = "192.168.0.1/24";
        expectedSubnetMask = 24;
        assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress));
        // Test case 3: Get subnet mask for an invalid IP address with an explicit subnet mask
        ipAddress = "192.168.0.1/33";
        expectedSubnetMask = -1;
        assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress));
        // Test case 4: Get subnet mask for an empty IP address with a default subnet mask
        ipAddress = "";
        expectedSubnetMask = -1;
        assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress));
    }
}
statement is: // Test case 1: Get subnet mask for a valid IP address with a default subnet mask
String ipAddress = "192.168.0.1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedSubnetMask = 24, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress)) target is:  method is: assertEquals(int,<unknown>)
statement is: // Test case 2: Get subnet mask for a valid IP address with an explicit subnet mask
ipAddress = "192.168.0.1/24", class spoon.support.reflect.code.CtAssignmentImpl
statement is: expectedSubnetMask = 24, class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress)) target is:  method is: assertEquals(int,<unknown>)
statement is: // Test case 3: Get subnet mask for an invalid IP address with an explicit subnet mask
ipAddress = "192.168.0.1/33", class spoon.support.reflect.code.CtAssignmentImpl
statement is: expectedSubnetMask = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress)) target is:  method is: assertEquals(int,<unknown>)
statement is: // Test case 4: Get subnet mask for an empty IP address with a default subnet mask
ipAddress = "", class spoon.support.reflect.code.CtAssignmentImpl
statement is: expectedSubnetMask = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedSubnetMask, ConfigurationManagement.getSubnetmask(ipAddress)) target is:  method is: assertEquals(int,<unknown>)
* this is vulnerable: String string = "192.168.0.1"
* this is vulnerable: int _int = 24
TestCase is: String string = "192.168.0.1";
int _int = 24;

statement is: getTimestamp_format()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String timestamp_format = ConfigurationManagement.getTimestamp_format()
test data is: ConfigurationManagement.getTimestamp_format();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.getTimestamp_format();
    }
}
statement is: ConfigurationManagement.getTimestamp_format(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getTimestamp_format() target is: ConfigurationManagement method is: getTimestamp_format()
Matched Method is: getTimestamp_format()Ljava/lang/String;
TestCase is: ConfigurationManagement.getTimestamp_format();

statement is: setNew_reg_tick(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setNew_reg_tick(603)
test data is: ConfigurationManagement.setNew_reg_tick(603);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setNew_reg_tick(921);// new registration ticket number }}

    }
}
statement is: ConfigurationManagement.setNew_reg_tick(921)// new registration ticket number }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setNew_reg_tick(921)// new registration ticket number }}
 target is: ConfigurationManagement method is: setNew_reg_tick(int)
Matched Method is: setNew_reg_tick(J)V
TestCase is: int _int = 921;
ConfigurationManagement.setNew_reg_tick(_int);

statement is: getAutosave_interval()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int autosave_interval = ConfigurationManagement.getAutosave_interval()
test data is: ConfigurationManagement.getAutosave_interval();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Improved
        Test Data;
        Place your;
        code between;
        the[] and;
    }
}
statement is: @Improved
Test Data, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: Place your, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: code between, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the[] and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: addGMMax()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.addGMMax()
test data is: ConfigurationManagement.addGMMax();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int num1 = 5;
        int num2 = 8;
        int result = num1 + num2;
        String str1 = "Hello";
        String str2 = "World";
        String concatStr = (str1 + " ") + str2;
        char c1 = 'a';
        char c2 = 'b';
        String charConcat = (c1 + "") + c2;
    }
}
statement is: int num1 = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int num2 = 8, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int result = num1 + num2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: num1 + num2
statement is: String str1 = "Hello", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str2 = "World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String concatStr = (str1 + " ") + str2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: (str1 + " ") + str2
statement is: char c1 = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c2 = 'b', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String charConcat = (c1 + "") + c2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: (c1 + "") + c2
* this is vulnerable: int _int = 5
* this is vulnerable: int _int = 8
* this is vulnerable: String string = "Hello"
* this is vulnerable: String string = "World"
* this is vulnerable: char _char = 'a'
* this is vulnerable: char _char = 'b'
TestCase is: int _int = 5;
int _int = 8;
String string = "Hello";
String string = "World";
char _char = 'a';
char _char = 'b';

statement is: setStartLimitedTime(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setStartLimitedTime(5124L)
statement is: getStartLimitedTime()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long startLimitedTime = ConfigurationManagement.getStartLimitedTime()
test data is: ConfigurationManagement.setStartLimitedTime(5124L);
ConfigurationManagement.getStartLimitedTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setStartLimitedTime(10080L);// 1 week in seconds

        ConfigurationManagement.getStartLimitedTime();
    }
}
statement is: ConfigurationManagement.setStartLimitedTime(10080L)// 1 week in seconds
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setStartLimitedTime(10080L)// 1 week in seconds
 target is: ConfigurationManagement method is: setStartLimitedTime(long)
Matched Method is: setStartLimitedTime(J)V
statement is: ConfigurationManagement.getStartLimitedTime(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getStartLimitedTime() target is: ConfigurationManagement method is: getStartLimitedTime()
Matched Method is: getStartLimitedTime()J
TestCase is: long _long = 10080L;
ConfigurationManagement.setStartLimitedTime(_long);
ConfigurationManagement.getStartLimitedTime();

statement is: getAccess_denynum()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access_denynum = ConfigurationManagement.getAccess_denynum()
test data is: ConfigurationManagement.getAccess_denynum();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.getAccess_denynum(10);
    }
}
statement is: ConfigurationManagement.getAccess_denynum(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAccess_denynum(10) target is: ConfigurationManagement method is: getAccess_denynum(int)
statement is: setLogin_ip_str(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setLogin_ip_str("duration")
test data is: ConfigurationManagement.setLogin_ip_str("duration");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setLogin_ip_str("192.168.0.1");
    }
}
statement is: ConfigurationManagement.setLogin_ip_str("192.168.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setLogin_ip_str("192.168.0.1") target is: ConfigurationManagement method is: setLogin_ip_str(java.lang.String)
Matched Method is: setLogin_ip_str(Ljava/lang/String;)V
TestCase is: String string = "192.168.0.1";
ConfigurationManagement.setLogin_ip_str(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@38e975c1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[4]
statement is: setSubneti([I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setSubneti(arg0)
statement is: login_config_readTXT(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int login_config_readTXT = ConfigurationManagement.login_config_readTXT((String) null)
test data is: int[] intArray = new int[4];
ConfigurationManagement.setSubneti(intArray);
ConfigurationManagement.login_config_readTXT((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[] intArray = new int[]{ 1, 2, 3, 4 };
        ConfigurationManagement.setSubneti(intArray);
        ConfigurationManagement.login_config_readTXT(((String) (null)));
    }
}
statement is: int[] intArray = new int[]{ 1, 2, 3, 4 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[4] isAssignment: false Array: new int[]{ 1, 2, 3, 4 } Elements: [1, 2, 3, 4]
lengths: [4] []
statement is: ConfigurationManagement.setSubneti(intArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setSubneti(intArray) target is: ConfigurationManagement method is: setSubneti(int[])
Matched Method is: setSubneti([I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.login_config_readTXT(((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.login_config_readTXT(((String) (null))) target is: ConfigurationManagement method is: login_config_readTXT(java.lang.String)
Matched Method is: login_config_readTXT(Ljava/lang/String;)I
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int[] intArray = null;
ConfigurationManagement.setSubneti(intArray);
String string = null;
ConfigurationManagement.login_config_readTXT(string);

statement is: getLan_char_ip()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String lan_char_ip = ConfigurationManagement.getLan_char_ip()
test data is: ConfigurationManagement.getLan_char_ip();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Given
        String expectedLanCharIp = "192.168.0.1";
        String actualLanCharIp = ConfigurationManagement.getLan_char_ip();
        // Then
        assertEquals(expectedLanCharIp, actualLanCharIp);
    }
}
statement is: // Given
String expectedLanCharIp = "192.168.0.1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String actualLanCharIp = ConfigurationManagement.getLan_char_ip(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getLan_char_ip() target is: ConfigurationManagement method is: getLan_char_ip()
Matched Method is: getLan_char_ip()Ljava/lang/String;
statement is: // Then
assertEquals(expectedLanCharIp, actualLanCharIp), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Then
assertEquals(expectedLanCharIp, actualLanCharIp) target is:  method is: assertEquals(java.lang.String,java.lang.String)
* this is vulnerable: String string = "192.168.0.1"
TestCase is: String string = "192.168.0.1";
ConfigurationManagement.getLan_char_ip();

statement is: setGMMax(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setGMMax(0)
statement is: getGMMax()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int gMMax = ConfigurationManagement.getGMMax()
test data is: ConfigurationManagement.setGMMax(0);
ConfigurationManagement.getGMMax();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setGMMax(5);
        ConfigurationManagement.getGMMax();
    }
}
statement is: ConfigurationManagement.setGMMax(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setGMMax(5) target is: ConfigurationManagement method is: setGMMax(int)
Matched Method is: setGMMax(I)V
statement is: ConfigurationManagement.getGMMax(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getGMMax() target is: ConfigurationManagement method is: getGMMax()
Matched Method is: getGMMax()I
TestCase is: int _int = 5;
ConfigurationManagement.setGMMax(_int);
ConfigurationManagement.getGMMax();

statement is: getWisp_server_name()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String wisp_server_name = ConfigurationManagement.getWisp_server_name()
test data is: ConfigurationManagement.getWisp_server_name();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        return "wisp-01";
    }
}
statement is: // Improved test data for the above code snippet
return "wisp-01", class spoon.support.reflect.code.CtReturnImpl
statement is: isConsole_silent()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean console_silent = ConfigurationManagement.isConsole_silent()
test data is: ConfigurationManagement.isConsole_silent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Improve
        the test;
        by changing;
        primitive values;
        Strings to;
        illustrative examples;
        ConfigurationManagement.isConsole_silent();
        The code;
        above checks;
        the console;
        silent or;
        To make;
        test data;
        descriptive and;
        of the;
        being tested;
        being we;
        use more;
        examples instead;
        of using;
        For example;
        For we;
        use a;
        to represent;
        type of;
        expected from;
        user : ConfigurationManagement.isConsole_silent("yes");
        This way;
        This the;
        data is;
        descriptive and;
        us understand;
        kind of;
        we are;
        from the;
        user.@Improve
        the test;
        by adding;
        examples or;
        different scenarios;
        ConfigurationManagement.isConsole_silent();
        To make;
        test data;
        comprehensive and;
        different scenarios;
        different we;
        add more;
        of input;
        output combinations;
        For example;
        For we;
        test the;
        where the;
        enters a;
        other : ConfigurationManagement.isConsole_silent("maybe");// returns false

        This way;
        This the;
        data is;
        comprehensive and;
        different scenarios;
        different which;
        us ensure;
        our code;
        works correctly;
        all possible;
        inputs.@Improve
        the test;
        by using;
        range of;
        values : ConfigurationManagement.isConsole_silent(0);
        To make;
        test data;
        diverse and;
        a wider;
        of input;
        of we;
        use a;
        of input;
        instead of;
        a single;
        For example;
        For we;
        test the;
        where the;
        enters a;
        number : ConfigurationManagement.isConsole_silent(3);// returns false

        This way;
        This the;
        data is;
        diverse and;
        different ranges;
        input values;
        input which;
        us ensure;
        our code;
        works correctly;
        all possible;
        inputs = $missing$;
    }
}
statement is: @Improve
the test, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: by changing, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: primitive values, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: Strings to, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: illustrative examples, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: ConfigurationManagement.isConsole_silent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.isConsole_silent() target is: ConfigurationManagement method is: isConsole_silent()
Matched Method is: isConsole_silent()Z
statement is: The code, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: above checks, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the console, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: silent or, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: To make, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: test data, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: descriptive and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: being tested, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: being we, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: use more, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: examples instead, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of using, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For example, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For we, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: use a, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: to represent, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: type of, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: expected from, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: user : ConfigurationManagement.isConsole_silent("yes"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user : ConfigurationManagement.isConsole_silent("yes") target is: ConfigurationManagement method is: isConsole_silent(java.lang.String)
statement is: This way, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: This the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: data is, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: descriptive and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: us understand, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: kind of, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: we are, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: from the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: @Improve
the test, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: by adding, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: examples or, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: different scenarios, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: ConfigurationManagement.isConsole_silent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.isConsole_silent() target is: ConfigurationManagement method is: isConsole_silent()
Matched Method is: isConsole_silent()Z
statement is: To make, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: test data, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: comprehensive and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: different scenarios, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: different we, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: add more, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of input, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: output combinations, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For example, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For we, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: test the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: where the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: enters a, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: other : ConfigurationManagement.isConsole_silent("maybe")// returns false
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: other : ConfigurationManagement.isConsole_silent("maybe")// returns false
 target is: ConfigurationManagement method is: isConsole_silent(java.lang.String)
statement is: This way, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: This the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: data is, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: comprehensive and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: different scenarios, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: different which, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: us ensure, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: our code, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: works correctly, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: all possible, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: @Improve
the test, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: by using, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: range of, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: values : ConfigurationManagement.isConsole_silent(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: values : ConfigurationManagement.isConsole_silent(0) target is: ConfigurationManagement method is: isConsole_silent(int)
statement is: To make, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: test data, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: diverse and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: a wider, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of input, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of we, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: use a, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of input, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: instead of, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: a single, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For example, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For we, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: test the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: where the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: enters a, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: number : ConfigurationManagement.isConsole_silent(3)// returns false
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: number : ConfigurationManagement.isConsole_silent(3)// returns false
 target is: ConfigurationManagement method is: isConsole_silent(int)
statement is: This way, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: This the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: data is, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: diverse and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: different ranges, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: input values, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: input which, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: us ensure, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: our code, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: works correctly, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: all possible, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: inputs = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: ConfigurationManagement.isConsole_silent();
ConfigurationManagement.isConsole_silent();

statement is: getBackup_txt()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String backup_txt = ConfigurationManagement.getBackup_txt()
test data is: ConfigurationManagement.getBackup_txt();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int backupInterval = 30;
        String backupLocation = "D:/backup";
    }
}
statement is: int backupInterval = 30, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String backupLocation = "D:/backup", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 30
* this is vulnerable: String string = "D:/backup"
TestCase is: int _int = 30;
String string = "D:/backup";

statement is: setLan_char_ip(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setLan_char_ip((String) null)
test data is: ConfigurationManagement.setLan_char_ip((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setWan_dns_server("8.8.8.8");
    }
}
statement is: ConfigurationManagement.setWan_dns_server("8.8.8.8"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setWan_dns_server("8.8.8.8") target is: ConfigurationManagement method is: setWan_dns_server(java.lang.String)
statement is: getNum_regs()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long num_regs = ConfigurationManagement.getNum_regs()
test data is: ConfigurationManagement.getNum_regs();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int numRegs = 10;
        String regType = "ABCDEFGHIJ";
    }
}
statement is: int numRegs = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String regType = "ABCDEFGHIJ", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "ABCDEFGHIJ"
TestCase is: int _int = 10;
String string = "ABCDEFGHIJ";

statement is: getServer_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int server_num = ConfigurationManagement.getServer_num()
test data is: ConfigurationManagement.getServer_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }// Improved test data


    public static int getServer_num() {
        return 5;// Changed from 3 to make the test more descriptive and representative of the situation being tested. }}

    }
}
statement is: return 5// Changed from 3 to make the test more descriptive and representative of the situation being tested. }}
, class spoon.support.reflect.code.CtReturnImpl
statement is: setAccess_deny(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_deny("YES")
statement is: getAccess_deny()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String access_deny = ConfigurationManagement.getAccess_deny()
test data is: ConfigurationManagement.setAccess_deny("YES");
ConfigurationManagement.getAccess_deny();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setAccess_deny("NO");
        ConfigurationManagement.getAccess_deny();
    }
}
statement is: ConfigurationManagement.setAccess_deny("NO"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_deny("NO") target is: ConfigurationManagement method is: setAccess_deny(java.lang.String)
Matched Method is: setAccess_deny(Ljava/lang/String;)V
statement is: ConfigurationManagement.getAccess_deny(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAccess_deny() target is: ConfigurationManagement method is: getAccess_deny()
Matched Method is: getAccess_deny()Ljava/lang/String;
TestCase is: String string = "NO";
ConfigurationManagement.setAccess_deny(string);
ConfigurationManagement.getAccess_deny();

statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(459)
statement is: display_conf_warnings()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.display_conf_warnings()
test data is: ConfigurationManagement.setAccess_allownum(459);
ConfigurationManagement.display_conf_warnings();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int num = 459;
        ConfigurationManagement.setAccess_allownum(num);
        ConfigurationManagement.display_conf_warnings();
    }
}
statement is: int num = 459, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ConfigurationManagement.setAccess_allownum(num), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(num) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: ConfigurationManagement.display_conf_warnings(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.display_conf_warnings() target is: ConfigurationManagement method is: display_conf_warnings()
Matched Method is: display_conf_warnings()V
TestCase is: int _int = 459;
ConfigurationManagement.setAccess_allownum(_int);
ConfigurationManagement.display_conf_warnings();

statement is: setServer_num(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setServer_num((-414))
statement is: getServer_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int server_num = ConfigurationManagement.getServer_num()
test data is: ConfigurationManagement.setServer_num((-414));
ConfigurationManagement.getServer_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int serverNum = -414;
    }
}
statement is: int serverNum = -414, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -414
statement is: getAccess_deny()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String access_deny = ConfigurationManagement.getAccess_deny()
test data is: ConfigurationManagement.getAccess_deny();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int userId = 123;// Replace with a real user ID

        String username = "johndoe";// Replace with a real username

        String password = "password123";// Replace with a real password

        boolean expectedResult = true;// Replace with the expected result of the method call }}

    }
}
statement is: // Improved test data
int userId = 123// Replace with a real user ID
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "johndoe"// Replace with a real username
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123"// Replace with a real password
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean expectedResult = true// Replace with the expected result of the method call }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 123
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: boolean _boolean = true
TestCase is: int _int = 123;
String string = "johndoe";
String string = "password123";
boolean _boolean = true;

statement is: getScdata_txt()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String scdata_txt = ConfigurationManagement.getScdata_txt()
test data is: ConfigurationManagement.getScdata_txt();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @The
        test data;
    }
}
statement is: @The
test data, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: getGm_allow_level()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int gm_allow_level = ConfigurationManagement.getGm_allow_level()
test data is: ConfigurationManagement.getGm_allow_level();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int allowLevel = ConfigurationManagement.getGm_allow_level();
        // Improved test data:
        // The value of "allowLevel" is now more descriptive and representative of the situation being tested.
        allowLevel = 2;// This is a valid value for the "gm_allow_level" configuration parameter, which specifies the level of access that game masters have to certain features of the game. }}

    }
}
statement is: int allowLevel = ConfigurationManagement.getGm_allow_level(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getGm_allow_level() target is: ConfigurationManagement method is: getGm_allow_level()
Matched Method is: getGm_allow_level()I
statement is: // Improved test data:
// The value of "allowLevel" is now more descriptive and representative of the situation being tested.
allowLevel = 2// This is a valid value for the "gm_allow_level" configuration parameter, which specifies the level of access that game masters have to certain features of the game. }}
, class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: ConfigurationManagement.getGm_allow_level();

statement is: getEmail_creation()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int email_creation = ConfigurationManagement.getEmail_creation()
test data is: ConfigurationManagement.getEmail_creation();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        ConfigurationManagement.getEmail_creation("johndoe@example.com", 1234567890);
    }
}
statement is: // Improved test data
ConfigurationManagement.getEmail_creation("johndoe@example.com", 1234567890), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
ConfigurationManagement.getEmail_creation("johndoe@example.com", 1234567890) target is: ConfigurationManagement method is: getEmail_creation(java.lang.String,int)
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum((-1945))
statement is: getAccess_denynum()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access_denynum = ConfigurationManagement.getAccess_denynum()
test data is: ConfigurationManagement.setAccess_denynum((-1945));
ConfigurationManagement.getAccess_denynum();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setAccess_denynum(-1945);
        ConfigurationManagement.getAccess_denynum();
    }
}
statement is: ConfigurationManagement.setAccess_denynum(-1945), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(-1945) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.getAccess_denynum(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAccess_denynum() target is: ConfigurationManagement method is: getAccess_denynum()
Matched Method is: getAccess_denynum()I
TestCase is: int _int = null;
ConfigurationManagement.setAccess_denynum(_int);
ConfigurationManagement.getAccess_denynum();

statement is: setAuth_before_save_file(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAuth_before_save_file(15)
statement is: getAuth_before_save_file()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_before_save_file = ConfigurationManagement.getAuth_before_save_file()
test data is: ConfigurationManagement.setAuth_before_save_file(15);
ConfigurationManagement.getAuth_before_save_file();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setAuth_before_save_file(3600);// 1 hour

        ConfigurationManagement.getAuth_before_save_file();
    }
}
statement is: ConfigurationManagement.setAuth_before_save_file(3600)// 1 hour
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAuth_before_save_file(3600)// 1 hour
 target is: ConfigurationManagement method is: setAuth_before_save_file(int)
Matched Method is: setAuth_before_save_file(I)V
statement is: ConfigurationManagement.getAuth_before_save_file(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAuth_before_save_file() target is: ConfigurationManagement method is: getAuth_before_save_file()
Matched Method is: getAuth_before_save_file()I
TestCase is: int _int = 3600;
ConfigurationManagement.setAuth_before_save_file(_int);
ConfigurationManagement.getAuth_before_save_file();

statement is: setChar_id_count(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setChar_id_count(1643)
test data is: ConfigurationManagement.setChar_id_count(1643);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setChar_id_count(5000);
    }
}
statement is: ConfigurationManagement.setChar_id_count(5000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setChar_id_count(5000) target is: ConfigurationManagement method is: setChar_id_count(int)
Matched Method is: setChar_id_count(I)V
TestCase is: int _int = 5000;
ConfigurationManagement.setChar_id_count(_int);

statement is: addChar_id_count()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.addChar_id_count()
statement is: getChar_id_count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int char_id_count = ConfigurationManagement.getChar_id_count()
test data is: ConfigurationManagement.addChar_id_count();
ConfigurationManagement.getChar_id_count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Update the test data to be more descriptive and representative of the situation being tested
        ConfigurationManagement.addChar_id_count(10);
        ConfigurationManagement.getChar_id_count();
        // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
        ConfigurationManagement.addChar_id_count(-1);
        ConfigurationManagement.getChar_id_count();
        ConfigurationManagement.addChar_id_count(20.5);
        ConfigurationManagement.getChar_id_count();
        ConfigurationManagement.addChar_id_count("ABC");
        ConfigurationManagement.getChar_id_count();
        // Test data for edge cases
        ConfigurationManagement.addChar_id_count(-100);
        ConfigurationManagement.getChar_id_count();
        ConfigurationManagement.addChar_id_count(10000);
        ConfigurationManagement.getChar_id_count();
    }
}
statement is: // Update the test data to be more descriptive and representative of the situation being tested
ConfigurationManagement.addChar_id_count(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Update the test data to be more descriptive and representative of the situation being tested
ConfigurationManagement.addChar_id_count(10) target is: ConfigurationManagement method is: addChar_id_count(int)
statement is: ConfigurationManagement.getChar_id_count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getChar_id_count() target is: ConfigurationManagement method is: getChar_id_count()
Matched Method is: getChar_id_count()I
statement is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
ConfigurationManagement.addChar_id_count(-1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
ConfigurationManagement.addChar_id_count(-1) target is: ConfigurationManagement method is: addChar_id_count(int)
statement is: ConfigurationManagement.getChar_id_count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getChar_id_count() target is: ConfigurationManagement method is: getChar_id_count()
Matched Method is: getChar_id_count()I
statement is: ConfigurationManagement.addChar_id_count(20.5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.addChar_id_count(20.5) target is: ConfigurationManagement method is: addChar_id_count(double)
statement is: ConfigurationManagement.getChar_id_count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getChar_id_count() target is: ConfigurationManagement method is: getChar_id_count()
Matched Method is: getChar_id_count()I
statement is: ConfigurationManagement.addChar_id_count("ABC"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.addChar_id_count("ABC") target is: ConfigurationManagement method is: addChar_id_count(java.lang.String)
statement is: ConfigurationManagement.getChar_id_count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getChar_id_count() target is: ConfigurationManagement method is: getChar_id_count()
Matched Method is: getChar_id_count()I
statement is: // Test data for edge cases
ConfigurationManagement.addChar_id_count(-100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test data for edge cases
ConfigurationManagement.addChar_id_count(-100) target is: ConfigurationManagement method is: addChar_id_count(int)
statement is: ConfigurationManagement.getChar_id_count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getChar_id_count() target is: ConfigurationManagement method is: getChar_id_count()
Matched Method is: getChar_id_count()I
statement is: ConfigurationManagement.addChar_id_count(10000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.addChar_id_count(10000) target is: ConfigurationManagement method is: addChar_id_count(int)
statement is: ConfigurationManagement.getChar_id_count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getChar_id_count() target is: ConfigurationManagement method is: getChar_id_count()
Matched Method is: getChar_id_count()I
TestCase is: ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();

statement is: getBackup_txt_flag()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String backup_txt_flag = ConfigurationManagement.getBackup_txt_flag()
test data is: ConfigurationManagement.getBackup_txt_flag();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.getBackup_txt_flag();
    }
}
statement is: ConfigurationManagement.getBackup_txt_flag(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getBackup_txt_flag() target is: ConfigurationManagement method is: getBackup_txt_flag()
Matched Method is: getBackup_txt_flag()Ljava/lang/String;
TestCase is: ConfigurationManagement.getBackup_txt_flag();

statement is: addChar_id_count(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.addChar_id_count((-415))
statement is: getChar_id_count()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int char_id_count = ConfigurationManagement.getChar_id_count()
test data is: ConfigurationManagement.addChar_id_count((-415));
ConfigurationManagement.getChar_id_count();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.addChar_id_count(5);
        ConfigurationManagement.getChar_id_count();
    }
}
statement is: ConfigurationManagement.addChar_id_count(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.addChar_id_count(5) target is: ConfigurationManagement method is: addChar_id_count(int)
Matched Method is: addChar_id_count(I)V
statement is: ConfigurationManagement.getChar_id_count(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getChar_id_count() target is: ConfigurationManagement method is: getChar_id_count()
Matched Method is: getChar_id_count()I
TestCase is: int _int = 5;
ConfigurationManagement.addChar_id_count(_int);
ConfigurationManagement.getChar_id_count();

statement is: getLogin_ip_str()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String login_ip_str = ConfigurationManagement.getLogin_ip_str()
test data is: ConfigurationManagement.getLogin_ip_str();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String expectedResult = "192.168.0.1";
    }
}
statement is: String expectedResult = "192.168.0.1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "192.168.0.1"
TestCase is: String string = "192.168.0.1";

statement is: addGMMax(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.addGMMax((-415))
test data is: ConfigurationManagement.addGMMax((-415));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.addGMMax(-200);
    }
}
statement is: ConfigurationManagement.addGMMax(-200), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.addGMMax(-200) target is: ConfigurationManagement method is: addGMMax(int)
Matched Method is: addGMMax(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int _int = null;
ConfigurationManagement.addGMMax(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@228b3ef3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[8]
statement is: setSubneti([I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setSubneti(arg0)
statement is: login_lan_config_read(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int login_lan_config_read = ConfigurationManagement.login_lan_config_read((String) null)
test data is: int[] intArray = new int[8];
ConfigurationManagement.setSubneti(intArray);
ConfigurationManagement.login_lan_config_read((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[] intArray = new int[]{ 192, 168, 0, 0 };
        ConfigurationManagement.setSubneti(intArray);
        ConfigurationManagement.login_lan_config_read(((String) (null)));
    }
}
statement is: int[] intArray = new int[]{ 192, 168, 0, 0 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[8] isAssignment: false Array: new int[]{ 192, 168, 0, 0 } Elements: [192, 168, 0, 0]
lengths: [8] []
statement is: ConfigurationManagement.setSubneti(intArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setSubneti(intArray) target is: ConfigurationManagement method is: setSubneti(int[])
Matched Method is: setSubneti([I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.login_lan_config_read(((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.login_lan_config_read(((String) (null))) target is: ConfigurationManagement method is: login_lan_config_read(java.lang.String)
Matched Method is: login_lan_config_read(Ljava/lang/String;)I
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int[] intArray = null;
ConfigurationManagement.setSubneti(intArray);
String string = null;
ConfigurationManagement.login_lan_config_read(string);

statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = ConfigurationManagement.yesNoOnOffToBoolean("YES")
test data is: ConfigurationManagement.yesNoOnOffToBoolean("YES");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.yesNoOnOffToBoolean("A_TRUE_STRING");
        ConfigurationManagement.yesNoOnOffToBoolean("AN_ON_STRING");
        ConfigurationManagement.yesNoOnOffToBoolean(null);
        ConfigurationManagement.yesNoOnOffToBoolean("");
        ConfigurationManagement.yesNoOnOffToBoolean("NO");
        ConfigurationManagement.yesNoOnOffToBoolean("OFF");
    }
}
statement is: ConfigurationManagement.yesNoOnOffToBoolean("A_TRUE_STRING"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("A_TRUE_STRING") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean("AN_ON_STRING"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("AN_ON_STRING") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean(null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean(null) target is: ConfigurationManagement method is: yesNoOnOffToBoolean(<unknown>)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.yesNoOnOffToBoolean(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean("NO"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("NO") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean("OFF"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("OFF") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: String string = "A_TRUE_STRING";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "AN_ON_STRING";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = null;
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "NO";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "OFF";
ConfigurationManagement.yesNoOnOffToBoolean(string);

statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = ConfigurationManagement.yesNoOnOffToBoolean("No ")
test data is: ConfigurationManagement.yesNoOnOffToBoolean("No ");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.yesNoOnOffToBoolean("True");
    }
}
statement is: ConfigurationManagement.yesNoOnOffToBoolean("True"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("True") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: String string = "True";
ConfigurationManagement.yesNoOnOffToBoolean(string);

statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = ConfigurationManagement.yesNoOnOffToBoolean("ON")
test data is: ConfigurationManagement.yesNoOnOffToBoolean("ON");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        ConfigurationManagement.yesNoOnOffToBoolean("YES");
    }
}
statement is: // Improved test data
ConfigurationManagement.yesNoOnOffToBoolean("YES"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
ConfigurationManagement.yesNoOnOffToBoolean("YES") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: String string = "YES";
ConfigurationManagement.yesNoOnOffToBoolean(string);

statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = ConfigurationManagement.yesNoOnOffToBoolean("NO")
test data is: ConfigurationManagement.yesNoOnOffToBoolean("NO");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.yesNoOnOffToBoolean("YES");
        ConfigurationManagement.yesNoOnOffToBoolean("NO");
        ConfigurationManagement.yesNoOnOffToBoolean("ON");
        ConfigurationManagement.yesNoOnOffToBoolean("OFF");
    }
}
statement is: ConfigurationManagement.yesNoOnOffToBoolean("YES"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("YES") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean("NO"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("NO") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean("ON"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("ON") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean("OFF"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("OFF") target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: String string = "YES";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "NO";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "ON";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "OFF";
ConfigurationManagement.yesNoOnOffToBoolean(string);

statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = ConfigurationManagement.yesNoOnOffToBoolean("OFF")
test data is: ConfigurationManagement.yesNoOnOffToBoolean("OFF");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.yesNoOnOffToBoolean("ON");// Expect true

        ConfigurationManagement.yesNoOnOffToBoolean("OFF");// Expect false

        ConfigurationManagement.yesNoOnOffToBoolean(null);// Expect null

        ConfigurationManagement.yesNoOnOffToBoolean("");// Expect null }}

    }
}
statement is: ConfigurationManagement.yesNoOnOffToBoolean("ON")// Expect true
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("ON")// Expect true
 target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean("OFF")// Expect false
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("OFF")// Expect false
 target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: ConfigurationManagement.yesNoOnOffToBoolean(null)// Expect null
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean(null)// Expect null
 target is: ConfigurationManagement method is: yesNoOnOffToBoolean(<unknown>)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.yesNoOnOffToBoolean("")// Expect null }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.yesNoOnOffToBoolean("")// Expect null }}
 target is: ConfigurationManagement method is: yesNoOnOffToBoolean(java.lang.String)
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: String string = "ON";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "OFF";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = null;
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "";
ConfigurationManagement.yesNoOnOffToBoolean(string);

statement is: display_conf_warnings()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.display_conf_warnings()
test data is: ConfigurationManagement.display_conf_warnings();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        ConfigurationManagement.display_conf_warnings("Your current configuration is not optimal for maximum performance.");
        ConfigurationManagement.display_conf_warnings("You are running out of disk space on your device.");
        ConfigurationManagement.display_conf_warnings("Your network connection is experiencing issues.");
    }
}
statement is: // Improved test data:
ConfigurationManagement.display_conf_warnings("Your current configuration is not optimal for maximum performance."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
ConfigurationManagement.display_conf_warnings("Your current configuration is not optimal for maximum performance.") target is: ConfigurationManagement method is: display_conf_warnings(java.lang.String)
statement is: ConfigurationManagement.display_conf_warnings("You are running out of disk space on your device."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.display_conf_warnings("You are running out of disk space on your device.") target is: ConfigurationManagement method is: display_conf_warnings(java.lang.String)
statement is: ConfigurationManagement.display_conf_warnings("Your network connection is experiencing issues."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.display_conf_warnings("Your network connection is experiencing issues.") target is: ConfigurationManagement method is: display_conf_warnings(java.lang.String)
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("T") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("T")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: login_config_readXML(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int login_config_readXML = ConfigurationManagement.login_config_readXML("T")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("T");
FileSystemHandling.createFolder(evoSuiteFile);
ConfigurationManagement.login_config_readXML("T");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/path/to/test/folder");
        FileSystemHandling.createFolder(evoSuiteFile);
        ConfigurationManagement.login_config_readXML("test_config.xml");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/path/to/test/folder"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.login_config_readXML("test_config.xml"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.login_config_readXML("test_config.xml") target is: ConfigurationManagement method is: login_config_readXML(java.lang.String)
Matched Method is: login_config_readXML(Ljava/lang/String;)I
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
String string = "test_config.xml";
ConfigurationManagement.login_config_readXML(string);

statement is: login_config_readXML(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int login_config_readXML = ConfigurationManagement.login_config_readXML("My8obBhk]#&3tU")
test data is: ConfigurationManagement.login_config_readXML("My8obBhk]#&3tU");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.login_config_readXML("myLoginConfig.xml");
    }
}
statement is: ConfigurationManagement.login_config_readXML("myLoginConfig.xml"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.login_config_readXML("myLoginConfig.xml") target is: ConfigurationManagement method is: login_config_readXML(java.lang.String)
Matched Method is: login_config_readXML(Ljava/lang/String;)I
TestCase is: String string = "myLoginConfig.xml";
ConfigurationManagement.login_config_readXML(string);

statement is: getLoginAthenaConf()Lorg/javathena/conf/LoginAthena; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.conf.LoginAthena
statement code is: LoginAthena loginAthenaConf = ConfigurationManagement.getLoginAthenaConf()
test data is: ConfigurationManagement.getLoginAthenaConf();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        String athenaUsername = "JohnDoe";
        String athenaPassword = "password123";
        String athenaURL = "https://athena.example.com/login";
    }
}
statement is: // Improved test data
String athenaUsername = "JohnDoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String athenaPassword = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String athenaURL = "https://athena.example.com/login", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "JohnDoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: String string = "https://athena.example.com/login"
TestCase is: String string = "JohnDoe";
String string = "password123";
String string = "https://athena.example.com/login";

statement is: setAccess_allow(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allow("lBu,n&SY,S")
statement is: getAccess_allow()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String access_allow = ConfigurationManagement.getAccess_allow()
test data is: ConfigurationManagement.setAccess_allow("lBu,n&SY,S");
ConfigurationManagement.getAccess_allow();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setAccess_allow("lBu,n&SY,S");
        ConfigurationManagement.getAccess_allow();
    }
}
statement is: ConfigurationManagement.setAccess_allow("lBu,n&SY,S"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allow("lBu,n&SY,S") target is: ConfigurationManagement method is: setAccess_allow(java.lang.String)
Matched Method is: setAccess_allow(Ljava/lang/String;)V
statement is: ConfigurationManagement.getAccess_allow(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAccess_allow() target is: ConfigurationManagement method is: getAccess_allow()
Matched Method is: getAccess_allow()Ljava/lang/String;
TestCase is: String string = "lBu,n&SY,S";
ConfigurationManagement.setAccess_allow(string);
ConfigurationManagement.getAccess_allow();

statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum((-4932))
statement is: getAccess_allownum()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access_allownum = ConfigurationManagement.getAccess_allownum()
test data is: ConfigurationManagement.setAccess_allownum((-4932));
ConfigurationManagement.getAccess_allownum();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setAccess_allownum(123456789);
        ConfigurationManagement.getAccess_allownum();
    }
}
statement is: ConfigurationManagement.setAccess_allownum(123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(123456789) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: ConfigurationManagement.getAccess_allownum(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAccess_allownum() target is: ConfigurationManagement method is: getAccess_allownum()
Matched Method is: getAccess_allownum()I
TestCase is: int _int = 123456789;
ConfigurationManagement.setAccess_allownum(_int);
ConfigurationManagement.getAccess_allownum();

statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(280)
statement is: getAccess_allownum()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access_allownum = ConfigurationManagement.getAccess_allownum()
test data is: ConfigurationManagement.setAccess_allownum(280);
ConfigurationManagement.getAccess_allownum();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(30)
statement is: getAccess_denynum()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access_denynum = ConfigurationManagement.getAccess_denynum()
test data is: ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.getAccess_denynum();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setAccess_denynum(25);// value is set to 25 to demonstrate a scenario where access is denied

        ConfigurationManagement.getAccess_denynum();// returns the value of access_denynum which is now 25 }}

    }
}
statement is: ConfigurationManagement.setAccess_denynum(25)// value is set to 25 to demonstrate a scenario where access is denied
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(25)// value is set to 25 to demonstrate a scenario where access is denied
 target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: ConfigurationManagement.getAccess_denynum()// returns the value of access_denynum which is now 25 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAccess_denynum()// returns the value of access_denynum which is now 25 }}
 target is: ConfigurationManagement method is: getAccess_denynum()
Matched Method is: getAccess_denynum()I
TestCase is: int _int = 25;
ConfigurationManagement.setAccess_denynum(_int);
ConfigurationManagement.getAccess_denynum();

statement is: ACO aCO = ACO.DENY_ALLOW type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.DENY_ALLOW
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: getAccess_order()Lorg/javathena/core/utiles/ACO; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO access_order = ConfigurationManagement.getAccess_order()
test data is: ACO aCO = ACO.DENY_ALLOW;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.getAccess_order();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ACO aCO = ACO.DENY_ALLOW;// This value is more descriptive and representative of the situation being tested, as it is a specific value from the ACO enum.

        ConfigurationManagement.setAccess_order(aCO);
        ConfigurationManagement.getAccess_order();
    }
}
statement is: ACO aCO = ACO.DENY_ALLOW// This value is more descriptive and representative of the situation being tested, as it is a specific value from the ACO enum.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.DENY_ALLOW is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.getAccess_order(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getAccess_order() target is: ConfigurationManagement method is: getAccess_order()
Matched Method is: getAccess_order()Lorg/javathena/core/utiles/ACO;
TestCase is: ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.getAccess_order();

statement is: setNum_regs(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setNum_regs((-596L))
statement is: getNum_regs()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long num_regs = ConfigurationManagement.getNum_regs()
test data is: ConfigurationManagement.setNum_regs((-596L));
ConfigurationManagement.getNum_regs();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setNum_regs(1234);
        ConfigurationManagement.getNum_regs();
    }
}
statement is: ConfigurationManagement.setNum_regs(1234), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setNum_regs(1234) target is: ConfigurationManagement method is: setNum_regs(int)
Matched Method is: setNum_regs(J)V
statement is: ConfigurationManagement.getNum_regs(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getNum_regs() target is: ConfigurationManagement method is: getNum_regs()
Matched Method is: getNum_regs()J
TestCase is: int _int = 1234;
ConfigurationManagement.setNum_regs(_int);
ConfigurationManagement.getNum_regs();

statement is: setServer_num(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setServer_num(2535)
statement is: getServer_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int server_num = ConfigurationManagement.getServer_num()
test data is: ConfigurationManagement.setServer_num(2535);
ConfigurationManagement.getServer_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        // Set the server number to a more descriptive value
        ConfigurationManagement.setServer_num(2535);
        // Use more illustrative examples for the primitive values and strings
        int serverNum = 2535;// Server number set using ConfigurationManagement.setServer_num()

        String serverName = "server01";// Server name used in the test

        // Set the server status to a more descriptive value
        ConfigurationManagement.getServerStatus(serverName);
        // Use more illustrative examples for the primitive values and strings
        int serverStatus = 2;// Server status retrieved using ConfigurationManagement.getServerStatus()

        String serverStatusMessage = "Running";// Server status message retrieved using ConfigurationManagement.getServerStatus() }}

    }
}
statement is: // Improved test data for the above code snippet
// Set the server number to a more descriptive value
ConfigurationManagement.setServer_num(2535), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for the above code snippet
// Set the server number to a more descriptive value
ConfigurationManagement.setServer_num(2535) target is: ConfigurationManagement method is: setServer_num(int)
Matched Method is: setServer_num(I)V
statement is: // Use more illustrative examples for the primitive values and strings
int serverNum = 2535// Server number set using ConfigurationManagement.setServer_num()
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String serverName = "server01"// Server name used in the test
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Set the server status to a more descriptive value
ConfigurationManagement.getServerStatus(serverName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Set the server status to a more descriptive value
ConfigurationManagement.getServerStatus(serverName) target is: ConfigurationManagement method is: getServerStatus(java.lang.String)
statement is: // Use more illustrative examples for the primitive values and strings
int serverStatus = 2// Server status retrieved using ConfigurationManagement.getServerStatus()
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String serverStatusMessage = "Running"// Server status message retrieved using ConfigurationManagement.getServerStatus() }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 2535
* this is vulnerable: String string = "server01"
* this is vulnerable: int _int = 2
* this is vulnerable: String string = "Running"
TestCase is: int _int = 2535;
ConfigurationManagement.setServer_num(_int);
int _int = 2535;
String string = "server01";
int _int = 2;
String string = "Running";

statement is: setStartLimitedTime(J)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setStartLimitedTime(0)
statement is: getStartLimitedTime()J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long startLimitedTime = ConfigurationManagement.getStartLimitedTime()
test data is: ConfigurationManagement.setStartLimitedTime(0);
ConfigurationManagement.getStartLimitedTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int limitedTime = 30;// set limited time to 30 minutes

        Assert.assertEquals(limitedTime, ConfigurationManagement.getStartLimitedTime());
    }
}
statement is: int limitedTime = 30// set limited time to 30 minutes
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Assert.assertEquals(limitedTime, ConfigurationManagement.getStartLimitedTime()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertEquals(limitedTime, ConfigurationManagement.getStartLimitedTime()) target is: Assert method is: assertEquals(int)
* this is vulnerable: int _int = 30
TestCase is: int _int = 30;

statement is: org.evosuite.testcase.statements.ArrayStatement@5782bf8c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[8]
statement is: setSubneti([I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setSubneti(arg0)
statement is: getSubneti()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] subneti = ConfigurationManagement.getSubneti()
test data is: int[] intArray = new int[8];
ConfigurationManagement.setSubneti(intArray);
ConfigurationManagement.getSubneti();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[] intArray = new int[]{ 1, 2, 3, 4, 5, 6, 7, 8 };
        ConfigurationManagement.setSubneti(intArray);
        ConfigurationManagement.getSubneti();
    }
}
statement is: int[] intArray = new int[]{ 1, 2, 3, 4, 5, 6, 7, 8 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[8] isAssignment: false Array: new int[]{ 1, 2, 3, 4, 5, 6, 7, 8 } Elements: [1, 2, 3, 4, 5, 6, 7, 8]
lengths: [8] []
statement is: ConfigurationManagement.setSubneti(intArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setSubneti(intArray) target is: ConfigurationManagement method is: setSubneti(int[])
Matched Method is: setSubneti([I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.getSubneti(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getSubneti() target is: ConfigurationManagement method is: getSubneti()
Matched Method is: getSubneti()[I
TestCase is: int[] intArray = null;
ConfigurationManagement.setSubneti(intArray);
ConfigurationManagement.getSubneti();

statement is: org.evosuite.testcase.statements.ArrayStatement@40ba4985 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[5]
statement is: setSubnetmaski([I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setSubnetmaski(arg0)
statement is: getSubnetmaski()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] subnetmaski = ConfigurationManagement.getSubnetmaski()
test data is: int[] intArray = new int[5];
ConfigurationManagement.setSubnetmaski(intArray);
ConfigurationManagement.getSubnetmaski();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[] intArray = new int[]{ 1, 2, 3, 4, 5 };
        ConfigurationManagement.setSubnetmaski(intArray);
        ConfigurationManagement.getSubnetmaski();
    }
}
statement is: int[] intArray = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[5] isAssignment: false Array: new int[]{ 1, 2, 3, 4, 5 } Elements: [1, 2, 3, 4, 5]
lengths: [5] []
statement is: ConfigurationManagement.setSubnetmaski(intArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setSubnetmaski(intArray) target is: ConfigurationManagement method is: setSubnetmaski(int[])
Matched Method is: setSubnetmaski([I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.getSubnetmaski(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getSubnetmaski() target is: ConfigurationManagement method is: getSubnetmaski()
Matched Method is: getSubnetmaski()[I
TestCase is: int[] intArray = null;
ConfigurationManagement.setSubnetmaski(intArray);
ConfigurationManagement.getSubnetmaski();

statement is: setTimestamp_format(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setTimestamp_format("8jP}5?")
statement is: getTimestamp_format()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String timestamp_format = ConfigurationManagement.getTimestamp_format()
test data is: ConfigurationManagement.setTimestamp_format("8jP}5?");
ConfigurationManagement.getTimestamp_format();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setTimestamp_format("yyyy-MM-dd HH:mm:ss");
        ConfigurationManagement.getTimestamp_format();
    }
}
statement is: ConfigurationManagement.setTimestamp_format("yyyy-MM-dd HH:mm:ss"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setTimestamp_format("yyyy-MM-dd HH:mm:ss") target is: ConfigurationManagement method is: setTimestamp_format(java.lang.String)
Matched Method is: setTimestamp_format(Ljava/lang/String;)V
statement is: ConfigurationManagement.getTimestamp_format(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.getTimestamp_format() target is: ConfigurationManagement method is: getTimestamp_format()
Matched Method is: getTimestamp_format()Ljava/lang/String;
TestCase is: String string = "yyyy-MM-dd HH:mm:ss";
ConfigurationManagement.setTimestamp_format(string);
ConfigurationManagement.getTimestamp_format();

statement is: setConsole_silent(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setConsole_silent(true)
statement is: isConsole_silent()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean console_silent = ConfigurationManagement.isConsole_silent()
test data is: ConfigurationManagement.setConsole_silent(true);
ConfigurationManagement.isConsole_silent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setConsole_silent(false);
        ConfigurationManagement.isConsole_silent();// true }}

    }
}
statement is: ConfigurationManagement.setConsole_silent(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setConsole_silent(false) target is: ConfigurationManagement method is: setConsole_silent(boolean)
Matched Method is: setConsole_silent(Z)V
statement is: ConfigurationManagement.isConsole_silent()// true }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.isConsole_silent()// true }}
 target is: ConfigurationManagement method is: isConsole_silent()
Matched Method is: isConsole_silent()Z
TestCase is: boolean _boolean = false;
ConfigurationManagement.setConsole_silent(_boolean);
ConfigurationManagement.isConsole_silent();

statement is: setAuth_before_save_file(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAuth_before_save_file(280)
statement is: lesslessAuth_before_save_file()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int lesslessAuth_before_save_file = ConfigurationManagement.lesslessAuth_before_save_file()
test data is: ConfigurationManagement.setAuth_before_save_file(280);
ConfigurationManagement.lesslessAuth_before_save_file();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConfigurationManagement.setAuth_before_save_file(100);
        ConfigurationManagement.lesslessAuth_before_save_file();
    }
}
statement is: ConfigurationManagement.setAuth_before_save_file(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAuth_before_save_file(100) target is: ConfigurationManagement method is: setAuth_before_save_file(int)
Matched Method is: setAuth_before_save_file(I)V
statement is: ConfigurationManagement.lesslessAuth_before_save_file(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.lesslessAuth_before_save_file() target is: ConfigurationManagement method is: lesslessAuth_before_save_file()
Matched Method is: lesslessAuth_before_save_file()I
TestCase is: int _int = 100;
ConfigurationManagement.setAuth_before_save_file(_int);
ConfigurationManagement.lesslessAuth_before_save_file();

* test suite isTestSuite: 131
Test 0: 
ConfigurationManagement.getChar_txt();
Test 1: 
ConfigurationManagement.getMax_connect_user();
Test 2: 
ConfigurationManagement.addNum_regs();
ConfigurationManagement.getNum_regs();
Test 3: 
ConfigurationManagement.getSubneti();
Test 4: 
ConfigurationManagement.getFriends_txt();
Test 5: 
ConfigurationManagement.getChar_id_count();
Test 6: 
ConfigurationManagement.setStart_limited_time((-415));
Test 7: 
ConfigurationManagement.getAccess_allownum();
Test 8: 
ConfigurationManagement.getGMMax();
Test 9: 
ConfigurationManagement.getAuth_before_save_file();
Test 10: 
ConfigurationManagement.isLogin_ip_set_();
Test 11: 
ConfigurationManagement.getStartLimitedTime();
Test 12: 
ConfigurationManagement.getAutosave_time();
Test 13: 
ConfigurationManagement.getAccess_allow();
Test 14: 
ConfigurationManagement.getNew_reg_tick();
Test 15: 
ConfigurationManagement.addNum_regs(0L);
Test 16: 
ConfigurationManagement.getAccess_order();
Test 17: 
ConfigurationManagement.lesslessAuth_before_save_file();
ConfigurationManagement.getAuth_before_save_file();
Test 18: 
ConfigurationManagement.getSubnetmaski();
Test 19: 
ConfigurationManagement.getTimestamp_format();
Test 20: 
ConfigurationManagement.setNew_reg_tick(603);
Test 21: 
ConfigurationManagement.getAutosave_interval();
Test 22: 
ConfigurationManagement.addGMMax();
Test 23: 
ConfigurationManagement.setStartLimitedTime(5124L);
ConfigurationManagement.getStartLimitedTime();
Test 24: 
ConfigurationManagement.getAccess_denynum();
Test 25: 
ConfigurationManagement.setLogin_ip_str("duration");
Test 26: 
int[] intArray = new int[4];
ConfigurationManagement.setSubneti(intArray);
// Undeclared exception!
try { 
  ConfigurationManagement.login_config_readTXT((String) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
ConfigurationManagement.getLan_char_ip();
Test 28: 
ConfigurationManagement.setGMMax(0);
ConfigurationManagement.getGMMax();
Test 29: 
ConfigurationManagement.getWisp_server_name();
Test 30: 
ConfigurationManagement.isConsole_silent();
Test 31: 
ConfigurationManagement.getBackup_txt();
Test 32: 
ConfigurationManagement.setLan_char_ip((String) null);
Test 33: 
ConfigurationManagement.getNum_regs();
Test 34: 
ConfigurationManagement.getServer_num();
Test 35: 
ConfigurationManagement.setAccess_deny("YES");
ConfigurationManagement.getAccess_deny();
Test 36: 
ConfigurationManagement.setAccess_allownum(459);
ConfigurationManagement.display_conf_warnings();
Test 37: 
ConfigurationManagement.setServer_num((-414));
ConfigurationManagement.getServer_num();
Test 38: 
ConfigurationManagement.getAccess_deny();
Test 39: 
ConfigurationManagement.getScdata_txt();
Test 40: 
ConfigurationManagement.getGm_allow_level();
Test 41: 
ConfigurationManagement.getEmail_creation();
Test 42: 
ConfigurationManagement.setAccess_denynum((-1945));
ConfigurationManagement.getAccess_denynum();
Test 43: 
ConfigurationManagement.setAuth_before_save_file(15);
ConfigurationManagement.getAuth_before_save_file();
Test 44: 
ConfigurationManagement.setChar_id_count(1643);
Test 45: 
ConfigurationManagement.addChar_id_count();
ConfigurationManagement.getChar_id_count();
Test 46: 
ConfigurationManagement.getBackup_txt_flag();
Test 47: 
ConfigurationManagement.addChar_id_count((-415));
ConfigurationManagement.getChar_id_count();
Test 48: 
ConfigurationManagement.getLogin_ip_str();
Test 49: 
ConfigurationManagement.addGMMax((-415));
Test 50: 
int[] intArray = new int[8];
ConfigurationManagement.setSubneti(intArray);
// Undeclared exception!
try { 
  ConfigurationManagement.login_lan_config_read((String) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
ConfigurationManagement.yesNoOnOffToBoolean("YES");
Test 52: 
// Undeclared exception!
try { 
  ConfigurationManagement.yesNoOnOffToBoolean("No ");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.utiles.ConfigurationManagement", e);
}

Test 53: 
ConfigurationManagement.yesNoOnOffToBoolean("ON");
Test 54: 
ConfigurationManagement.yesNoOnOffToBoolean("NO");
Test 55: 
ConfigurationManagement.yesNoOnOffToBoolean("OFF");
Test 56: 
ConfigurationManagement.display_conf_warnings();
Test 57: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("T");
FileSystemHandling.createFolder(evoSuiteFile);
ConfigurationManagement.login_config_readXML("T");
Test 58: 
ConfigurationManagement.login_config_readXML("My8obBhk]#&3tU");
Test 59: 
ConfigurationManagement.getLoginAthenaConf();
Test 60: 
ConfigurationManagement.setAccess_allow("lBu,n&SY,S");
ConfigurationManagement.getAccess_allow();
Test 61: 
ConfigurationManagement.setAccess_allownum((-4932));
ConfigurationManagement.getAccess_allownum();
Test 62: 
ConfigurationManagement.setAccess_allownum(280);
ConfigurationManagement.getAccess_allownum();
Test 63: 
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.getAccess_denynum();
Test 64: 
ACO aCO = ACO.DENY_ALLOW;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.getAccess_order();
Test 65: 
ConfigurationManagement.setNum_regs((-596L));
ConfigurationManagement.getNum_regs();
Test 66: 
ConfigurationManagement.setServer_num(2535);
ConfigurationManagement.getServer_num();
Test 67: 
ConfigurationManagement.setStartLimitedTime(0);
ConfigurationManagement.getStartLimitedTime();
Test 68: 
int[] intArray = new int[8];
ConfigurationManagement.setSubneti(intArray);
ConfigurationManagement.getSubneti();
Test 69: 
int[] intArray = new int[5];
ConfigurationManagement.setSubnetmaski(intArray);
ConfigurationManagement.getSubnetmaski();
Test 70: 
ConfigurationManagement.setTimestamp_format("8jP}5?");
ConfigurationManagement.getTimestamp_format();
Test 71: 
ConfigurationManagement.setConsole_silent(true);
ConfigurationManagement.isConsole_silent();
Test 72: 
ConfigurationManagement.setAuth_before_save_file(280);
ConfigurationManagement.lesslessAuth_before_save_file();
Test 73: 

Test 74: 
ConfigurationManagement.getMax_connect_user();

Test 75: 
ConfigurationManagement.getNum_regs();

Test 76: 

Test 77: 
ConfigurationManagement.setStart_limited_time((long) (Long) null);

Test 78: 

Test 79: 

Test 80: 

Test 81: 
ConfigurationManagement.isLogin_ip_set_();
ConfigurationManagement.isLogin_ip_set_();
ConfigurationManagement.isLogin_ip_set_();

Test 82: 
ConfigurationManagement.getStartLimitedTime();

Test 83: 

Test 84: 
ConfigurationManagement.addNum_regs(100L);

Test 85: 
ConfigurationManagement.lesslessAuth_before_save_file();
ConfigurationManagement.getAuth_before_save_file();

Test 86: 

Test 87: 
ConfigurationManagement.getTimestamp_format();

Test 88: 
ConfigurationManagement.setNew_reg_tick(921);

Test 89: 

Test 90: 
ConfigurationManagement.setStartLimitedTime(10080L);
ConfigurationManagement.getStartLimitedTime();

Test 91: 
ConfigurationManagement.setLogin_ip_str("192.168.0.1");

Test 92: 
ConfigurationManagement.setSubneti((int[]) null);
ConfigurationManagement.login_config_readTXT((String) null);

Test 93: 
ConfigurationManagement.getLan_char_ip();

Test 94: 
ConfigurationManagement.setGMMax(5);
ConfigurationManagement.getGMMax();

Test 95: 
ConfigurationManagement.isConsole_silent();
ConfigurationManagement.isConsole_silent();

Test 96: 

Test 97: 

Test 98: 
ConfigurationManagement.setAccess_deny("NO");
ConfigurationManagement.getAccess_deny();

Test 99: 
ConfigurationManagement.setAccess_allownum(459);
ConfigurationManagement.display_conf_warnings();

Test 100: 

Test 101: 
ConfigurationManagement.getGm_allow_level();

Test 102: 
ConfigurationManagement.setAccess_denynum((int) (Integer) null);
ConfigurationManagement.getAccess_denynum();

Test 103: 
ConfigurationManagement.setAuth_before_save_file(3600);
ConfigurationManagement.getAuth_before_save_file();

Test 104: 
ConfigurationManagement.setChar_id_count(5000);

Test 105: 
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();

Test 106: 
ConfigurationManagement.getBackup_txt_flag();

Test 107: 
ConfigurationManagement.addChar_id_count(5);
ConfigurationManagement.getChar_id_count();

Test 108: 

Test 109: 
ConfigurationManagement.addGMMax((int) (Integer) null);

Test 110: 
ConfigurationManagement.setSubneti((int[]) null);
ConfigurationManagement.login_lan_config_read((String) null);

Test 111: 
ConfigurationManagement.yesNoOnOffToBoolean("A_TRUE_STRING");
String string = "AN_ON_STRING";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = null;
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "NO";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "OFF";
ConfigurationManagement.yesNoOnOffToBoolean(string);

Test 112: 
ConfigurationManagement.yesNoOnOffToBoolean("True");

Test 113: 
ConfigurationManagement.yesNoOnOffToBoolean("YES");

Test 114: 
ConfigurationManagement.yesNoOnOffToBoolean("YES");
ConfigurationManagement.yesNoOnOffToBoolean("NO");
ConfigurationManagement.yesNoOnOffToBoolean("ON");
ConfigurationManagement.yesNoOnOffToBoolean("OFF");

Test 115: 
ConfigurationManagement.yesNoOnOffToBoolean("ON");
ConfigurationManagement.yesNoOnOffToBoolean("OFF");
ConfigurationManagement.yesNoOnOffToBoolean((String) null);
String string = "";
ConfigurationManagement.yesNoOnOffToBoolean(string);

Test 116: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
ConfigurationManagement.login_config_readXML("test_config.xml");

Test 117: 
ConfigurationManagement.login_config_readXML("myLoginConfig.xml");

Test 118: 

Test 119: 
ConfigurationManagement.setAccess_allow("lBu,n&SY,S");
ConfigurationManagement.getAccess_allow();

Test 120: 
ConfigurationManagement.setAccess_allownum(123456789);
ConfigurationManagement.getAccess_allownum();

Test 121: 
ConfigurationManagement.setAccess_denynum(25);
ConfigurationManagement.getAccess_denynum();

Test 122: 
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.getAccess_order();

Test 123: 
ConfigurationManagement.setNum_regs(1234);
ConfigurationManagement.getNum_regs();

Test 124: 
ConfigurationManagement.setServer_num(2535);

Test 125: 

Test 126: 
ConfigurationManagement.setSubneti((int[]) null);
ConfigurationManagement.getSubneti();

Test 127: 
ConfigurationManagement.setSubnetmaski((int[]) null);
ConfigurationManagement.getSubnetmaski();

Test 128: 
ConfigurationManagement.setTimestamp_format("yyyy-MM-dd HH:mm:ss");
ConfigurationManagement.getTimestamp_format();

Test 129: 
ConfigurationManagement.setConsole_silent(false);
ConfigurationManagement.isConsole_silent();

Test 130: 
ConfigurationManagement.setAuth_before_save_file(100);
ConfigurationManagement.lesslessAuth_before_save_file();


* Generated after the refinement and before minimization 131 tests with total length 196
* test suite isTestSuite: 131
Test 0: 
ConfigurationManagement.getChar_txt();
Test 1: 
ConfigurationManagement.getMax_connect_user();
Test 2: 
ConfigurationManagement.addNum_regs();
ConfigurationManagement.getNum_regs();
Test 3: 
ConfigurationManagement.getSubneti();
Test 4: 
ConfigurationManagement.getFriends_txt();
Test 5: 
ConfigurationManagement.getChar_id_count();
Test 6: 
ConfigurationManagement.setStart_limited_time((-415));
Test 7: 
ConfigurationManagement.getAccess_allownum();
Test 8: 
ConfigurationManagement.getGMMax();
Test 9: 
ConfigurationManagement.getAuth_before_save_file();
Test 10: 
ConfigurationManagement.isLogin_ip_set_();
Test 11: 
ConfigurationManagement.getStartLimitedTime();
Test 12: 
ConfigurationManagement.getAutosave_time();
Test 13: 
ConfigurationManagement.getAccess_allow();
Test 14: 
ConfigurationManagement.getNew_reg_tick();
Test 15: 
ConfigurationManagement.addNum_regs(0L);
Test 16: 
ConfigurationManagement.getAccess_order();
Test 17: 
ConfigurationManagement.lesslessAuth_before_save_file();
ConfigurationManagement.getAuth_before_save_file();
Test 18: 
ConfigurationManagement.getSubnetmaski();
Test 19: 
ConfigurationManagement.getTimestamp_format();
Test 20: 
ConfigurationManagement.setNew_reg_tick(603);
Test 21: 
ConfigurationManagement.getAutosave_interval();
Test 22: 
ConfigurationManagement.addGMMax();
Test 23: 
ConfigurationManagement.setStartLimitedTime(5124L);
ConfigurationManagement.getStartLimitedTime();
Test 24: 
ConfigurationManagement.getAccess_denynum();
Test 25: 
ConfigurationManagement.setLogin_ip_str("duration");
Test 26: 
int[] intArray = new int[4];
ConfigurationManagement.setSubneti(intArray);
// Undeclared exception!
try { 
  ConfigurationManagement.login_config_readTXT((String) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
ConfigurationManagement.getLan_char_ip();
Test 28: 
ConfigurationManagement.setGMMax(0);
ConfigurationManagement.getGMMax();
Test 29: 
ConfigurationManagement.getWisp_server_name();
Test 30: 
ConfigurationManagement.isConsole_silent();
Test 31: 
ConfigurationManagement.getBackup_txt();
Test 32: 
ConfigurationManagement.setLan_char_ip((String) null);
Test 33: 
ConfigurationManagement.getNum_regs();
Test 34: 
ConfigurationManagement.getServer_num();
Test 35: 
ConfigurationManagement.setAccess_deny("YES");
ConfigurationManagement.getAccess_deny();
Test 36: 
ConfigurationManagement.setAccess_allownum(459);
ConfigurationManagement.display_conf_warnings();
Test 37: 
ConfigurationManagement.setServer_num((-414));
ConfigurationManagement.getServer_num();
Test 38: 
ConfigurationManagement.getAccess_deny();
Test 39: 
ConfigurationManagement.getScdata_txt();
Test 40: 
ConfigurationManagement.getGm_allow_level();
Test 41: 
ConfigurationManagement.getEmail_creation();
Test 42: 
ConfigurationManagement.setAccess_denynum((-1945));
ConfigurationManagement.getAccess_denynum();
Test 43: 
ConfigurationManagement.setAuth_before_save_file(15);
ConfigurationManagement.getAuth_before_save_file();
Test 44: 
ConfigurationManagement.setChar_id_count(1643);
Test 45: 
ConfigurationManagement.addChar_id_count();
ConfigurationManagement.getChar_id_count();
Test 46: 
ConfigurationManagement.getBackup_txt_flag();
Test 47: 
ConfigurationManagement.addChar_id_count((-415));
ConfigurationManagement.getChar_id_count();
Test 48: 
ConfigurationManagement.getLogin_ip_str();
Test 49: 
ConfigurationManagement.addGMMax((-415));
Test 50: 
int[] intArray = new int[8];
ConfigurationManagement.setSubneti(intArray);
// Undeclared exception!
try { 
  ConfigurationManagement.login_lan_config_read((String) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
ConfigurationManagement.yesNoOnOffToBoolean("YES");
Test 52: 
// Undeclared exception!
try { 
  ConfigurationManagement.yesNoOnOffToBoolean("No ");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.utiles.ConfigurationManagement", e);
}

Test 53: 
ConfigurationManagement.yesNoOnOffToBoolean("ON");
Test 54: 
ConfigurationManagement.yesNoOnOffToBoolean("NO");
Test 55: 
ConfigurationManagement.yesNoOnOffToBoolean("OFF");
Test 56: 
ConfigurationManagement.display_conf_warnings();
Test 57: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("T");
FileSystemHandling.createFolder(evoSuiteFile);
ConfigurationManagement.login_config_readXML("T");
Test 58: 
ConfigurationManagement.login_config_readXML("My8obBhk]#&3tU");
Test 59: 
ConfigurationManagement.getLoginAthenaConf();
Test 60: 
ConfigurationManagement.setAccess_allow("lBu,n&SY,S");
ConfigurationManagement.getAccess_allow();
Test 61: 
ConfigurationManagement.setAccess_allownum((-4932));
ConfigurationManagement.getAccess_allownum();
Test 62: 
ConfigurationManagement.setAccess_allownum(280);
ConfigurationManagement.getAccess_allownum();
Test 63: 
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.getAccess_denynum();
Test 64: 
ACO aCO = ACO.DENY_ALLOW;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.getAccess_order();
Test 65: 
ConfigurationManagement.setNum_regs((-596L));
ConfigurationManagement.getNum_regs();
Test 66: 
ConfigurationManagement.setServer_num(2535);
ConfigurationManagement.getServer_num();
Test 67: 
ConfigurationManagement.setStartLimitedTime(0);
ConfigurationManagement.getStartLimitedTime();
Test 68: 
int[] intArray = new int[8];
ConfigurationManagement.setSubneti(intArray);
ConfigurationManagement.getSubneti();
Test 69: 
int[] intArray = new int[5];
ConfigurationManagement.setSubnetmaski(intArray);
ConfigurationManagement.getSubnetmaski();
Test 70: 
ConfigurationManagement.setTimestamp_format("8jP}5?");
ConfigurationManagement.getTimestamp_format();
Test 71: 
ConfigurationManagement.setConsole_silent(true);
ConfigurationManagement.isConsole_silent();
Test 72: 
ConfigurationManagement.setAuth_before_save_file(280);
ConfigurationManagement.lesslessAuth_before_save_file();
Test 73: 

Test 74: 
ConfigurationManagement.getMax_connect_user();

Test 75: 
ConfigurationManagement.getNum_regs();

Test 76: 

Test 77: 
ConfigurationManagement.setStart_limited_time((long) (Long) null);

Test 78: 

Test 79: 

Test 80: 

Test 81: 
ConfigurationManagement.isLogin_ip_set_();
ConfigurationManagement.isLogin_ip_set_();
ConfigurationManagement.isLogin_ip_set_();

Test 82: 
ConfigurationManagement.getStartLimitedTime();

Test 83: 

Test 84: 
ConfigurationManagement.addNum_regs(100L);

Test 85: 
ConfigurationManagement.lesslessAuth_before_save_file();
ConfigurationManagement.getAuth_before_save_file();

Test 86: 

Test 87: 
ConfigurationManagement.getTimestamp_format();

Test 88: 
ConfigurationManagement.setNew_reg_tick(921);

Test 89: 

Test 90: 
ConfigurationManagement.setStartLimitedTime(10080L);
ConfigurationManagement.getStartLimitedTime();

Test 91: 
ConfigurationManagement.setLogin_ip_str("192.168.0.1");

Test 92: 
ConfigurationManagement.setSubneti((int[]) null);
ConfigurationManagement.login_config_readTXT((String) null);

Test 93: 
ConfigurationManagement.getLan_char_ip();

Test 94: 
ConfigurationManagement.setGMMax(5);
ConfigurationManagement.getGMMax();

Test 95: 
ConfigurationManagement.isConsole_silent();
ConfigurationManagement.isConsole_silent();

Test 96: 

Test 97: 

Test 98: 
ConfigurationManagement.setAccess_deny("NO");
ConfigurationManagement.getAccess_deny();

Test 99: 
ConfigurationManagement.setAccess_allownum(459);
ConfigurationManagement.display_conf_warnings();

Test 100: 

Test 101: 
ConfigurationManagement.getGm_allow_level();

Test 102: 
ConfigurationManagement.setAccess_denynum((int) (Integer) null);
ConfigurationManagement.getAccess_denynum();

Test 103: 
ConfigurationManagement.setAuth_before_save_file(3600);
ConfigurationManagement.getAuth_before_save_file();

Test 104: 
ConfigurationManagement.setChar_id_count(5000);

Test 105: 
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();
ConfigurationManagement.getChar_id_count();

Test 106: 
ConfigurationManagement.getBackup_txt_flag();

Test 107: 
ConfigurationManagement.addChar_id_count(5);
ConfigurationManagement.getChar_id_count();

Test 108: 

Test 109: 
ConfigurationManagement.addGMMax((int) (Integer) null);

Test 110: 
ConfigurationManagement.setSubneti((int[]) null);
ConfigurationManagement.login_lan_config_read((String) null);

Test 111: 
ConfigurationManagement.yesNoOnOffToBoolean("A_TRUE_STRING");
String string = "AN_ON_STRING";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = null;
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "NO";
ConfigurationManagement.yesNoOnOffToBoolean(string);
String string = "OFF";
ConfigurationManagement.yesNoOnOffToBoolean(string);

Test 112: 
ConfigurationManagement.yesNoOnOffToBoolean("True");

Test 113: 
ConfigurationManagement.yesNoOnOffToBoolean("YES");

Test 114: 
ConfigurationManagement.yesNoOnOffToBoolean("YES");
ConfigurationManagement.yesNoOnOffToBoolean("NO");
ConfigurationManagement.yesNoOnOffToBoolean("ON");
ConfigurationManagement.yesNoOnOffToBoolean("OFF");

Test 115: 
ConfigurationManagement.yesNoOnOffToBoolean("ON");
ConfigurationManagement.yesNoOnOffToBoolean("OFF");
ConfigurationManagement.yesNoOnOffToBoolean((String) null);
String string = "";
ConfigurationManagement.yesNoOnOffToBoolean(string);

Test 116: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
ConfigurationManagement.login_config_readXML("test_config.xml");

Test 117: 
ConfigurationManagement.login_config_readXML("myLoginConfig.xml");

Test 118: 

Test 119: 
ConfigurationManagement.setAccess_allow("lBu,n&SY,S");
ConfigurationManagement.getAccess_allow();

Test 120: 
ConfigurationManagement.setAccess_allownum(123456789);
ConfigurationManagement.getAccess_allownum();

Test 121: 
ConfigurationManagement.setAccess_denynum(25);
ConfigurationManagement.getAccess_denynum();

Test 122: 
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.getAccess_order();

Test 123: 
ConfigurationManagement.setNum_regs(1234);
ConfigurationManagement.getNum_regs();

Test 124: 
ConfigurationManagement.setServer_num(2535);

Test 125: 

Test 126: 
ConfigurationManagement.setSubneti((int[]) null);
ConfigurationManagement.getSubneti();

Test 127: 
ConfigurationManagement.setSubnetmaski((int[]) null);
ConfigurationManagement.getSubnetmaski();

Test 128: 
ConfigurationManagement.setTimestamp_format("yyyy-MM-dd HH:mm:ss");
ConfigurationManagement.getTimestamp_format();

Test 129: 
ConfigurationManagement.setConsole_silent(false);
ConfigurationManagement.isConsole_silent();

Test 130: 
ConfigurationManagement.setAuth_before_save_file(100);
ConfigurationManagement.lesslessAuth_before_save_file();


* Minimizing test suite
* test suite isTestSuite: 73
Test 0: 
ConfigurationManagement.getChar_txt();
Test 1: 
ConfigurationManagement.getMax_connect_user();
Test 2: 
ConfigurationManagement.addNum_regs();
ConfigurationManagement.getNum_regs();
Test 3: 
ConfigurationManagement.getSubneti();
Test 4: 
ConfigurationManagement.getFriends_txt();
Test 5: 
ConfigurationManagement.getChar_id_count();
Test 6: 
ConfigurationManagement.setStart_limited_time((-415));
Test 7: 
ConfigurationManagement.getAccess_allownum();
Test 8: 
ConfigurationManagement.getGMMax();
Test 9: 
ConfigurationManagement.getAuth_before_save_file();
Test 10: 
ConfigurationManagement.isLogin_ip_set_();
Test 11: 
ConfigurationManagement.getStartLimitedTime();
Test 12: 
ConfigurationManagement.setAccess_allow("lBu,n&SY,S");
ConfigurationManagement.getAccess_allow();
Test 13: 
ConfigurationManagement.getAutosave_time();
Test 14: 
ConfigurationManagement.getAccess_allow();
Test 15: 
ConfigurationManagement.getNew_reg_tick();
Test 16: 
ConfigurationManagement.addNum_regs(100L);
Test 17: 
ConfigurationManagement.getAccess_order();
Test 18: 
ConfigurationManagement.lesslessAuth_before_save_file();
ConfigurationManagement.getAuth_before_save_file();
Test 19: 
ConfigurationManagement.getSubnetmaski();
Test 20: 
ConfigurationManagement.getTimestamp_format();
Test 21: 
ConfigurationManagement.setNew_reg_tick(921);
Test 22: 
ConfigurationManagement.getAutosave_interval();
Test 23: 
ConfigurationManagement.addGMMax();
Test 24: 
ConfigurationManagement.setStartLimitedTime(10080L);
ConfigurationManagement.getStartLimitedTime();
Test 25: 
ConfigurationManagement.getAccess_denynum();
Test 26: 
ConfigurationManagement.setLogin_ip_str("192.168.0.1");
Test 27: 
ConfigurationManagement.getLan_char_ip();
Test 28: 
ConfigurationManagement.getWisp_server_name();
Test 29: 
ConfigurationManagement.isConsole_silent();
Test 30: 
ConfigurationManagement.getBackup_txt();
Test 31: 
ConfigurationManagement.setLan_char_ip((String) null);
Test 32: 
ConfigurationManagement.getNum_regs();
Test 33: 
ConfigurationManagement.getServer_num();
Test 34: 
ConfigurationManagement.setAccess_deny("NO");
ConfigurationManagement.getAccess_deny();
Test 35: 
ConfigurationManagement.setAccess_allownum(123456789);
ConfigurationManagement.getAccess_allownum();
Test 36: 
ConfigurationManagement.setServer_num(2535);
ConfigurationManagement.getServer_num();
Test 37: 
ConfigurationManagement.getAccess_deny();
Test 38: 
ConfigurationManagement.getScdata_txt();
Test 39: 
ConfigurationManagement.getGm_allow_level();
Test 40: 
ConfigurationManagement.getEmail_creation();
Test 41: 
ConfigurationManagement.setAccess_denynum(25);
ConfigurationManagement.getAccess_denynum();
Test 42: 
ConfigurationManagement.setAuth_before_save_file(100);
ConfigurationManagement.lesslessAuth_before_save_file();
Test 43: 
ConfigurationManagement.setChar_id_count(5000);
Test 44: 
ConfigurationManagement.addChar_id_count();
ConfigurationManagement.getChar_id_count();
Test 45: 
ConfigurationManagement.getBackup_txt_flag();
Test 46: 
ConfigurationManagement.getLogin_ip_str();
Test 47: 
ConfigurationManagement.addGMMax((-415));
Test 48: 
int[] intArray = new int[8];
ConfigurationManagement.setSubneti(intArray);
// Undeclared exception!
try { 
  ConfigurationManagement.login_lan_config_read((String) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 49: 
int[] intArray = new int[4];
ConfigurationManagement.setSubneti(intArray);
// Undeclared exception!
try { 
  ConfigurationManagement.login_config_readTXT((String) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
ConfigurationManagement.yesNoOnOffToBoolean("YES");
Test 51: 
ConfigurationManagement.yesNoOnOffToBoolean("NO");
Test 52: 
ConfigurationManagement.yesNoOnOffToBoolean("ON");
Test 53: 
ConfigurationManagement.yesNoOnOffToBoolean("OFF");
Test 54: 
// Undeclared exception!
try { 
  ConfigurationManagement.yesNoOnOffToBoolean("True");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.utiles.ConfigurationManagement", e);
}

Test 55: 
ConfigurationManagement.display_conf_warnings();
Test 56: 
ConfigurationManagement.setAccess_allownum(459);
ConfigurationManagement.display_conf_warnings();
Test 57: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("T");
FileSystemHandling.createFolder(evoSuiteFile);
ConfigurationManagement.login_config_readXML("T");
Test 58: 
ConfigurationManagement.login_config_readXML("myLoginConfig.xml");
Test 59: 
ConfigurationManagement.getLoginAthenaConf();
Test 60: 
ConfigurationManagement.setAccess_allownum((-4932));
ConfigurationManagement.getAccess_allownum();
Test 61: 
ConfigurationManagement.setAccess_denynum((-1945));
ConfigurationManagement.getAccess_denynum();
Test 62: 
ACO aCO = ACO.DENY_ALLOW;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.getAccess_order();
Test 63: 
ConfigurationManagement.setAuth_before_save_file(15);
ConfigurationManagement.getAuth_before_save_file();
Test 64: 
ConfigurationManagement.addChar_id_count((-415));
ConfigurationManagement.getChar_id_count();
Test 65: 
ConfigurationManagement.setGMMax(0);
ConfigurationManagement.getGMMax();
Test 66: 
ConfigurationManagement.setNum_regs((-596L));
ConfigurationManagement.getNum_regs();
Test 67: 
ConfigurationManagement.setServer_num((-414));
ConfigurationManagement.getServer_num();
Test 68: 
ConfigurationManagement.setStartLimitedTime(0);
ConfigurationManagement.getStartLimitedTime();
Test 69: 
int[] intArray = new int[8];
ConfigurationManagement.setSubneti(intArray);
ConfigurationManagement.getSubneti();
Test 70: 
int[] intArray = new int[5];
ConfigurationManagement.setSubnetmaski(intArray);
ConfigurationManagement.getSubnetmaski();
Test 71: 
ConfigurationManagement.setTimestamp_format("8jP}5?");
ConfigurationManagement.getTimestamp_format();
Test 72: 
ConfigurationManagement.setConsole_silent(true);
ConfigurationManagement.isConsole_silent();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 190
* Number of covered goals: 82
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 52%
* Total number of goals: 237
* Number of covered goals: 123
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 159
* Number of covered goals: 79
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 43%
* Total number of goals: 190
* Number of covered goals: 82
* Generated 73 tests with total length 106
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String char_txt = ConfigurationManagement.getChar_txt();
assertNull(char_txt);


** It was a parseable test case! 
refined test name is: testGetCharTxtShouldReturnNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String max_connect_user = ConfigurationManagement.getMax_connect_user();
assertNull(max_connect_user);


** It was a parseable test case! 
refined test name is: testMaxConcurrentConnectionsForUser
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConfigurationManagement.addNum_regs();
long num_regs = ConfigurationManagement.getNum_regs();
assertEquals(1L, num_regs);


** It was a parseable test case! 
refined test name is: testAddRegion
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int[] subneti = ConfigurationManagement.getSubneti();
assertNull(subneti);


** It was a parseable test case! 
refined test name is: testGetSubnetInfoReturnsNullWhenNotConfigured
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String friends_txt = ConfigurationManagement.getFriends_txt();
assertNull(friends_txt);


** It was a parseable test case! 
refined test name is: testAssertionPassesWhenFileIsEmpty
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int char_id_count = ConfigurationManagement.getChar_id_count();
assertEquals(0, char_id_count);


** It was a parseable test case! 
refined test name is: testGetCharIdCount
* Compiling Tests
refined test name is: testGetCharIdCountShouldReturnZeroWhenNotSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConfigurationManagement.setStart_limited_time((-415));

** It was a parseable test case! 
refined test name is: testSetStartLimitedTimeNegativeValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int access_allownum = ConfigurationManagement.getAccess_allownum();
assertEquals(0, access_allownum);


** It was a parseable test case! 
refined test name is: testInitializeAccessAllowNumIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int gMMax = ConfigurationManagement.getGMMax();
assertEquals(30, gMMax);


** It was a parseable test case! 
refined test name is: testGetGMMax
* Compiling Tests
refined test name is: testGetGMMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int auth_before_save_file = ConfigurationManagement.getAuth_before_save_file();
assertEquals(0, auth_before_save_file);


** It was a parseable test case! 
refined test name is: testGetAuthBeforeSaveFileDefaultValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: boolean login_ip_set_ = ConfigurationManagement.isLogin_ip_set_();
assertFalse(login_ip_set_);


** It was a parseable test case! 
refined test name is: testIsLoginIpSetWhenConfigurationSetToFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: long startLimitedTime = ConfigurationManagement.getStartLimitedTime();
assertEquals((-1L), startLimitedTime);


** It was a parseable test case! 
refined test name is: testGetStartLimitedTimeNegativeOne
* Compiling Tests
refined test name is: testGetStartLimitedTimeNegativeValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConfigurationManagement.setAccess_allow("lBu,n&SY,S");
String access_allow = ConfigurationManagement.getAccess_allow();
assertEquals("lBu,n&SY,S", access_allow);


** It was a parseable test case! 
refined test name is: testGetAccessAllowShouldReturnNewValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int autosave_time = ConfigurationManagement.getAutosave_time();
assertEquals(0, autosave_time);


** It was a parseable test case! 
refined test name is: testConfigureAutosaveTimeToZero
* Compiling Tests
refined test name is: testConfigureAutosaveTimeToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String access_allow = ConfigurationManagement.getAccess_allow();
assertNull(access_allow);


** It was a parseable test case! 
refined test name is: testThatAccessAllowIsNullWhenItShouldBe
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: long new_reg_tick = ConfigurationManagement.getNew_reg_tick();
assertEquals(0L, new_reg_tick);


** It was a parseable test case! 
refined test name is: shouldTrackNewRegistration
* Compiling Tests
refined test name is: testTrackingOfNewRegistrationWhenTrackingIsEnabled
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConfigurationManagement.addNum_regs(100L);

* Computation finished
