* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.javathena.login.Login
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/81_javathena/evosuite-files/evosuite.properties
* Connecting to master process on port 12078
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:09:40.268 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:09:40.269 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:09:40.273 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:09:40.428 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 07:09:40.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 07:09:40.437 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 07:09:40.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:09:40.453 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:09:40.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:09:40.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 07:09:40.461 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 07:09:40.462 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 07:09:40.463 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 07:09:40.465 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 07:09:40.466 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 07:09:40.486 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 07:09:40.505 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.javathena.login.Login
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1064
* Using seed 1710400175662
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 371 / 1064
[MASTER] 07:09:41.173 [logback-1] WARN  TestCluster - Failed to check cache for javolution.util.FastComparator<T> : Type points to itself
[Progress:>                             0%] [Cov:=========>                         28%][Progress:>                             1%] [Cov:===========>                       34%][Progress:>                             1%] [Cov:===========>                       34%][Progress:>                             2%] [Cov:============>                      37%][Progress:=>                            4%] [Cov:============>                      37%][Progress:=>                            5%] [Cov:=============>                     39%][Progress:=>                            6%] [Cov:==============>                    40%][Progress:=>                            6%] [Cov:==============>                    40%][Progress:==>                           7%] [Cov:==============>                    40%][Progress:==>                           7%] [Cov:==============>                    41%][Progress:==>                           7%] [Cov:===============>                   43%][Progress:==>                           7%] [Cov:===============>                   43%][Progress:==>                           8%] [Cov:===============>                   43%][Progress:==>                           8%] [Cov:===============>                   43%][Progress:==>                           8%] [Cov:===============>                   43%][Progress:==>                           8%] [Cov:===============>                   43%][Progress:==>                           8%] [Cov:===============>                   43%][Progress:==>                           8%] [Cov:================>                  46%][Progress:==>                           9%] [Cov:================>                  46%][Progress:==>                           9%] [Cov:================>                  46%][Progress:==>                           9%] [Cov:================>                  47%][Progress:==>                           9%] [Cov:================>                  47%][Progress:===>                          10%] [Cov:================>                  47%][Progress:===>                          10%] [Cov:================>                  47%][Progress:===>                          10%] [Cov:================>                  47%][Progress:===>                          10%] [Cov:================>                  47%][Progress:===>                          11%] [Cov:================>                  48%][Progress:===>                          11%] [Cov:================>                  48%][Progress:===>                          11%] [Cov:================>                  48%][Progress:===>                          11%] [Cov:================>                  48%][Progress:===>                          12%] [Cov:================>                  48%][Progress:===>                          12%] [Cov:================>                  48%][Progress:===>                          12%] [Cov:================>                  48%][Progress:===>                          12%] [Cov:================>                  48%][Progress:===>                          13%] [Cov:================>                  48%][Progress:===>                          13%] [Cov:================>                  48%][Progress:===>                          13%] [Cov:================>                  48%][Progress:===>                          13%] [Cov:================>                  48%][Progress:===>                          13%] [Cov:================>                  48%][Progress:====>                         14%] [Cov:================>                  48%][Progress:====>                         14%] [Cov:================>                  48%][Progress:====>                         14%] [Cov:================>                  48%][Progress:====>                         14%] [Cov:================>                  48%][Progress:====>                         14%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         16%] [Cov:================>                  48%][Progress:====>                         16%] [Cov:================>                  48%][Progress:====>                         16%] [Cov:================>                  48%][Progress:====>                         16%] [Cov:================>                  48%][Progress:=====>                        17%] [Cov:================>                  48%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       22%] [Cov:=================>                 49%][Progress:======>                       22%] [Cov:=================>                 49%][Progress:======>                       22%] [Cov:=================>                 49%][Progress:======>                       23%] [Cov:=================>                 49%][Progress:======>                       23%] [Cov:=================>                 49%][Progress:=======>                      24%] [Cov:=================>                 49%][Progress:=======>                      24%] [Cov:=================>                 49%][Progress:=======>                      24%] [Cov:=================>                 49%][Progress:=======>                      25%] [Cov:=================>                 49%][Progress:=======>                      25%] [Cov:=================>                 49%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=======>                      26%] [Cov:=================>                 50%][Progress:=======>                      26%] [Cov:=================>                 50%][Progress:========>                     27%] [Cov:=================>                 50%][Progress:========>                     27%] [Cov:=================>                 50%][Progress:========>                     27%] [Cov:=================>                 50%][Progress:========>                     27%] [Cov:=================>                 50%][Progress:========>                     28%] [Cov:=================>                 50%][Progress:========>                     28%] [Cov:=================>                 50%][Progress:========>                     28%] [Cov:=================>                 50%][Progress:========>                     29%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   35%] [Cov:=================>                 51%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                53%][Progress:===========>                  37%] [Cov:==================>                53%][Progress:===========>                  37%] [Cov:==================>                53%][Progress:===========>                  38%] [Cov:==================>                53%][Progress:===========>                  38%] [Cov:==================>                53%][Progress:===========>                  39%] [Cov:==================>                53%][Progress:============>                 40%] [Cov:==================>                53%][Progress:============>                 40%] [Cov:==================>                53%][Progress:============>                 41%] [Cov:==================>                53%][Progress:============>                 41%] [Cov:==================>                53%][Progress:============>                 42%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             55%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:=================>            57%] [Cov:==================>                54%][Progress:=================>            57%] [Cov:==================>                54%][Progress:=================>            57%] [Cov:==================>                54%][Progress:=================>            57%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            59%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          65%] [Cov:==================>                54%][Progress:===================>          65%] [Cov:==================>                54%][Progress:===================>          65%] [Cov:==================>                54%][Progress:===================>          66%] [Cov:==================>                54%][Progress:===================>          66%] [Cov:==================>                54%][Progress:===================>          66%] [Cov:==================>                54%][Progress:====================>         67%] [Cov:==================>                54%][Progress:====================>         67%] [Cov:==================>                54%][Progress:====================>         67%] [Cov:==================>                54%][Progress:====================>         67%] [Cov:==================>                54%][Progress:====================>         68%] [Cov:==================>                54%][Progress:====================>         68%] [Cov:==================>                54%][Progress:====================>         69%] [Cov:==================>                54%][Progress:====================>         69%] [Cov:==================>                54%][Progress:=====================>        70%] [Cov:==================>                54%][Progress:=====================>        70%] [Cov:==================>                54%][Progress:=====================>        71%] [Cov:==================>                54%][Progress:=====================>        71%] [Cov:==================>                54%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        72%] [Cov:===================>               55%][Progress:=====================>        72%] [Cov:===================>               55%][Progress:=====================>        73%] [Cov:===================>               55%][Progress:=====================>        73%] [Cov:===================>               55%][Progress:=====================>        73%] [Cov:===================>               55%][Progress:======================>       74%] [Cov:===================>               55%][Progress:======================>       74%] [Cov:===================>               55%][Progress:======================>       74%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:===================>               55%][Progress:======================>       75%] [Cov:===================>               55%][Progress:======================>       76%] [Cov:===================>               55%][Progress:======================>       76%] [Cov:===================>               55%][Progress:======================>       76%] [Cov:===================>               55%][Progress:======================>       76%] [Cov:===================>               55%][Progress:=======================>      77%] [Cov:===================>               55%][Progress:=======================>      77%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:===================>               55%][Progress:=======================>      78%] [Cov:===================>               55%][Progress:=======================>      79%] [Cov:===================>               55%][Progress:=======================>      79%] [Cov:===================>               55%][Progress:=======================>      79%] [Cov:===================>               55%][Progress:========================>     80%] [Cov:===================>               55%][Progress:========================>     80%] [Cov:===================>               55%][Progress:========================>     80%] [Cov:===================>               55%][Progress:========================>     81%] [Cov:===================>               55%][Progress:========================>     81%] [Cov:===================>               55%][Progress:========================>     81%] [Cov:===================>               55%][Progress:========================>     81%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:===================>               55%][Progress:========================>     83%] [Cov:===================>               55%][Progress:=========================>    84%] [Cov:===================>               55%][Progress:=========================>    84%] [Cov:===================>               55%][Progress:=========================>    84%] [Cov:===================>               55%][Progress:=========================>    84%] [Cov:===================>               55%][Progress:=========================>    84%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    85%] [Cov:===================>               55%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:=========================>    86%] [Cov:===================>               55%][Progress:==========================>   87%] [Cov:===================>               55%][Progress:==========================>   87%] [Cov:===================>               55%][Progress:==========================>   87%] [Cov:===================>               55%][Progress:==========================>   87%] [Cov:===================>               55%][Progress:==========================>   87%] [Cov:===================>               55%][Progress:==========================>   87%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:==========================>   88%] [Cov:===================>               55%][Progress:==========================>   89%] [Cov:===================>               55%][Progress:==========================>   89%] [Cov:===================>               55%][Progress:==========================>   89%] [Cov:===================>               55%][Progress:==========================>   89%] [Cov:===================>               55%][Progress:==========================>   89%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               55%][Progress:===========================>  90%] [Cov:===================>               55%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:===========================>  91%] [Cov:===================>               55%][Progress:===========================>  92%] [Cov:===================>               55%][Progress:===========================>  92%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:===========================>  93%] [Cov:===================>               55%][Progress:============================> 94%] [Cov:===================>               55%][Progress:============================> 94%] [Cov:===================>               55%][Progress:============================> 94%] [Cov:===================>               55%][Progress:============================> 94%] [Cov:===================>               55%][Progress:============================> 94%] [Cov:===================>               55%][Progress:============================> 94%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:===================>               55%][Progress:============================> 95%] [Cov:===================>               55%][Progress:============================> 96%] [Cov:===================>               55%][Progress:============================> 96%] [Cov:===================>               55%][Progress:============================> 96%] [Cov:===================>               55%][Progress:============================> 96%] [Cov:===================>               55%][Progress:=============================>97%] [Cov:===================>               55%][Progress:=============================>97%] [Cov:===================>               55%][Progress:=============================>97%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:===================>               55%][Progress:=============================>98%] [Cov:===================>               55%][Progress:=============================>99%] [Cov:===================>               55%][Progress:=============================>99%] [Cov:===================>               55%][Progress:=============================>99%] [Cov:===================>               55%][Progress:=============================>99%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%]
* Search finished after 202s and 320 generations, 78719 statements, best individual has fitness: 453.0
* Generated before the refinement 70 tests with total length 193
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$ConnectionListener(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$ConnectionListener
statement code is: Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.close()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.run()
test data is: Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
        // Close the connection
        login_ConnectionListener.close();
        // Simulate a network error
        login_ConnectionListener.simulateError(new IOException("Network error"));
        // Run the listener
        login_ConnectionListener.run();
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Close the connection
login_ConnectionListener.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Close the connection
login_ConnectionListener.close() target is: login_ConnectionListener method is: close()
statement is: // Simulate a network error
login_ConnectionListener.simulateError(new IOException("Network error")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Simulate a network error
login_ConnectionListener.simulateError(new IOException("Network error")) target is: login_ConnectionListener method is: simulateError(IOException)
statement is: // Run the listener
login_ConnectionListener.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Run the listener
login_ConnectionListener.run() target is: login_ConnectionListener method is: run()
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getLog_fp()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.File
statement code is: File log_fp = login.getLog_fp()
test data is: Login login = new Login();
login.getLog_fp();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("password123");
        login.getLog_fp();
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.getLog_fp(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getLog_fp() target is: login method is: getLog_fp()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getLog_fp()Ljava/io/File;
TestCase is: Login login = new Login();
login.getLog_fp();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setOut(Ljava/io/PrintWriter;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setOut((PrintWriter) null)
test data is: Login login = new Login();
login.setOut((PrintWriter) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        Login login = new Login();
        login.setOut(new PrintWriter("output.txt", true));
    }
}
statement is: // Improved test data for the above code snippet
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setOut(new PrintWriter("output.txt", true)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setOut(new PrintWriter("output.txt", true)) target is: login method is: setOut(PrintWriter)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setOut(Ljava/io/PrintWriter;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Login login = new Login();
PrintWriter printWriter = null;
login.setOut(printWriter);

statement is: codingKey(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.codingKey((Socket_data) null)
test data is: Login.codingKey((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.codingKey(new SocketData(1234, "192.168.0.1", 80));
    }
}
statement is: Login.codingKey(new SocketData(1234, "192.168.0.1", 80)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.codingKey(new SocketData(1234, "192.168.0.1", 80)) target is: Login method is: codingKey(SocketData)
Matched Method is: codingKey(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
Login.codingKey(socket_data);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getAuth_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_num = login.getAuth_num()
test data is: Login login = new Login();
login.getAuth_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int auth_num = 1234567890;
        String user_name = "johndoe";
        String password = "password123";
        // Original test data
        // int auth_num = 1234567890;
        // String user_name = "johndoe";
        // String password = "password123"; }}
    }
}
statement is: // Improved test data
int auth_num = 1234567890, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String user_name = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Original test data, class spoon.support.reflect.code.CtCommentImpl
statement is: // int auth_num = 1234567890;, class spoon.support.reflect.code.CtCommentImpl
statement is: // String user_name = "johndoe";, class spoon.support.reflect.code.CtCommentImpl
statement is: // String password = "password123"; }}, class spoon.support.reflect.code.CtCommentImpl
* this is vulnerable: int _int = 1234567890
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
TestCase is: int _int = 1234567890;
String string = "johndoe";
String string = "password123";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getServer_fd()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] server_fd = login.getServer_fd()
test data is: Login login = new Login();
login.getServer_fd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.getServer_fd();
        int server_fd = 1234;// This value is not descriptive and representative of the situation being tested

        // Improved test data:
        int server_fd = 5678;// This value is more descriptive and representative of a real-world scenario }}

    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.getServer_fd(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getServer_fd() target is: login method is: getServer_fd()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getServer_fd()[I
statement is: int server_fd = 1234// This value is not descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Improved test data:
int server_fd = 5678// This value is more descriptive and representative of a real-world scenario }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1234
* this is vulnerable: int _int = 5678
TestCase is: Login login = new Login();
login.getServer_fd();
int _int = 1234;
int _int = 5678;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: anyLocalAddress()Ljava/net/InetAddress; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.net.Inet4Address
statement code is: Inet4Address anyLocalAddress = (Inet4Address)MockInetAddress.anyLocalAddress()
statement is: check_ip(Ljava/net/InetAddress;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean check_ip = login.check_ip(arg0)
test data is: Login login = new Login();
Inet4Address anyLocalAddress = (Inet4Address)MockInetAddress.anyLocalAddress();
login.check_ip(anyLocalAddress);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        Inet4Address localAddress = Inet4Address.getByName("192.168.0.1");
        login.check_ip(localAddress);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Inet4Address localAddress = Inet4Address.getByName("192.168.0.1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Inet4Address.getByName("192.168.0.1") target is: Inet4Address method is: getByName(java.lang.String)
statement is: login.check_ip(localAddress), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_ip(localAddress) target is: login method is: check_ip(Inet4Address)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: check_ip(Ljava/net/InetAddress;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Login login = new Login();
Inet4Address inet4Address = null;
login.check_ip(inet4Address);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: check_ipmask(ILjava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_ipmask = login.check_ipmask(2000000, "conf/subnet_athena.conf")
test data is: Login login = new Login();
login.check_ipmask(2000000, "conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.check_ipmask(2000000, "conf/subnet_athena.conf");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.check_ipmask(2000000, "conf/subnet_athena.conf"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_ipmask(2000000, "conf/subnet_athena.conf") target is: login method is: check_ipmask(int,java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: check_ipmask(ILjava/lang/String;)I
TestCase is: Login login = new Login();
int _int = 2000000;
String string = "conf/subnet_athena.conf";
login.check_ipmask(_int, string);

statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: logUnknownPackets(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.logUnknownPackets(arg0)
test data is: Socket_data socket_data = new Socket_data((Socket) null);
Login.logUnknownPackets(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Socket_data socket_data = new Socket_data("192.168.0.1");
        Login.logUnknownPackets(socket_data);
    }
}
statement is: // Improved test data
Socket_data socket_data = new Socket_data("192.168.0.1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.logUnknownPackets(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.logUnknownPackets(socket_data) target is: Login method is: logUnknownPackets(Socket_data)
Matched Method is: logUnknownPackets(Lorg/javathena/core/data/Socket_data;)V
TestCase is: String string = "192.168.0.1";
Socket_data socket_data = new Socket_data((Socket) string);
Login.logUnknownPackets(socket_data);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAuth_max(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setAuth_max(7)
test data is: Login login = new Login();
login.setAuth_max(7);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setAuth_max(10);// changed to a more realistic value }}

    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuth_max(10)// changed to a more realistic value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuth_max(10)// changed to a more realistic value }}
 target is: login method is: setAuth_max(int)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setAuth_max(I)V
TestCase is: Login login = new Login();
int _int = 10;
login.setAuth_max(_int);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getOut()Ljava/io/PrintWriter; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.PrintWriter
statement code is: PrintWriter out = login.getOut()
test data is: Login login = new Login();
login.getOut();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for testing the "getOut" method of the "Login" class
        // Example 1: Testing with a valid username and password
        String username = "John";
        char[] password = new char[]{ 'J', 'a', 'm', 'e', 's' };
        boolean expectedResult = true;
        assertEquals(expectedResult, login.getOut(username, password));
        // Example 2: Testing with an invalid username and valid password
        String username = "John";
        char[] password = new char[]{ 'J', 'a', 'm', 'e', 's' };
        boolean expectedResult = false;
        assertEquals(expectedResult, login.getOut(username, password));
        // Example 3: Testing with a valid username and invalid password
        String username = "John";
        char[] password = new char[]{ 'J', 'a', 'm', 'e', 's' };
        boolean expectedResult = false;
        assertEquals(expectedResult, login.getOut(username, password));
        // Example 4: Testing with an invalid username and invalid password
        String username = "John";
        char[] password = new char[]{ 'J', 'a', 'm', 'e', 's' };
        boolean expectedResult = false;
        assertEquals(expectedResult, login.getOut(username, password));
    }
}
statement is: // Improved test data for testing the "getOut" method of the "Login" class
// Example 1: Testing with a valid username and password
String username = "John", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char[] password = new char[]{ 'J', 'a', 'm', 'e', 's' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: boolean expectedResult = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedResult, login.getOut(username, password)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedResult, login.getOut(username, password)) target is:  method is: assertEquals(boolean,<unknown>)
statement is: // Example 2: Testing with an invalid username and valid password
String username = "John", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char[] password = new char[]{ 'J', 'a', 'm', 'e', 's' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: boolean expectedResult = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedResult, login.getOut(username, password)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedResult, login.getOut(username, password)) target is:  method is: assertEquals(boolean,<unknown>)
statement is: // Example 3: Testing with a valid username and invalid password
String username = "John", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char[] password = new char[]{ 'J', 'a', 'm', 'e', 's' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: boolean expectedResult = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedResult, login.getOut(username, password)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedResult, login.getOut(username, password)) target is:  method is: assertEquals(boolean,<unknown>)
statement is: // Example 4: Testing with an invalid username and invalid password
String username = "John", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char[] password = new char[]{ 'J', 'a', 'm', 'e', 's' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: boolean expectedResult = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedResult, login.getOut(username, password)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedResult, login.getOut(username, password)) target is:  method is: assertEquals(boolean,<unknown>)
* this is vulnerable: String string = "John"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: String string = "John"
* this is vulnerable: boolean _boolean = false
* this is vulnerable: String string = "John"
* this is vulnerable: boolean _boolean = false
* this is vulnerable: String string = "John"
* this is vulnerable: boolean _boolean = false
TestCase is: String string = "John";
boolean _boolean = true;
String string = "John";
boolean _boolean = false;
String string = "John";
boolean _boolean = false;
String string = "John";
boolean _boolean = false;

statement is: getPASSWORDENC()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int pASSWORDENC = Login.getPASSWORDENC()
test data is: Login.getPASSWORDENC();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above method }}
    }
}
statement is: // Improved test data for the above method }}, class spoon.support.reflect.code.CtCommentImpl
statement is: version(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.version((Socket_data) null)
test data is: Login.version((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.version(new Socket_data("https://www.example1.com", "80"));
        Login.version(new Socket_data("https://www.example2.com", "443"));
        Login.version(new Socket_data("https://www.example3.com", "8080"));
    }
}
statement is: Login.version(new Socket_data("https://www.example1.com", "80")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.version(new Socket_data("https://www.example1.com", "80")) target is: Login method is: version(Socket_data)
Matched Method is: version(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.version(new Socket_data("https://www.example2.com", "443")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.version(new Socket_data("https://www.example2.com", "443")) target is: Login method is: version(Socket_data)
Matched Method is: version(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.version(new Socket_data("https://www.example3.com", "8080")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.version(new Socket_data("https://www.example3.com", "8080")) target is: Login method is: version(Socket_data)
Matched Method is: version(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
Login.version(socket_data);
Socket_data socket_data = null;
Login.version(socket_data);
Socket_data socket_data = null;
Login.version(socket_data);

statement is: display_title()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.display_title()
test data is: Login.display_title();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int age = 27;// Changed to a more representative value for the user's age.

        String name = "Jane Smith";// Changed to a more descriptive and representative name for the user.

        boolean loggedIn = false;// Changed to reflect that the user is not currently logged in. }}

    }
}
statement is: int age = 27// Changed to a more representative value for the user's age.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "Jane Smith"// Changed to a more descriptive and representative name for the user.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean loggedIn = false// Changed to reflect that the user is not currently logged in. }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 27
* this is vulnerable: String string = "Jane Smith"
* this is vulnerable: boolean _boolean = false
TestCase is: int _int = 27;
String string = "Jane Smith";
boolean _boolean = false;

statement is: getDbManagemtType()Lorg/javathena/data/IDBManagementLogin; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.javathena.data.IDBManagementLogin
statement code is: IDBManagementLogin dbManagemtType = Login.getDbManagemtType()
test data is: Login.getDbManagemtType();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.getDbManagementType("PostgreSQL");
    }
}
statement is: Login.getDbManagementType("PostgreSQL"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.getDbManagementType("PostgreSQL") target is: Login method is: getDbManagementType(java.lang.String)
statement is: setPASSWORDENC(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.setPASSWORDENC(4609)
test data is: Login.setPASSWORDENC(4609);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.setPASSWORDENC("$2a$10$dGhpcyBpcyBhZGRkIGE0M.");// Encrypted password for "password"

        Login.setUSERNAME("johndoe");
    }
}
statement is: Login.setPASSWORDENC("$2a$10$dGhpcyBpcyBhZGRkIGE0M.")// Encrypted password for "password"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.setPASSWORDENC("$2a$10$dGhpcyBpcyBhZGRkIGE0M.")// Encrypted password for "password"
 target is: Login method is: setPASSWORDENC(java.lang.String)
Matched Method is: setPASSWORDENC(I)V
statement is: Login.setUSERNAME("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.setUSERNAME("johndoe") target is: Login method is: setUSERNAME(java.lang.String)
TestCase is: String string = "$2a$10$dGhpcyBpcyBhZGRkIGE0M.";
Login.setPASSWORDENC((int) string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getAuth_max()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_max = login.getAuth_max()
test data is: Login login = new Login();
login.getAuth_max();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.getAuth_max("2023-12-25", "Jane Doe");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.getAuth_max("2023-12-25", "Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_max("2023-12-25", "Jane Doe") target is: login method is: getAuth_max(java.lang.String,java.lang.String)
TestCase is: Login login = new Login();

statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] md5Data = Login.getMd5Data(arg0)
statement is: codingKeyAdministration(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.codingKeyAdministration(arg0)
test data is: Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.codingKeyAdministration(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Socket_data socket_data = new Socket_data(new Socket("https://www.example.com", 443));
        Login.getMd5Data(socket_data);
        Login.codingKeyAdministration(socket_data);
    }
}
statement is: Socket_data socket_data = new Socket_data(new Socket("https://www.example.com", 443)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.getMd5Data(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.getMd5Data(socket_data) target is: Login method is: getMd5Data(Socket_data)
Matched Method is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B
statement is: Login.codingKeyAdministration(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.codingKeyAdministration(socket_data) target is: Login method is: codingKeyAdministration(Socket_data)
Matched Method is: codingKeyAdministration(Lorg/javathena/core/data/Socket_data;)V
TestCase is: Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.codingKeyAdministration(socket_data);

statement is: login_log(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.login_log("login")
test data is: Login.login_log("login");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login.login_log("johndoe@example.com");
    }
}
statement is: // Improved test data
Login.login_log("johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
Login.login_log("johndoe@example.com") target is: Login method is: login_log(java.lang.String)
Matched Method is: login_log(Ljava/lang/String;)V
TestCase is: String string = "johndoe@example.com";
Login.login_log(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: mmo_auth_initXML()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initXML = Login.mmo_auth_initXML()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
        FileSystemHandling.createFolder(evoSuiteFile);
        Login.mmo_auth_initXML();
        // Improved test data:
        // 1. Use a more descriptive filename, such as "account-data.xml".
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account-data.xml");
        // 2. Instead of using the literal value "save", use a variable that is set to the correct path.
        String savePath = System.getProperty("user.home") + "/save";
        FileSystemHandling.createFolder(evoSuiteFile);
        Login.mmo_auth_initXML();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.mmo_auth_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initXML() target is: Login method is: mmo_auth_initXML()
Matched Method is: mmo_auth_initXML()I
statement is: // Improved test data:
// 1. Use a more descriptive filename, such as "account-data.xml".
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account-data.xml"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // 2. Instead of using the literal value "save", use a variable that is set to the correct path.
String savePath = System.getProperty("user.home") + "/save", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: System.getProperty("user.home") + "/save"
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.mmo_auth_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initXML() target is: Login method is: mmo_auth_initXML()
Matched Method is: mmo_auth_initXML()I
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setAuthType("TXT");
        login.setUsername("john.doe@example.com");
        login.setPassword("password123");
        Login.mmo_auth_syncTXT();
        Login.mmo_auth_initTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuthType("TXT"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuthType("TXT") target is: login method is: setAuthType(java.lang.String)
statement is: login.setUsername("john.doe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("john.doe@example.com") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
TestCase is: Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("1234567890");
        Login.mmo_auth_initTXT();
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("1234567890") target is: login method is: setPassword(java.lang.String)
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
TestCase is: Login login = new Login();
Login.mmo_auth_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
        Login.mmo_auth_syncTXT();
        Login.mmo_auth_initTXT();
        // Improved test data:
        String username = "johndoe";
        String password = "password123";
        int userID = 1234;
        boolean success = true;
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
statement is: // Improved test data:
String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int userID = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean success = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: int _int = 1234
* this is vulnerable: boolean _boolean = true
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = 'R';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
String string = "johndoe";
String string = "password123";
int _int = 1234;
boolean _boolean = true;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
Login login = new Login();
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // User authentication related variables
        String username = "johnDoe";
        String password = "password123";
        int userID = 123456;
        boolean isAuthenticated = true;
        // User authorization related variables
        String role = "admin";
        String privilege = "full_access";
    }
}
statement is: // User authentication related variables
String username = "johnDoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int userID = 123456, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isAuthenticated = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // User authorization related variables
String role = "admin", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String privilege = "full_access", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "johnDoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: int _int = 123456
* this is vulnerable: boolean _boolean = true
* this is vulnerable: String string = "admin"
* this is vulnerable: String string = "full_access"
TestCase is: String string = "johnDoe";
String string = "password123";
int _int = 123456;
boolean _boolean = true;
String string = "admin";
String string = "full_access";

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("c~|", "c~|", "`bAz$", 'S')
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: UserManagement.addUserTXT("c~|", "c~|", "`bAz$", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserTXT("administrator", "strongpassword", "supervisor", 'A');
        Login login = new Login();
        login.mmo_auth_syncTXT();
        login.mmo_auth_initTXT();
    }
}
statement is: UserManagement.addUserTXT("administrator", "strongpassword", "supervisor", 'A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("administrator", "strongpassword", "supervisor", 'A') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_syncTXT() target is: login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_initTXT() target is: login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
TestCase is: String string = "administrator";
String string = "strongpassword";
String string = "supervisor";
char _char = 'A';
UserManagement.addUserTXT(string, string, string, _char);
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

statement is: org.evosuite.testcase.statements.ArrayStatement@cde05d89 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: showTab([B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.showTab(arg0)
test data is: byte[] byteArray = new byte[2];
Login.showTab(byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (0xa1)), ((byte) (0xb2)) };
        Login.showTab(byteArray);
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (0xa1)), ((byte) (0xb2)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ ((byte) (0xa1)), ((byte) (0xb2)) } Elements: [((byte) (0xa1)), ((byte) (0xb2))]
lengths: [2] []
statement is: Login.showTab(byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.showTab(byteArray) target is: Login method is: showTab(byte[])
Matched Method is: showTab([B)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: byte[] byteArray = null;
Login.showTab(byteArray);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: check_auth_sync()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_auth_sync = login.check_auth_sync()
test data is: Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int userId = 1234;
        String username = "John Doe";
        String password = "password123";
    }
}
statement is: int userId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "John Doe"
* this is vulnerable: String string = "password123"
TestCase is: int _int = 1234;
String string = "John Doe";
String string = "password123";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$ConnectionListener(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$ConnectionListener
statement code is: Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.run()
test data is: Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        Login login = new Login();
        Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
        String expectedMessage = "Successfully connected to the server.";
        login_ConnectionListener.run();
        assertEquals(expectedMessage, login_ConnectionListener.getMessage());
    }
}
statement is: // Improved test data:
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String expectedMessage = "Successfully connected to the server.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login_ConnectionListener.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_ConnectionListener.run() target is: login_ConnectionListener method is: run()
statement is: assertEquals(expectedMessage, login_ConnectionListener.getMessage()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedMessage, login_ConnectionListener.getMessage()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "Successfully connected to the server."
TestCase is: Login login = new Login();
String string = "Successfully connected to the server.";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: parse_admin(ILorg/javathena/core/data/Socket_data;Lorg/javathena/login/Login;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_admin = arg2.parse_admin(50, arg1, arg2)
test data is: Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
login.parse_admin(50, socket_data, login);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        login.parse_admin(50, socket_data, login);
        // Improved test data:
        Login login = new Login();
        MockSocket mockSocket = new MockSocket("127.0.0.1", 8080);
        Socket_data socket_data = new Socket_data(mockSocket);
        login.parse_admin(50, socket_data, login);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.parse_admin(50, socket_data, login), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_admin(50, socket_data, login) target is: login method is: parse_admin(int,Socket_data,Login)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_admin(ILorg/javathena/core/data/Socket_data;Lorg/javathena/login/Login;)I
statement is: // Improved test data:
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket("127.0.0.1", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.parse_admin(50, socket_data, login), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_admin(50, socket_data, login) target is: login method is: parse_admin(int,Socket_data,Login)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 5
Matched Method is: parse_admin(ILorg/javathena/core/data/Socket_data;Lorg/javathena/login/Login;)I
TestCase is: Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
int _int = 50;
login.parse_admin(_int, socket_data, login);
Login login = new Login();
Socket_data socket_data = new Socket_data(mockSocket);
int _int = 50;
login.parse_admin(_int, socket_data, login);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("conf/subnet_athena.conf")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("conf/subnet_athena.conf");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("conf/subnet_athena.conf"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("conf/subnet_athena.conf") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "conf/subnet_athena.conf";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("exit")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("exit");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("logout");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("logout"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("logout") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "logout";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("quit")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("quit");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("exit");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("exit"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("exit") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "exit";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("end")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("end");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the given code snippet
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("end");
    }
}
statement is: // Improved test data for the given code snippet
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("end"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("end") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "end";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("alive")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("alive");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        Login login = new Login();
        login.do_initTXT("C:\\Users\\John Doe\\Documents\\example.txt");
        login.parse_console("alive");
    }
}
statement is: // Improved test data for the code snippet
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT("C:\\Users\\John Doe\\Documents\\example.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT("C:\\Users\\John Doe\\Documents\\example.txt") target is: login method is: do_initTXT(java.lang.String)
statement is: login.parse_console("alive"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("alive") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
String string = "alive";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("status")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("status");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("status");
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("status"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("status") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "status";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("help")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("help");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT("C:\\Users\\testuser\\Documents\\init.txt");
        login.parse_console("login -u testuser -p testpassword");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT("C:\\Users\\testuser\\Documents\\init.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT("C:\\Users\\testuser\\Documents\\init.txt") target is: login method is: do_initTXT(java.lang.String)
statement is: login.parse_console("login -u testuser -p testpassword"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("login -u testuser -p testpassword") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
String string = "login -u testuser -p testpassword";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(9985)
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(10)
statement is: ACO aCO = ACO.ALLOW_DENY type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.ALLOW_DENY
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_allownum(9985);
ConfigurationManagement.setAccess_denynum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ConfigurationManagement.setAccess_allownum(9021);
        ConfigurationManagement.setAccess_denynum(5432);
        ACO aCO = ACO.DENY_ALLOW;
        ConfigurationManagement.setAccess_order(aCO);
        login.do_initTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_allownum(9021), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(9021) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: ConfigurationManagement.setAccess_denynum(5432), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(5432) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: ACO aCO = ACO.DENY_ALLOW, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.DENY_ALLOW is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
TestCase is: Login login = new Login();
int _int = 9021;
ConfigurationManagement.setAccess_allownum(_int);
int _int = 5432;
ConfigurationManagement.setAccess_denynum(_int);
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("YES")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("YES");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.yesNoOnOffToBoolean("ON");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("ON"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("ON") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: Login login = new Login();
String string = "ON";
login.yesNoOnOffToBoolean(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("NO")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("NO");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.yesNoOnOffToBoolean("off");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("off"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("off") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: Login login = new Login();
String string = "off";
login.yesNoOnOffToBoolean(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("ON")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("ON");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.yesNoOnOffToBoolean("Yes");
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("Yes"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("Yes") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: Login login = new Login();
String string = "Yes";
login.yesNoOnOffToBoolean(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("conf/subnet_athena.conf")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.yesNoOnOffToBoolean("conf/subnet_athena.conf", true);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("conf/subnet_athena.conf", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("conf/subnet_athena.conf", true) target is: login method is: yesNoOnOffToBoolean(java.lang.String,boolean)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("OFF")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("OFF");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.yesNoOnOffToBoolean("Never mind");// Test case 1: Passing a non-boolean value

        login.yesNoOnOffToBoolean("ON");// Test case 2: Passing a boolean value

        login.yesNoOnOffToBoolean("OFF");// Test case 3: Passing an OFF value

        login.yesNoOnOffToBoolean(true);// Test case 4: Passing a true boolean value

        login.yesNoOnOffToBoolean(false);// Test case 5: Passing a false boolean value }}

    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("Never mind")// Test case 1: Passing a non-boolean value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("Never mind")// Test case 1: Passing a non-boolean value
 target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: login.yesNoOnOffToBoolean("ON")// Test case 2: Passing a boolean value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("ON")// Test case 2: Passing a boolean value
 target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: login.yesNoOnOffToBoolean("OFF")// Test case 3: Passing an OFF value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("OFF")// Test case 3: Passing an OFF value
 target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: login.yesNoOnOffToBoolean(true)// Test case 4: Passing a true boolean value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean(true)// Test case 4: Passing a true boolean value
 target is: login method is: yesNoOnOffToBoolean(boolean)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: login.yesNoOnOffToBoolean(false)// Test case 5: Passing a false boolean value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean(false)// Test case 5: Passing a false boolean value }}
 target is: login method is: yesNoOnOffToBoolean(boolean)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: Login login = new Login();
String string = "Never mind";
login.yesNoOnOffToBoolean(string);
String string = "ON";
login.yesNoOnOffToBoolean(string);
String string = "OFF";
login.yesNoOnOffToBoolean(string);
boolean _boolean = true;
login.yesNoOnOffToBoolean((String) _boolean);
boolean _boolean = false;
login.yesNoOnOffToBoolean((String) _boolean);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$End(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$End
statement code is: Login.End login_End = arg0.new End()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_End.run()
test data is: Login login = new Login();
Login.End login_End = login.new End();
login_End.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        Login.End login_End = login.new End();
        login_End.run();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.End login_End = login.new End(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login_End.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_End.run() target is: login_End method is: run()
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.ArrayStatement@43a9cb42 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[0]
statement is: setServer_fd([I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setServer_fd(arg0)
test data is: Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        int[] intArray = new int[]{ 9080, 9090, 1024 };
        login.setServer_fd(intArray);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int[] intArray = new int[]{ 9080, 9090, 1024 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[0] isAssignment: false Array: new int[]{ 9080, 9090, 1024 } Elements: [9080, 9090, 1024]
lengths: [0] []
statement is: login.setServer_fd(intArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setServer_fd(intArray) target is: login method is: setServer_fd(int[])
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setServer_fd([I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Login login = new Login();
int[] intArray = null;
login.setServer_fd(intArray);

statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: setMd5key(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: socket_data.setMd5key("=ZxCIjws7FwW")
statement is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] md5Data = Login.getMd5Data(arg0)
test data is: Socket_data socket_data = new Socket_data((Socket) null);
socket_data.setMd5key("=ZxCIjws7FwW");
Login.getMd5Data(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Socket_data socket_data = new Socket_data(((Socket) (null)));
        socket_data.setMd5key("a4f1fd6bb75b123c92de4bdc8e72360e");
        Login.getMd5Data(socket_data);
    }
}
statement is: Socket_data socket_data = new Socket_data(((Socket) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: socket_data.setMd5key("a4f1fd6bb75b123c92de4bdc8e72360e"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: socket_data.setMd5key("a4f1fd6bb75b123c92de4bdc8e72360e") target is: socket_data method is: setMd5key(java.lang.String)
source statement: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V callee: VariableReference: Statement 0, type org.javathena.core.data.Socket_dataindex is: 0
Matched Method is: setMd5key(Ljava/lang/String;)V
statement is: Login.getMd5Data(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.getMd5Data(socket_data) target is: Login method is: getMd5Data(Socket_data)
Matched Method is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B
TestCase is: Socket_data socket_data = new Socket_data((Socket) null);
String string = "a4f1fd6bb75b123c92de4bdc8e72360e";
socket_data.setMd5key(string);
Login.getMd5Data(socket_data);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: login_log(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.login_log("conf/subnet_athena.conf")
test data is: Login login = new Login();
Login.login_log("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.login_log("conf/subnet_athena.conf");
        String ipAddress = "192.168.0.1";
        int portNumber = 4321;
        boolean isValidUser = true;
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.login_log("conf/subnet_athena.conf"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.login_log("conf/subnet_athena.conf") target is: login method is: login_log(java.lang.String)
Matched Method is: login_log(Ljava/lang/String;)V
statement is: String ipAddress = "192.168.0.1", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int portNumber = 4321, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isValidUser = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "192.168.0.1"
* this is vulnerable: int _int = 4321
* this is vulnerable: boolean _boolean = true
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
Login.login_log(string);
String string = "192.168.0.1";
int _int = 4321;
boolean _boolean = true;

statement is: mmo_auth_initXML()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initXML = Login.mmo_auth_initXML()
test data is: Login.mmo_auth_initXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int userId = 12345;
        String password = "password123";
        String username = "johndoe";
        String email = "john.doe@example.com";
        // Initialize the MMO auth system with the improved test data
        Login.mmo_auth_initXML(userId, password, username, email);
    }
}
statement is: // Improved test data
int userId = 12345, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String email = "john.doe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Initialize the MMO auth system with the improved test data
Login.mmo_auth_initXML(userId, password, username, email), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Initialize the MMO auth system with the improved test data
Login.mmo_auth_initXML(userId, password, username, email) target is: Login method is: mmo_auth_initXML(int,java.lang.String,java.lang.String,java.lang.String)
* this is vulnerable: int _int = 12345
* this is vulnerable: String string = "password123"
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "john.doe@example.com"
TestCase is: int _int = 12345;
String string = "password123";
String string = "johndoe";
String string = "john.doe@example.com";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("Invalid password (account: '%s', pass: '%s', received pass: '%s', ip: %s)\n", "YES", ">~b%hfxz)#f/hWO~X0m", 'T')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("Invalid password (account: '%s', pass: '%s', received pass: '%s', ip: %s)\n", "YES", ">~b%hfxz)#f/hWO~X0m", 'T');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        UserManagement.addUserTXT("Invalid password (account: \'%s\', pass: \'%s\', received pass: \'%s\', ip: %s)\n", "Joe", "secret123", "incorrectPassword", "192.168.0.1");
        Login.mmo_auth_syncTXT();
        Login.mmo_auth_initTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addUserTXT("Invalid password (account: \'%s\', pass: \'%s\', received pass: \'%s\', ip: %s)\n", "Joe", "secret123", "incorrectPassword", "192.168.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("Invalid password (account: \'%s\', pass: \'%s\', received pass: \'%s\', ip: %s)\n", "Joe", "secret123", "incorrectPassword", "192.168.0.1") target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
TestCase is: Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_syncXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncXML()
test data is: Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setUsername("john.doe");
        login.setPassword("password123");
        login.setSecurityQuestion("What is your favorite childhood pet?");
        login.setSecurityAnswer("dog");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("john.doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("john.doe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.setSecurityQuestion("What is your favorite childhood pet?"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setSecurityQuestion("What is your favorite childhood pet?") target is: login method is: setSecurityQuestion(java.lang.String)
statement is: login.setSecurityAnswer("dog"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setSecurityAnswer("dog") target is: login method is: setSecurityAnswer(java.lang.String)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncXML()
test data is: Login login = new Login();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int age = 25;// replace with a more descriptive value, such as "John's age"

        String name = "John";// replace with a more descriptive value, such as "John Doe"

        // Initialize the Login object with the correct username and password
        Login login = new Login(name + "@example.com", "password123");
        // Call the mmo_auth_syncXML method on the Login object
        login.mmo_auth_syncXML();
    }
}
statement is: int age = 25// replace with a more descriptive value, such as "John's age"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John"// replace with a more descriptive value, such as "John Doe"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Initialize the Login object with the correct username and password
Login login = new Login(name + "@example.com", "password123"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Call the mmo_auth_syncXML method on the Login object
login.mmo_auth_syncXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Call the mmo_auth_syncXML method on the Login object
login.mmo_auth_syncXML() target is: login method is: mmo_auth_syncXML()
Matched Method is: mmo_auth_syncXML()V
* this is vulnerable: int _int = 25
* this is vulnerable: String string = "John"
TestCase is: int _int = 25;
String string = "John";
Login.mmo_auth_syncXML();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: check_auth_sync()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_auth_sync = login.check_auth_sync()
test data is: Login login = new Login();
login.check_auth_sync();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        String username = "john.doe@example.com";
        String password = "Password123!";
        boolean expectedResult = true;
        login.check_auth_sync(username, password);
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String username = "john.doe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "Password123!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean expectedResult = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.check_auth_sync(username, password), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_auth_sync(username, password) target is: login method is: check_auth_sync(java.lang.String,java.lang.String)
* this is vulnerable: String string = "john.doe@example.com"
* this is vulnerable: String string = "Password123!"
* this is vulnerable: boolean _boolean = true
TestCase is: Login login = new Login();
String string = "john.doe@example.com";
String string = "Password123!";
boolean _boolean = true;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_final()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_final()
test data is: Login login = new Login();
login.do_final();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the do_final method
        // Primitive values
        int age = 42;
        double height = 6.5;// feet

        char gender = 'M';
        String name = "John Smith";
        boolean isAdmin = true;
        // String values
        String address = "123 Main St.";
        String city = "Anytown";
        String state = "CA";
        String zipCode = "12345";
        // Object values
        Login login = new Login();
        login.setUserId(123);
        login.setPassword("password");
    }
}
statement is: // Improved test data for the do_final method
// Primitive values
int age = 42, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double height = 6.5// feet
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char gender = 'M', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Smith", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isAdmin = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // String values
String address = "123 Main St.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String city = "Anytown", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String state = "CA", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String zipCode = "12345", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Object values
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUserId(123), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUserId(123) target is: login method is: setUserId(int)
statement is: login.setPassword("password"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password") target is: login method is: setPassword(java.lang.String)
* this is vulnerable: int _int = 42
* this is vulnerable: double _double = 6.5
* this is vulnerable: char _char = 'M'
* this is vulnerable: String string = "John Smith"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: String string = "123 Main St."
* this is vulnerable: String string = "Anytown"
* this is vulnerable: String string = "CA"
* this is vulnerable: String string = "12345"
TestCase is: int _int = 42;
double _double = 6.5;
char _char = 'M';
String string = "John Smith";
boolean _boolean = true;
String string = "123 Main St.";
String string = "Anytown";
String string = "CA";
String string = "12345";
Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: do_final()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_final()
test data is: Login login = new Login();
login.do_initTXT();
login.do_final();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT("John Doe", "password123");
        login.do_final();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT("John Doe", "password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT("John Doe", "password123") target is: login method is: do_initTXT(java.lang.String,java.lang.String)
statement is: login.do_final(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_final() target is: login method is: do_final()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_final()V
TestCase is: Login login = new Login();
login.do_final();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
statement is: getOut()Ljava/io/PrintWriter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockPrintWriter
statement code is: MockPrintWriter out = (MockPrintWriter)login.getOut()
test data is: Login login = new Login();
login.save_config_in_log();
login.getOut();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("password123");
        login.save_config_in_log();
        login.getOut();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
statement is: login.getOut(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getOut() target is: login method is: getOut()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getOut()Ljava/io/PrintWriter;
TestCase is: Login login = new Login();
login.save_config_in_log();
login.getOut();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.ALLOW_DENY type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.ALLOW_DENY
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        Login login = new Login();
        ACO aCO = ACO.ALLOW;// Changed from ACO.ALLOW_DENY to make the test more descriptive and representative of the situation being tested.

        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
    }
}
statement is: // Improved test data:
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.ALLOW// Changed from ACO.ALLOW_DENY to make the test more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.ALLOW is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(2)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ConfigurationManagement.setAccess_denynum(10);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_denynum(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(10) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
int _int = 10;
ConfigurationManagement.setAccess_denynum(_int);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(1)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        Login login = new Login();
        ConfigurationManagement.setAccess_denynum(5);
        login.save_config_in_log();
    }
}
statement is: // Improved test data for the above code snippet
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_denynum(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(5) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
int _int = 5;
ConfigurationManagement.setAccess_denynum(_int);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.STRSIZE type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.STRSIZE
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.STRSIZE;
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.STRSIZE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.STRSIZE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(10)
statement is: ACO aCO = ACO.ALLOW_DENY type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.ALLOW_DENY
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_allownum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ConfigurationManagement.setAccess_allownum(20);
        ACO aCO = ACO.ALLOW_DENY;
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_allownum(20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(20) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: ACO aCO = ACO.ALLOW_DENY, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.ALLOW_DENY is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
int _int = 20;
ConfigurationManagement.setAccess_allownum(_int);
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(15)
statement is: ACO aCO = ACO.MUTUAL_FAILTURE type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.MUTUAL_FAILTURE
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_allownum(15);
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ConfigurationManagement.setAccess_allownum(15);
        ACO aCO = ACO.MUTUAL_FAILTURE;
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_allownum(15), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(15) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: ACO aCO = ACO.MUTUAL_FAILTURE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.MUTUAL_FAILTURE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
int _int = 15;
ConfigurationManagement.setAccess_allownum(_int);
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@836ec177 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: login.auth_max = 2375
statement is: getAuth_max()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_max = login.getAuth_max()
test data is: Login login = new Login();
login.auth_max = 2375;
login.getAuth_max();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.auth_max = 1000;
        login.getAuth_max();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.auth_max = 1000, class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.getAuth_max(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_max() target is: login method is: getAuth_max()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getAuth_max()I
TestCase is: Login login = new Login();
login.getAuth_max();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@5b8f2cb0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: Login.auth_num = (-2849)
statement is: getAuth_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_num = login.getAuth_num()
test data is: Login login = new Login();
Login.auth_num = (-2849);
login.getAuth_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for Login class
        Login login = new Login();
        login.setAuth_num(12345);// Use a more descriptive and representative value for the auth number

        login.getAuth_num();
    }
}
statement is: // Improved test data for Login class
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuth_num(12345)// Use a more descriptive and representative value for the auth number
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuth_num(12345)// Use a more descriptive and representative value for the auth number
 target is: login method is: setAuth_num(int)
statement is: login.getAuth_num(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_num() target is: login method is: getAuth_num()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getAuth_num()I
TestCase is: Login login = new Login();
login.getAuth_num();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@b10d343a type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: Login.auth_num = 2580
statement is: getAuth_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_num = login.getAuth_num()
test data is: Login login = new Login();
Login.auth_num = 2580;
login.getAuth_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setAuth_num(5678);
        assertEquals(login.getAuth_num(), 5678);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuth_num(5678), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuth_num(5678) target is: login method is: setAuth_num(int)
statement is: assertEquals(login.getAuth_num(), 5678), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(login.getAuth_num(), 5678) target is:  method is: assertEquals(<unknown>,int)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@1949b4d1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: login.server_fd = null
statement is: getServer_fd()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] server_fd = login.getServer_fd()
test data is: Login login = new Login();
login.server_fd = null;
login.getServer_fd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.server_fd = "https://example.com";
        login.getServer_fd();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.server_fd = "https://example.com", class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.getServer_fd(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getServer_fd() target is: login method is: getServer_fd()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getServer_fd()[I
TestCase is: Login login = new Login();
login.getServer_fd();

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.login.parse.FromClient()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromClient
statement code is: FromClient fromClient = new FromClient()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: codingKeyAdministration(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.codingKeyAdministration(arg0)
test data is: MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
Login.codingKeyAdministration(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        mockSocket.setAddress("127.0.0.1");
        mockSocket.setPort(8080);
        FromClient fromClient = new FromClient();
        fromClient.setUsername("admin");
        fromClient.setPassword("password");
        socket_data = new Socket_data(mockSocket, fromClient);
        Login.codingKeyAdministration(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.setAddress("127.0.0.1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.setAddress("127.0.0.1") target is: mockSocket method is: setAddress(java.lang.String)
statement is: mockSocket.setPort(8080), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.setPort(8080) target is: mockSocket method is: setPort(int)
statement is: FromClient fromClient = new FromClient(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fromClient.setUsername("admin"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromClient.setUsername("admin") target is: fromClient method is: setUsername(java.lang.String)
statement is: fromClient.setPassword("password"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fromClient.setPassword("password") target is: fromClient method is: setPassword(java.lang.String)
statement is: socket_data = new Socket_data(mockSocket, fromClient), class spoon.support.reflect.code.CtAssignmentImpl
statement is: Login.codingKeyAdministration(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.codingKeyAdministration(socket_data) target is: Login method is: codingKeyAdministration()
Matched Method is: codingKeyAdministration(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = null;
Login.codingKeyAdministration(socket_data);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_init()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int do_init = login.do_init()
test data is: Login login = new Login();
login.do_init();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_init();
        // Improved test data
        String username = "johndoe";
        String password = "password123";
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_init(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_init() target is: login method is: do_init()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_init()I
statement is: // Improved test data
String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
TestCase is: Login login = new Login();
login.do_init();
String string = "johndoe";
String string = "password123";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initSQL()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.do_initSQL()
test data is: Login login = new Login();
Login.do_initSQL();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setUsername("admin");
        login.setPassword("password123");
        login.do_initSQL();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("admin"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("admin") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.do_initSQL(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initSQL() target is: login method is: do_initSQL()
Matched Method is: do_initSQL()V
TestCase is: Login login = new Login();
Login.do_initSQL();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
        FileSystemHandling.createFolder(evoSuiteFile);
        login.do_initTXT();
        String username = "johndoe";
        String password = "password123";
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
TestCase is: Login login = new Login();
EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
login.do_initTXT();
String string = "johndoe";
String string = "password123";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initXML()
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
test data is: Login login = new Login();
login.do_initXML();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String expectedPath = "save/account.xml";
        login.setUsername("john.doe");
        login.setPassword("password123");
        login.setAccountType("premium");
    }
}
statement is: String expectedPath = "save/account.xml", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.setUsername("john.doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("john.doe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.setAccountType("premium"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAccountType("premium") target is: login method is: setAccountType(java.lang.String)
* this is vulnerable: String string = "save/account.xml"
TestCase is: String string = "save/account.xml";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initXML()
statement is: org.javathena.login.Login$Timer_interval_check_auth_sync(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$Timer_interval_check_auth_sync
statement code is: Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = arg0.new Timer_interval_check_auth_sync()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_Timer_interval_check_auth_sync.run()
test data is: Login login = new Login();
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initXML();
        Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
        // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
        login_Timer_interval_check_auth_sync.run();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initXML() target is: login method is: do_initXML()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initXML()V
statement is: Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
login_Timer_interval_check_auth_sync.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples
login_Timer_interval_check_auth_sync.run() target is: login_Timer_interval_check_auth_sync method is: run()
TestCase is: Login login = new Login();
login.do_initXML();

* test suite isTestSuite: 138
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
// Undeclared exception!
try { 
  Login.codingKey((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 4: 
Login login = new Login();
login.getAuth_num();
Test 5: 
Login login = new Login();
login.getServer_fd();
Test 6: 
Login login = new Login();
Inet4Address anyLocalAddress = (Inet4Address)MockInetAddress.anyLocalAddress();
login.check_ip(anyLocalAddress);
Test 7: 
Login login = new Login();
login.check_ipmask(2000000, "conf/subnet_athena.conf");
Test 8: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.logUnknownPackets(socket_data);
Test 9: 
Login login = new Login();
login.setAuth_max(7);
Test 10: 
Login login = new Login();
login.getOut();
Test 11: 
Login.getPASSWORDENC();
Test 12: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 13: 
Login.display_title();
Test 14: 
Login.getDbManagemtType();
Test 15: 
Login.setPASSWORDENC(4609);
Test 16: 
Login login = new Login();
login.getAuth_max();
Test 17: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 18: 
Login.login_log("login");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 20: 
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 22: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
UserManagement.addUserTXT("c~|", "c~|", "`bAz$", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
byte[] byteArray = new byte[2];
Login.showTab(byteArray);
Test 26: 
Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();
Test 27: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 28: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  login.parse_admin(50, socket_data, login);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 29: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
Test 30: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 31: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 32: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 33: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 34: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 35: 
Login login = new Login();
login.do_initTXT();
login.parse_console("help");
Test 36: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(9985);
ConfigurationManagement.setAccess_denynum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();
Test 37: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 38: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 39: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 40: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Test 42: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 43: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
Test 44: 
Socket_data socket_data = new Socket_data((Socket) null);
socket_data.setMd5key("=ZxCIjws7FwW");
Login.getMd5Data(socket_data);
Test 45: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 46: 
Login.mmo_auth_initXML();
Test 47: 
Login login = new Login();
UserManagement.addUserTXT("Invalid password (account: '%s', pass: '%s', received pass: '%s', ip: %s)\n", "YES", ">~b%hfxz)#f/hWO~X0m", 'T');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 48: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();
Test 49: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 50: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 51: 
Login login = new Login();
login.do_final();
Test 52: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
Login login = new Login();
login.save_config_in_log();
login.getOut();
Test 54: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 55: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();
Test 56: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 57: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 58: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 59: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(15);
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 60: 
Login login = new Login();
login.auth_max = 2375;
login.getAuth_max();
Test 61: 
Login login = new Login();
Login.auth_num = (-2849);
login.getAuth_num();
Test 62: 
Login login = new Login();
Login.auth_num = 2580;
login.getAuth_num();
Test 63: 
Login login = new Login();
login.server_fd = null;
login.getServer_fd();
Test 64: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 65: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 66: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 67: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
login.do_initTXT();
Test 68: 
Login login = new Login();
login.do_initXML();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Test 69: 
Login login = new Login();
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
Test 70: 
Login login = new Login();

Test 71: 
Login login = new Login();
login.getLog_fp();

Test 72: 
Login login = new Login();
login.setOut((PrintWriter) null);

Test 73: 
Login.codingKey((Socket_data) null);

Test 74: 

Test 75: 
Login login = new Login();
login.getServer_fd();

Test 76: 
Login login = new Login();
login.check_ip((InetAddress) null);

Test 77: 
Login login = new Login();
login.check_ipmask(2000000, "conf/subnet_athena.conf");

Test 78: 
Socket_data socket_data = new Socket_data((Socket) "192.168.0.1");
Login.logUnknownPackets(socket_data);

Test 79: 
Login login = new Login();
login.setAuth_max(10);

Test 80: 

Test 81: 
Login.version((Socket_data) null);
Socket_data socket_data = null;
Login.version(socket_data);
Socket_data socket_data = null;
Login.version(socket_data);

Test 82: 

Test 83: 
Login.setPASSWORDENC((int) "$2a$10$dGhpcyBpcyBhZGRkIGE0M.");

Test 84: 
Login login = new Login();

Test 85: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.codingKeyAdministration(socket_data);

Test 86: 
Login.login_log("johndoe@example.com");

Test 87: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login.mmo_auth_initXML();
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login.mmo_auth_initXML();

Test 88: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 89: 
Login login = new Login();
Login.mmo_auth_initTXT();

Test 90: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 91: 

Test 92: 
UserManagement.addUserTXT("administrator", "strongpassword", "supervisor", 'A');
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 93: 
Login.showTab((byte[]) null);

Test 94: 

Test 95: 
Login login = new Login();

Test 96: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
login.parse_admin(50, socket_data, login);
Login login = new Login();
Socket_data socket_data = new Socket_data(mockSocket);
int _int = 50;
login.parse_admin(_int, socket_data, login);

Test 97: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

Test 98: 
Login login = new Login();
login.do_initTXT();
login.parse_console("logout");

Test 99: 
Login login = new Login();
login.do_initTXT();
login.parse_console("exit");

Test 100: 
Login login = new Login();
login.do_initTXT();
login.parse_console("end");

Test 101: 
Login login = new Login();
login.parse_console("alive");

Test 102: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");

Test 103: 
Login login = new Login();
login.parse_console("login -u testuser -p testpassword");

Test 104: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(9021);
ConfigurationManagement.setAccess_denynum(5432);
ConfigurationManagement.setAccess_order((ACO) null);
login.do_initTXT();

Test 105: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");

Test 106: 
Login login = new Login();
login.yesNoOnOffToBoolean("off");

Test 107: 
Login login = new Login();
login.yesNoOnOffToBoolean("Yes");

Test 108: 
Login login = new Login();

Test 109: 
Login login = new Login();
login.yesNoOnOffToBoolean("Never mind");
String string = "ON";
login.yesNoOnOffToBoolean(string);
String string = "OFF";
login.yesNoOnOffToBoolean(string);
boolean _boolean = true;
login.yesNoOnOffToBoolean((String) _boolean);
boolean _boolean = false;
login.yesNoOnOffToBoolean((String) _boolean);

Test 110: 
Login login = new Login();

Test 111: 
Login login = new Login();
login.setServer_fd((int[]) null);

Test 112: 
Socket_data socket_data = new Socket_data((Socket) null);
socket_data.setMd5key("a4f1fd6bb75b123c92de4bdc8e72360e");
Login.getMd5Data(socket_data);

Test 113: 
Login login = new Login();
Login.login_log("conf/subnet_athena.conf");

Test 114: 

Test 115: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 116: 
Login login = new Login();

Test 117: 
Login.mmo_auth_syncXML();

Test 118: 
Login login = new Login();

Test 119: 
Login login = new Login();

Test 120: 
Login login = new Login();
login.do_final();

Test 121: 
Login login = new Login();
login.save_config_in_log();
login.getOut();

Test 122: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 123: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(10);
login.save_config_in_log();

Test 124: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(5);
login.save_config_in_log();

Test 125: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 126: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(20);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 127: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(15);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 128: 
Login login = new Login();
login.getAuth_max();

Test 129: 
Login login = new Login();
login.getAuth_num();

Test 130: 
Login login = new Login();

Test 131: 
Login login = new Login();
login.getServer_fd();

Test 132: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Login.codingKeyAdministration((Socket_data) null);

Test 133: 
Login login = new Login();
login.do_init();

Test 134: 
Login login = new Login();
Login.do_initSQL();

Test 135: 
Login login = new Login();
FileSystemHandling.createFolder((EvoSuiteFile) null);
login.do_initTXT();

Test 136: 

Test 137: 
Login login = new Login();
login.do_initXML();


* Generated after the refinement and before minimization 138 tests with total length 347
* test suite isTestSuite: 138
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
// Undeclared exception!
try { 
  Login.codingKey((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 4: 
Login login = new Login();
login.getAuth_num();
Test 5: 
Login login = new Login();
login.getServer_fd();
Test 6: 
Login login = new Login();
Inet4Address anyLocalAddress = (Inet4Address)MockInetAddress.anyLocalAddress();
login.check_ip(anyLocalAddress);
Test 7: 
Login login = new Login();
login.check_ipmask(2000000, "conf/subnet_athena.conf");
Test 8: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.logUnknownPackets(socket_data);
Test 9: 
Login login = new Login();
login.setAuth_max(7);
Test 10: 
Login login = new Login();
login.getOut();
Test 11: 
Login.getPASSWORDENC();
Test 12: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 13: 
Login.display_title();
Test 14: 
Login.getDbManagemtType();
Test 15: 
Login.setPASSWORDENC(4609);
Test 16: 
Login login = new Login();
login.getAuth_max();
Test 17: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 18: 
Login.login_log("login");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 20: 
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 22: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
UserManagement.addUserTXT("c~|", "c~|", "`bAz$", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
byte[] byteArray = new byte[2];
Login.showTab(byteArray);
Test 26: 
Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();
Test 27: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 28: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  login.parse_admin(50, socket_data, login);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 29: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
Test 30: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 31: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 32: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 33: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 34: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 35: 
Login login = new Login();
login.do_initTXT();
login.parse_console("help");
Test 36: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(9985);
ConfigurationManagement.setAccess_denynum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();
Test 37: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 38: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 39: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 40: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Test 42: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 43: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
Test 44: 
Socket_data socket_data = new Socket_data((Socket) null);
socket_data.setMd5key("=ZxCIjws7FwW");
Login.getMd5Data(socket_data);
Test 45: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 46: 
Login.mmo_auth_initXML();
Test 47: 
Login login = new Login();
UserManagement.addUserTXT("Invalid password (account: '%s', pass: '%s', received pass: '%s', ip: %s)\n", "YES", ">~b%hfxz)#f/hWO~X0m", 'T');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 48: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();
Test 49: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 50: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 51: 
Login login = new Login();
login.do_final();
Test 52: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
Login login = new Login();
login.save_config_in_log();
login.getOut();
Test 54: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 55: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();
Test 56: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 57: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 58: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 59: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(15);
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 60: 
Login login = new Login();
login.auth_max = 2375;
login.getAuth_max();
Test 61: 
Login login = new Login();
Login.auth_num = (-2849);
login.getAuth_num();
Test 62: 
Login login = new Login();
Login.auth_num = 2580;
login.getAuth_num();
Test 63: 
Login login = new Login();
login.server_fd = null;
login.getServer_fd();
Test 64: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 65: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 66: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 67: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
login.do_initTXT();
Test 68: 
Login login = new Login();
login.do_initXML();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Test 69: 
Login login = new Login();
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
Test 70: 
Login login = new Login();

Test 71: 
Login login = new Login();
login.getLog_fp();

Test 72: 
Login login = new Login();
login.setOut((PrintWriter) null);

Test 73: 
Login.codingKey((Socket_data) null);

Test 74: 

Test 75: 
Login login = new Login();
login.getServer_fd();

Test 76: 
Login login = new Login();
login.check_ip((InetAddress) null);

Test 77: 
Login login = new Login();
login.check_ipmask(2000000, "conf/subnet_athena.conf");

Test 78: 
Socket_data socket_data = new Socket_data((Socket) "192.168.0.1");
Login.logUnknownPackets(socket_data);

Test 79: 
Login login = new Login();
login.setAuth_max(10);

Test 80: 

Test 81: 
Login.version((Socket_data) null);
Socket_data socket_data = null;
Login.version(socket_data);
Socket_data socket_data = null;
Login.version(socket_data);

Test 82: 

Test 83: 
Login.setPASSWORDENC((int) "$2a$10$dGhpcyBpcyBhZGRkIGE0M.");

Test 84: 
Login login = new Login();

Test 85: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.codingKeyAdministration(socket_data);

Test 86: 
Login.login_log("johndoe@example.com");

Test 87: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login.mmo_auth_initXML();
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login.mmo_auth_initXML();

Test 88: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 89: 
Login login = new Login();
Login.mmo_auth_initTXT();

Test 90: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 91: 

Test 92: 
UserManagement.addUserTXT("administrator", "strongpassword", "supervisor", 'A');
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 93: 
Login.showTab((byte[]) null);

Test 94: 

Test 95: 
Login login = new Login();

Test 96: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
login.parse_admin(50, socket_data, login);
Login login = new Login();
Socket_data socket_data = new Socket_data(mockSocket);
int _int = 50;
login.parse_admin(_int, socket_data, login);

Test 97: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

Test 98: 
Login login = new Login();
login.do_initTXT();
login.parse_console("logout");

Test 99: 
Login login = new Login();
login.do_initTXT();
login.parse_console("exit");

Test 100: 
Login login = new Login();
login.do_initTXT();
login.parse_console("end");

Test 101: 
Login login = new Login();
login.parse_console("alive");

Test 102: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");

Test 103: 
Login login = new Login();
login.parse_console("login -u testuser -p testpassword");

Test 104: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(9021);
ConfigurationManagement.setAccess_denynum(5432);
ConfigurationManagement.setAccess_order((ACO) null);
login.do_initTXT();

Test 105: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");

Test 106: 
Login login = new Login();
login.yesNoOnOffToBoolean("off");

Test 107: 
Login login = new Login();
login.yesNoOnOffToBoolean("Yes");

Test 108: 
Login login = new Login();

Test 109: 
Login login = new Login();
login.yesNoOnOffToBoolean("Never mind");
String string = "ON";
login.yesNoOnOffToBoolean(string);
String string = "OFF";
login.yesNoOnOffToBoolean(string);
boolean _boolean = true;
login.yesNoOnOffToBoolean((String) _boolean);
boolean _boolean = false;
login.yesNoOnOffToBoolean((String) _boolean);

Test 110: 
Login login = new Login();

Test 111: 
Login login = new Login();
login.setServer_fd((int[]) null);

Test 112: 
Socket_data socket_data = new Socket_data((Socket) null);
socket_data.setMd5key("a4f1fd6bb75b123c92de4bdc8e72360e");
Login.getMd5Data(socket_data);

Test 113: 
Login login = new Login();
Login.login_log("conf/subnet_athena.conf");

Test 114: 

Test 115: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 116: 
Login login = new Login();

Test 117: 
Login.mmo_auth_syncXML();

Test 118: 
Login login = new Login();

Test 119: 
Login login = new Login();

Test 120: 
Login login = new Login();
login.do_final();

Test 121: 
Login login = new Login();
login.save_config_in_log();
login.getOut();

Test 122: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 123: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(10);
login.save_config_in_log();

Test 124: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(5);
login.save_config_in_log();

Test 125: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 126: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(20);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 127: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(15);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 128: 
Login login = new Login();
login.getAuth_max();

Test 129: 
Login login = new Login();
login.getAuth_num();

Test 130: 
Login login = new Login();

Test 131: 
Login login = new Login();
login.getServer_fd();

Test 132: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Login.codingKeyAdministration((Socket_data) null);

Test 133: 
Login login = new Login();
login.do_init();

Test 134: 
Login login = new Login();
Login.do_initSQL();

Test 135: 
Login login = new Login();
FileSystemHandling.createFolder((EvoSuiteFile) null);
login.do_initTXT();

Test 136: 

Test 137: 
Login login = new Login();
login.do_initXML();


* Minimizing test suite
* test suite isTestSuite: 71
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
// Undeclared exception!
try { 
  Login.codingKey((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 4: 
Login login = new Login();
login.getAuth_num();
Test 5: 
Login login = new Login();
login.getServer_fd();
Test 6: 
Login login = new Login();
login.check_ip((InetAddress) null);
Test 7: 
Login login = new Login();
login.check_ipmask(2000000, "conf/subnet_athena.conf");
Test 8: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.logUnknownPackets(socket_data);
Test 9: 
Login login = new Login();
login.setAuth_max(10);
Test 10: 
Login login = new Login();
login.getOut();
Test 11: 
Login.getPASSWORDENC();
Test 12: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 13: 
Login.display_title();
Test 14: 
Login.getDbManagemtType();
Test 15: 
Login login = new Login();
login.do_initXML();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Test 16: 
Login.setPASSWORDENC(4609);
Test 17: 
Login login = new Login();
login.getAuth_max();
Test 18: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 19: 
Login.login_log("johndoe@example.com");
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 21: 
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
Login login = new Login();
login.do_initTXT();
login.parse_console("logout");
Test 23: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
Login login = new Login();
UserManagement.addUserTXT("Invalid password (account: '%s', pass: '%s', received pass: '%s', ip: %s)\n", "YES", ">~b%hfxz)#f/hWO~X0m", 'T');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 25: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
UserManagement.addUserTXT("c~|", "c~|", "`bAz$", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();
Test 28: 
byte[] byteArray = new byte[2];
Login.showTab(byteArray);
Test 29: 
Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();
Test 30: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 31: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  login.parse_admin(50, socket_data, login);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 32: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 33: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 34: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 35: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 36: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 37: 
Login login = new Login();
login.do_initTXT();
login.parse_console("help");
Test 38: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(10);
login.save_config_in_log();
Test 39: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 40: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 41: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 42: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(9985);
ConfigurationManagement.setAccess_denynum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();
Test 43: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(9021);
ConfigurationManagement.setAccess_denynum(5432);
ConfigurationManagement.setAccess_order((ACO) null);
// Undeclared exception!
login.do_initTXT();
Test 44: 
Login login = new Login();
login.yesNoOnOffToBoolean("Yes");
Test 45: 
Login login = new Login();
login.yesNoOnOffToBoolean("off");
Test 46: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 47: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 48: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("Never mind");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 49: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 50: 
Login login = new Login();
login.setServer_fd((int[]) null);
Test 51: 
Socket_data socket_data = new Socket_data((Socket) null);
socket_data.setMd5key("=ZxCIjws7FwW");
Login.getMd5Data(socket_data);
Test 52: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
Login.mmo_auth_initXML();
Test 54: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 55: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 56: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 57: 
Login login = new Login();
login.do_final();
Test 58: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 59: 
Login login = new Login();
login.save_config_in_log();
login.getOut();
Test 60: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
Test 61: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(15);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
Test 62: 
Login login = new Login();
login.auth_max = 2375;
login.getAuth_max();
Test 63: 
Login login = new Login();
Login.auth_num = (-2849);
login.getAuth_num();
Test 64: 
Login login = new Login();
Login.auth_num = 2580;
login.getAuth_num();
Test 65: 
Login login = new Login();
login.server_fd = null;
login.getServer_fd();
Test 66: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 67: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 68: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 69: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
login.do_initTXT();
Test 70: 
Login login = new Login();
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 52%
* Total number of goals: 255
* Number of covered goals: 133
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 69%
* Total number of goals: 433
* Number of covered goals: 298
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 78
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 43
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 255
* Number of covered goals: 128
* Generated 71 tests with total length 194
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg0 = new Login();
Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
assertEquals(0, arg0.getAuth_max());


** It was a parseable test case! 
refined test name is: testCloseResetsAuthMaxToZero
* Compiling Tests
refined test name is: testCloseMultipleTimes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.getLog_fp();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetLogfpSetsAuthMaxToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.setOut((PrintWriter) null);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetAuthMaxWhenOutIsNull
* Compiling Tests
refined test name is: testGetAuthMaxWhenOutIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Login.codingKey((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}


** It was a parseable test case! 
refined test name is: testNullPointerExceptionOnCodingKey
* Compiling Tests
refined test name is: testNullPointerExceptionOnCodingKey
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int auth_num = login.getAuth_num();
assertEquals(0, auth_num);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginInitializationAndAuthorizationNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int[] server_fd = login.getServer_fd();
assertEquals(0, login.getAuth_max());
assertEquals(30, server_fd.length);
assertNotNull(server_fd);


** It was a parseable test case! 
refined test name is: testGetServerFDReturnsValidArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.check_ip((InetAddress) null);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testCheckIpWithNullInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int check_ipmask = login.check_ipmask(2000000, "conf/subnet_athena.conf");
assertEquals(0, login.getAuth_max());
assertEquals(0, check_ipmask);


** It was a parseable test case! 
refined test name is: testCheckIpMaskValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Socket_data arg0 = new Socket_data((Socket) null);
Login.logUnknownPackets(arg0);
assertEquals(0, arg0.getEof());


** It was a parseable test case! 
refined test name is: testLogUnknownPacketsSocketDataWithNullSocket
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.setAuth_max(10);
assertEquals(10, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetAuthMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.getOut();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testLogoutReducesAuthenticationLimitByOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int pASSWORDENC = Login.getPASSWORDENC();
assertEquals(2, pASSWORDENC);


** It was a parseable test case! 
refined test name is: testGetPASSWORDENCReturnsTwo
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}


** It was a parseable test case! 
refined test name is: testVersionThrowsNullPointerException
* Compiling Tests
refined test name is: testVersionWithNullDataParameterThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.display_title();

** It was a parseable test case! 
refined test name is: testSuccessfulLoginRedirectsToDashboardPage
* Compiling Tests
refined test name is: testUserLoginWithValidCredentials
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: IDBManagementLogin dbManagemtType = Login.getDbManagemtType();
assertNull(dbManagemtType);


** It was a parseable test case! 
refined test name is: testGetDbManagementLoginReturnsNull
* Compiling Tests
refined test name is: testGetDbManagementTypereturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initXML();
EvoSuiteFile arg0 = new EvoSuiteFile("save/account.xml");
boolean createFolder = FileSystemHandling.createFolder(arg0);
assertTrue(createFolder);


** It was a parseable test case! 
refined test name is: testInitializeXML
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.setPASSWORDENC(4609);

** It was a parseable test case! 
refined test name is: testSetPasswordEncryptionKey
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int auth_max = login.getAuth_max();
assertEquals(0, auth_max);


** It was a parseable test case! 
refined test name is: testGetAuthMaxReturnsZeroWhenAuthMaxIsSetToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Socket_data arg0 = new Socket_data((Socket) null);
Login.getMd5Data(arg0);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}


** It was a parseable test case! 
refined test name is: testGetMd5DataAndCodingKeyAdministration
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.login_log("johndoe@example.com");

** It was a parseable test case! 
refined test name is: testLoginWithValidEmail
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(arg0);
int mmo_auth_initXML = Login.mmo_auth_initXML();
assertEquals(0, mmo_auth_initXML);


** It was a parseable test case! 
refined test name is: testCreateFolderWithExistingFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testMmoAuthInitTxtWithNullParameter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
int parse_console = login.parse_console("logout");
assertEquals(0, parse_console);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginInitTXTAndParseConsoleLogout
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testLoginInitAndSyncWithConfigurationFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
UserManagement.addUserTXT("Invalid password (account: '%s', pass: '%s', received pass: '%s', ip: %s)\n", "YES", ">~b%hfxz)#f/hWO~X0m", 'T');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"\"
   //
   verifyException("java.lang.NumberFormatException", e);
}


** It was a parseable test case! 
refined test name is: testLoginFunctionWithInvalidPassword
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addUserTXT("c~|", "c~|", "`bAz$", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testAddUserTXTNullPointerException
* Compiling Tests
refined test name is: testAddUserTXTThrowsNPEWhenPasswordIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
refined test name is: testSyncMethodsAreCalledCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[2];
Login.showTab(arg0);
assertEquals(2, arg0.length);


** It was a parseable test case! 
refined test name is: testShowTab
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.mmo_auth_syncTXT();
int check_auth_sync = login.check_auth_sync();
assertEquals(0, login.getAuth_max());
assertEquals(0, check_auth_sync);


** It was a parseable test case! 
refined test name is: testSyncUserAccountWithMMOAuth
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg0 = new Login();
Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener();
login_ConnectionListener.run();
assertEquals(0, arg0.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginConnectionListener
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg2 = new Login();
MockSocket arg0 = new MockSocket();
Socket_data arg1 = new Socket_data(arg0);
// Undeclared exception!
try { 
  arg2.parse_admin(50, arg1, arg2);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}


** It was a parseable test case! 
refined test name is: testParseAdminWithNullData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testExitInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testInitializeAndParseConsoleQuitThrowsException
* Compiling Tests
refined test name is: testParseConsoleQuit
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testEndCommandthrowsSystemExitException
[MASTER] 12:29:56.643 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
[MASTER] 12:29:58.222 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 65
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
MockPrintWriter mockPrintWriter = (MockPrintWriter)Login.loginLogOut;
login.setOut(mockPrintWriter);
Test 3: 
// Undeclared exception!
try { 
  Login.codingKey((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 4: 
Login login = new Login();
login.getAuth_num();
Test 5: 
Login login = new Login();
login.getServer_fd();
Test 6: 
Login login = new Login();
Inet4Address anyLocalAddress = (Inet4Address)MockInetAddress.anyLocalAddress();
login.check_ip(anyLocalAddress);
Test 7: 
Login login = new Login();
login.check_ipmask(2000000, "conf/subnet_athena.conf");
Test 8: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.logUnknownPackets(socket_data);
Test 9: 
Login login = new Login();
login.setAuth_max(7);
Test 10: 
Login login = new Login();
login.getOut();
Test 11: 
Login.getPASSWORDENC();
Test 12: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 13: 
Login.display_title();
Test 14: 
Login.getDbManagemtType();
Test 15: 
Login login = new Login();
login.do_initXML();
Test 16: 
Login login = new Login();
login.getAuth_max();
Test 17: 
Login login = new Login();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
Test 18: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 20: 
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 21: 
Login.mmo_auth_initTXT();
Test 22: 
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Test 23: 
byte[] byteArray = new byte[2];
Login.showTab(byteArray);
Test 24: 
Login login = new Login();
login.check_auth_sync();
Test 25: 
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 26: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 27: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  login.parse_admin(50, socket_data, login);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 28: 
Login login = new Login();
login.parse_console("conf/subnet_athena.conf");
Test 29: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 30: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 31: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 32: 
Login login = new Login();
login.parse_console("alive");
Test 33: 
Login login = new Login();
login.parse_console("status");
Test 34: 
Login login = new Login();
login.parse_console("help");
Test 35: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(9985);
ConfigurationManagement.setAccess_denynum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();
Test 36: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(10);
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();
Test 37: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 38: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 39: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 40: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_syncXML();
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Could not call javolution.util.FastMap.writeObject() : Loop has been executed more times than the allowed 10000
   // ---- Debugging information ----
   // message             : Could not call javolution.util.FastMap.writeObject()
   // cause-exception     : org.evosuite.runtime.TooManyResourcesException
   // cause-message       : Loop has been executed more times than the allowed 10000
   // -------------------------------
   //
   verifyException("com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker", e);
}

login.do_initTXT();
login.getOut();
Login.mmo_auth_syncTXT();
Test 42: 
Login login = new Login();
Login.End login_End = login.new End();
// Undeclared exception!
try { 
  login_End.run();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
Test 44: 
Socket_data socket_data = new Socket_data((Socket) null);
socket_data.setMd5key("=ZxCIjws7FwW");
Login.getMd5Data(socket_data);
Test 45: 
Login.login_log("");
Test 46: 
Login.mmo_auth_initXML();
Test 47: 
UserManagement.addUserTXT("Invalid password (account: '%s', pass: '%s', received pass: '%s', ip: %s)\n", "YES", ">~b%hfxz)#f/hWO~X0m", 'T');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NumberFormatException");

} catch(NumberFormatException e) {
   //
   // For input string: \"\"
   //
   verifyException("java.lang.NumberFormatException", e);
}

Socket socket = null;
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(socket, fromClient);
Test 48: 
Login login = new Login();
UserManagement.setAccountIdCount(10);
ConfigurationManagement.setAccess_denynum(2);
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

login.do_final();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
login.do_initTXT();
Test 49: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
Login login = new Login();
login.save_config_in_log();
Test 51: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 52: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();
Test 53: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 54: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 55: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 56: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(15);
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 57: 
Login login = new Login();
login.auth_max = 2375;
login.getAuth_max();
Test 58: 
Login login = new Login();
login.server_fd = null;
login.getServer_fd();
Test 59: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
Login.codingKeyAdministration(socket_data);
Test 60: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 61: 
Login login = new Login();
Login.loginLogOut = null;
Login.loginLogOut = null;
ConfigurationManagement.setAccess_denynum(10);
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 62: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
Test 63: 
Login login = new Login();
Login.loginLogOut = null;
Login.loginLogOut = null;
ConfigurationManagement.setAccess_denynum(10);
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
Login.mmo_auth_syncTXT();
ConfigurationManagement.lesslessAuth_before_save_file();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Could not call javolution.util.FastMap.writeObject() : Loop has been executed more times than the allowed 10000
   // ---- Debugging information ----
   // message             : Could not call javolution.util.FastMap.writeObject()
   // cause-exception     : org.evosuite.runtime.TooManyResourcesException
   // cause-message       : Loop has been executed more times than the allowed 10000
   // -------------------------------
   //
   verifyException("com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker", e);
}

Login.setPASSWORDENC(9);
Test 64: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);

* Minimizing test suite
* test suite isTestSuite: 60
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
MockPrintWriter mockPrintWriter = (MockPrintWriter)Login.loginLogOut;
login.setOut(mockPrintWriter);
Test 3: 
// Undeclared exception!
try { 
  Login.codingKey((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 4: 
Login login = new Login();
login.getAuth_num();
Test 5: 
Login login = new Login();
login.getServer_fd();
Test 6: 
Login login = new Login();
Inet4Address anyLocalAddress = (Inet4Address)MockInetAddress.anyLocalAddress();
login.check_ip(anyLocalAddress);
Test 7: 
Login login = new Login();
login.check_ipmask(2000000, "conf/subnet_athena.conf");
Test 8: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.logUnknownPackets(socket_data);
Test 9: 
Login login = new Login();
login.setAuth_max(7);
Test 10: 
Login login = new Login();
login.getOut();
Test 11: 
Login.getPASSWORDENC();
Test 12: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 13: 
Login.display_title();
Test 14: 
Login.getDbManagemtType();
Test 15: 
Login login = new Login();
login.do_initXML();
Test 16: 
Login login = new Login();
login.getAuth_max();
Test 17: 
Login login = new Login();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
Test 18: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 20: 
// Undeclared exception!
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
Test 21: 
Login.mmo_auth_initTXT();
Test 22: 
byte[] byteArray = new byte[2];
Login.showTab(byteArray);
Test 23: 
Login login = new Login();
login.check_auth_sync();
Test 24: 
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 25: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 26: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
// Undeclared exception!
try { 
  login.parse_admin(50, socket_data, login);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.core.data.Socket_data", e);
}

Test 27: 
Login login = new Login();
login.parse_console("alive");
Test 28: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 29: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 30: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 31: 
Login login = new Login();
login.parse_console("conf/subnet_athena.conf");
Test 32: 
Login login = new Login();
login.parse_console("status");
Test 33: 
Login login = new Login();
login.parse_console("help");
Test 34: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 35: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 36: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();
Test 37: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 38: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 39: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(9985);
ConfigurationManagement.setAccess_denynum(10);
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();
Test 40: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(10);
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();
Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 42: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 43: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 44: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 45: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Test 46: 
Login login = new Login();
Login.End login_End = login.new End();
// Undeclared exception!
login_End.run();
Test 47: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
Test 48: 
Socket_data socket_data = new Socket_data((Socket) null);
socket_data.setMd5key("=ZxCIjws7FwW");
Login.getMd5Data(socket_data);
Test 49: 
Login.login_log("");
Test 50: 
Login.mmo_auth_initXML();
Test 51: 
Login login = new Login();
// Undeclared exception!
login.do_final();
Test 52: 
Login login = new Login();
login.save_config_in_log();
Test 53: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(15);
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 54: 
Login login = new Login();
login.auth_max = 2375;
login.getAuth_max();
Test 55: 
Login login = new Login();
login.server_fd = null;
login.getServer_fd();
Test 56: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
// Undeclared exception!
try { 
  Login.codingKeyAdministration(socket_data);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 57: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 58: 
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'R');
// Undeclared exception!
Login.mmo_auth_syncTXT();
Login login = new Login();
login.do_initTXT();
Test 59: 
// Undeclared exception!
Login.mmo_auth_syncXML();

[MASTER] 12:30:14.954 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 38%
* Total number of goals: 255
* Number of covered goals: 96
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 433
* Number of covered goals: 273
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 22%
* Total number of goals: 78
* Number of covered goals: 17
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 43
* Number of covered goals: 42
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 44%
* Total number of goals: 255
* Number of covered goals: 112
* Generated 60 tests with total length 149
* Resulting test suite's coverage: 56% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 12:30:15.452 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 17%
* Compiling and checking tests
[MASTER] 12:30:21.672 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:24.733 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:24.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:24.807 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:24.808 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:24.858 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:24.859 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:24.901 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:24.902 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:24.960 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:24.966 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.016 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.051 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.052 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.093 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.094 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.145 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.145 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 12:30:25.189 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.190 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 12:30:25.251 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.252 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.284 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.349 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.350 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.392 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.393 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.444 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.444 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.507 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.508 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.545 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.546 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.585 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.586 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.629 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.630 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.682 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.685 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.732 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.734 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.812 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.813 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.889 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:25.986 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:25.992 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.056 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.057 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.129 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.130 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.181 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.182 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.257 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.258 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.322 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.323 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.376 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.377 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.458 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.459 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.566 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.567 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.623 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.624 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.705 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.706 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:30:26.776 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.777 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.851 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.852 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.907 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:26.977 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:26.978 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.047 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.120 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.131 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.207 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.208 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.302 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.303 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.387 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.388 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.453 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.454 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.506 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.507 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.556 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.557 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.617 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.688 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.690 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.759 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.830 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.831 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.893 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:27.893 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:27.977 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:30:27.987 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:28.095 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:28.096 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:28.190 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:28.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:28.280 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:28.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:28.351 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:28.363 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 12:30:28.466 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:28.467 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:28.533 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:28.534 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:30:28.607 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:28.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
[MASTER] 12:30:30.789 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:30.791 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
[MASTER] 12:30:33.070 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar368357148532596154.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:30:33.073 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar368357148532596154.jar
* Writing tests to file
[MASTER] 12:30:33.076 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'Login_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 37 called: 36 to improve: false
** Write a test suite: 44 called: 37 to improve: false
** Write a test suite: 55 called: 38 to improve: false
** Write a test suite: 56 called: 39 to improve: false
** Write a test suite: 57 called: 40 to improve: false
** Write a test suite: 66 called: 41 to improve: false
** Write a test suite: 67 called: 42 to improve: false
** Write a test suite: 69 called: 43 to improve: false
* Writing JUnit test case 'Login_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
* Done!

* Computation finished
