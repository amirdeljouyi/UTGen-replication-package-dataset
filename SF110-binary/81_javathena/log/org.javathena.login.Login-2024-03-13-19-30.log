* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.javathena.login.Login
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/81_javathena/evosuite-files/evosuite.properties
* Connecting to master process on port 15702
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:30:27.726 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:30:27.734 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:30:27.740 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:30:28.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 19:30:28.275 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 19:30:28.276 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 19:30:28.298 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:30:28.303 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:30:28.306 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:30:28.327 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 19:30:28.331 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 19:30:28.335 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 19:30:28.338 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 19:30:28.343 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 19:30:28.345 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 19:30:28.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 19:30:28.456 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.javathena.login.Login
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1064
* Using seed 1710358220407
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 371 / 1064
[Progress:>                             1%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:===========>                       33%][Progress:>                             2%] [Cov:=============>                     38%][Progress:>                             3%] [Cov:==============>                    40%][Progress:>                             3%] [Cov:==============>                    40%][Progress:=>                            4%] [Cov:==============>                    40%][Progress:=>                            4%] [Cov:==============>                    41%][Progress:=>                            4%] [Cov:==============>                    41%][Progress:=>                            4%] [Cov:==============>                    42%][Progress:=>                            4%] [Cov:==============>                    42%][Progress:=>                            5%] [Cov:===============>                   43%][Progress:=>                            5%] [Cov:===============>                   43%][Progress:=>                            5%] [Cov:===============>                   44%][MASTER] 19:30:41.971 [logback-1] WARN  TestCluster - Failed to check cache for javolution.util.FastComparator<T> : Type points to itself
[Progress:=>                            6%] [Cov:===============>                   44%][Progress:=>                            6%] [Cov:===============>                   44%][Progress:=>                            6%] [Cov:===============>                   44%][Progress:=>                            6%] [Cov:===============>                   44%][Progress:==>                           7%] [Cov:===============>                   44%][Progress:==>                           7%] [Cov:===============>                   44%][Progress:==>                           7%] [Cov:===============>                   45%][Progress:==>                           7%] [Cov:===============>                   45%][Progress:==>                           8%] [Cov:===============>                   45%][Progress:==>                           8%] [Cov:===============>                   45%][Progress:==>                           8%] [Cov:===============>                   45%][Progress:==>                           8%] [Cov:===============>                   45%][Progress:==>                           9%] [Cov:===============>                   45%][Progress:==>                           9%] [Cov:===============>                   45%][Progress:==>                           9%] [Cov:===============>                   45%][Progress:==>                           9%] [Cov:===============>                   45%][Progress:==>                           9%] [Cov:===============>                   45%][Progress:===>                          10%] [Cov:===============>                   45%][Progress:===>                          10%] [Cov:===============>                   45%][Progress:===>                          10%] [Cov:===============>                   45%][Progress:===>                          10%] [Cov:================>                  46%][Progress:===>                          10%] [Cov:================>                  47%][Progress:===>                          11%] [Cov:================>                  47%][Progress:===>                          11%] [Cov:================>                  47%][Progress:===>                          11%] [Cov:================>                  48%][Progress:===>                          12%] [Cov:================>                  48%][Progress:===>                          12%] [Cov:================>                  48%][Progress:===>                          13%] [Cov:================>                  48%][Progress:====>                         14%] [Cov:================>                  48%][Progress:====>                         14%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        19%] [Cov:=================>                 50%][Progress:=====>                        19%] [Cov:=================>                 50%][Progress:=====>                        19%] [Cov:=================>                 50%][Progress:=====>                        19%] [Cov:=================>                 50%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       20%] [Cov:===================>               55%][Progress:======>                       23%] [Cov:===================>               55%][Progress:======>                       23%] [Cov:===================>               55%][Progress:======>                       23%] [Cov:===================>               55%][Progress:=======>                      24%] [Cov:===================>               55%][Progress:=======>                      24%] [Cov:===================>               55%][Progress:=======>                      24%] [Cov:===================>               55%][Progress:=======>                      24%] [Cov:===================>               55%][Progress:=======>                      24%] [Cov:===================>               55%][Progress:=======>                      24%] [Cov:===================>               55%][Progress:=======>                      25%] [Cov:===================>               55%][Progress:=======>                      25%] [Cov:===================>               55%][Progress:=======>                      25%] [Cov:===================>               55%][Progress:=======>                      25%] [Cov:===================>               55%][Progress:=======>                      25%] [Cov:===================>               55%][Progress:=======>                      26%] [Cov:===================>               55%][Progress:=======>                      26%] [Cov:===================>               55%][Progress:=======>                      26%] [Cov:===================>               55%][Progress:=======>                      26%] [Cov:===================>               55%][Progress:========>                     27%] [Cov:===================>               55%][Progress:========>                     27%] [Cov:===================>               55%][Progress:========>                     27%] [Cov:===================>               55%][Progress:========>                     27%] [Cov:===================>               55%][Progress:========>                     27%] [Cov:===================>               55%][Progress:========>                     28%] [Cov:===================>               55%][Progress:========>                     28%] [Cov:===================>               55%][Progress:========>                     28%] [Cov:===================>               55%][Progress:========>                     29%] [Cov:===================>               55%][Progress:========>                     29%] [Cov:===================>               55%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:=========>                    33%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   34%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:============>                 43%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                44%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:================>             56%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            57%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            58%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:=================>            59%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           60%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           61%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           62%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:==================>           63%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:===================>               57%][Progress:===================>          65%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:===================>          66%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         67%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         68%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:====================>         69%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        70%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:===================>               57%][Progress:=====================>        71%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:====================>              58%][Progress:=====================>        72%] [Cov:====================>              58%][Progress:=====================>        72%] [Cov:====================>              58%][Progress:=====================>        72%] [Cov:====================>              58%][Progress:=====================>        72%] [Cov:====================>              58%][Progress:=====================>        72%] [Cov:====================>              58%][Progress:=====================>        72%] [Cov:====================>              58%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:=====================>        73%] [Cov:====================>              58%][Progress:======================>       74%] [Cov:====================>              58%][Progress:======================>       74%] [Cov:====================>              58%][Progress:======================>       74%] [Cov:====================>              58%][Progress:======================>       74%] [Cov:====================>              58%][Progress:======================>       74%] [Cov:====================>              58%][Progress:======================>       74%] [Cov:====================>              58%][Progress:======================>       74%] [Cov:====================>              58%][Progress:======================>       74%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       75%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:====================>              58%][Progress:======================>       76%] [Cov:====================>              58%][Progress:=======================>      77%] [Cov:====================>              58%][Progress:=======================>      77%] [Cov:====================>              58%][Progress:=======================>      77%] [Cov:====================>              58%][Progress:=======================>      77%] [Cov:====================>              58%][Progress:=======================>      77%] [Cov:====================>              58%][Progress:=======================>      77%] [Cov:====================>              58%][Progress:=======================>      77%] [Cov:====================>              58%][Progress:=======================>      78%] [Cov:====================>              58%][Progress:=======================>      78%] [Cov:====================>              58%][Progress:=======================>      78%] [Cov:====================>              58%][Progress:=======================>      78%] [Cov:====================>              58%][Progress:=======================>      78%] [Cov:====================>              58%][Progress:=======================>      78%] [Cov:====================>              58%][Progress:=======================>      79%] [Cov:====================>              58%][Progress:=======================>      79%] [Cov:====================>              58%][Progress:=======================>      79%] [Cov:====================>              58%][Progress:=======================>      79%] [Cov:====================>              58%][Progress:=======================>      79%] [Cov:====================>              58%][Progress:=======================>      79%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     80%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:========================>     81%] [Cov:====================>              58%][Progress:========================>     82%] [Cov:====================>              58%][Progress:========================>     82%] [Cov:====================>              58%][Progress:========================>     82%] [Cov:====================>              58%][Progress:========================>     82%] [Cov:====================>              58%][Progress:========================>     82%] [Cov:====================>              58%][Progress:========================>     82%] [Cov:====================>              58%][Progress:========================>     82%] [Cov:====================>              58%][Progress:========================>     82%] [Cov:====================>              58%][Progress:========================>     83%] [Cov:====================>              58%][Progress:========================>     83%] [Cov:====================>              58%][Progress:========================>     83%] [Cov:====================>              58%][Progress:========================>     83%] [Cov:====================>              58%][Progress:========================>     83%] [Cov:====================>              58%][Progress:========================>     83%] [Cov:====================>              58%][Progress:========================>     83%] [Cov:====================>              58%][Progress:=========================>    84%] [Cov:====================>              58%][Progress:=========================>    84%] [Cov:====================>              58%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    85%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:=========================>    86%] [Cov:=====================>             60%][Progress:==========================>   87%] [Cov:=====================>             60%][Progress:==========================>   87%] [Cov:=====================>             60%][Progress:==========================>   87%] [Cov:=====================>             60%][Progress:==========================>   87%] [Cov:=====================>             60%][Progress:==========================>   87%] [Cov:=====================>             60%][Progress:==========================>   87%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   88%] [Cov:=====================>             60%][Progress:==========================>   89%] [Cov:=====================>             60%][Progress:==========================>   89%] [Cov:=====================>             60%][Progress:==========================>   89%] [Cov:=====================>             60%][Progress:==========================>   89%] [Cov:=====================>             60%][Progress:==========================>   89%] [Cov:=====================>             60%][Progress:==========================>   89%] [Cov:=====================>             60%][Progress:==========================>   89%] [Cov:=====================>             60%][Progress:===========================>  90%] [Cov:=====================>             60%][Progress:===========================>  90%] [Cov:=====================>             60%][Progress:===========================>  90%] [Cov:=====================>             60%][Progress:===========================>  90%] [Cov:=====================>             60%][Progress:===========================>  90%] [Cov:=====================>             60%][Progress:===========================>  90%] [Cov:=====================>             60%][Progress:===========================>  91%] [Cov:=====================>             60%][Progress:===========================>  91%] [Cov:=====================>             60%][Progress:===========================>  91%] [Cov:=====================>             60%][Progress:===========================>  91%] [Cov:=====================>             60%][Progress:===========================>  92%] [Cov:=====================>             60%][Progress:===========================>  92%] [Cov:=====================>             60%][Progress:===========================>  92%] [Cov:=====================>             60%][Progress:===========================>  92%] [Cov:=====================>             60%][Progress:===========================>  92%] [Cov:=====================>             60%][Progress:===========================>  92%] [Cov:=====================>             60%][Progress:===========================>  92%] [Cov:=====================>             60%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:===========================>  93%] [Cov:=====================>             60%][Progress:============================> 94%] [Cov:=====================>             60%][Progress:============================> 94%] [Cov:=====================>             60%][Progress:============================> 94%] [Cov:=====================>             60%][Progress:============================> 94%] [Cov:=====================>             60%][Progress:============================> 94%] [Cov:=====================>             60%][Progress:============================> 94%] [Cov:=====================>             60%][Progress:============================> 94%] [Cov:=====================>             60%][Progress:============================> 94%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 95%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:============================> 96%] [Cov:=====================>             60%][Progress:=============================>97%] [Cov:=====================>             60%][Progress:=============================>97%] [Cov:=====================>             60%][Progress:=============================>97%] [Cov:=====================>             60%][Progress:=============================>97%] [Cov:=====================>             60%][Progress:=============================>97%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>98%] [Cov:=====================>             60%][Progress:=============================>99%] [Cov:=====================>             60%][Progress:=============================>99%] [Cov:=====================>             60%][Progress:=============================>99%] [Cov:=====================>             60%][Progress:=============================>99%] [Cov:=====================>             60%][Progress:=============================>99%] [Cov:=====================>             60%][Progress:=============================>99%] [Cov:=====================>             60%][Progress:=============================>99%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%][Progress:==============================100%] [Cov:=====================>             60%]
* Search finished after 201s and 563 generations, 158429 statements, best individual has fitness: 388.0
* Generated before the refinement 70 tests with total length 211
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$ConnectionListener(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$ConnectionListener
statement code is: Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.close()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.run()
test data is: Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String username = scanner.nextLine();
        System.out.print("Enter your password: ");
        char[] password = scanner.nextLine().toCharArray();
        if (username.equals("john") && Arrays.equals(password, "12345".toCharArray())) {
            System.out.println("Welcome, John!");
        } else if (username.equals("jane") && Arrays.equals(password, "abcde".toCharArray())) {
            System.out.println("Welcome, Jane!");
        } else {
            System.out.println("Invalid credentials.");
        }
    }
}
statement is: Scanner scanner = new Scanner(System.in), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String username = scanner.nextLine(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.nextLine() target is: scanner method is: nextLine()
statement is: System.out.print("Enter your password: "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.print("Enter your password: ") target is: System.out method is: print(java.lang.String)
statement is: char[] password = scanner.nextLine().toCharArray(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.nextLine().toCharArray() target is: scanner.nextLine() method is: toCharArray()
statement is: if (username.equals("john") && Arrays.equals(password, "12345".toCharArray())) {
    System.out.println("Welcome, John!");
} else if (username.equals("jane") && Arrays.equals(password, "abcde".toCharArray())) {
    System.out.println("Welcome, Jane!");
} else {
    System.out.println("Invalid credentials.");
}, class spoon.support.reflect.code.CtIfImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getLog_fp()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.File
statement code is: File log_fp = login.getLog_fp()
test data is: Login login = new Login();
login.getLog_fp();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.getLog_fp("johndoe@example.com", "qwerty1234567890");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.getLog_fp("johndoe@example.com", "qwerty1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getLog_fp("johndoe@example.com", "qwerty1234567890") target is: login method is: getLog_fp(java.lang.String,java.lang.String)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setOut(Ljava/io/PrintWriter;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setOut((PrintWriter) null)
test data is: Login login = new Login();
login.setOut((PrintWriter) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.setOut(new PrintWriter(""));
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setOut(new PrintWriter("")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setOut(new PrintWriter("")) target is: login method is: setOut(PrintWriter)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setOut(Ljava/io/PrintWriter;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Login login = new Login();
PrintWriter printWriter = null;
login.setOut(printWriter);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getAuth_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_num = login.getAuth_num()
test data is: Login login = new Login();
login.getAuth_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int auth_num = 1234567890;
        String username = "johndoe";
        String password = "password123";
        String userType = "admin";
    }
}
statement is: int auth_num = 1234567890, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String userType = "admin", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1234567890
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: String string = "admin"
TestCase is: int _int = 1234567890;
String string = "johndoe";
String string = "password123";
String string = "admin";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getServer_fd()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] server_fd = login.getServer_fd()
test data is: Login login = new Login();
login.getServer_fd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setUsername("John");
        login.setPassword("password123");
        login.getServer_fd();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("John"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("John") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.getServer_fd(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getServer_fd() target is: login method is: getServer_fd()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getServer_fd()[I
TestCase is: Login login = new Login();
login.getServer_fd();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getByName(Ljava/lang/String;)Ljava/net/InetAddress; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.net.Inet4Address
statement code is: Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf")
statement is: check_ip(Ljava/net/InetAddress;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean check_ip = login.check_ip(arg0)
test data is: Login login = new Login();
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        Inet4Address byName = ((Inet4Address) (MockInetAddress.getByName("conf/subnet_athena.conf")));
        login.check_ip(byName);
        // Improved test data
        String ipAddress = "192.168.0.1";// more descriptive example of an IP address

        int subnetMask = 24;// more descriptive example of a subnet mask

        Inet4Address byName = ((Inet4Address) (MockInetAddress.getByName("conf/subnet_athena.conf")));
        login.check_ip(byName);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Inet4Address byName = ((Inet4Address) (MockInetAddress.getByName("conf/subnet_athena.conf"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Inet4Address) (MockInetAddress.getByName("conf/subnet_athena.conf"))) target is: MockInetAddress method is: getByName(java.lang.String)
Matched Method is: getByName(Ljava/lang/String;)Ljava/net/InetAddress;
statement is: login.check_ip(byName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_ip(byName) target is: login method is: check_ip(Inet4Address)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: check_ip(Ljava/net/InetAddress;)Z
statement is: // Improved test data
String ipAddress = "192.168.0.1"// more descriptive example of an IP address
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int subnetMask = 24// more descriptive example of a subnet mask
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Inet4Address byName = ((Inet4Address) (MockInetAddress.getByName("conf/subnet_athena.conf"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Inet4Address) (MockInetAddress.getByName("conf/subnet_athena.conf"))) target is: MockInetAddress method is: getByName(java.lang.String)
Matched Method is: getByName(Ljava/lang/String;)Ljava/net/InetAddress;
statement is: login.check_ip(byName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_ip(byName) target is: login method is: check_ip(Inet4Address)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: check_ip(Ljava/net/InetAddress;)Z
* this is vulnerable: String string = "192.168.0.1"
* this is vulnerable: int _int = 24
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
Inet4Address byName = (Inet4Address)MockInetAddress.getByName(string);
login.check_ip(byName);
String string = "192.168.0.1";
int _int = 24;
String string = "conf/subnet_athena.conf";
Inet4Address byName = (Inet4Address)MockInetAddress.getByName(string);
login.check_ip(byName);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: check_ipmask(ILjava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_ipmask = login.check_ipmask(10, "conf/subnet_athena.conf")
test data is: Login login = new Login();
login.check_ipmask(10, "conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.check_ipmask(32, "conf/subnets/Athena.conf");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.check_ipmask(32, "conf/subnets/Athena.conf"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_ipmask(32, "conf/subnets/Athena.conf") target is: login method is: check_ipmask(int,java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: check_ipmask(ILjava/lang/String;)I
TestCase is: Login login = new Login();
int _int = 32;
String string = "conf/subnets/Athena.conf";
login.check_ipmask(_int, string);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.login.parse.FromClient()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromClient
statement code is: FromClient fromClient = new FromClient()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: logUnknownPackets(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.logUnknownPackets(arg0)
test data is: MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
Login.logUnknownPackets(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("192.168.1.1", 8080);
        FromClient fromClient = new FromClient("username", "password");
        Socket_data socket_data = new Socket_data(mockSocket, fromClient);
        Login.logUnknownPackets(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket("192.168.1.1", 8080), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromClient fromClient = new FromClient("username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromClient), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V
statement is: Login.logUnknownPackets(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.logUnknownPackets(socket_data) target is: Login method is: logUnknownPackets(Socket_data)
Matched Method is: logUnknownPackets(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
Login.logUnknownPackets(socket_data);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAuth_max(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setAuth_max((-1432))
test data is: Login login = new Login();
login.setAuth_max((-1432));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setAuth_max(50);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuth_max(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuth_max(50) target is: login method is: setAuth_max(int)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setAuth_max(I)V
TestCase is: Login login = new Login();
int _int = 50;
login.setAuth_max(_int);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getOut()Ljava/io/PrintWriter; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.PrintWriter
statement code is: PrintWriter out = login.getOut()
test data is: Login login = new Login();
login.getOut();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login("john.doe@example.com", "password123");
        login.getOut();
    }
}
statement is: Login login = new Login("john.doe@example.com", "password123"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.getOut(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getOut() target is: login method is: getOut()
statement is: getPASSWORDENC()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int pASSWORDENC = Login.getPASSWORDENC()
test data is: Login.getPASSWORDENC();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for Login.getPASSWORDENC() method
        String username = "johndoe";
        String password = "password123";
        String encryptedPassword = "6c59788f03a43afd18e6b5dd7987adbf";
    }
}
statement is: // Improved test data for Login.getPASSWORDENC() method
String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String encryptedPassword = "6c59788f03a43afd18e6b5dd7987adbf", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: String string = "6c59788f03a43afd18e6b5dd7987adbf"
TestCase is: String string = "johndoe";
String string = "password123";
String string = "6c59788f03a43afd18e6b5dd7987adbf";

statement is: version(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.version((Socket_data) null)
test data is: Login.version((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.version("1.0");// The version number of the application. }}

    }
}
statement is: Login.version("1.0")// The version number of the application. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.version("1.0")// The version number of the application. }}
 target is: Login method is: version(java.lang.String)
Matched Method is: version(Lorg/javathena/core/data/Socket_data;)V
TestCase is: String string = "1.0";
Login.version((Socket_data) string);

statement is: display_title()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.display_title()
test data is: Login.display_title();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.display_title("johndoe", "user001@email.com");
    }
}
statement is: Login.display_title("johndoe", "user001@email.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.display_title("johndoe", "user001@email.com") target is: Login method is: display_title(java.lang.String,java.lang.String)
statement is: getDbManagemtType()Lorg/javathena/data/IDBManagementLogin; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.javathena.data.IDBManagementLogin
statement code is: IDBManagementLogin dbManagemtType = Login.getDbManagemtType()
test data is: Login.getDbManagemtType();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before
        int id = 1;
        String username = "testuser";
        // After (improved)
        int id = 1234567890;
        String username = "johndoe123";
    }
}
statement is: // Before
int id = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "testuser", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // After (improved)
int id = 1234567890, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "johndoe123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1
* this is vulnerable: String string = "testuser"
* this is vulnerable: int _int = 1234567890
* this is vulnerable: String string = "johndoe123"
TestCase is: int _int = 1;
String string = "testuser";
int _int = 1234567890;
String string = "johndoe123";

statement is: setPASSWORDENC(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.setPASSWORDENC(10)
test data is: Login.setPASSWORDENC(10);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login.setPasswordEnc(10);
    }
}
statement is: // Improved test data
Login.setPasswordEnc(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
Login.setPasswordEnc(10) target is: Login method is: setPasswordEnc(int)
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getAuth_max()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_max = login.getAuth_max()
test data is: Login login = new Login();
login.getAuth_max();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.getAuthMax();// Use a descriptive method name that clearly describes the purpose of the method }}

    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.getAuthMax()// Use a descriptive method name that clearly describes the purpose of the method }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuthMax()// Use a descriptive method name that clearly describes the purpose of the method }}
 target is: login method is: getAuthMax()
TestCase is: Login login = new Login();

statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data((Socket) null)
statement is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] md5Data = Login.getMd5Data(arg0)
statement is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] md5Data = Login.getMd5Data(arg0)
test data is: Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Socket_data socket_data = new Socket_data("localhost", 8080, "admin", "password");
        Login.getMd5Data(socket_data);
        Login.getMd5Data(socket_data);
    }
}
statement is: Socket_data socket_data = new Socket_data("localhost", 8080, "admin", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.getMd5Data(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.getMd5Data(socket_data) target is: Login method is: getMd5Data(Socket_data)
Matched Method is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.getMd5Data(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.getMd5Data(socket_data) target is: Login method is: getMd5Data(Socket_data)
Matched Method is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
Login.getMd5Data(socket_data);
Socket_data socket_data = null;
Login.getMd5Data(socket_data);

statement is: login_log(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.login_log("outeo!r-class")
test data is: Login.login_log("outeo!r-class");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.login_log("username@email.com");
    }
}
statement is: Login.login_log("username@email.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.login_log("username@email.com") target is: Login method is: login_log(java.lang.String)
Matched Method is: login_log(Ljava/lang/String;)V
TestCase is: String string = "username@email.com";
Login.login_log(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: mmo_auth_initXML()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initXML = Login.mmo_auth_initXML()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
        FileSystemHandling.createFolder(evoSuiteFile);
        Login.mmo_auth_initXML();
        // Added test data to make the code more descriptive and representative of the situation being tested
        evoSuiteFile = new EvoSuiteFile("save/account2.xml");
        FileSystemHandling.createFolder(evoSuiteFile);
        Login.mmo_auth_initXML();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.mmo_auth_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initXML() target is: Login method is: mmo_auth_initXML()
Matched Method is: mmo_auth_initXML()I
statement is: // Added test data to make the code more descriptive and representative of the situation being tested
evoSuiteFile = new EvoSuiteFile("save/account2.xml"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.mmo_auth_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initXML() target is: Login method is: mmo_auth_initXML()
Matched Method is: mmo_auth_initXML()I
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        // Define variables to represent the different possible inputs and expected outputs
        String username = "johndoe";
        String password = "password123";
        Login login = new Login();
        login.mmo_auth_initTXT(username, password);
    }
}
statement is: // Improved test data for the above code snippet
// Define variables to represent the different possible inputs and expected outputs
String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.mmo_auth_initTXT(username, password), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_initTXT(username, password) target is: login method is: mmo_auth_initTXT(java.lang.String,java.lang.String)
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
TestCase is: String string = "johndoe";
String string = "password123";
Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '*')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '*');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for Login class
        // User credentials
        String username = "johndoe";
        String password = "password123";
        // User account information
        int userId = 123456;
        String userName = "John Doe";
        String emailAddress = "john.doe@example.com";
        // Login information
        boolean success = true;
        String errorMessage = "";
    }
}
statement is: // Improved test data for Login class
// User credentials
String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // User account information
int userId = 123456, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String userName = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String emailAddress = "john.doe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Login information
boolean success = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String errorMessage = "", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: int _int = 123456
* this is vulnerable: String string = "John Doe"
* this is vulnerable: String string = "john.doe@example.com"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: String string = ""
TestCase is: String string = "johndoe";
String string = "password123";
int _int = 123456;
String string = "John Doe";
String string = "john.doe@example.com";
boolean _boolean = true;
String string = "";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A');
Login.mmo_auth_syncTXT();
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account\'s gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A');
        login.mmo_auth_syncTXT();
        login.do_initTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account\'s gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account\'s gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_syncTXT() target is: login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
TestCase is: Login login = new Login();
String string = "+y}p";
String string = "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)";
String string = "+y}p";
char _char = 'A';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
login.do_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
Login.mmo_auth_syncTXT();
Login login = new Login();
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet above
        Login login = new Login();
        UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
        login.mmo_auth_syncTXT();
        // Changing the primitive values and Strings to more illustrative examples
        Login login = new Login();
        login.do_initTXT("1234567890", "password", "johndoe@example.com");
        UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
        login.mmo_auth_syncTXT();
    }
}
statement is: // Improved test data for the code snippet above
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_syncTXT() target is: login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: // Changing the primitive values and Strings to more illustrative examples
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT("1234567890", "password", "johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT("1234567890", "password", "johndoe@example.com") target is: login method is: do_initTXT(java.lang.String,java.lang.String,java.lang.String)
statement is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_syncTXT() target is: login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = 'H';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login login = new Login();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = 'H';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("conf/subnet_athena.conf", (String) null, "- with no remote administration.", 'S')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", (String) null, "- with no remote administration.", 'S');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        UserManagement.addUserTXT("conf/subnet_athena.conf", "admin", "- with remote administration.", '-');
        Login.mmo_auth_syncTXT();
        Login.mmo_auth_initTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addUserTXT("conf/subnet_athena.conf", "admin", "- with remote administration.", '-'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("conf/subnet_athena.conf", "admin", "- with remote administration.", '-') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
String string = "admin";
String string = "- with remote administration.";
char _char = '-';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

statement is: org.evosuite.testcase.statements.ArrayStatement@8e89f9b5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[1]
statement is: showTab([B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.showTab(arg0)
test data is: byte[] byteArray = new byte[1];
Login.showTab(byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, -2, 3, ((byte) (0xff)), 'a', 'é' };
        Login.showTab(byteArray);
    }
}
statement is: byte[] byteArray = new byte[]{ 1, -2, 3, ((byte) (0xff)), 'a', 'é' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[1] isAssignment: false Array: new byte[]{ 1, -2, 3, ((byte) (0xff)), 'a', 'é' } Elements: [1, -2, 3, ((byte) (0xff)), 'a', 'é']
lengths: [1] []
statement is: Login.showTab(byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.showTab(byteArray) target is: Login method is: showTab(byte[])
Matched Method is: showTab([B)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: byte[] byteArray = null;
Login.showTab(byteArray);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: check_auth_sync()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_auth_sync = login.check_auth_sync()
test data is: Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        // Arrange
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("password123");
        login.setAuthSyncTXT("sync1234567890");
        // Act
        login.mmo_auth_syncTXT();
        boolean isSynced = login.check_auth_sync();
        // Assert
        assertTrue(isSynced);
    }
}
statement is: // Arrange
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.setAuthSyncTXT("sync1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuthSyncTXT("sync1234567890") target is: login method is: setAuthSyncTXT(java.lang.String)
statement is: // Act
login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Act
login.mmo_auth_syncTXT() target is: login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: boolean isSynced = login.check_auth_sync(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_auth_sync() target is: login method is: check_auth_sync()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: check_auth_sync()I
statement is: // Assert
assertTrue(isSynced), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Assert
assertTrue(isSynced) target is:  method is: assertTrue(boolean)
TestCase is: Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$ConnectionListener(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$ConnectionListener
statement code is: Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.run()
test data is: Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("password123");
        Login.ConnectionListener connectionListener = login.new ConnectionListener();
        connectionListener.onConnect(new ConnectionEvent(true, "Successfully connected to the server"));
    }
}
statement is: // Improved test data for the above code snippet
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: Login.ConnectionListener connectionListener = login.new ConnectionListener(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: connectionListener.onConnect(new ConnectionEvent(true, "Successfully connected to the server")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: connectionListener.onConnect(new ConnectionEvent(true, "Successfully connected to the server")) target is: connectionListener method is: onConnect(ConnectionEvent)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, (IParse) null)
statement is: parse_admin(ILorg/javathena/core/data/Socket_data;Lorg/javathena/login/Login;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_admin = arg2.parse_admin(50, arg1, arg2)
test data is: Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
login.parse_admin(50, socket_data, login);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        MockSocket mockSocket = new MockSocket();
        mockSocket.close();
        Socket_data socket_data = new Socket_data(mockSocket, ((IParse) (null)));
        login.parse_admin("Success", "Admin", socket_data, login);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.close() target is: mockSocket method is: close()
source statement: org.evosuite.runtime.mock.java.net.MockSocket()V callee: VariableReference: Statement 1, type org.evosuite.runtime.mock.java.net.MockSocketindex is: 1
Matched Method is: close()V
statement is: Socket_data socket_data = new Socket_data(mockSocket, ((IParse) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.parse_admin("Success", "Admin", socket_data, login), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_admin("Success", "Admin", socket_data, login) target is: login method is: parse_admin(java.lang.String,java.lang.String,Socket_data,Login)
TestCase is: Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("shutdown")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("shutdown");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        int userInput = 1234;// Instead of using a magic number, use a descriptive variable name that represents the input value.

        String shutdownCommand = "shutdown";// Instead of using a hardcoded string, use a descriptive variable name that represents the command being tested.

        login.parse_console(shutdownCommand);// Use the variable names for the userInput and shutdownCommand instead of hardcoding the values in the test method. }}

    }
}
statement is: // Improved test data for the code snippet
int userInput = 1234// Instead of using a magic number, use a descriptive variable name that represents the input value.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String shutdownCommand = "shutdown"// Instead of using a hardcoded string, use a descriptive variable name that represents the command being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.parse_console(shutdownCommand)// Use the variable names for the userInput and shutdownCommand instead of hardcoding the values in the test method. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console(shutdownCommand)// Use the variable names for the userInput and shutdownCommand instead of hardcoding the values in the test method. }}
 target is: login method is: parse_console(java.lang.String)
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "shutdown"
TestCase is: int _int = 1234;
String string = "shutdown";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("alive")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("alive");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("Alive and well, thanks for asking.");
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("Alive and well, thanks for asking."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("Alive and well, thanks for asking.") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "Alive and well, thanks for asking.";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("exit")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("exit");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Initialize the TXT file parser
        FileParser fp = new FileParser();
        fp.parseFile("login.txt");
    }

    public void parse_console(String command) {
        // Parse the command from the console
        if (command.equals("exit")) {
            System.out.println("Exiting the program.");
            return;
        } else if (command.equals("help")) {
            System.out.println("Available commands: exit, help");
        } else {
            System.out.println("Invalid command. Try again.");
        }
    }
}
statement is: // Initialize the TXT file parser
FileParser fp = new FileParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fp.parseFile("login.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fp.parseFile("login.txt") target is: fp method is: parseFile(java.lang.String)
statement is: // Parse the command from the console
if (command.equals("exit")) {
    System.out.println("Exiting the program.");
    return;
} else if (command.equals("help")) {
    System.out.println("Available commands: exit, help");
} else {
    System.out.println("Invalid command. Try again.");
}, class spoon.support.reflect.code.CtIfImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("quit")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("quit");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for a successful login attempt
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("username=johndoe, password=password123");
        // Test data for an unsuccessful login attempt
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("username=invaliduser, password=wrongpass");
    }
}
statement is: // Test data for a successful login attempt
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("username=johndoe, password=password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("username=johndoe, password=password123") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
statement is: // Test data for an unsuccessful login attempt
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 4
Matched Method is: do_initTXT()V
statement is: login.parse_console("username=invaliduser, password=wrongpass"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("username=invaliduser, password=wrongpass") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 4
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "username=johndoe, password=password123";
login.parse_console(string);
Login login = new Login();
login.do_initTXT();
String string = "username=invaliduser, password=wrongpass";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("end")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("end");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT("username", "password");
        login.parse_console("end");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT("username", "password"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT("username", "password") target is: login method is: do_initTXT(java.lang.String,java.lang.String)
statement is: login.parse_console("end"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("end") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
String string = "end";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("conf/subnet_athena.conf")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("conf/subnet_athena.conf");
        // Changed the value of "conf/subnet_athena.conf" to a more descriptive and representative String, such as "/path/to/configuration/file". }}
    }
}
statement is: // Improved test data:
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("conf/subnet_athena.conf"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("conf/subnet_athena.conf") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
statement is: // Changed the value of "conf/subnet_athena.conf" to a more descriptive and representative String, such as "/path/to/configuration/file". }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "conf/subnet_athena.conf";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("status")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("status");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initXML()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("help")
test data is: Login login = new Login();
login.do_initXML();
login.parse_console("help");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initXML();
        login.parse_console("--help");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initXML() target is: login method is: do_initXML()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initXML()V
statement is: login.parse_console("--help"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("--help") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initXML();
String string = "--help";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_deny(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf")
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(1)
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
        ConfigurationManagement.setAccess_denynum(1);
        login.do_initTXT();
        // Replace the primitive values and Strings with more descriptive examples
        int access_deny = 1234;
        String access_deny_string = "conf/subnet_athena.conf";
        login.do_initTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf") target is: ConfigurationManagement method is: setAccess_deny(java.lang.String)
Matched Method is: setAccess_deny(Ljava/lang/String;)V
statement is: ConfigurationManagement.setAccess_denynum(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(1) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: // Replace the primitive values and Strings with more descriptive examples
int access_deny = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String access_deny_string = "conf/subnet_athena.conf", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "conf/subnet_athena.conf"
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
ConfigurationManagement.setAccess_deny(string);
int _int = 1;
ConfigurationManagement.setAccess_denynum(_int);
login.do_initTXT();
int _int = 1234;
String string = "conf/subnet_athena.conf";
login.do_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("YES")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("YES");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for testing the yesNoOnOffToBoolean method
        // Inputs
        String input1 = "YES";
        String input2 = "NO";
        String input3 = "ON";
        String input4 = "OFF";
        // Expected outputs
        boolean expectedOutput1 = true;
        boolean expectedOutput2 = false;
        boolean expectedOutput3 = true;
        boolean expectedOutput4 = false;
    }
}
statement is: // Improved test data for testing the yesNoOnOffToBoolean method
// Inputs
String input1 = "YES", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String input2 = "NO", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String input3 = "ON", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String input4 = "OFF", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Expected outputs
boolean expectedOutput1 = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean expectedOutput2 = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean expectedOutput3 = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean expectedOutput4 = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "YES"
* this is vulnerable: String string = "NO"
* this is vulnerable: String string = "ON"
* this is vulnerable: String string = "OFF"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: boolean _boolean = false
* this is vulnerable: boolean _boolean = true
* this is vulnerable: boolean _boolean = false
TestCase is: String string = "YES";
String string = "NO";
String string = "ON";
String string = "OFF";
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = true;
boolean _boolean = false;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("conf/subnet_athena.conf")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for the "yesNoOnOffToBoolean" method
        Login login = new Login();
        login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
    }
}
statement is: // Test data for the "yesNoOnOffToBoolean" method
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("conf/subnet_athena.conf"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("conf/subnet_athena.conf") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
login.yesNoOnOffToBoolean(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("ON")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("ON");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the method "yesNoOnOffToBoolean" with more descriptive and representative values
        // Primitive values
        int intValue = 1;
        double doubleValue = 2.5;
        char charValue = 'A';
        String stringValue = "Hello World";
        // Boolean values
        boolean trueValue = true;
        boolean falseValue = false;
        // Strings with different cases
        String upperCase = "HELLO WORLD";
        String lowerCase = "hello world";
        String mixedCase = "HeLlO WoRlD";
    }
}
statement is: // Improved test data for the method "yesNoOnOffToBoolean" with more descriptive and representative values
// Primitive values
int intValue = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 2.5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'A', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "Hello World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Boolean values
boolean trueValue = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean falseValue = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Strings with different cases
String upperCase = "HELLO WORLD", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String lowerCase = "hello world", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String mixedCase = "HeLlO WoRlD", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1
* this is vulnerable: double _double = 2.5
* this is vulnerable: char _char = 'A'
* this is vulnerable: String string = "Hello World"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: boolean _boolean = false
* this is vulnerable: String string = "HELLO WORLD"
* this is vulnerable: String string = "hello world"
* this is vulnerable: String string = "HeLlO WoRlD"
TestCase is: int _int = 1;
double _double = 2.5;
char _char = 'A';
String string = "Hello World";
boolean _boolean = true;
boolean _boolean = false;
String string = "HELLO WORLD";
String string = "hello world";
String string = "HeLlO WoRlD";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("NO")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("NO");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.yesNoOnOffToBoolean("N");
        login.yesNoOnOffToBoolean("Y");
        login.yesNoOnOffToBoolean("ON");
        login.yesNoOnOffToBoolean("OFF");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("N"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("N") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: login.yesNoOnOffToBoolean("Y"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("Y") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: login.yesNoOnOffToBoolean("ON"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("ON") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: login.yesNoOnOffToBoolean("OFF"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("OFF") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: Login login = new Login();
String string = "N";
login.yesNoOnOffToBoolean(string);
String string = "Y";
login.yesNoOnOffToBoolean(string);
String string = "ON";
login.yesNoOnOffToBoolean(string);
String string = "OFF";
login.yesNoOnOffToBoolean(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("OFF")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("OFF");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        return true;
    }

    {
        return false;
    }

    {
        throw new IllegalArgumentException("Invalid input");
    }
}
statement is: return true, class spoon.support.reflect.code.CtReturnImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$End(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$End
statement code is: Login.End login_End = arg0.new End()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_End.run()
test data is: Login login = new Login();
Login.End login_End = login.new End();
login_End.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        Login.End login_End = login.new End();
        String expectedOutput = "The user has successfully logged in.";
        login_End.run(expectedOutput);
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.End login_End = login.new End(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String expectedOutput = "The user has successfully logged in.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login_End.run(expectedOutput), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_End.run(expectedOutput) target is: login_End method is: run(java.lang.String)
* this is vulnerable: String string = "The user has successfully logged in."
TestCase is: Login login = new Login();
String string = "The user has successfully logged in.";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.ArrayStatement@34a77106 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[0]
statement is: setServer_fd([I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setServer_fd(arg0)
statement is: getServer_fd()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] server_fd = login.getServer_fd()
test data is: Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
login.getServer_fd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        int[] intArray = new int[]{ 1, 2, 3, 4, 5 };
        login.setServer_fd(intArray);
        String[] stringArray = new String[]{ "apple", "banana", "orange" };
        login.setFruits(stringArray);
        char c = 'a';
        login.setCharacter(c);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int[] intArray = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[0] isAssignment: false Array: new int[]{ 1, 2, 3, 4, 5 } Elements: [1, 2, 3, 4, 5]
lengths: [0] []
statement is: login.setServer_fd(intArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setServer_fd(intArray) target is: login method is: setServer_fd(int[])
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setServer_fd([I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: String[] stringArray = new String[]{ "apple", "banana", "orange" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[0] isAssignment: false Array: new String[]{ "apple", "banana", "orange" } Elements: ["apple", "banana", "orange"]
lengths: [0] []
statement is: login.setFruits(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setFruits(stringArray) target is: login method is: setFruits(java.lang.String[])
statement is: char c = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.setCharacter(c), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setCharacter(c) target is: login method is: setCharacter(char)
* this is vulnerable: char _char = 'a'
TestCase is: Login login = new Login();
int[] intArray = null;
login.setServer_fd(intArray);
char _char = 'a';

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: login_log(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.login_log("conf/subnet_athena.conf")
test data is: Login login = new Login();
Login.login_log("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        // Set the config file path to a specific value that is relevant to the test
        String configFilePath = "conf/subnet_athena.conf";
        login.login_log(configFilePath);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Set the config file path to a specific value that is relevant to the test
String configFilePath = "conf/subnet_athena.conf", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.login_log(configFilePath), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.login_log(configFilePath) target is: login method is: login_log(java.lang.String)
Matched Method is: login_log(Ljava/lang/String;)V
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
Login.login_log(string);

statement is: mmo_auth_initXML()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initXML = Login.mmo_auth_initXML()
test data is: Login.mmo_auth_initXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Replace the primitive values with more descriptive examples
        int userId = 1234;
        String password = "password123";
        // Replace the Strings with more illustrative examples
        String username = "johndoe";
        String email = "john.doe@example.com";
        // Create a list of integers to represent multiple user IDs
        List<Integer> userIds = Arrays.asList(1234, 5678);
        // Create a map of Strings to represent multiple usernames and passwords
        Map<String, String> users = new HashMap<>();
        users.put("johndoe", "password123");
        users.put("janedoe", "password456");
    }
}
statement is: // Replace the primitive values with more descriptive examples
int userId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Replace the Strings with more illustrative examples
String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String email = "john.doe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Create a list of integers to represent multiple user IDs
List<Integer> userIds = Arrays.asList(1234, 5678), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList(1234, 5678) target is: Arrays method is: asList(int,int)
statement is: // Create a map of Strings to represent multiple usernames and passwords
Map<String, String> users = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: users.put("johndoe", "password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: users.put("johndoe", "password123") target is: users method is: put(java.lang.String,java.lang.String)
statement is: users.put("janedoe", "password456"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: users.put("janedoe", "password456") target is: users method is: put(java.lang.String,java.lang.String)
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "password123"
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "john.doe@example.com"
TestCase is: int _int = 1234;
String string = "password123";
String string = "johndoe";
String string = "john.doe@example.com";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addAccountIdCount()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.addAccountIdCount()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
UserManagement.addAccountIdCount();
Login.mmo_auth_syncTXT();
Login login = new Login();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login(ACCOUNT_ID, "username", "password");
        UserManagement.addAccountIdCount(login);
        Login.mmo_auth_syncTXT(login);
        Login login = new Login(ACCOUNT_ID2, "username2", "password2");
        Login.mmo_auth_initTXT(login);
    }
}
statement is: // Improved test data
Login login = new Login(ACCOUNT_ID, "username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addAccountIdCount(login), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addAccountIdCount(login) target is: UserManagement method is: addAccountIdCount(Login)
statement is: Login.mmo_auth_syncTXT(login), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT(login) target is: Login method is: mmo_auth_syncTXT(Login)
statement is: Login login = new Login(ACCOUNT_ID2, "username2", "password2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.mmo_auth_initTXT(login), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT(login) target is: Login method is: mmo_auth_initTXT(Login)
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("  But, you refuse ALL IP!", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't')
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
Login.mmo_auth_syncTXT();
UserManagement.addUserTXT("  But, you refuse ALL IP!", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't');
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        Login.mmo_auth_syncTXT();
        UserManagement.addUserTXT("192.168.0.1", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't');
        Login.mmo_auth_initTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: UserManagement.addUserTXT("192.168.0.1", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("192.168.0.1", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
TestCase is: Login login = new Login();
Login.mmo_auth_syncTXT();
String string = "192.168.0.1";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = 't';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: newInstance()Ljavolution/util/FastMap; type is: class org.evosuite.testcase.statements.MethodStatement return type javolution.util.FastMap<java.lang.Integer, org.javathena.core.data.Auth_data>
statement code is: FastMap<Integer, Auth_data> newInstance = FastMap.newInstance()
statement is: java.lang.Integer(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Integer
statement code is: Integer integer = new Integer((-344896131))
statement is: mock(class org.javathena.core.data.Auth_data) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
doReturn((Integer) null, (Integer) null).when(auth_data).getAccount_id();
doReturn((String) null).when(auth_data).getUserid()
statement is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data put = fastMap.put(arg0, arg1)
statement is: setAuth_dats(Ljavolution/util/FastMap;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.setAuth_dats(arg0)
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
test data is: Login login = new Login();
FastMap<Integer, Auth_data> newInstance = FastMap.newInstance();
Integer integer = new Integer((-344896131));
Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
doReturn((Integer) null, (Integer) null).when(auth_data).getAccount_id();
doReturn((String) null).when(auth_data).getUserid();
newInstance.put(integer, auth_data);
UserManagement.setAuth_dats(newInstance);
Login.mmo_auth_syncTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        FastMap<Integer, Auth_data> newInstance = FastMap.newInstance();
        Integer integer = new Integer(-344896131);
        Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
        doReturn("ABC123", "XYZ789").when(auth_data).getAccount_id();
        doReturn("johndoe@gmail.com", "janedoe@yahoo.com").when(auth_data).getUserid();
        newInstance.put(integer, auth_data);
        UserManagement.setAuth_dats(newInstance);
        Login.mmo_auth_syncTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FastMap<Integer, Auth_data> newInstance = FastMap.newInstance(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: FastMap.newInstance() target is: FastMap method is: newInstance()
Matched Method is: newInstance()Ljavolution/util/FastMap;
statement is: Integer integer = new Integer(-344896131), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(Auth_data.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Auth_data argument is: Auth_data.class
Matched Method is: mock(class org.javathena.core.data.Auth_data)
i 0 Parameters size() 0 Num of Method Parameters: 3
i 1 Parameters size() 0 Num of Method Parameters: 3
i 2 Parameters size() 0 Num of Method Parameters: 3
statement is: doReturn("ABC123", "XYZ789").when(auth_data).getAccount_id(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn("ABC123", "XYZ789").when(auth_data).getAccount_id() target is: doReturn("ABC123", "XYZ789").when(auth_data) method is: getAccount_id()
statement is: doReturn("johndoe@gmail.com", "janedoe@yahoo.com").when(auth_data).getUserid(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: doReturn("johndoe@gmail.com", "janedoe@yahoo.com").when(auth_data).getUserid() target is: doReturn("johndoe@gmail.com", "janedoe@yahoo.com").when(auth_data) method is: getUserid()
statement is: newInstance.put(integer, auth_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: newInstance.put(integer, auth_data) target is: newInstance method is: put(java.lang.Integer,Auth_data)
source statement: newInstance()Ljavolution/util/FastMap; callee: VariableReference: Statement 1, type javolution.util.FastMap<java.lang.Integer, org.javathena.core.data.Auth_data>index is: 1
Matched Method is: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
statement is: UserManagement.setAuth_dats(newInstance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.setAuth_dats(newInstance) target is: UserManagement method is: setAuth_dats(FastMap)
Matched Method is: setAuth_dats(Ljavolution/util/FastMap;)V
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
TestCase is: Login login = new Login();
FastMap<Integer, Auth_data> newInstance = FastMap.newInstance();
Integer integer = new Integer((-344896131));
Integer integer = null;
Integer integer = null;
String string = null;
Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
doReturn(integer, integer).when(auth_data).getAccount_id();
doReturn(string).when(auth_data).getUserid();
newInstance.put(integer, auth_data);
UserManagement.setAuth_dats(newInstance);
Login.mmo_auth_syncTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_syncXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncXML()
test data is: Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        // Integer values:
        int numberOfUsers = 10;
        int numberOfAdmins = 2;
        // String values:
        String userName = "john";
        String adminName = "admin";
        String password = "password";
        // Boolean values:
        boolean isAdmin = true;
    }
}
statement is: // Improved test data:
// Integer values:
int numberOfUsers = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int numberOfAdmins = 2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // String values:
String userName = "john", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String adminName = "admin", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Boolean values:
boolean isAdmin = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: int _int = 2
* this is vulnerable: String string = "john"
* this is vulnerable: String string = "admin"
* this is vulnerable: String string = "password"
* this is vulnerable: boolean _boolean = true
TestCase is: int _int = 10;
int _int = 2;
String string = "john";
String string = "admin";
String string = "password";
boolean _boolean = true;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncXML()
test data is: Login login = new Login();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String username = "johndoe";
        String password = "password123";
    }
}
statement is: String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
TestCase is: String string = "johndoe";
String string = "password123";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: check_auth_sync()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_auth_sync = login.check_auth_sync()
test data is: Login login = new Login();
login.check_auth_sync();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.check_auth_sync(new User("john.doe@example.com", "qwerty"));
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.check_auth_sync(new User("john.doe@example.com", "qwerty")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_auth_sync(new User("john.doe@example.com", "qwerty")) target is: login method is: check_auth_sync(User)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_final()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_final()
test data is: Login login = new Login();
login.do_final();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for testing the do_final() method of the Login class
        Login login = new Login();
        login.do_final(10, "John Doe", 3567238);
    }
}
statement is: // Improved test data for testing the do_final() method of the Login class
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_final(10, "John Doe", 3567238), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_final(10, "John Doe", 3567238) target is: login method is: do_final(int,java.lang.String,int)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: do_final()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_final()
test data is: Login login = new Login();
login.do_initTXT();
login.do_final();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Initialize the TXT data
        return 10;// Using a non-zero value to demonstrate that the method is executed successfully.

    }

    // Finalize the TXT data
    // Demonstrating that the method is executed and has some effect on the program. }}
    {
    }
}
statement is: // Initialize the TXT data
return 10// Using a non-zero value to demonstrate that the method is executed successfully.
, class spoon.support.reflect.code.CtReturnImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
statement is: getOut()Ljava/io/PrintWriter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockPrintWriter
statement code is: MockPrintWriter out = (MockPrintWriter)login.getOut()
test data is: Login login = new Login();
login.save_config_in_log();
login.getOut();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] credentials = new String[]{ "1234567890", "qwerty" };
    }
}
statement is: String[] credentials = new String[]{ "1234567890", "qwerty" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.ALLOW_DENY type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.ALLOW_DENY
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.ALLOW_DENY;
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
        // Improved test data
        ACO aCO = ACO.DENY_ALLOW;
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.ALLOW_DENY, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.ALLOW_DENY is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
statement is: // Improved test data
ACO aCO = ACO.DENY_ALLOW, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.DENY_ALLOW is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(1)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(2364)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(2364);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        ConfigurationManagement.setAccess_denynum(98765);
        login.saveConfigurationToLog();
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_denynum(98765), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(98765) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: login.saveConfigurationToLog(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.saveConfigurationToLog() target is: login method is: saveConfigurationToLog()
TestCase is: Login login = new Login();
int _int = 98765;
ConfigurationManagement.setAccess_denynum(_int);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.MUTUAL_FAILTURE type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.MUTUAL_FAILTURE
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.MUTUAL_FAILTURE;
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
        // Improved test data
        Login login = new Login("john.doe", "password123");
        ACO aCO = ACO.MUTUAL_FAILTURE;
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.MUTUAL_FAILTURE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.MUTUAL_FAILTURE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
statement is: // Improved test data
Login login = new Login("john.doe", "password123"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.MUTUAL_FAILTURE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.MUTUAL_FAILTURE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.ALLOW_DENY type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.ALLOW_DENY
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(563)
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_allownum(563);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login authenticateUser = new Login();
        ACO accessOrder = ACO.ALLOW_FIRST;
        ConfigurationManagement.setAccess_allownum(20);
        ConfigurationManagement.setAccess_order(accessOrder);
        authenticateUser.saveConfigToLogFile();
    }
}
statement is: Login authenticateUser = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO accessOrder = ACO.ALLOW_FIRST, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.ALLOW_FIRST is ACO
statement is: ConfigurationManagement.setAccess_allownum(20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(20) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: ConfigurationManagement.setAccess_order(accessOrder), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(accessOrder) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: authenticateUser.saveConfigToLogFile(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: authenticateUser.saveConfigToLogFile() target is: authenticateUser method is: saveConfigToLogFile()
TestCase is: Login login = new Login();
int _int = 20;
ConfigurationManagement.setAccess_allownum(_int);
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.MUTUAL_FAILTURE type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.MUTUAL_FAILTURE
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(281)
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.MUTUAL_FAILTURE;
        ConfigurationManagement.setAccess_allownum(281);
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.MUTUAL_FAILTURE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.MUTUAL_FAILTURE is ACO
statement is: ConfigurationManagement.setAccess_allownum(281), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(281) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
int _int = 281;
ConfigurationManagement.setAccess_allownum(_int);
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@11c99729 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: login.auth_max = (-13)
statement is: getAuth_max()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_max = login.getAuth_max()
test data is: Login login = new Login();
login.auth_max = (-13);
login.getAuth_max();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        Login login = new Login();
        login.auth_max = Integer.MAX_VALUE - 10;// Setting auth_max to a large positive integer value to ensure that the method returns a non-zero result.

        login.getAuth_max();
    }
}
statement is: // Improved test data for the above code snippet
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.auth_max = Integer.MAX_VALUE - 10// Setting auth_max to a large positive integer value to ensure that the method returns a non-zero result.
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.getAuth_max(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_max() target is: login method is: getAuth_max()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getAuth_max()I
TestCase is: Login login = new Login();
login.getAuth_max();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@bbc34c57 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: login.auth_max = 2693
statement is: getAuth_max()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_max = login.getAuth_max()
test data is: Login login = new Login();
login.auth_max = 2693;
login.getAuth_max();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.auth_max = 100;// The maximum number of allowed logins for a user

        login.getAuth_max();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.auth_max = 100// The maximum number of allowed logins for a user
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.getAuth_max(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_max() target is: login method is: getAuth_max()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getAuth_max()I
TestCase is: Login login = new Login();
login.getAuth_max();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initXML()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: org.javathena.login.parse.FromChar()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromChar
statement code is: FromChar fromChar = new FromChar()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: codingKey(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.codingKey(arg0)
test data is: Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKey(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.do_initXML();
        MockSocket mockSocket = new MockSocket();
        mockSocket.close();
        FromChar fromChar = new FromChar();
        Socket_data socket_data = new Socket_data(mockSocket, fromChar);
        Login.codingKey(socket_data);
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initXML() target is: login method is: do_initXML()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initXML()V
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.close() target is: mockSocket method is: close()
source statement: org.evosuite.runtime.mock.java.net.MockSocket()V callee: VariableReference: Statement 2, type org.evosuite.runtime.mock.java.net.MockSocketindex is: 2
Matched Method is: close()V
statement is: FromChar fromChar = new FromChar(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromChar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.codingKey(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.codingKey(socket_data) target is: Login method is: codingKey(Socket_data)
Matched Method is: codingKey(Lorg/javathena/core/data/Socket_data;)V
TestCase is: Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKey(socket_data);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initXML()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: org.javathena.login.parse.FromChar()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromChar
statement code is: FromChar fromChar = new FromChar()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: codingKeyAdministration(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.codingKeyAdministration(arg0)
test data is: Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKeyAdministration(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        MockSocket mockSocket = new MockSocket("127.0.0.1", 80);
        FromChar fromChar = new FromChar('A');
        Socket_data socket_data = new Socket_data(mockSocket, fromChar);
        login.do_initXML();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket("127.0.0.1", 80), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FromChar fromChar = new FromChar('A'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromChar), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V
statement is: login.do_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initXML() target is: login method is: do_initXML()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initXML()V
TestCase is: Login login = new Login();
login.do_initXML();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_init()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int do_init = login.do_init()
test data is: Login login = new Login();
login.do_init();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_init();
        // Improved test data
        String username = "johndoe";
        String password = "password123";
        // Original test data
        // String username = "username";
        // String password = "password"; }}
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_init(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_init() target is: login method is: do_init()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_init()I
statement is: // Improved test data
String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Original test data, class spoon.support.reflect.code.CtCommentImpl
statement is: // String username = "username";, class spoon.support.reflect.code.CtCommentImpl
statement is: // String password = "password"; }}, class spoon.support.reflect.code.CtCommentImpl
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
TestCase is: Login login = new Login();
login.do_init();
String string = "johndoe";
String string = "password123";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initSQL()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.do_initSQL()
test data is: Login login = new Login();
Login.do_initSQL();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("password123");
        login.setEmail("johndoe@example.com");
        login.do_initSQL();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.setEmail("johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setEmail("johndoe@example.com") target is: login method is: setEmail(java.lang.String)
statement is: login.do_initSQL(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initSQL() target is: login method is: do_initSQL()
Matched Method is: do_initSQL()V
TestCase is: Login login = new Login();
Login.do_initSQL();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
Login login = new Login();
Login.mmo_auth_syncTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account-1234.txt");
        FileSystemHandling.createFolder(evoSuiteFile);
        Login login = new Login();
        login.mmo_auth_syncTXT();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account-1234.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.createFolder(evoSuiteFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.createFolder(evoSuiteFile) target is: FileSystemHandling method is: createFolder(EvoSuiteFile)
Matched Method is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_syncTXT() target is: login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
TestCase is: EvoSuiteFile evoSuiteFile = null;
FileSystemHandling.createFolder(evoSuiteFile);
Login login = new Login();
Login.mmo_auth_syncTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save")
statement is: org.evosuite.testcase.statements.ArrayStatement@c8796b1c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: do_initXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initXML()
test data is: Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
login.do_initXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
        byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7 };
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        login.do_initXML();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 1, 2, 3, 4, 5, 6, 7 } Elements: [1, 2, 3, 4, 5, 6, 7]
lengths: [7] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: login.do_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initXML() target is: login method is: do_initXML()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initXML()V
TestCase is: Login login = new Login();
EvoSuiteFile evoSuiteFile = null;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
login.do_initXML();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initXML()
statement is: org.javathena.login.Login$Timer_interval_check_auth_sync(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$Timer_interval_check_auth_sync
statement code is: Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = arg0.new Timer_interval_check_auth_sync()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_Timer_interval_check_auth_sync.run()
test data is: Login login = new Login();
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initXML();
        Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
        login_Timer_interval_check_auth_sync.run();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initXML() target is: login method is: do_initXML()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initXML()V
statement is: Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login_Timer_interval_check_auth_sync.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_Timer_interval_check_auth_sync.run() target is: login_Timer_interval_check_auth_sync method is: run()
TestCase is: Login login = new Login();
login.do_initXML();

* test suite isTestSuite: 129
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
Login login = new Login();
login.getAuth_num();
Test 4: 
Login login = new Login();
login.getServer_fd();
Test 5: 
Login login = new Login();
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);
Test 6: 
Login login = new Login();
login.check_ipmask(10, "conf/subnet_athena.conf");
Test 7: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
Login.logUnknownPackets(socket_data);
Test 8: 
Login login = new Login();
login.setAuth_max((-1432));
Test 9: 
Login login = new Login();
login.getOut();
Test 10: 
Login.getPASSWORDENC();
Test 11: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 12: 
Login.display_title();
Test 13: 
Login.getDbManagemtType();
Test 14: 
Login.setPASSWORDENC(10);
Test 15: 
Login login = new Login();
login.getAuth_max();
Test 16: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);
Test 17: 
Login.login_log("outeo!r-class");
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 19: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 20: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '*');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
Login login = new Login();
UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", (String) null, "- with no remote administration.", 'S');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);
Test 25: 
Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();
Test 26: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 27: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
login.parse_admin(50, socket_data, login);
Test 28: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 29: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 30: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 31: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 32: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 33: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
Test 34: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 35: 
Login login = new Login();
login.do_initXML();
login.parse_console("help");
Test 36: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();
Test 37: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 38: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 39: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 40: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Test 42: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 43: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
login.getServer_fd();
Test 44: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
Login.mmo_auth_initXML();
Test 46: 
Login login = new Login();
UserManagement.addAccountIdCount();
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
Login login = new Login();
Login.mmo_auth_syncTXT();
UserManagement.addUserTXT("  But, you refuse ALL IP!", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't');
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
Login login = new Login();
FastMap<Integer, Auth_data> newInstance = FastMap.newInstance();
Integer integer = new Integer((-344896131));
Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
doReturn((Integer) null, (Integer) null).when(auth_data).getAccount_id();
doReturn((String) null).when(auth_data).getUserid();
newInstance.put(integer, auth_data);
UserManagement.setAuth_dats(newInstance);
Login.mmo_auth_syncTXT();
Test 49: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();
Test 50: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 51: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 52: 
Login login = new Login();
login.do_final();
Test 53: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
Login login = new Login();
login.save_config_in_log();
login.getOut();
Test 55: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 56: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 57: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2364);
login.save_config_in_log();
Test 58: 
Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 59: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_allownum(563);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 60: 
Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 61: 
Login login = new Login();
login.auth_max = (-13);
login.getAuth_max();
Test 62: 
Login login = new Login();
login.auth_max = 2693;
login.getAuth_max();
Test 63: 
Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKey(socket_data);
Test 64: 
Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKeyAdministration(socket_data);
Test 65: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 66: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 67: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
Login login = new Login();
Login.mmo_auth_syncTXT();
Test 68: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
login.do_initXML();
Test 69: 
Login login = new Login();
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
Test 70: 
Login login = new Login();

Test 71: 
Login login = new Login();
login.setOut((PrintWriter) null);

Test 72: 

Test 73: 
Login login = new Login();
login.getServer_fd();

Test 74: 
Login login = new Login();
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);

Test 75: 
Login login = new Login();
login.check_ipmask(32, "conf/subnets/Athena.conf");

Test 76: 
Login.logUnknownPackets((Socket_data) null);

Test 77: 
Login login = new Login();
login.setAuth_max(50);

Test 78: 

Test 79: 
Login.version((Socket_data) "1.0");

Test 80: 

Test 81: 
Login login = new Login();

Test 82: 
Login.getMd5Data((Socket_data) null);
Socket_data socket_data = null;
Login.getMd5Data(socket_data);

Test 83: 
Login.login_log("username@email.com");

Test 84: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login.mmo_auth_initXML();
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login.mmo_auth_initXML();

Test 85: 
Login login = new Login();

Test 86: 

Test 87: 
Login login = new Login();
UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A');
Login.mmo_auth_syncTXT();
login.do_initTXT();

Test 88: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
Login.mmo_auth_syncTXT();
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
Login.mmo_auth_syncTXT();

Test 89: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "admin", "- with remote administration.", '-');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 90: 
Login.showTab((byte[]) null);

Test 91: 
Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();

Test 92: 
Login login = new Login();

Test 93: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);

Test 94: 

Test 95: 
Login login = new Login();
login.do_initTXT();
login.parse_console("Alive and well, thanks for asking.");

Test 96: 
Login login = new Login();
login.do_initTXT();
login.parse_console("username=johndoe, password=password123");
Login login = new Login();
login.do_initTXT();
login.parse_console("username=invaliduser, password=wrongpass");

Test 97: 
Login login = new Login();
login.parse_console("end");

Test 98: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

Test 99: 
Login login = new Login();
login.do_initXML();
login.parse_console("--help");

Test 100: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();
login.do_initTXT();

Test 101: 

Test 102: 
Login login = new Login();
login.yesNoOnOffToBoolean("conf/subnet_athena.conf");

Test 103: 

Test 104: 
Login login = new Login();
login.yesNoOnOffToBoolean("N");
String string = "Y";
login.yesNoOnOffToBoolean(string);
String string = "ON";
login.yesNoOnOffToBoolean(string);
String string = "OFF";
login.yesNoOnOffToBoolean(string);

Test 105: 
Login login = new Login();

Test 106: 
Login login = new Login();
login.setServer_fd((int[]) null);

Test 107: 
Login login = new Login();
Login.login_log("conf/subnet_athena.conf");

Test 108: 

Test 109: 
Login login = new Login();
Login.mmo_auth_syncTXT();
UserManagement.addUserTXT("192.168.0.1", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't');
Login.mmo_auth_initTXT();

Test 110: 
Login login = new Login();
FastMap<Integer, Auth_data> newInstance = FastMap.newInstance();
Integer integer = new Integer((-344896131));
Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
doReturn((Integer) null, (Integer) null).when(auth_data).getAccount_id();
doReturn((String) null).when(auth_data).getUserid();
newInstance.put(integer, auth_data);
UserManagement.setAuth_dats(newInstance);
Login.mmo_auth_syncTXT();

Test 111: 

Test 112: 

Test 113: 
Login login = new Login();

Test 114: 
Login login = new Login();

Test 115: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 116: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(98765);

Test 117: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 118: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(20);
ConfigurationManagement.setAccess_order((ACO) null);

Test 119: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 120: 
Login login = new Login();
login.getAuth_max();

Test 121: 
Login login = new Login();
login.getAuth_max();

Test 122: 
Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKey(socket_data);

Test 123: 
Login login = new Login();
login.do_initXML();

Test 124: 
Login login = new Login();
login.do_init();

Test 125: 
Login login = new Login();
Login.do_initSQL();

Test 126: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login login = new Login();
Login.mmo_auth_syncTXT();

Test 127: 
Login login = new Login();
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
login.do_initXML();

Test 128: 
Login login = new Login();
login.do_initXML();


* Generated after the refinement and before minimization 129 tests with total length 354
* test suite isTestSuite: 129
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
Login login = new Login();
login.getAuth_num();
Test 4: 
Login login = new Login();
login.getServer_fd();
Test 5: 
Login login = new Login();
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);
Test 6: 
Login login = new Login();
login.check_ipmask(10, "conf/subnet_athena.conf");
Test 7: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
Login.logUnknownPackets(socket_data);
Test 8: 
Login login = new Login();
login.setAuth_max((-1432));
Test 9: 
Login login = new Login();
login.getOut();
Test 10: 
Login.getPASSWORDENC();
Test 11: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 12: 
Login.display_title();
Test 13: 
Login.getDbManagemtType();
Test 14: 
Login.setPASSWORDENC(10);
Test 15: 
Login login = new Login();
login.getAuth_max();
Test 16: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);
Test 17: 
Login.login_log("outeo!r-class");
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 19: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 20: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '*');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
Login login = new Login();
UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", (String) null, "- with no remote administration.", 'S');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);
Test 25: 
Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();
Test 26: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 27: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
login.parse_admin(50, socket_data, login);
Test 28: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 29: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 30: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 31: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 32: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 33: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
Test 34: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 35: 
Login login = new Login();
login.do_initXML();
login.parse_console("help");
Test 36: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();
Test 37: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 38: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 39: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 40: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Test 42: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 43: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
login.getServer_fd();
Test 44: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
Login.mmo_auth_initXML();
Test 46: 
Login login = new Login();
UserManagement.addAccountIdCount();
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
Login login = new Login();
Login.mmo_auth_syncTXT();
UserManagement.addUserTXT("  But, you refuse ALL IP!", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't');
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
Login login = new Login();
FastMap<Integer, Auth_data> newInstance = FastMap.newInstance();
Integer integer = new Integer((-344896131));
Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
doReturn((Integer) null, (Integer) null).when(auth_data).getAccount_id();
doReturn((String) null).when(auth_data).getUserid();
newInstance.put(integer, auth_data);
UserManagement.setAuth_dats(newInstance);
Login.mmo_auth_syncTXT();
Test 49: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();
Test 50: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 51: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 52: 
Login login = new Login();
login.do_final();
Test 53: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
Login login = new Login();
login.save_config_in_log();
login.getOut();
Test 55: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 56: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 57: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2364);
login.save_config_in_log();
Test 58: 
Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 59: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_allownum(563);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 60: 
Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 61: 
Login login = new Login();
login.auth_max = (-13);
login.getAuth_max();
Test 62: 
Login login = new Login();
login.auth_max = 2693;
login.getAuth_max();
Test 63: 
Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKey(socket_data);
Test 64: 
Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKeyAdministration(socket_data);
Test 65: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 66: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 67: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
Login login = new Login();
Login.mmo_auth_syncTXT();
Test 68: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
login.do_initXML();
Test 69: 
Login login = new Login();
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
Test 70: 
Login login = new Login();

Test 71: 
Login login = new Login();
login.setOut((PrintWriter) null);

Test 72: 

Test 73: 
Login login = new Login();
login.getServer_fd();

Test 74: 
Login login = new Login();
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);

Test 75: 
Login login = new Login();
login.check_ipmask(32, "conf/subnets/Athena.conf");

Test 76: 
Login.logUnknownPackets((Socket_data) null);

Test 77: 
Login login = new Login();
login.setAuth_max(50);

Test 78: 

Test 79: 
Login.version((Socket_data) "1.0");

Test 80: 

Test 81: 
Login login = new Login();

Test 82: 
Login.getMd5Data((Socket_data) null);
Socket_data socket_data = null;
Login.getMd5Data(socket_data);

Test 83: 
Login.login_log("username@email.com");

Test 84: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login.mmo_auth_initXML();
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login.mmo_auth_initXML();

Test 85: 
Login login = new Login();

Test 86: 

Test 87: 
Login login = new Login();
UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A');
Login.mmo_auth_syncTXT();
login.do_initTXT();

Test 88: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
Login.mmo_auth_syncTXT();
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 'H');
Login.mmo_auth_syncTXT();

Test 89: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "admin", "- with remote administration.", '-');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 90: 
Login.showTab((byte[]) null);

Test 91: 
Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();

Test 92: 
Login login = new Login();

Test 93: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);

Test 94: 

Test 95: 
Login login = new Login();
login.do_initTXT();
login.parse_console("Alive and well, thanks for asking.");

Test 96: 
Login login = new Login();
login.do_initTXT();
login.parse_console("username=johndoe, password=password123");
Login login = new Login();
login.do_initTXT();
login.parse_console("username=invaliduser, password=wrongpass");

Test 97: 
Login login = new Login();
login.parse_console("end");

Test 98: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

Test 99: 
Login login = new Login();
login.do_initXML();
login.parse_console("--help");

Test 100: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();
login.do_initTXT();

Test 101: 

Test 102: 
Login login = new Login();
login.yesNoOnOffToBoolean("conf/subnet_athena.conf");

Test 103: 

Test 104: 
Login login = new Login();
login.yesNoOnOffToBoolean("N");
String string = "Y";
login.yesNoOnOffToBoolean(string);
String string = "ON";
login.yesNoOnOffToBoolean(string);
String string = "OFF";
login.yesNoOnOffToBoolean(string);

Test 105: 
Login login = new Login();

Test 106: 
Login login = new Login();
login.setServer_fd((int[]) null);

Test 107: 
Login login = new Login();
Login.login_log("conf/subnet_athena.conf");

Test 108: 

Test 109: 
Login login = new Login();
Login.mmo_auth_syncTXT();
UserManagement.addUserTXT("192.168.0.1", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't');
Login.mmo_auth_initTXT();

Test 110: 
Login login = new Login();
FastMap<Integer, Auth_data> newInstance = FastMap.newInstance();
Integer integer = new Integer((-344896131));
Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
doReturn((Integer) null, (Integer) null).when(auth_data).getAccount_id();
doReturn((String) null).when(auth_data).getUserid();
newInstance.put(integer, auth_data);
UserManagement.setAuth_dats(newInstance);
Login.mmo_auth_syncTXT();

Test 111: 

Test 112: 

Test 113: 
Login login = new Login();

Test 114: 
Login login = new Login();

Test 115: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 116: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(98765);

Test 117: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 118: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(20);
ConfigurationManagement.setAccess_order((ACO) null);

Test 119: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 120: 
Login login = new Login();
login.getAuth_max();

Test 121: 
Login login = new Login();
login.getAuth_max();

Test 122: 
Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKey(socket_data);

Test 123: 
Login login = new Login();
login.do_initXML();

Test 124: 
Login login = new Login();
login.do_init();

Test 125: 
Login login = new Login();
Login.do_initSQL();

Test 126: 
FileSystemHandling.createFolder((EvoSuiteFile) null);
Login login = new Login();
Login.mmo_auth_syncTXT();

Test 127: 
Login login = new Login();
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
login.do_initXML();

Test 128: 
Login login = new Login();
login.do_initXML();


* Minimizing test suite
* test suite isTestSuite: 69
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
Login login = new Login();
login.getAuth_num();
Test 4: 
Login login = new Login();
login.getServer_fd();
Test 5: 
Login login = new Login();
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);
Test 6: 
Login login = new Login();
login.check_ipmask(32, "conf/subnets/Athena.conf");
Test 7: 
Login.logUnknownPackets((Socket_data) null);
Test 8: 
Login login = new Login();
login.setAuth_max(50);
Test 9: 
Login login = new Login();
login.getOut();
Test 10: 
Login.getPASSWORDENC();
Test 11: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 12: 
Login.display_title();
Test 13: 
Login.getDbManagemtType();
Test 14: 
Login login = new Login();
login.do_initXML();
login.parse_console("help");
Test 15: 
Login.setPASSWORDENC(10);
Test 16: 
Login login = new Login();
login.getAuth_max();
Test 17: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);
Test 18: 
Login.login_log("username@email.com");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 20: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 21: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "admin", "- with remote administration.", '-');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
Login login = new Login();
UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Login login = new Login();
UserManagement.addAccountIdCount();
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", (String) null, "- with no remote administration.", 'S');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
Login login = new Login();
FastMap<Integer, Auth_data> newInstance = FastMap.newInstance();
Integer integer = new Integer((-344896131));
Auth_data auth_data = mock(Auth_data.class, new ViolatedAssumptionAnswer());
doReturn((Integer) null, (Integer) null).when(auth_data).getAccount_id();
doReturn((String) null).when(auth_data).getUserid();
newInstance.put(integer, auth_data);
UserManagement.setAuth_dats(newInstance);
Login.mmo_auth_syncTXT();
Test 26: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();
Test 27: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);
Test 28: 
Login login = new Login();
Login.mmo_auth_syncTXT();
login.check_auth_sync();
Test 29: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 30: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
login.parse_admin(50, socket_data, login);
Test 31: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
Test 32: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 33: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 34: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 35: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 36: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 37: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
Test 38: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2364);
login.save_config_in_log();
Test 39: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();
Test 40: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 41: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_allownum(563);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 42: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
Test 43: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 44: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("N");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 45: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 46: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 47: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Test 48: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 49: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
Login.mmo_auth_initXML();
Test 51: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 52: 
Login login = new Login();
Login.mmo_auth_syncTXT();
UserManagement.addUserTXT("  But, you refuse ALL IP!", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't');
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 54: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 55: 
Login login = new Login();
login.do_final();
Test 56: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 57: 
Login login = new Login();
login.save_config_in_log();
login.getOut();
Test 58: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 59: 
Login login = new Login();
login.auth_max = (-13);
login.getAuth_max();
Test 60: 
Login login = new Login();
login.auth_max = 2693;
login.getAuth_max();
Test 61: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
login.getServer_fd();
Test 62: 
Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKey(socket_data);
Test 63: 
Login login = new Login();
login.do_initXML();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKeyAdministration(socket_data);
Test 64: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 65: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 66: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.txt");
FileSystemHandling.createFolder(evoSuiteFile);
Login login = new Login();
Login.mmo_auth_syncTXT();
Test 67: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
login.do_initXML();
Test 68: 
Login login = new Login();
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 255
* Number of covered goals: 160
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 433
* Number of covered goals: 303
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 78
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 43
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 255
* Number of covered goals: 157
* Generated 69 tests with total length 201
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg0 = new Login();
Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
assertEquals(0, arg0.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginConnectionListener
* Compiling Tests
refined test name is: testAuthenticationMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.getLog_fp();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetLogFP
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.setOut((PrintWriter) null);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetAuthMaxWithInvalidCredentialsReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int auth_num = login.getAuth_num();
assertEquals(0, login.getAuth_max());
assertEquals(0, auth_num);


** It was a parseable test case! 
refined test name is: testUserAccessRestrictedResourceWhenNotAuthorized
* Compiling Tests
refined test name is: testUserDoesNotHaveEnoughAuthorizationLevels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int[] server_fd = login.getServer_fd();
assertNotNull(server_fd);
assertEquals(30, server_fd.length);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetServerFileDescriptorsLength
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
InetAddress arg0 = MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(arg0);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testCheckIpWithMockInetAddress
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int check_ipmask = login.check_ipmask(32, "conf/subnets/Athena.conf");
assertEquals(0, login.getAuth_max());
assertEquals(0, check_ipmask);


** It was a parseable test case! 
refined test name is: testCheckIpMaskValidIpAddressWithinSubnet
* Compiling Tests
refined test name is: testCheckIpMaskValidIpAddressInSubnetReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.logUnknownPackets((Socket_data) null);

** It was a parseable test case! 
refined test name is: testHandleUnknownPacketsWithNullData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.setAuth_max(50);
assertEquals(50, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetAuthMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.getOut();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetOut
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int pASSWORDENC = Login.getPASSWORDENC();
assertEquals(2, pASSWORDENC);


** It was a parseable test case! 
refined test name is: testGetPasswordEncReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}


** It was a parseable test case! 
refined test name is: testUndeclaredExceptionNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.display_title();

** It was a parseable test case! 
refined test name is: testGetTitle
* Compiling Tests
refined test name is: testGetTitleshouldReturnLoginTitle
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: IDBManagementLogin dbManagemtType = Login.getDbManagemtType();
assertNull(dbManagemtType);


** It was a parseable test case! 
refined test name is: testGetDbManagemtTypeWhenUserLoggedInReturnsNull
* Compiling Tests
refined test name is: testGetDbManagementTypeLoggedInUserReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initXML();
int parse_console = login.parse_console("help");
assertEquals(0, parse_console);


** It was a parseable test case! 
refined test name is: testParseConsoleHelpCommand
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.setPASSWORDENC(10);

** It was a parseable test case! 
refined test name is: testSetPasswordEncryptionStrength
* Compiling Tests
refined test name is: testSetPasswordEncryptionStrength
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int auth_max = login.getAuth_max();
assertEquals(0, auth_max);


** It was a parseable test case! 
refined test name is: testGetAuthMaxShouldReturnZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Socket_data arg0 = new Socket_data((Socket) null);
Login.getMd5Data(arg0);
byte[] md5Data = Login.getMd5Data(arg0);
assertEquals(1, arg0.getEof());
assertEquals(30, md5Data.length);


** It was a parseable test case! 
refined test name is: testGetMd5DataReturnsNonNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.login_log("username@email.com");

** It was a parseable test case! 
refined test name is: testLoginWithValidEmail
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(arg0);
int mmo_auth_initXML = Login.mmo_auth_initXML();
assertEquals(0, mmo_auth_initXML);


** It was a parseable test case! 
refined test name is: testCreateFolderWithExistingFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testParseConsoleShutdownCommand
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "admin", "- with remote administration.", '-');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testMmoAuthSyncTXTWithoutInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
UserManagement.addUserTXT("+y}p", "// Accounts file: here are saved all information about the accounts.\n// Structure: account ID, username, password, sex, email, level, state, unban time, expiration time, # of logins, last login time, last (accepted) login ip, repeated(register key, register value)\n// where:\n//   sex             : M or F for normal accounts, S for server accounts\n//   level           : this account's gm level\n//   state           : 0: account is ok, 1 to 256: error code of packet 0x006a + 1\n//   unban time      : 0: no ban, <other value>: banned until the date (unix timestamp)\n//   expiration time : 0: unlimited account, <other value>: account expires on the date (unix timestamp)", "+y}p", 'A');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testLoginInitializationthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", (String) null, "- with no remote administration.", 'S');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testInitializeLoginWithNoParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
refined test name is: testSyncFiles
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[1];
Login.showTab(arg0);
assertArrayEquals(new byte[] {(byte)0}, arg0);


** It was a parseable test case! 
refined test name is: testShowTabEmptyArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.mmo_auth_syncTXT();
int check_auth_sync = login.check_auth_sync();
assertEquals(0, check_auth_sync);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSyncWithValidCredentials
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg0 = new Login();
Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener();
login_ConnectionListener.run();
assertEquals(0, arg0.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginSuccessfully
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg2 = new Login();
MockSocket arg0 = new MockSocket();
arg0.close();
Socket_data arg1 = new Socket_data(arg0, (IParse) null);
arg2.parse_admin(50, arg1, arg2);
assertEquals(0, arg2.getAuth_max());


** It was a parseable test case! 
refined test name is: testParseAdminSetsAuthMaxToZeroForAdmin
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testMaxAuthenticationAttemptsIsZeroForSubnetAthena
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testLoginDoInitTXTAndParseConsoleExit
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testLoginInitAndParseQuitCommand
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testParseConsoleEndInputThrowsSystemExitException
* Compiling Tests
refined test name is: testLoginWithInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
int parse_console = login.parse_console("alive");
assertEquals(0, parse_console);


** It was a parseable test case! 
refined test name is: testParseConsoleForAliveString
* Compiling Tests
refined test name is: testParseConsoleReturnsZeroForValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
login.parse_console("status");
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginWithConsoleStatusShouldReturnZeroAuthMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginWithNoACOSucceeds
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(2364);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testAccessDenied
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testAuthenticationMaximumSetToOne
* Compiling Tests
refined test name is: testAuthenticationMaximumSetCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ACO arg0 = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(arg0);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSaveConfigurationInLogWithACOAllowDeny
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ACO arg0 = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_allownum(563);
ConfigurationManagement.setAccess_order(arg0);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSetAccessControlObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testUserAccessAllOrders
* Compiling Tests
refined test name is: testUserCanAccessAllOrders
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("YES");
assertEquals(0, login.getAuth_max());
assertTrue(yesNoOnOffToBoolean);


** It was a parseable test case! 
refined test name is: testYesNoOnOffToBooleanTrueAndAuthMaxZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("N");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}


** It was a parseable test case! 
refined test name is: testYesNoOnOffToBooleanInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("ON");
assertTrue(yesNoOnOffToBoolean);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testYesNoOnOffToBooleanAndGetAuthMax
* Compiling Tests
refined test name is: testYesNoOnOffToBooleanAndGetAuthMaxZero
[MASTER] 01:07:35.662 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
[MASTER] 01:07:37.448 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 59
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 2: 
Login login = new Login();
login.getAuth_num();
Test 3: 
Login login = new Login();
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);
Test 4: 
Login login = new Login();
login.check_ipmask(10, "conf/subnet_athena.conf");
Test 5: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
Login.logUnknownPackets(socket_data);
Test 6: 
Login login = new Login();
login.getOut();
Test 7: 
Login.getPASSWORDENC();
Test 8: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 9: 
Login.getDbManagemtType();
Test 10: 
Login.setPASSWORDENC(10);
Test 11: 
Login login = new Login();
login.getAuth_max();
Test 12: 
Login login = new Login();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
login.getLog_fp();
Login login = new Login();
Test 13: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);
Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 15: 
Login login = new Login();
Login.mmo_auth_initXML();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '*');
// Undeclared exception!
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
login.do_initTXT();
login.do_final();
Test 16: 
Login.mmo_auth_initTXT();
Test 17: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);
Test 18: 
Login login = new Login();
login.check_auth_sync();
Test 19: 
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 20: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 21: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
login.parse_admin(50, socket_data, login);
Test 22: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 23: 
Login login = new Login();
login.parse_console("alive");
Test 24: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 25: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 26: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 27: 
Login login = new Login();
login.parse_console("conf/subnet_athena.conf");
Test 28: 
Login login = new Login();
login.parse_console("status");
Test 29: 
Login login = new Login();
login.parse_console("help");
Test 30: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();
Test 31: 
Login login = new Login();
ConfigurationManagement.setAccess_allownum(2);
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.do_initTXT();
Test 32: 
Login login = new Login();
// Undeclared exception!
Login.mmo_auth_syncTXT();
login.check_auth_sync();
login.yesNoOnOffToBoolean("YES");
Test 33: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 34: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 35: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 36: 
Login login = new Login();
// Undeclared exception!
Login.mmo_auth_syncTXT();
login.check_auth_sync();
login.yesNoOnOffToBoolean("OFF");
Test 37: 
Login login = new Login();
Login.End login_End = login.new End();
// Undeclared exception!
login_End.run();
Test 38: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
login.getServer_fd();
Test 39: 
Login.login_log("outer-class");
Test 40: 
Login login = new Login();
byte[] byteArray = new byte[2];
byte _byte = (byte)60;
byteArray[0] = (byte)60;
byteArray[1] = (byte) (-124);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray);
Login login = new Login();
login.setAuth_max((-2605));
UserManagement.addAccountIdCount();
// Undeclared exception!
Login.mmo_auth_syncTXT();
Login login = new Login();
ConfigurationManagement.setAccess_allow("conf/subnet_athena.conf");
Login.mmo_auth_initTXT();
login.do_initTXT();
UserManagement.setAccountIdCount(_byte);
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
login_ConnectionListener.close();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
Test 41: 
Login login = new Login();
Login.display_title();
ConfigurationManagement.setAccess_allownum((-954));
int[] server_fd = login.getServer_fd();
// Undeclared exception!
Login.mmo_auth_syncTXT();
UserManagement.addUserTXT("  But, you refuse ALL IP!", "conf/subnet_athena.conf", "conf/subnet_athena.conf", 't');
login.getServer_fd();
Login.mmo_auth_initTXT();
MySQLConfig.setLogin_server_id(login.LAN_CONF_NAME);
ConfigurationManagement.setSubnetmaski(server_fd);
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 42: 
Login login = new Login();
// Undeclared exception!
login.do_final();
Test 43: 
Login login = new Login();
login.save_config_in_log();
Test 44: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 45: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 46: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2364);
login.save_config_in_log();
Test 47: 
Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 48: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_allownum(563);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 49: 
Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 50: 
Login login = new Login();
login.auth_max = (-13);
login.getAuth_max();
Test 51: 
Login login = new Login();
login.auth_max = 2693;
login.getAuth_max();
Test 52: 
Login login = new Login();
login.getOut();
Test 53: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
Login.codingKey(socket_data);
Test 54: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKeyAdministration(socket_data);
Test 55: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 56: 
Login login = new Login();
byte[] byteArray = new byte[2];
byte _byte = (byte)60;
byteArray[0] = (byte)60;
byteArray[1] = (byte) (-124);
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray);
Login login = new Login();
login.setAuth_max((-2605));
UserManagement.addAccountIdCount();
// Undeclared exception!
Login.mmo_auth_syncTXT();
Login login = new Login();
login.do_initTXT();
UserManagement.setAccountIdCount(_byte);
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
login_ConnectionListener.close();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
Test 57: 
// Undeclared exception!
Login.mmo_auth_syncXML();
Test 58: 
Login login = new Login();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[7];
byteArray[0] = (byte)60;
byteArray[1] = (byte)8;
byteArray[2] = (byte)60;
byteArray[3] = (byte)7;
byteArray[4] = (byte)49;
byteArray[5] = (byte)8;
byteArray[6] = (byte) (-73);
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
login.do_initXML();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();

* Minimizing test suite
* test suite isTestSuite: 56
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 2: 
Login login = new Login();
login.getAuth_num();
Test 3: 
Login login = new Login();
login.getServer_fd();
Test 4: 
Login login = new Login();
Inet4Address byName = (Inet4Address)MockInetAddress.getByName("conf/subnet_athena.conf");
login.check_ip(byName);
Test 5: 
Login login = new Login();
login.check_ipmask(10, "conf/subnet_athena.conf");
Test 6: 
MockSocket mockSocket = new MockSocket();
FromClient fromClient = new FromClient();
Socket_data socket_data = new Socket_data(mockSocket, fromClient);
Login.logUnknownPackets(socket_data);
Test 7: 
Login login = new Login();
login.setAuth_max((-2605));
Test 8: 
Login login = new Login();
login.getOut();
Test 9: 
Login.getPASSWORDENC();
Test 10: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 11: 
Login.display_title();
Test 12: 
Login.getDbManagemtType();
Test 13: 
Login login = new Login();
login.do_initXML();
Test 14: 
Login.setPASSWORDENC(10);
Test 15: 
Login login = new Login();
login.getAuth_max();
Test 16: 
Login login = new Login();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
// Undeclared exception!
login_Timer_interval_check_auth_sync.run();
Test 17: 
Socket_data socket_data = new Socket_data((Socket) null);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 19: 
Login.mmo_auth_initTXT();
Test 20: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);
Test 21: 
Login login = new Login();
// Undeclared exception!
login.check_auth_sync();
Test 22: 
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 23: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 24: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
login.parse_admin(50, socket_data, login);
Test 25: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 26: 
Login login = new Login();
login.parse_console("alive");
Test 27: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("exit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 28: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 29: 
Login login = new Login();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 30: 
Login login = new Login();
login.parse_console("conf/subnet_athena.conf");
Test 31: 
Login login = new Login();
login.parse_console("status");
Test 32: 
Login login = new Login();
login.parse_console("help");
Test 33: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 34: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 35: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2364);
login.save_config_in_log();
Test 36: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.do_initTXT();
Test 37: 
Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 38: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_allownum(563);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 39: 
Login login = new Login();
ACO aCO = ACO.MUTUAL_FAILTURE;
ConfigurationManagement.setAccess_allownum(281);
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 40: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 42: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 43: 
Login login = new Login();
Login.End login_End = login.new End();
// Undeclared exception!
login_End.run();
Test 44: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
login.getServer_fd();
Test 45: 
Login.login_log("outer-class");
Test 46: 
Login.mmo_auth_initXML();
Test 47: 
Login login = new Login();
// Undeclared exception!
login.do_final();
Test 48: 
Login login = new Login();
login.save_config_in_log();
Test 49: 
Login login = new Login();
login.auth_max = (-13);
login.getAuth_max();
Test 50: 
Login login = new Login();
login.auth_max = 2693;
login.getAuth_max();
Test 51: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket, (IParse) null);
Login.codingKey(socket_data);
Test 52: 
MockSocket mockSocket = new MockSocket();
mockSocket.close();
FromChar fromChar = new FromChar();
Socket_data socket_data = new Socket_data(mockSocket, fromChar);
Login.codingKeyAdministration(socket_data);
Test 53: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 54: 
// Undeclared exception!
Login.mmo_auth_syncTXT();
Test 55: 
// Undeclared exception!
Login.mmo_auth_syncXML();

[MASTER] 01:07:53.934 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 47%
* Total number of goals: 255
* Number of covered goals: 119
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 54%
* Total number of goals: 433
* Number of covered goals: 232
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 23%
* Total number of goals: 78
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 98%
* Total number of goals: 43
* Number of covered goals: 42
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 45%
* Total number of goals: 255
* Number of covered goals: 116
* Generated 56 tests with total length 137
* Resulting test suite's coverage: 61% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 01:07:54.443 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
[MASTER] 01:08:05.397 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:08.637 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:08.681 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:08.730 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:08.732 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:08.784 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:08.785 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:08.837 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:08.838 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:08.889 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:08.890 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:08.940 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:08.941 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:08.995 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:08.996 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.046 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.155 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.156 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.206 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.207 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.269 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.269 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.354 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.422 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.423 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.475 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.531 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.583 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.584 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.642 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.696 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.751 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.758 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.839 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.907 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.909 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:09.965 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:09.968 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.029 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.031 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.091 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.092 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.160 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.162 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.224 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.225 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.284 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.346 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.347 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.404 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.405 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.463 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.526 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.610 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.611 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.674 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.675 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.807 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.808 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.876 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.877 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:10.938 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:10.939 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.011 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.059 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.059 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.114 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.119 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.181 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.181 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.294 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.352 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.352 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.402 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.403 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.523 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.524 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.584 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.585 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.648 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.649 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.713 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.714 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.788 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.789 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.848 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.850 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:08:11.913 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:11.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
[MASTER] 01:08:13.814 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:13.816 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
[MASTER] 01:08:15.030 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar3665226347346677554.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:08:15.031 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3665226347346677554.jar
* Writing tests to file
[MASTER] 01:08:15.034 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'Login_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 26 called: 24 to improve: false
** Write a test suite: 29 called: 25 to improve: false
** Write a test suite: 33 called: 26 to improve: false
** Write a test suite: 34 called: 27 to improve: false
** Write a test suite: 51 called: 28 to improve: false
** Write a test suite: 53 called: 29 to improve: false
** Write a test suite: 54 called: 30 to improve: false
** Write a test suite: 60 called: 31 to improve: false
** Write a test suite: 63 called: 32 to improve: false
** Write a test suite: 66 called: 33 to improve: false
* Writing JUnit test case 'Login_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
* Done!

* Computation finished
