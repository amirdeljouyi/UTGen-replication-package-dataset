* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: org.javathena.login.Login
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/81_javathena/evosuite-files/evosuite.properties
* Connecting to master process on port 18012
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 07:10:55.708 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 07:10:55.709 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 07:10:55.711 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 07:10:55.860 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 07:10:55.865 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 07:10:55.866 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 07:10:55.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 07:10:55.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 07:10:55.889 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 07:10:55.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 07:10:55.897 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 07:10:55.898 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 07:10:55.898 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 07:10:55.899 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 07:10:55.902 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 07:10:55.915 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 07:10:55.927 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.javathena.login.Login
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1064
* Using seed 1709277051794
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 371 / 1064
[MASTER] 07:10:58.499 [logback-1] WARN  TestCluster - Failed to check cache for javolution.util.FastComparator<T> : Type points to itself
[Progress:>                             2%] [Cov:==========>                        29%][Progress:>                             3%] [Cov:===========>                       34%][Progress:=>                            4%] [Cov:============>                      35%][Progress:=>                            4%] [Cov:==============>                    41%][Progress:=>                            5%] [Cov:===============>                   43%][Progress:=>                            5%] [Cov:===============>                   43%][Progress:=>                            6%] [Cov:===============>                   44%][Progress:=>                            6%] [Cov:===============>                   45%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           8%] [Cov:================>                  48%][Progress:==>                           8%] [Cov:================>                  48%][Progress:==>                           9%] [Cov:================>                  48%][Progress:==>                           9%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          12%] [Cov:=================>                 49%][Progress:===>                          12%] [Cov:=================>                 49%][Progress:===>                          12%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:====>                         14%] [Cov:=================>                 50%][Progress:====>                         14%] [Cov:=================>                 50%][Progress:====>                         15%] [Cov:=================>                 51%][Progress:====>                         15%] [Cov:=================>                 51%][Progress:====>                         16%] [Cov:=================>                 51%][Progress:=====>                        17%] [Cov:=================>                 51%][Progress:=====>                        17%] [Cov:=================>                 51%][Progress:=====>                        18%] [Cov:=================>                 51%][Progress:=====>                        18%] [Cov:=================>                 51%][Progress:=====>                        19%] [Cov:=================>                 51%][Progress:=====>                        19%] [Cov:=================>                 51%][Progress:=====>                        19%] [Cov:=================>                 51%][Progress:======>                       20%] [Cov:=================>                 51%][Progress:======>                       20%] [Cov:==================>                52%][Progress:======>                       21%] [Cov:==================>                53%][Progress:======>                       21%] [Cov:==================>                53%][Progress:======>                       21%] [Cov:==================>                53%][Progress:======>                       22%] [Cov:==================>                53%][Progress:======>                       22%] [Cov:==================>                53%][Progress:======>                       22%] [Cov:==================>                53%][Progress:======>                       23%] [Cov:==================>                53%][Progress:======>                       23%] [Cov:==================>                53%][Progress:=======>                      24%] [Cov:==================>                53%][Progress:=======>                      24%] [Cov:==================>                53%][Progress:=======>                      25%] [Cov:==================>                53%][Progress:=======>                      25%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:==================>                53%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:===================>               55%][Progress:=========>                    32%] [Cov:===================>               55%][Progress:=========>                    33%] [Cov:===================>               55%][Progress:=========>                    33%] [Cov:===================>               55%][Progress:=========>                    33%] [Cov:===================>               55%][Progress:==========>                   34%] [Cov:===================>               55%][Progress:==========>                   34%] [Cov:===================>               55%][Progress:==========>                   34%] [Cov:===================>               55%][Progress:==========>                   34%] [Cov:===================>               55%][Progress:==========>                   35%] [Cov:===================>               55%][Progress:==========>                   35%] [Cov:===================>               55%][Progress:==========>                   35%] [Cov:===================>               55%][Progress:==========>                   35%] [Cov:===================>               55%][Progress:==========>                   36%] [Cov:===================>               55%][Progress:==========>                   36%] [Cov:===================>               55%][Progress:==========>                   36%] [Cov:===================>               55%][Progress:==========>                   36%] [Cov:===================>               55%][Progress:===========>                  37%] [Cov:===================>               55%][Progress:===========>                  37%] [Cov:===================>               55%][Progress:===========>                  37%] [Cov:===================>               55%][Progress:===========>                  37%] [Cov:===================>               55%][Progress:===========>                  37%] [Cov:===================>               55%][Progress:===========>                  38%] [Cov:===================>               55%][Progress:===========>                  38%] [Cov:===================>               55%][Progress:===========>                  38%] [Cov:===================>               55%][Progress:===========>                  38%] [Cov:===================>               55%][Progress:===========>                  39%] [Cov:===================>               55%][Progress:===========>                  39%] [Cov:===================>               55%][Progress:===========>                  39%] [Cov:===================>               55%][Progress:===========>                  39%] [Cov:===================>               55%][Progress:===========>                  39%] [Cov:===================>               55%][Progress:============>                 40%] [Cov:===================>               55%][Progress:============>                 40%] [Cov:===================>               55%][Progress:============>                 40%] [Cov:===================>               55%][Progress:============>                 40%] [Cov:===================>               55%][Progress:============>                 41%] [Cov:===================>               55%][Progress:============>                 41%] [Cov:===================>               55%][Progress:============>                 41%] [Cov:===================>               55%][Progress:============>                 41%] [Cov:===================>               55%][Progress:============>                 41%] [Cov:===================>               55%][Progress:============>                 42%] [Cov:===================>               55%][Progress:============>                 42%] [Cov:===================>               55%][Progress:============>                 42%] [Cov:===================>               55%][Progress:============>                 42%] [Cov:===================>               55%][Progress:============>                 42%] [Cov:===================>               55%][Progress:============>                 43%] [Cov:===================>               55%][Progress:============>                 43%] [Cov:===================>               55%][Progress:============>                 43%] [Cov:===================>               55%][Progress:============>                 43%] [Cov:===================>               55%][Progress:============>                 43%] [Cov:===================>               55%][Progress:=============>                44%] [Cov:===================>               55%][Progress:=============>                44%] [Cov:===================>               55%][Progress:=============>                44%] [Cov:===================>               55%][Progress:=============>                45%] [Cov:===================>               55%][Progress:=============>                45%] [Cov:===================>               55%][Progress:=============>                45%] [Cov:===================>               55%][Progress:=============>                45%] [Cov:===================>               55%][Progress:=============>                45%] [Cov:===================>               55%][Progress:=============>                46%] [Cov:===================>               55%][Progress:=============>                46%] [Cov:===================>               55%][Progress:=============>                46%] [Cov:===================>               55%][Progress:=============>                46%] [Cov:===================>               55%][Progress:=============>                46%] [Cov:===================>               55%][Progress:=============>                46%] [Cov:===================>               55%][Progress:==============>               47%] [Cov:===================>               55%][Progress:==============>               47%] [Cov:===================>               55%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               48%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             54%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             55%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:================>             56%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            57%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            58%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:=================>            59%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           60%] [Cov:===================>               56%][Progress:==================>           61%] [Cov:===================>               56%][Progress:==================>           61%] [Cov:===================>               56%][Progress:==================>           61%] [Cov:===================>               56%][Progress:==================>           61%] [Cov:===================>               56%][Progress:==================>           61%] [Cov:===================>               56%][Progress:==================>           62%] [Cov:===================>               56%][Progress:==================>           62%] [Cov:===================>               56%][Progress:==================>           62%] [Cov:===================>               56%][Progress:==================>           62%] [Cov:===================>               56%][Progress:==================>           62%] [Cov:===================>               56%][Progress:==================>           63%] [Cov:===================>               56%][Progress:==================>           63%] [Cov:===================>               56%][Progress:==================>           63%] [Cov:===================>               56%][Progress:==================>           63%] [Cov:===================>               56%][Progress:==================>           63%] [Cov:===================>               57%][Progress:===================>          64%] [Cov:====================>              58%][Progress:===================>          64%] [Cov:====================>              58%][Progress:===================>          64%] [Cov:====================>              58%][Progress:===================>          64%] [Cov:====================>              58%][Progress:===================>          64%] [Cov:====================>              58%][Progress:===================>          65%] [Cov:====================>              58%][Progress:===================>          65%] [Cov:====================>              58%][Progress:===================>          65%] [Cov:====================>              58%][Progress:===================>          65%] [Cov:====================>              58%][Progress:===================>          66%] [Cov:====================>              58%][Progress:===================>          66%] [Cov:====================>              58%][Progress:===================>          66%] [Cov:====================>              58%][Progress:====================>         67%] [Cov:====================>              58%][Progress:====================>         67%] [Cov:====================>              58%][Progress:====================>         67%] [Cov:====================>              58%][Progress:====================>         67%] [Cov:====================>              58%][Progress:====================>         67%] [Cov:====================>              58%][Progress:====================>         68%] [Cov:====================>              58%][Progress:====================>         68%] [Cov:====================>              58%][Progress:====================>         68%] [Cov:====================>              58%][Progress:====================>         68%] [Cov:====================>              58%][Progress:====================>         69%] [Cov:====================>              58%][Progress:====================>         69%] [Cov:====================>              58%][Progress:====================>         69%] [Cov:====================>              58%][Progress:====================>         69%] [Cov:====================>              58%][Progress:====================>         69%] [Cov:====================>              58%][Progress:=====================>        70%] [Cov:====================>              58%][Progress:=====================>        70%] [Cov:====================>              58%][Progress:=====================>        70%] [Cov:====================>              58%][Progress:=====================>        70%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:====================>              58%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:=====================>             60%][Progress:=======================>      78%] [Cov:=====================>             60%][Progress:=======================>      78%] [Cov:=====================>             60%][Progress:=======================>      79%] [Cov:=====================>             60%][Progress:=======================>      79%] [Cov:=====================>             60%][Progress:=======================>      79%] [Cov:=====================>             60%][Progress:=======================>      79%] [Cov:=====================>             60%][Progress:=======================>      79%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     80%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:========================>     81%] [Cov:=====================>             60%][Progress:========================>     82%] [Cov:=====================>             60%][Progress:========================>     82%] [Cov:=====================>             60%][Progress:========================>     82%] [Cov:=====================>             60%][Progress:========================>     82%] [Cov:=====================>             60%][Progress:========================>     83%] [Cov:=====================>             60%][Progress:========================>     83%] [Cov:=====================>             60%][Progress:========================>     83%] [Cov:=====================>             60%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:=========================>    86%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   87%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   88%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:==========================>   89%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  90%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  91%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  92%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:===========================>  93%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 94%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 95%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:============================> 96%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>97%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>98%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:=============================>99%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%][Progress:==============================100%] [Cov:=====================>             61%]
* Search finished after 101s and 359 generations, 100359 statements, best individual has fitness: 378.0
* Generated before the refinement 76 tests with total length 223
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$ConnectionListener(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$ConnectionListener
statement code is: Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.close()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.run()
test data is: Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
        // Improved test data by changing the primitive values and Strings to more illustrative examples
        int connectionTimeout = 5;
        login_ConnectionListener.setConnectionTimeout(connectionTimeout);
        String serverURL = "https://www.example.com";
        login_ConnectionListener.setServerURL(serverURL);
        boolean isConnected = true;
        login_ConnectionListener.setIsConnected(isConnected);
        // End of improved test data
        login_ConnectionListener.close();
        login_ConnectionListener.run();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data by changing the primitive values and Strings to more illustrative examples
int connectionTimeout = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login_ConnectionListener.setConnectionTimeout(connectionTimeout), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_ConnectionListener.setConnectionTimeout(connectionTimeout) target is: login_ConnectionListener method is: setConnectionTimeout(int)
statement is: String serverURL = "https://www.example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login_ConnectionListener.setServerURL(serverURL), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_ConnectionListener.setServerURL(serverURL) target is: login_ConnectionListener method is: setServerURL(java.lang.String)
statement is: boolean isConnected = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login_ConnectionListener.setIsConnected(isConnected), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_ConnectionListener.setIsConnected(isConnected) target is: login_ConnectionListener method is: setIsConnected(boolean)
statement is: // End of improved test data
login_ConnectionListener.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // End of improved test data
login_ConnectionListener.close() target is: login_ConnectionListener method is: close()
statement is: login_ConnectionListener.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_ConnectionListener.run() target is: login_ConnectionListener method is: run()
* this is vulnerable: int _int = 5
* this is vulnerable: String string = "https://www.example.com"
* this is vulnerable: boolean _boolean = true
TestCase is: Login login = new Login();
int _int = 5;
String string = "https://www.example.com";
boolean _boolean = true;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getLog_fp()Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.File
statement code is: File log_fp = login.getLog_fp()
test data is: Login login = new Login();
login.getLog_fp();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int userId = 1234;
        String username = "johndoe";
        String password = "password123";
        // Before
        Login login = new Login();
        login.getLog_fp(userId, username, password);
        // After (improved)
        Login login = new Login();
        login.getLog_fp(username, password);
    }
}
statement is: // Improved test data
int userId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Before
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.getLog_fp(userId, username, password), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getLog_fp(userId, username, password) target is: login method is: getLog_fp(int,java.lang.String,java.lang.String)
statement is: // After (improved)
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.getLog_fp(username, password), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getLog_fp(username, password) target is: login method is: getLog_fp(java.lang.String,java.lang.String)
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
TestCase is: int _int = 1234;
String string = "johndoe";
String string = "password123";
Login login = new Login();
Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setOut(Ljava/io/PrintWriter;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setOut((PrintWriter) null)
test data is: Login login = new Login();
login.setOut((PrintWriter) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.setOut(new PrintWriter("testOutput.txt"));
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setOut(new PrintWriter("testOutput.txt")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setOut(new PrintWriter("testOutput.txt")) target is: login method is: setOut(PrintWriter)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setOut(Ljava/io/PrintWriter;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Login login = new Login();
PrintWriter printWriter = null;
login.setOut(printWriter);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getAuth_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_num = login.getAuth_num()
test data is: Login login = new Login();
login.getAuth_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setAuth_num(123456789);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuth_num(123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuth_num(123456789) target is: login method is: setAuth_num(int)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getServer_fd()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] server_fd = login.getServer_fd()
test data is: Login login = new Login();
login.getServer_fd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        String serverFD = "127.0.0.1";// Improved primitive value to a more descriptive example

        login.getServer_fd();// Method call with improved parameter values }}

    }
}
statement is: // Improved test data for the above code snippet
String serverFD = "127.0.0.1"// Improved primitive value to a more descriptive example
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.getServer_fd()// Method call with improved parameter values }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getServer_fd()// Method call with improved parameter values }}
 target is: login method is: getServer_fd()
* this is vulnerable: String string = "127.0.0.1"
TestCase is: String string = "127.0.0.1";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: check_ip(Ljava/net/InetAddress;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean check_ip = login.check_ip((InetAddress) null)
test data is: Login login = new Login();
login.check_ip((InetAddress) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.check_ip(InetAddress.getByName("192.168.0.1"));
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.check_ip(InetAddress.getByName("192.168.0.1")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_ip(InetAddress.getByName("192.168.0.1")) target is: login method is: check_ip()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: check_ip(Ljava/net/InetAddress;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Login login = new Login();
InetAddress inetAddress = null;
login.check_ip(inetAddress);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: check_ipmask(ILjava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_ipmask = login.check_ipmask(10, "+[XDP3QTKCB*P+")
test data is: Login login = new Login();
login.check_ipmask(10, "+[XDP3QTKCB*P+");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.check_ipmask(255, "255.255.255.255");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.check_ipmask(255, "255.255.255.255"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.check_ipmask(255, "255.255.255.255") target is: login method is: check_ipmask(int,java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: check_ipmask(ILjava/lang/String;)I
TestCase is: Login login = new Login();
int _int = 255;
String string = "255.255.255.255";
login.check_ipmask(_int, string);

statement is: logUnknownPackets(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.logUnknownPackets((Socket_data) null)
test data is: Login.logUnknownPackets((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.logUnknownPackets(new Socket_data("192.168.0.1", 5432, "user"));
        Login.logUnknownPackets(new Socket_data("10.0.0.1", 8080, "admin"));
        Login.logUnknownPackets(new Socket_data("::1", 9000, "guest"));
    }
}
statement is: Login.logUnknownPackets(new Socket_data("192.168.0.1", 5432, "user")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.logUnknownPackets(new Socket_data("192.168.0.1", 5432, "user")) target is: Login method is: logUnknownPackets(Socket_data)
Matched Method is: logUnknownPackets(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.logUnknownPackets(new Socket_data("10.0.0.1", 8080, "admin")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.logUnknownPackets(new Socket_data("10.0.0.1", 8080, "admin")) target is: Login method is: logUnknownPackets(Socket_data)
Matched Method is: logUnknownPackets(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Login.logUnknownPackets(new Socket_data("::1", 9000, "guest")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.logUnknownPackets(new Socket_data("::1", 9000, "guest")) target is: Login method is: logUnknownPackets(Socket_data)
Matched Method is: logUnknownPackets(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Socket_data socket_data = null;
Login.logUnknownPackets(socket_data);
Socket_data socket_data = null;
Login.logUnknownPackets(socket_data);
Socket_data socket_data = null;
Login.logUnknownPackets(socket_data);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAuth_max(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setAuth_max((-4576))
test data is: Login login = new Login();
login.setAuth_max((-4576));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setAuth_max(-4576);
        assertEquals("Failed to authenticate", login.authenticate());
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuth_max(-4576), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuth_max(-4576) target is: login method is: setAuth_max(int)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setAuth_max(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertEquals("Failed to authenticate", login.authenticate()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("Failed to authenticate", login.authenticate()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: Login login = new Login();
int _int = null;
login.setAuth_max(_int);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getOut()Ljava/io/PrintWriter; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.PrintWriter
statement code is: PrintWriter out = login.getOut()
test data is: Login login = new Login();
login.getOut();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setName("John Doe");
        login.setPassword("password123");
        login.getOut();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setName("John Doe") target is: login method is: setName(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.getOut(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getOut() target is: login method is: getOut()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getOut()Ljava/io/PrintWriter;
TestCase is: Login login = new Login();
login.getOut();

statement is: getPASSWORDENC()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int pASSWORDENC = Login.getPASSWORDENC()
test data is: Login.getPASSWORDENC();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.getPASSWORDENC("$2a$10$Jh3EcXWwTGZRHrQFbV6AeuBk5L6Qj3W9bqnEK1l2P5IFEiG0t/pUO");
    }
}
statement is: Login.getPASSWORDENC("$2a$10$Jh3EcXWwTGZRHrQFbV6AeuBk5L6Qj3W9bqnEK1l2P5IFEiG0t/pUO"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.getPASSWORDENC("$2a$10$Jh3EcXWwTGZRHrQFbV6AeuBk5L6Qj3W9bqnEK1l2P5IFEiG0t/pUO") target is: Login method is: getPASSWORDENC(java.lang.String)
statement is: version(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.version((Socket_data) null)
test data is: Login.version((Socket_data) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.version(((Socket_data) ("1234567890")));
    }
}
statement is: Login.version(((Socket_data) ("1234567890"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.version(((Socket_data) ("1234567890"))) target is: Login method is: version(Socket_data)
Matched Method is: version(Lorg/javathena/core/data/Socket_data;)V
TestCase is: String string = "1234567890";
Login.version((Socket_data) string);

statement is: display_title()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.display_title()
test data is: Login.display_title();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the method Login.display_title()
        String title = "Welcome to our website";
        // Changed the primitive values and Strings to more descriptive examples
        int age = 35;
        double height = 180.5;
        char gender = 'M';
        String occupation = "Software Engineer";
        String location = "New York City";
        Login.display_title(title);
    }
}
statement is: // Improved test data for the method Login.display_title()
String title = "Welcome to our website", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed the primitive values and Strings to more descriptive examples
int age = 35, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double height = 180.5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char gender = 'M', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String occupation = "Software Engineer", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String location = "New York City", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Login.display_title(title), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.display_title(title) target is: Login method is: display_title(java.lang.String)
* this is vulnerable: String string = "Welcome to our website"
* this is vulnerable: int _int = 35
* this is vulnerable: double _double = 180.5
* this is vulnerable: char _char = 'M'
* this is vulnerable: String string = "Software Engineer"
* this is vulnerable: String string = "New York City"
TestCase is: String string = "Welcome to our website";
int _int = 35;
double _double = 180.5;
char _char = 'M';
String string = "Software Engineer";
String string = "New York City";

statement is: getDbManagemtType()Lorg/javathena/data/IDBManagementLogin; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.javathena.data.IDBManagementLogin
statement code is: IDBManagementLogin dbManagemtType = Login.getDbManagemtType()
test data is: Login.getDbManagemtType();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.getDbManagemtType();
    }
}
statement is: Login.getDbManagemtType(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.getDbManagemtType() target is: Login method is: getDbManagemtType()
Matched Method is: getDbManagemtType()Lorg/javathena/data/IDBManagementLogin;
TestCase is: Login.getDbManagemtType();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initXML()
test data is: Login login = new Login();
login.do_initXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initXML();
        // Improved test data
        int userId = 123456789;
        String username = "johndoe";
        String password = "password123";
        boolean isValid = true;
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initXML() target is: login method is: do_initXML()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initXML()V
statement is: // Improved test data
int userId = 123456789, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isValid = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 123456789
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
* this is vulnerable: boolean _boolean = true
TestCase is: Login login = new Login();
login.do_initXML();
int _int = 123456789;
String string = "johndoe";
String string = "password123";
boolean _boolean = true;

statement is: setPASSWORDENC(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.setPASSWORDENC(50)
test data is: Login.setPASSWORDENC(50);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.setPASSWORDENC("50");
    }
}
statement is: Login.setPASSWORDENC("50"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.setPASSWORDENC("50") target is: Login method is: setPASSWORDENC(java.lang.String)
Matched Method is: setPASSWORDENC(I)V
TestCase is: String string = "50";
Login.setPASSWORDENC((int) string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: getAuth_max()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_max = login.getAuth_max()
test data is: Login login = new Login();
login.getAuth_max();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Arrange
        Login login = new Login();
        // Act
        int result = login.getAuth_max();
        // Assert
        assertEquals(10, result);
    }
}
statement is: // Arrange
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Act
int result = login.getAuth_max(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_max() target is: login method is: getAuth_max()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getAuth_max()I
statement is: // Assert
assertEquals(10, result), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Assert
assertEquals(10, result) target is:  method is: assertEquals(int,int)
TestCase is: Login login = new Login();
login.getAuth_max();

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] md5Data = Login.getMd5Data(arg0)
statement is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] md5Data = Login.getMd5Data(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket();
        // Socket_data socket_data = new Socket_data(mockSocket);
        Login.getMd5Data("user@email.com");
        Login.getMd5Data("user@email.com");
    }
}
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Socket_data socket_data = new Socket_data(mockSocket);
Login.getMd5Data("user@email.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Socket_data socket_data = new Socket_data(mockSocket);
Login.getMd5Data("user@email.com") target is: Login method is: getMd5Data(java.lang.String)
Matched Method is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B
statement is: Login.getMd5Data("user@email.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.getMd5Data("user@email.com") target is: Login method is: getMd5Data(java.lang.String)
Matched Method is: getMd5Data(Lorg/javathena/core/data/Socket_data;)[B
TestCase is: MockSocket mockSocket = new MockSocket();
String string = "user@email.com";
Login.getMd5Data((Socket_data) string);
String string = "user@email.com";
Login.getMd5Data((Socket_data) string);

statement is: login_log(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.login_log("")
test data is: Login.login_log("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.login_log("user@example.com");
    }
}
statement is: Login.login_log("user@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.login_log("user@example.com") target is: Login method is: login_log(java.lang.String)
Matched Method is: login_log(Ljava/lang/String;)V
TestCase is: String string = "user@example.com";
Login.login_log(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml")
statement is: createFolder(Lorg/evosuite/runtime/testdata/EvoSuiteFile;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean createFolder = FileSystemHandling.createFolder(arg0)
statement is: mmo_auth_initXML()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initXML = Login.mmo_auth_initXML()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Changed the integer value to a more descriptive example:
        // Changed the String value to a more descriptive example:
    }
}
statement is: // Changed the integer value to a more descriptive example:, class spoon.support.reflect.code.CtCommentImpl
statement is: // Changed the String value to a more descriptive example:, class spoon.support.reflect.code.CtCommentImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("shutdown")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("shutdown");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("shutdown");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("shutdown"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("shutdown") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "shutdown";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("conf/subnet_athena.conf", "Ue=~q*", "Ue=~q*", 'v')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "Ue=~q*", "Ue=~q*", 'v');
Login.mmo_auth_syncTXT();
Login login = new Login();
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserTXT("conf/subnet_athena.conf", "username=john.smith", "password=1234567890", 'v');
        Login.mmo_auth_syncTXT();
        login.do_initTXT();
    }
}
statement is: UserManagement.addUserTXT("conf/subnet_athena.conf", "username=john.smith", "password=1234567890", 'v'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("conf/subnet_athena.conf", "username=john.smith", "password=1234567890", 'v') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
TestCase is: String string = "conf/subnet_athena.conf";
String string = "username=john.smith";
String string = "password=1234567890";
char _char = 'v';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'S')
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserTXT("john.doe@example.com", "John Doe", "Password123!", "123-456-7890");
        Login login = new Login();
        login.do_initTXT();
    }
}
statement is: UserManagement.addUserTXT("john.doe@example.com", "John Doe", "Password123!", "123-456-7890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("john.doe@example.com", "John Doe", "Password123!", "123-456-7890") target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 1, type org.javathena.login.Loginindex is: 5
Matched Method is: do_initTXT()V
TestCase is: String string = "john.doe@example.com";
String string = "John Doe";
String string = "Password123!";
String string = "123-456-7890";
UserManagement.addUserTXT(string, string, string, (char) string);
Login login = new Login();
((Login) string).do_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccountIdCount(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: UserManagement.setAccountIdCount((-232))
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("_y`Uka]{; ]", "_y`Uka]{; ]", "conf/subnet_athena.conf", '[')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
test data is: Login login = new Login();
UserManagement.setAccountIdCount((-232));
UserManagement.addUserTXT("_y`Uka]{; ]", "_y`Uka]{; ]", "conf/subnet_athena.conf", '[');
Login.mmo_auth_syncTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        UserManagement.setAccountIdCount(-232);
        UserManagement.addUserTXT("johndoe", "password123", "conf/subnet_athena.conf", '[');
        Login.mmo_auth_syncTXT();
        UserManagement.addUserTXT("janedoe", "password456", "conf/subnet_athena.conf", '[');
        Login.mmo_auth_syncTXT();
        UserManagement.addUserTXT("michelangelo", "password789", "conf/subnet_athena.conf", '[');
        Login.mmo_auth_syncTXT();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.setAccountIdCount(-232), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.setAccountIdCount(-232) target is: UserManagement method is: setAccountIdCount(int)
Matched Method is: setAccountIdCount(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: UserManagement.addUserTXT("johndoe", "password123", "conf/subnet_athena.conf", '['), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("johndoe", "password123", "conf/subnet_athena.conf", '[') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: UserManagement.addUserTXT("janedoe", "password456", "conf/subnet_athena.conf", '['), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("janedoe", "password456", "conf/subnet_athena.conf", '[') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: UserManagement.addUserTXT("michelangelo", "password789", "conf/subnet_athena.conf", '['), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("michelangelo", "password789", "conf/subnet_athena.conf", '[') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
TestCase is: Login login = new Login();
int _int = null;
UserManagement.setAccountIdCount(_int);
String string = "johndoe";
String string = "password123";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
String string = "janedoe";
String string = "password456";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
String string = "michelangelo";
String string = "password789";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAuth_before_save_file(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAuth_before_save_file(31034)
statement is: mmo_auth_syncXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncXML()
test data is: Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(31034);
Login.mmo_auth_syncXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        Login login = new Login();
        ConfigurationManagement.setAuth_before_save_file(12345);// Changed to a more representative value

        Login.mmo_auth_syncXML();
    }
}
statement is: // Improved test data for the above code snippet
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAuth_before_save_file(12345)// Changed to a more representative value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAuth_before_save_file(12345)// Changed to a more representative value
 target is: ConfigurationManagement method is: setAuth_before_save_file(int)
Matched Method is: setAuth_before_save_file(I)V
statement is: Login.mmo_auth_syncXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncXML() target is: Login method is: mmo_auth_syncXML()
Matched Method is: mmo_auth_syncXML()V
TestCase is: Login login = new Login();
int _int = 12345;
ConfigurationManagement.setAuth_before_save_file(_int);
Login.mmo_auth_syncXML();

statement is: org.evosuite.testcase.statements.ArrayStatement@7e7efb67 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[1]
statement is: showTab([B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.showTab(arg0)
test data is: byte[] byteArray = new byte[1];
Login.showTab(byteArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (0x0));
        byteArray[1] = ((byte) (0x1));
        Login.showTab(byteArray);
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[1] isAssignment: false Array: new byte[2] Elements: []
lengths: [1] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (0x0)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (0x0)) Ct is: byteArray[0] = ((byte) (0x0))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (0x1)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (0x1)) Ct is: byteArray[1] = ((byte) (0x1))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Login.showTab(byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.showTab(byteArray) target is: Login method is: showTab(byte[])
Matched Method is: showTab([B)V
TestCase is: byte[] byteArray = new byte[1];
Login.showTab(byteArray);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAuth_before_save_file(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAuth_before_save_file(10)
statement is: check_auth_sync()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_auth_sync = login.check_auth_sync()
test data is: Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(10);
login.check_auth_sync();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Carefully
        review the;
        snippet.@Improve
        the test;
        by changing;
        primitive values;
        Strings(such instanceof , doubles, strings, chars);
        more illustrative;
        @Place
        your Improved;
    }
}
statement is: @Carefully
review the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: @Improve
the test, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: by changing, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: primitive values, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: Strings(such instanceof , doubles, strings, chars), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Strings(such instanceof , doubles, strings, chars) target is:  method is: Strings(<unknown>,<unknown>,<unknown>,<unknown>)
statement is: more illustrative, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: @Place
your Improved, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$ConnectionListener(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$ConnectionListener
statement code is: Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_ConnectionListener.run()
test data is: Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        Login login = new Login();
        login.setUsername("johndoe@example.com");
        login.setPassword("password123");
        Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
        login_ConnectionListener.run();
    }
}
statement is: // Improved test data for the code snippet
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe@example.com") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login_ConnectionListener.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_ConnectionListener.run() target is: login_ConnectionListener method is: run()
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: parse_admin(ILorg/javathena/core/data/Socket_data;Lorg/javathena/login/Login;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_admin = arg2.parse_admin((-2468), arg1, arg2)
test data is: Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
login.parse_admin((-2468), socket_data, login);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        MockSocket mockSocket = new MockSocket();
        Socket_data socket_data = new Socket_data(mockSocket);
        mockSocket.close();
        login.parse_admin(-2468, socket_data, login);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockSocket mockSocket = new MockSocket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.close() target is: mockSocket method is: close()
source statement: org.evosuite.runtime.mock.java.net.MockSocket()V callee: VariableReference: Statement 1, type org.evosuite.runtime.mock.java.net.MockSocketindex is: 1
Matched Method is: close()V
statement is: login.parse_admin(-2468, socket_data, login), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_admin(-2468, socket_data, login) target is: login method is: parse_admin(int,Socket_data,Login)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_admin(ILorg/javathena/core/data/Socket_data;Lorg/javathena/login/Login;)I
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
Login login = null;
login.parse_admin((int) socket_data, (Socket_data) login, login);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("alive")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("alive");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        1.0 = $missing$;
        Instead of;
        using the;
        using doubles;
        and characters;
        and consider;
        more descriptive;
        representative examples;
        For example;
        For instead;
        of using;
        as an;
    }
}
statement is: 1.0 = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: Instead of, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: using the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: using doubles, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: and characters, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: and consider, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: more descriptive, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: representative examples, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For example, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For instead, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: of using, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: as an, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("quit")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("quit");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data }}
    }
}
statement is: // Improved test data }}, class spoon.support.reflect.code.CtCommentImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("end")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("end");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int userID = 54321;
        String username = "BobSmith";
        char gender = 'M';
        double age = 40.8;
        login.setUserID(userID);
        login.setUsername(username);
        login.setGender(gender);
        login.setAge(age);
    }
}
statement is: int userID = 54321, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String username = "BobSmith", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char gender = 'M', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double age = 40.8, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.setUserID(userID), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUserID(userID) target is: login method is: setUserID(int)
statement is: login.setUsername(username), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername(username) target is: login method is: setUsername(java.lang.String)
statement is: login.setGender(gender), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setGender(gender) target is: login method is: setGender(char)
statement is: login.setAge(age), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAge(age) target is: login method is: setAge(double)
* this is vulnerable: int _int = 54321
* this is vulnerable: String string = "BobSmith"
* this is vulnerable: char _char = 'M'
* this is vulnerable: double _double = 40.8
TestCase is: int _int = 54321;
String string = "BobSmith";
char _char = 'M';
double _double = 40.8;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("status")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("status");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("status");
        // Changed integer value to a more descriptive example
        int statusCode = 200;
        // Changed double value to a more descriptive example
        double responseTime = 1.5;
        // Changed String value to a more descriptive example
        String username = "john";
        // Changed char value to a more descriptive example
        char passwordChar = 'p';
        // Changed boolean value to a more descriptive example
        boolean isLoggedIn = true;
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("status"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("status") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
statement is: // Changed integer value to a more descriptive example
int statusCode = 200, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed double value to a more descriptive example
double responseTime = 1.5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed String value to a more descriptive example
String username = "john", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed char value to a more descriptive example
char passwordChar = 'p', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed boolean value to a more descriptive example
boolean isLoggedIn = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 200
* this is vulnerable: double _double = 1.5
* this is vulnerable: String string = "john"
* this is vulnerable: char _char = 'p'
* this is vulnerable: boolean _boolean = true
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "status";
login.parse_console(string);
int _int = 200;
double _double = 1.5;
String string = "john";
char _char = 'p';
boolean _boolean = true;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("help")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("help");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("help");
        // Improved test data
        login.do_initTXT("example_input.txt");
        login.parse_console("help", "example_output.txt");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("help"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("help") target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
statement is: // Improved test data
login.do_initTXT("example_input.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
login.do_initTXT("example_input.txt") target is: login method is: do_initTXT(java.lang.String)
statement is: login.parse_console("help", "example_output.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("help", "example_output.txt") target is: login method is: parse_console(java.lang.String,java.lang.String)
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "help";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: parse_console(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parse_console = login.parse_console("conf/subnet_athena.conf")
test data is: Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT();
        login.parse_console("conf/subnet_athena.conf");// This line specifies the configuration file to be parsed by the program, and it should be a descriptive string that accurately represents the file being used in the test. For example, if the test is using a specific file located at "conf/subnet_athena.conf", this string could be replaced with "conf/subnet_athena.conf". }}

    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.parse_console("conf/subnet_athena.conf")// This line specifies the configuration file to be parsed by the program, and it should be a descriptive string that accurately represents the file being used in the test. For example, if the test is using a specific file located at "conf/subnet_athena.conf", this string could be replaced with "conf/subnet_athena.conf". }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.parse_console("conf/subnet_athena.conf")// This line specifies the configuration file to be parsed by the program, and it should be a descriptive string that accurately represents the file being used in the test. For example, if the test is using a specific file located at "conf/subnet_athena.conf", this string could be replaced with "conf/subnet_athena.conf". }}
 target is: login method is: parse_console(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: parse_console(Ljava/lang/String;)I
TestCase is: Login login = new Login();
login.do_initTXT();
String string = "conf/subnet_athena.conf";
login.parse_console(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(2)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        ConfigurationManagement.setAccess_denynum(4);// Changed from 2 to 4 to represent a more significant change in the number of access denials

        login.save_config_in_log();
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_denynum(4)// Changed from 2 to 4 to represent a more significant change in the number of access denials
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(4)// Changed from 2 to 4 to represent a more significant change in the number of access denials
 target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
int _int = 4;
ConfigurationManagement.setAccess_denynum(_int);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.STRSIZE type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.STRSIZE
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(30)
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(1)
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.setAccess_allownum(1);
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.STRSIZE;
        ConfigurationManagement.setAccess_order(aCO);
        ConfigurationManagement.setAccess_denynum(30);
        ConfigurationManagement.setAccess_allownum(1);
        login.do_initTXT("admin", "password");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.STRSIZE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.STRSIZE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.setAccess_denynum(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(30) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: ConfigurationManagement.setAccess_allownum(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(1) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: login.do_initTXT("admin", "password"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT("admin", "password") target is: login method is: do_initTXT(java.lang.String,java.lang.String)
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
int _int = 30;
ConfigurationManagement.setAccess_denynum(_int);
int _int = 1;
ConfigurationManagement.setAccess_allownum(_int);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("YES")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("YES");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.yesNoOnOffToBoolean("Yes");// Test case 1: Passing "Yes" as input

        assertTrue(login.yesNoOnOffToBoolean("Yes"));// Assertion 1: Expecting true

        login.yesNoOnOffToBoolean("no");// Test case 2: Passing "no" as input

        assertFalse(login.yesNoOnOffToBoolean("no"));// Assertion 2: Expecting false

        login.yesNoOnOffToBoolean("on");// Test case 3: Passing "on" as input

        assertTrue(login.yesNoOnOffToBoolean("on"));// Assertion 3: Expecting true

        login.yesNoOnOffToBoolean("off");// Test case 4: Passing "off" as input

        assertFalse(login.yesNoOnOffToBoolean("off"));// Assertion 4: Expecting false }}

    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("Yes")// Test case 1: Passing "Yes" as input
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("Yes")// Test case 1: Passing "Yes" as input
 target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: assertTrue(login.yesNoOnOffToBoolean("Yes"))// Assertion 1: Expecting true
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(login.yesNoOnOffToBoolean("Yes"))// Assertion 1: Expecting true
 target is:  method is: assertTrue(<unknown>)
statement is: login.yesNoOnOffToBoolean("no")// Test case 2: Passing "no" as input
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("no")// Test case 2: Passing "no" as input
 target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: assertFalse(login.yesNoOnOffToBoolean("no"))// Assertion 2: Expecting false
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(login.yesNoOnOffToBoolean("no"))// Assertion 2: Expecting false
 target is:  method is: assertFalse(<unknown>)
statement is: login.yesNoOnOffToBoolean("on")// Test case 3: Passing "on" as input
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("on")// Test case 3: Passing "on" as input
 target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: assertTrue(login.yesNoOnOffToBoolean("on"))// Assertion 3: Expecting true
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(login.yesNoOnOffToBoolean("on"))// Assertion 3: Expecting true
 target is:  method is: assertTrue(<unknown>)
statement is: login.yesNoOnOffToBoolean("off")// Test case 4: Passing "off" as input
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("off")// Test case 4: Passing "off" as input
 target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
statement is: assertFalse(login.yesNoOnOffToBoolean("off"))// Assertion 4: Expecting false }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(login.yesNoOnOffToBoolean("off"))// Assertion 4: Expecting false }}
 target is:  method is: assertFalse(<unknown>)
TestCase is: Login login = new Login();
String string = "Yes";
login.yesNoOnOffToBoolean(string);
String string = "no";
login.yesNoOnOffToBoolean(string);
String string = "on";
login.yesNoOnOffToBoolean(string);
String string = "off";
login.yesNoOnOffToBoolean(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("ON")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("ON");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String yesNoOnOff = "YES";
    }
}
statement is: String yesNoOnOff = "YES", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "YES"
TestCase is: String string = "YES";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("conf/subnet_athena.conf")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Arrange
        String input = "on";
        // Act
        boolean actual = Login.yesNoOnOffToBoolean(input);
        // Assert
        assertEquals(true, actual);
    }
}
statement is: // Arrange
String input = "on", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Act
boolean actual = Login.yesNoOnOffToBoolean(input), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.yesNoOnOffToBoolean(input) target is: Login method is: yesNoOnOffToBoolean(java.lang.String)
statement is: // Assert
assertEquals(true, actual), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Assert
assertEquals(true, actual) target is:  method is: assertEquals(boolean,boolean)
* this is vulnerable: String string = "on"
TestCase is: String string = "on";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("NO")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("NO");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.yesNoOnOffToBoolean("YES");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.yesNoOnOffToBoolean("YES"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.yesNoOnOffToBoolean("YES") target is: login method is: yesNoOnOffToBoolean(java.lang.String)
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: yesNoOnOffToBoolean(Ljava/lang/String;)Z
TestCase is: Login login = new Login();
String string = "YES";
login.yesNoOnOffToBoolean(string);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: yesNoOnOffToBoolean(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("OFF")
test data is: Login login = new Login();
login.yesNoOnOffToBoolean("OFF");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Input values and expected results for different scenarios
        String[] inputValues = new String[]{ "yes", "no", "y", "n", "true", "false" };
        boolean[] expectedResults = new boolean[]{ true, false, true, false, true, false };
        // Test data after improvement:
        String[] inputValuesBeforeImprovement = new String[]{ "ON", "OFF" };
        boolean[] expectedResultsBeforeImprovement = new boolean[]{ true, false };
    }
}
statement is: // Input values and expected results for different scenarios
String[] inputValues = new String[]{ "yes", "no", "y", "n", "true", "false" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: boolean[] expectedResults = new boolean[]{ true, false, true, false, true, false }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: // Test data after improvement:
String[] inputValuesBeforeImprovement = new String[]{ "ON", "OFF" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: boolean[] expectedResultsBeforeImprovement = new boolean[]{ true, false }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.javathena.login.Login$End(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$End
statement code is: Login.End login_End = arg0.new End()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_End.run()
test data is: Login login = new Login();
Login.End login_End = login.new End();
login_End.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        Login.End login_End = login.new End();
        // Improved test data
        int userId = 1234;
        String password = "password123";
        login_End.run(userId, password);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.End login_End = login.new End(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
int userId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login_End.run(userId, password), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_End.run(userId, password) target is: login_End method is: run(int,java.lang.String)
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "password123"
TestCase is: Login login = new Login();
int _int = 1234;
String string = "password123";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.ArrayStatement@d940b067 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[0]
statement is: setServer_fd([I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.setServer_fd(arg0)
test data is: Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        int[] intArray = new int[]{ 1, 2, 3, 4, 5 };
        login.setServer_fd(intArray);
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int[] intArray = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[] intArray = new int[0] isAssignment: false Array: new int[]{ 1, 2, 3, 4, 5 } Elements: [1, 2, 3, 4, 5]
lengths: [0] []
statement is: login.setServer_fd(intArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setServer_fd(intArray) target is: login method is: setServer_fd(int[])
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: setServer_fd([I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Login login = new Login();
int[] intArray = null;
login.setServer_fd(intArray);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: login_log(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.login_log("conf/subnet_athena.conf")
test data is: Login login = new Login();
Login.login_log("conf/subnet_athena.conf");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        // Example 1: Valid credentials
        String userName = "admin";
        String password = "password";
        boolean expectedResult = true;
        // Example 2: Invalid credentials
        String userName = "invalidUser";
        String password = "invalidPassword";
        boolean expectedResult = false;
    }
}
statement is: // Improved test data for the above code snippet
// Example 1: Valid credentials
String userName = "admin", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean expectedResult = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Example 2: Invalid credentials
String userName = "invalidUser", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "invalidPassword", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean expectedResult = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "admin"
* this is vulnerable: String string = "password"
* this is vulnerable: boolean _boolean = true
* this is vulnerable: String string = "invalidUser"
* this is vulnerable: String string = "invalidPassword"
* this is vulnerable: boolean _boolean = false
TestCase is: String string = "admin";
String string = "password";
boolean _boolean = true;
String string = "invalidUser";
String string = "invalidPassword";
boolean _boolean = false;

statement is: mmo_auth_initXML()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initXML = Login.mmo_auth_initXML()
test data is: Login.mmo_auth_initXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login.mmo_auth_initXML("johndoe", true);
    }
}
statement is: Login.mmo_auth_initXML("johndoe", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initXML("johndoe", true) target is: Login method is: mmo_auth_initXML(java.lang.String,boolean)
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        Login login = new Login();
        login.setUsername("john.doe");
        login.setPassword("password123");
        login.mmo_auth_initTXT();
    }
}
statement is: // Improved test data:
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("john.doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("john.doe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_initTXT() target is: login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
TestCase is: Login login = new Login();
Login.mmo_auth_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        String userName = "John Doe";
        String password = "password123";
        login.mmo_auth_syncTXT();
        login.mmo_auth_initTXT();
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String userName = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_syncTXT() target is: login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.mmo_auth_initTXT() target is: login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
* this is vulnerable: String string = "John Doe"
* this is vulnerable: String string = "password123"
TestCase is: Login login = new Login();
String string = "John Doe";
String string = "password123";
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I')
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I');
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I');
        Login login = new Login();
        Login.mmo_auth_syncTXT();
        Login.mmo_auth_initTXT();
        assertEquals("- to ALLOW new users with first name John and last name Doe.", UserManagement.getUserData());
    }
}
statement is: UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
statement is: assertEquals("- to ALLOW new users with first name John and last name Doe.", UserManagement.getUserData()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("- to ALLOW new users with first name John and last name Doe.", UserManagement.getUserData()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: String string = "- to ALLOW new users (with _F/_M).";
String string = "- to ALLOW new users (with _F/_M).";
String string = "- to ALLOW new users (with _F/_M).";
char _char = 'I';
UserManagement.addUserTXT(string, string, string, _char);
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.javathena.core.data.Auth_data
statement code is: Auth_data addUserTXT = UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>')
statement is: mmo_auth_syncTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncTXT()
statement is: mmo_auth_initTXT()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mmo_auth_initTXT = Login.mmo_auth_initTXT()
test data is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before:
        Login login = new Login();
        UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
        Login.mmo_auth_syncTXT();
        Login.mmo_auth_initTXT();
        // After:
        Login login = new Login("1234567890", "password");
        UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
        Login.mmo_auth_syncTXT();
        Login.mmo_auth_initTXT();
        // Improved test data:
        login = new Login("1234567890", "password");// Replace with a valid username and password

        UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');// Replace with a valid file path for the user management configuration file

        Login.mmo_auth_syncTXT();// Sync the authentication data with the file system

        Login.mmo_auth_initTXT();// Initialize the authentication module with the updated data from the file system }}

    }
}
statement is: // Before:
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
statement is: // After:
Login login = new Login("1234567890", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>') target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT() target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: Login.mmo_auth_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT() target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
statement is: // Improved test data:
login = new Login("1234567890", "password")// Replace with a valid username and password
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>')// Replace with a valid file path for the user management configuration file
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>')// Replace with a valid file path for the user management configuration file
 target is: UserManagement method is: addUserTXT(java.lang.String,java.lang.String,java.lang.String,char)
Matched Method is: addUserTXT(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;C)Lorg/javathena/core/data/Auth_data;
statement is: Login.mmo_auth_syncTXT()// Sync the authentication data with the file system
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncTXT()// Sync the authentication data with the file system
 target is: Login method is: mmo_auth_syncTXT()
Matched Method is: mmo_auth_syncTXT()V
statement is: Login.mmo_auth_initTXT()// Initialize the authentication module with the updated data from the file system }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_initTXT()// Initialize the authentication module with the updated data from the file system }}
 target is: Login method is: mmo_auth_initTXT()
Matched Method is: mmo_auth_initTXT()I
TestCase is: Login login = new Login();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = '>';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = '>';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = '>';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncXML()
test data is: Login login = new Login();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        login = new Login(123456, "username", "password");
        Login.mmo_auth_syncXML(login);
    }
}
statement is: // Improved test data
login = new Login(123456, "username", "password"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: Login.mmo_auth_syncXML(login), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncXML(login) target is: Login method is: mmo_auth_syncXML()
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: check_auth_sync()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int check_auth_sync = login.check_auth_sync()
test data is: Login login = new Login();
login.check_auth_sync();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the check_auth_sync method
        int userId = 1234;// Change this to a more descriptive value, such as "johndoe"

        String password = "mypassword";// Change this to a more descriptive value, such as "mysecretpassword"

        boolean expectedResult = true;// Change this to the expected result of the method call, based on the inputs provided }}

    }
}
statement is: // Improved test data for the check_auth_sync method
int userId = 1234// Change this to a more descriptive value, such as "johndoe"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "mypassword"// Change this to a more descriptive value, such as "mysecretpassword"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean expectedResult = true// Change this to the expected result of the method call, based on the inputs provided }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "mypassword"
* this is vulnerable: boolean _boolean = true
TestCase is: int _int = 1234;
String string = "mypassword";
boolean _boolean = true;

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_final()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_final()
test data is: Login login = new Login();
login.do_final();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("password123");
        login.do_final();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.do_final(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_final() target is: login method is: do_final()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_final()V
TestCase is: Login login = new Login();
login.do_final();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: do_final()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_final()
test data is: Login login = new Login();
login.do_initTXT();
login.do_final();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.do_initTXT();
        login.do_final();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: login.do_final(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_final() target is: login method is: do_final()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_final()V
TestCase is: Login login = new Login();
login.do_initTXT();
login.do_final();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.STRSIZE type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.STRSIZE
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.ACCESS_ORDER_STRINGSIZE;// Setting access order to string size

        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();// Saving configuration in log file }}

    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.ACCESS_ORDER_STRINGSIZE// Setting access order to string size
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.ACCESS_ORDER_STRINGSIZE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log()// Saving configuration in log file }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log()// Saving configuration in log file }}
 target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.save_config_in_log("johndoe", "123456");
        login.save_config_in_log("janedoe", "abcdef");
        login.save_config_in_log("bobsmith", "qwerty");
        assertEquals(true, login.isConfigSaved());
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.save_config_in_log("johndoe", "123456"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log("johndoe", "123456") target is: login method is: save_config_in_log(java.lang.String,java.lang.String)
statement is: login.save_config_in_log("janedoe", "abcdef"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log("janedoe", "abcdef") target is: login method is: save_config_in_log(java.lang.String,java.lang.String)
statement is: login.save_config_in_log("bobsmith", "qwerty"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log("bobsmith", "qwerty") target is: login method is: save_config_in_log(java.lang.String,java.lang.String)
statement is: assertEquals(true, login.isConfigSaved()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(true, login.isConfigSaved()) target is:  method is: assertEquals(boolean,<unknown>)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_deny(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf")
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(1)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ConfigurationManagement.setAccess_deny("conf/subnet_athena_test.conf");
        ConfigurationManagement.setAccess_denynum(2);
        login.save_config_in_log();
        // Change the value of Access_deny to a more illustrative example, such as "conf/subnet_athena_prod.conf".
        // Change the value of Access_denynum to a more illustrative example, such as 3. }}
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_deny("conf/subnet_athena_test.conf"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_deny("conf/subnet_athena_test.conf") target is: ConfigurationManagement method is: setAccess_deny(java.lang.String)
Matched Method is: setAccess_deny(Ljava/lang/String;)V
statement is: ConfigurationManagement.setAccess_denynum(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(2) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
statement is: // Change the value of Access_deny to a more illustrative example, such as "conf/subnet_athena_prod.conf"., class spoon.support.reflect.code.CtCommentImpl
statement is: // Change the value of Access_denynum to a more illustrative example, such as 3. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: Login login = new Login();
String string = "conf/subnet_athena_test.conf";
ConfigurationManagement.setAccess_deny(string);
int _int = 2;
ConfigurationManagement.setAccess_denynum(_int);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: setAccess_denynum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_denynum(1)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ConfigurationManagement.setAccess_denynum(99);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConfigurationManagement.setAccess_denynum(99), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_denynum(99) target is: ConfigurationManagement method is: setAccess_denynum(int)
Matched Method is: setAccess_denynum(I)V
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
int _int = 99;
ConfigurationManagement.setAccess_denynum(_int);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.ALLOW_DENY type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.ALLOW_DENY
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.ALLOW_DENY;
        ConfigurationManagement.setAccess_order(aCO);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.ALLOW_DENY, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.ALLOW_DENY is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.ALLOW_DENY type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.ALLOW_DENY
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(1)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.ALLOW_DENY;
        ConfigurationManagement.setAccess_order(aCO);
        ConfigurationManagement.setAccess_allownum("single");
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.ALLOW_DENY, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.ALLOW_DENY is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.setAccess_allownum("single"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum("single") target is: ConfigurationManagement method is: setAccess_allownum(java.lang.String)
Matched Method is: setAccess_allownum(I)V
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
String string = "single";
ConfigurationManagement.setAccess_allownum((int) string);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.ALLOW_DENY type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.ALLOW_DENY
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum((-3416))
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum((-3416));
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login admin = new Login();
        ACO aCO = ACO.ALLOW_OVERRIDE;
        ConfigurationManagement.setAccess_order(aCO);
        ConfigurationManagement.setAccess_allownum(1234);
        admin.save_config_in_log();
    }
}
statement is: Login admin = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.ALLOW_OVERRIDE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.ALLOW_OVERRIDE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.setAccess_allownum(1234), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(1234) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: admin.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: admin.save_config_in_log() target is: admin method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
int _int = 1234;
ConfigurationManagement.setAccess_allownum(_int);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.STRSIZE type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.STRSIZE
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum(1)
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.STRSIZE;
        ConfigurationManagement.setAccess_order(aCO);
        ConfigurationManagement.setAccess_allownum(1);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.STRSIZE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.STRSIZE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.setAccess_allownum(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(1) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
int _int = 1;
ConfigurationManagement.setAccess_allownum(_int);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: ACO aCO = ACO.STRSIZE type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.javathena.core.utiles.ACO
statement code is: ACO aCO = ACO.STRSIZE
statement is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_order(arg0)
statement is: setAccess_allownum(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ConfigurationManagement.setAccess_allownum((-1330))
statement is: save_config_in_log()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.save_config_in_log()
test data is: Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum((-1330));
login.save_config_in_log();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        ACO aCO = ACO.STRSIZE;
        ConfigurationManagement.setAccess_order(aCO);
        ConfigurationManagement.setAccess_allownum(-1330);
        login.save_config_in_log();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACO aCO = ACO.STRSIZE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ACO.STRSIZE is ACO
statement is: ConfigurationManagement.setAccess_order(aCO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_order(aCO) target is: ConfigurationManagement method is: setAccess_order(ACO)
Matched Method is: setAccess_order(Lorg/javathena/core/utiles/ACO;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ConfigurationManagement.setAccess_allownum(-1330), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ConfigurationManagement.setAccess_allownum(-1330) target is: ConfigurationManagement method is: setAccess_allownum(int)
Matched Method is: setAccess_allownum(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: login.save_config_in_log(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.save_config_in_log() target is: login method is: save_config_in_log()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: save_config_in_log()V
TestCase is: Login login = new Login();
ACO aCO = null;
ConfigurationManagement.setAccess_order(aCO);
int _int = null;
ConfigurationManagement.setAccess_allownum(_int);
login.save_config_in_log();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@5dd48907 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: login.auth_max = (-1828)
statement is: getAuth_max()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_max = login.getAuth_max()
test data is: Login login = new Login();
login.auth_max = (-1828);
login.getAuth_max();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.auth_max = 100;
        login.getAuth_max();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.auth_max = 100, class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.getAuth_max(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_max() target is: login method is: getAuth_max()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getAuth_max()I
TestCase is: Login login = new Login();
login.getAuth_max();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@8216f1ec type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: login.auth_max = 80
statement is: getAuth_max()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_max = login.getAuth_max()
test data is: Login login = new Login();
login.auth_max = 80;
login.getAuth_max();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.auth_max = 1234;// instead of using a primitive value, use an example that is closer to the expected behavior

        login.getAuth_max();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.auth_max = 1234// instead of using a primitive value, use an example that is closer to the expected behavior
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.getAuth_max(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_max() target is: login method is: getAuth_max()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getAuth_max()I
TestCase is: Login login = new Login();
login.getAuth_max();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@49279740 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: Login.auth_num = (-1074)
statement is: getAuth_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_num = login.getAuth_num()
test data is: Login login = new Login();
Login.auth_num = (-1074);
login.getAuth_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setAuth_num(200);// Improved test data

        login.getAuth_num();
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuth_num(200)// Improved test data
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuth_num(200)// Improved test data
 target is: login method is: setAuth_num(int)
statement is: login.getAuth_num(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getAuth_num() target is: login method is: getAuth_num()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getAuth_num()I
TestCase is: Login login = new Login();
login.getAuth_num();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@2c0ff95d type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: Login.auth_num = 3
statement is: getAuth_num()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int auth_num = login.getAuth_num()
test data is: Login login = new Login();
Login.auth_num = 3;
login.getAuth_num();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setAuth_num(10);
        assertEquals(10, login.getAuth_num());
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setAuth_num(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setAuth_num(10) target is: login method is: setAuth_num(int)
statement is: assertEquals(10, login.getAuth_num()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(10, login.getAuth_num()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: Login login = new Login();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: getOut()Ljava/io/PrintWriter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockPrintWriter
statement code is: MockPrintWriter out = (MockPrintWriter)login.getOut()
test data is: Login login = new Login();
login.do_initTXT();
login.getOut();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        // Create a mock object for the Login class and initialize it with some example values
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("password123");
        login.setServerAddress("example.com");
        login.setPort(80);
        // Call the do_initTXT() method and verify that it returns a boolean value of true
        boolean result = login.do_initTXT();
        assertEquals(true, result);
        // Verify that the getOut() method returns the correct string
        String output = login.getOut();
        assertEquals("Logged in successfully", output);
    }
}
statement is: // Improved test data for the code snippet
// Create a mock object for the Login class and initialize it with some example values
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
statement is: login.setServerAddress("example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setServerAddress("example.com") target is: login method is: setServerAddress(java.lang.String)
statement is: login.setPort(80), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPort(80) target is: login method is: setPort(int)
statement is: // Call the do_initTXT() method and verify that it returns a boolean value of true
boolean result = login.do_initTXT(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
statement is: assertEquals(true, result), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(true, result) target is:  method is: assertEquals(boolean,boolean)
statement is: // Verify that the getOut() method returns the correct string
String output = login.getOut(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.getOut() target is: login method is: getOut()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 0, type org.javathena.login.Loginindex is: 0
Matched Method is: getOut()Ljava/io/PrintWriter;
statement is: assertEquals("Logged in successfully", output), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("Logged in successfully", output) target is:  method is: assertEquals(java.lang.String,java.lang.String)
TestCase is: Login login = new Login();
login.do_initTXT();
login.getOut();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: org.evosuite.testcase.statements.AssignmentStatement@c55f551c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: login.server_fd = null
statement is: getServer_fd()[I type is: class org.evosuite.testcase.statements.MethodStatement return type class [I
statement code is: int[] server_fd = login.getServer_fd()
test data is: Login login = new Login();
login.server_fd = null;
login.getServer_fd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Login login = new Login();
        login.server_fd = "localhost";
        login.port = 8080;
        login.username = "johndoe";
        login.password = "password123";
    }
}
statement is: // Improved test data
Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.server_fd = "localhost", class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.port = 8080, class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.username = "johndoe", class spoon.support.reflect.code.CtAssignmentImpl
statement is: login.password = "password123", class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: Login login = new Login();

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: org.javathena.login.parse.FromAdmin()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.parse.FromAdmin
statement code is: FromAdmin fromAdmin = new FromAdmin()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0, arg1)
statement is: codingKey(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.codingKey(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Login login = new Login();
mockSocket.close();
login.do_initTXT();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
Login.codingKey(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("example.com", 80);
        Login login = new Login();
        mockSocket.close();
        login.do_initTXT();
        FromAdmin fromAdmin = new FromAdmin();
        Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
        Login.codingKey(socket_data);
    }
}
statement is: MockSocket mockSocket = new MockSocket("example.com", 80), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockSocket.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.close() target is: mockSocket method is: close()
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 1, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
TestCase Could not be added: do_initTXT()V
statement is: FromAdmin fromAdmin = new FromAdmin(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Socket_data socket_data = new Socket_data(mockSocket, fromAdmin), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.javathena.core.data.Socket_data(Ljava/net/Socket;Lorg/javathena/core/data/IParse;)V
statement is: Login.codingKey(socket_data), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.codingKey(socket_data) target is: Login method is: codingKey(Socket_data)
Matched Method is: codingKey(Lorg/javathena/core/data/Socket_data;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Login login = new Login();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = null;
Login.codingKey(socket_data);

statement is: org.evosuite.runtime.mock.java.net.MockSocket()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.net.MockSocket
statement code is: MockSocket mockSocket = new MockSocket()
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mockSocket.close()
statement is: org.javathena.core.data.Socket_data(Ljava/net/Socket;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.core.data.Socket_data
statement code is: Socket_data socket_data = new Socket_data(arg0)
statement is: codingKeyAdministration(Lorg/javathena/core/data/Socket_data;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.codingKeyAdministration(arg0)
test data is: MockSocket mockSocket = new MockSocket();
Login login = new Login();
login.do_initTXT();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
Login.codingKeyAdministration(socket_data);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockSocket mockSocket = new MockSocket("192.168.0.1", 80);
        Login login = new Login();
        login.do_initTXT();
        mockSocket.close();
        Socket_data socket_data = new Socket_data(mockSocket);
        Login.codingKeyAdministration(socket_data, "admin", "password123");
    }
}
statement is: MockSocket mockSocket = new MockSocket("192.168.0.1", 80), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 1, type org.javathena.login.Loginindex is: 0
Matched Method is: do_initTXT()V
TestCase Could not be added: do_initTXT()V
statement is: mockSocket.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockSocket.close() target is: mockSocket method is: close()
statement is: Socket_data socket_data = new Socket_data(mockSocket), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.codingKeyAdministration(socket_data, "admin", "password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.codingKeyAdministration(socket_data, "admin", "password123") target is: Login method is: codingKeyAdministration(Socket_data,java.lang.String,java.lang.String)
TestCase is: Login login = new Login();
Socket_data socket_data = new Socket_data((Socket) login);

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_init()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int do_init = login.do_init()
test data is: Login login = new Login();
login.do_init();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        String username = "johndoe";
        String password = "password123";
        login.setUsername(username);
        login.setPassword(password);
        // Original test data
        // String username = "testuser";
        // String password = "testpass";
        // login.setUsername(username);
        // login.setPassword(password); }}
    }
}
statement is: // Improved test data
String username = "johndoe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String password = "password123", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: login.setUsername(username), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername(username) target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword(password), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword(password) target is: login method is: setPassword(java.lang.String)
statement is: // Original test data, class spoon.support.reflect.code.CtCommentImpl
statement is: // String username = "testuser";, class spoon.support.reflect.code.CtCommentImpl
statement is: // String password = "testpass";, class spoon.support.reflect.code.CtCommentImpl
statement is: // login.setUsername(username);, class spoon.support.reflect.code.CtCommentImpl
statement is: // login.setPassword(password); }}, class spoon.support.reflect.code.CtCommentImpl
* this is vulnerable: String string = "johndoe"
* this is vulnerable: String string = "password123"
TestCase is: String string = "johndoe";
String string = "password123";

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initSQL()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.do_initSQL()
test data is: Login login = new Login();
Login.do_initSQL();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        login.setUsername("johndoe");
        login.setPassword("password123");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setUsername("johndoe") target is: login method is: setUsername(java.lang.String)
statement is: login.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.setPassword("password123") target is: login method is: setPassword(java.lang.String)
TestCase is: Login login = new Login();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "EGGGIRL")
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
FileSystemHandling.appendStringToFile(evoSuiteFile, "EGGGIRL");
Login login = new Login();
login.do_initTXT();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "EGGGIRL");
        Login login = new Login();
        login.do_initTXT();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "EGGGIRL"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "EGGGIRL") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login.do_initTXT(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login.do_initTXT() target is: login method is: do_initTXT()
source statement: org.javathena.login.Login()V callee: VariableReference: Statement 2, type org.javathena.login.Loginindex is: 3
Matched Method is: do_initTXT()V
TestCase is: String string = "EGGGIRL";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
Login login = new Login();
((Login) appendStringToFile).do_initTXT();

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save")
statement is: org.evosuite.testcase.statements.ArrayStatement@f6562e56 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: mmo_auth_syncXML()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Login.mmo_auth_syncXML()
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Login login = new Login();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
        byte[] byteArray = new byte[]{ ((byte) (0xab)), ((byte) (0xcd)), ((byte) (0xef)) };// Improved test data

        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Login login = new Login();
        Login.mmo_auth_syncXML();
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ ((byte) (0xab)), ((byte) (0xcd)), ((byte) (0xef)) }// Improved test data
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[]{ ((byte) (0xab)), ((byte) (0xcd)), ((byte) (0xef)) } Elements: [((byte) (0xab)), ((byte) (0xcd)), ((byte) (0xef))]
lengths: [9] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Login.mmo_auth_syncXML(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Login.mmo_auth_syncXML() target is: Login method is: mmo_auth_syncXML()
Matched Method is: mmo_auth_syncXML()V
TestCase is: EvoSuiteFile evoSuiteFile = null;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Login login = new Login();
Login.mmo_auth_syncXML();

statement is: org.javathena.login.Login()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login
statement code is: Login login = new Login()
statement is: do_initTXT()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login.do_initTXT()
statement is: org.javathena.login.Login$Timer_interval_check_auth_sync(Lorg/javathena/login/Login;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.javathena.login.Login$Timer_interval_check_auth_sync
statement code is: Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = arg0.new Timer_interval_check_auth_sync()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: login_Timer_interval_check_auth_sync.run()
test data is: Login login = new Login();
login.do_initTXT();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Login login = new Login();
        // Improved test data: changed the primitive values and Strings to more descriptive examples
        login.do_initTXT("initialization string");
        Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
        login_Timer_interval_check_auth_sync.run("timer interval");
    }
}
statement is: Login login = new Login(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: changed the primitive values and Strings to more descriptive examples
login.do_initTXT("initialization string"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data: changed the primitive values and Strings to more descriptive examples
login.do_initTXT("initialization string") target is: login method is: do_initTXT(java.lang.String)
statement is: Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: login_Timer_interval_check_auth_sync.run("timer interval"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: login_Timer_interval_check_auth_sync.run("timer interval") target is: login_Timer_interval_check_auth_sync method is: run(java.lang.String)
TestCase is: Login login = new Login();

* test suite isTestSuite: 144
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
Login login = new Login();
login.getAuth_num();
Test 4: 
Login login = new Login();
login.getServer_fd();
Test 5: 
Login login = new Login();
login.check_ip((InetAddress) null);
Test 6: 
Login login = new Login();
login.check_ipmask(10, "+[XDP3QTKCB*P+");
Test 7: 
Login.logUnknownPackets((Socket_data) null);
Test 8: 
Login login = new Login();
login.setAuth_max((-4576));
Test 9: 
Login login = new Login();
login.getOut();
Test 10: 
Login.getPASSWORDENC();
Test 11: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 12: 
Login.display_title();
Test 13: 
Login.getDbManagemtType();
Test 14: 
Login login = new Login();
login.do_initXML();
Test 15: 
Login.setPASSWORDENC(50);
Test 16: 
Login login = new Login();
login.getAuth_max();
Test 17: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);
Test 18: 
Login.login_log("");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 20: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 21: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "Ue=~q*", "Ue=~q*", 'v');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Login login = new Login();
UserManagement.setAccountIdCount((-232));
UserManagement.addUserTXT("_y`Uka]{; ]", "_y`Uka]{; ]", "conf/subnet_athena.conf", '[');
Login.mmo_auth_syncTXT();
Test 24: 
Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(31034);
Login.mmo_auth_syncXML();
Test 25: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);
Test 26: 
Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(10);
login.check_auth_sync();
Test 27: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 28: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
login.parse_admin((-2468), socket_data, login);
Test 29: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 30: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 31: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 32: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 33: 
Login login = new Login();
login.do_initTXT();
login.parse_console("help");
Test 34: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
Test 35: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();
Test 36: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.setAccess_allownum(1);
login.do_initTXT();
Test 37: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 38: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 39: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 40: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Test 42: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 43: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
Test 44: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
Login.mmo_auth_initXML();
Test 46: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 47: 
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 49: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 51: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 52: 
Login login = new Login();
login.do_final();
Test 53: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 55: 
Login login = new Login();
login.save_config_in_log();
Test 56: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 57: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 58: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 59: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();
Test 60: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum((-3416));
login.save_config_in_log();
Test 61: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();
Test 62: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum((-1330));
login.save_config_in_log();
Test 63: 
Login login = new Login();
login.auth_max = (-1828);
login.getAuth_max();
Test 64: 
Login login = new Login();
login.auth_max = 80;
login.getAuth_max();
Test 65: 
Login login = new Login();
Login.auth_num = (-1074);
login.getAuth_num();
Test 66: 
Login login = new Login();
Login.auth_num = 3;
login.getAuth_num();
Test 67: 
Login login = new Login();
login.do_initTXT();
login.getOut();
Test 68: 
Login login = new Login();
login.server_fd = null;
login.getServer_fd();
Test 69: 
MockSocket mockSocket = new MockSocket();
Login login = new Login();
mockSocket.close();
login.do_initTXT();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
Login.codingKey(socket_data);
Test 70: 
MockSocket mockSocket = new MockSocket();
Login login = new Login();
login.do_initTXT();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
Login.codingKeyAdministration(socket_data);
Test 71: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 72: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 73: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
FileSystemHandling.appendStringToFile(evoSuiteFile, "EGGGIRL");
Login login = new Login();
login.do_initTXT();
Test 74: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Login login = new Login();
Login.mmo_auth_syncXML();
Test 75: 
Login login = new Login();
login.do_initTXT();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
Test 76: 
Login login = new Login();

Test 77: 
Login login = new Login();
Login login = new Login();

Test 78: 
Login login = new Login();
login.setOut((PrintWriter) null);

Test 79: 
Login login = new Login();

Test 80: 

Test 81: 
Login login = new Login();
login.check_ip((InetAddress) null);

Test 82: 
Login login = new Login();
login.check_ipmask(255, "255.255.255.255");

Test 83: 
Login.logUnknownPackets((Socket_data) null);
Login.logUnknownPackets((Socket_data) null);
Login.logUnknownPackets((Socket_data) null);

Test 84: 
Login login = new Login();
login.setAuth_max((int) (Integer) null);

Test 85: 
Login login = new Login();
login.getOut();

Test 86: 
Login.version((Socket_data) "1234567890");

Test 87: 

Test 88: 
Login.getDbManagemtType();

Test 89: 
Login login = new Login();
login.do_initXML();

Test 90: 
Login.setPASSWORDENC((int) "50");

Test 91: 
Login login = new Login();
login.getAuth_max();

Test 92: 
MockSocket mockSocket = new MockSocket();
Login.getMd5Data((Socket_data) "user@email.com");
String string = "user@email.com";
Login.getMd5Data((Socket_data) string);

Test 93: 
Login.login_log("user@example.com");

Test 94: 
Login login = new Login();
login.do_initTXT();
login.parse_console("shutdown");

Test 95: 
UserManagement.addUserTXT("conf/subnet_athena.conf", "username=john.smith", "password=1234567890", 'v');
Login.mmo_auth_syncTXT();

Test 96: 
String string = "John Doe";
UserManagement.addUserTXT("john.doe@example.com", "John Doe", "Password123!", (char) "123-456-7890");
Login login = new Login();
((Login) string).do_initTXT();

Test 97: 
Login login = new Login();
UserManagement.setAccountIdCount((int) (Integer) null);
String string = "johndoe";
String string = "password123";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
String string = "janedoe";
String string = "password456";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
String string = "michelangelo";
String string = "password789";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();

Test 98: 
Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(12345);
Login.mmo_auth_syncXML();

Test 99: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);

Test 100: 
Login login = new Login();

Test 101: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
login.parse_admin((int) socket_data, (Socket_data) login, (Login) null);

Test 102: 

Test 103: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");

Test 104: 
Login login = new Login();
login.do_initTXT();
login.parse_console("help");

Test 105: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

Test 106: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(4);
login.save_config_in_log();

Test 107: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.setAccess_allownum(1);

Test 108: 
Login login = new Login();
login.yesNoOnOffToBoolean("Yes");
login.yesNoOnOffToBoolean("no");
login.yesNoOnOffToBoolean("on");
login.yesNoOnOffToBoolean("off");

Test 109: 

Test 110: 

Test 111: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");

Test 112: 
Login login = new Login();

Test 113: 
Login login = new Login();
login.setServer_fd((int[]) null);

Test 114: 

Test 115: 
Login login = new Login();
Login.mmo_auth_initTXT();

Test 116: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 117: 
UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I');
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 118: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = '>';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = '>';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 119: 

Test 120: 
Login login = new Login();
login.do_final();

Test 121: 
Login login = new Login();
login.do_initTXT();
login.do_final();

Test 122: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 123: 
Login login = new Login();

Test 124: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena_test.conf");
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();

Test 125: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(99);
login.save_config_in_log();

Test 126: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 127: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum((int) "single");
login.save_config_in_log();

Test 128: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum(1234);
login.save_config_in_log();

Test 129: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();

Test 130: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum((int) (Integer) null);
login.save_config_in_log();

Test 131: 
Login login = new Login();
login.getAuth_max();

Test 132: 
Login login = new Login();
login.getAuth_max();

Test 133: 
Login login = new Login();
login.getAuth_num();

Test 134: 
Login login = new Login();

Test 135: 
Login login = new Login();
login.do_initTXT();
login.getOut();

Test 136: 
Login login = new Login();

Test 137: 
Login login = new Login();
FromAdmin fromAdmin = new FromAdmin();
Login.codingKey((Socket_data) null);

Test 138: 
Login login = new Login();
Socket_data socket_data = new Socket_data((Socket) login);

Test 139: 

Test 140: 
Login login = new Login();

Test 141: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "EGGGIRL", (String) null);
Login login = new Login();
((Login) appendStringToFile).do_initTXT();

Test 142: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
Login login = new Login();
Login.mmo_auth_syncXML();

Test 143: 
Login login = new Login();


* Generated after the refinement and before minimization 144 tests with total length 404
* test suite isTestSuite: 144
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
Login login = new Login();
login.getAuth_num();
Test 4: 
Login login = new Login();
login.getServer_fd();
Test 5: 
Login login = new Login();
login.check_ip((InetAddress) null);
Test 6: 
Login login = new Login();
login.check_ipmask(10, "+[XDP3QTKCB*P+");
Test 7: 
Login.logUnknownPackets((Socket_data) null);
Test 8: 
Login login = new Login();
login.setAuth_max((-4576));
Test 9: 
Login login = new Login();
login.getOut();
Test 10: 
Login.getPASSWORDENC();
Test 11: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 12: 
Login.display_title();
Test 13: 
Login.getDbManagemtType();
Test 14: 
Login login = new Login();
login.do_initXML();
Test 15: 
Login.setPASSWORDENC(50);
Test 16: 
Login login = new Login();
login.getAuth_max();
Test 17: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);
Test 18: 
Login.login_log("");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 20: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 21: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "Ue=~q*", "Ue=~q*", 'v');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Login login = new Login();
UserManagement.setAccountIdCount((-232));
UserManagement.addUserTXT("_y`Uka]{; ]", "_y`Uka]{; ]", "conf/subnet_athena.conf", '[');
Login.mmo_auth_syncTXT();
Test 24: 
Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(31034);
Login.mmo_auth_syncXML();
Test 25: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);
Test 26: 
Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(10);
login.check_auth_sync();
Test 27: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 28: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
login.parse_admin((-2468), socket_data, login);
Test 29: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 30: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 31: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 32: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 33: 
Login login = new Login();
login.do_initTXT();
login.parse_console("help");
Test 34: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
Test 35: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();
Test 36: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.setAccess_allownum(1);
login.do_initTXT();
Test 37: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 38: 
Login login = new Login();
login.yesNoOnOffToBoolean("ON");
Test 39: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 40: 
Login login = new Login();
login.yesNoOnOffToBoolean("NO");
Test 41: 
Login login = new Login();
login.yesNoOnOffToBoolean("OFF");
Test 42: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 43: 
Login login = new Login();
int[] intArray = new int[0];
login.setServer_fd(intArray);
Test 44: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
Login.mmo_auth_initXML();
Test 46: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 47: 
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 49: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 51: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 52: 
Login login = new Login();
login.do_final();
Test 53: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 55: 
Login login = new Login();
login.save_config_in_log();
Test 56: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 57: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 58: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 59: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();
Test 60: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum((-3416));
login.save_config_in_log();
Test 61: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();
Test 62: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum((-1330));
login.save_config_in_log();
Test 63: 
Login login = new Login();
login.auth_max = (-1828);
login.getAuth_max();
Test 64: 
Login login = new Login();
login.auth_max = 80;
login.getAuth_max();
Test 65: 
Login login = new Login();
Login.auth_num = (-1074);
login.getAuth_num();
Test 66: 
Login login = new Login();
Login.auth_num = 3;
login.getAuth_num();
Test 67: 
Login login = new Login();
login.do_initTXT();
login.getOut();
Test 68: 
Login login = new Login();
login.server_fd = null;
login.getServer_fd();
Test 69: 
MockSocket mockSocket = new MockSocket();
Login login = new Login();
mockSocket.close();
login.do_initTXT();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
Login.codingKey(socket_data);
Test 70: 
MockSocket mockSocket = new MockSocket();
Login login = new Login();
login.do_initTXT();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
Login.codingKeyAdministration(socket_data);
Test 71: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 72: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 73: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
FileSystemHandling.appendStringToFile(evoSuiteFile, "EGGGIRL");
Login login = new Login();
login.do_initTXT();
Test 74: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Login login = new Login();
Login.mmo_auth_syncXML();
Test 75: 
Login login = new Login();
login.do_initTXT();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
Test 76: 
Login login = new Login();

Test 77: 
Login login = new Login();
Login login = new Login();

Test 78: 
Login login = new Login();
login.setOut((PrintWriter) null);

Test 79: 
Login login = new Login();

Test 80: 

Test 81: 
Login login = new Login();
login.check_ip((InetAddress) null);

Test 82: 
Login login = new Login();
login.check_ipmask(255, "255.255.255.255");

Test 83: 
Login.logUnknownPackets((Socket_data) null);
Login.logUnknownPackets((Socket_data) null);
Login.logUnknownPackets((Socket_data) null);

Test 84: 
Login login = new Login();
login.setAuth_max((int) (Integer) null);

Test 85: 
Login login = new Login();
login.getOut();

Test 86: 
Login.version((Socket_data) "1234567890");

Test 87: 

Test 88: 
Login.getDbManagemtType();

Test 89: 
Login login = new Login();
login.do_initXML();

Test 90: 
Login.setPASSWORDENC((int) "50");

Test 91: 
Login login = new Login();
login.getAuth_max();

Test 92: 
MockSocket mockSocket = new MockSocket();
Login.getMd5Data((Socket_data) "user@email.com");
String string = "user@email.com";
Login.getMd5Data((Socket_data) string);

Test 93: 
Login.login_log("user@example.com");

Test 94: 
Login login = new Login();
login.do_initTXT();
login.parse_console("shutdown");

Test 95: 
UserManagement.addUserTXT("conf/subnet_athena.conf", "username=john.smith", "password=1234567890", 'v');
Login.mmo_auth_syncTXT();

Test 96: 
String string = "John Doe";
UserManagement.addUserTXT("john.doe@example.com", "John Doe", "Password123!", (char) "123-456-7890");
Login login = new Login();
((Login) string).do_initTXT();

Test 97: 
Login login = new Login();
UserManagement.setAccountIdCount((int) (Integer) null);
String string = "johndoe";
String string = "password123";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
String string = "janedoe";
String string = "password456";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
String string = "michelangelo";
String string = "password789";
String string = "conf/subnet_athena.conf";
char _char = '[';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();

Test 98: 
Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(12345);
Login.mmo_auth_syncXML();

Test 99: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);

Test 100: 
Login login = new Login();

Test 101: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
login.parse_admin((int) socket_data, (Socket_data) login, (Login) null);

Test 102: 

Test 103: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");

Test 104: 
Login login = new Login();
login.do_initTXT();
login.parse_console("help");

Test 105: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");

Test 106: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(4);
login.save_config_in_log();

Test 107: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.setAccess_allownum(1);

Test 108: 
Login login = new Login();
login.yesNoOnOffToBoolean("Yes");
login.yesNoOnOffToBoolean("no");
login.yesNoOnOffToBoolean("on");
login.yesNoOnOffToBoolean("off");

Test 109: 

Test 110: 

Test 111: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");

Test 112: 
Login login = new Login();

Test 113: 
Login login = new Login();
login.setServer_fd((int[]) null);

Test 114: 

Test 115: 
Login login = new Login();
Login.mmo_auth_initTXT();

Test 116: 
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 117: 
UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I');
Login login = new Login();
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 118: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = '>';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
String string = "conf/subnet_athena.conf";
char _char = '>';
UserManagement.addUserTXT(string, string, string, _char);
Login.mmo_auth_syncTXT();
Login.mmo_auth_initTXT();

Test 119: 

Test 120: 
Login login = new Login();
login.do_final();

Test 121: 
Login login = new Login();
login.do_initTXT();
login.do_final();

Test 122: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 123: 
Login login = new Login();

Test 124: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena_test.conf");
ConfigurationManagement.setAccess_denynum(2);
login.save_config_in_log();

Test 125: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(99);
login.save_config_in_log();

Test 126: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();

Test 127: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum((int) "single");
login.save_config_in_log();

Test 128: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum(1234);
login.save_config_in_log();

Test 129: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();

Test 130: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum((int) (Integer) null);
login.save_config_in_log();

Test 131: 
Login login = new Login();
login.getAuth_max();

Test 132: 
Login login = new Login();
login.getAuth_max();

Test 133: 
Login login = new Login();
login.getAuth_num();

Test 134: 
Login login = new Login();

Test 135: 
Login login = new Login();
login.do_initTXT();
login.getOut();

Test 136: 
Login login = new Login();

Test 137: 
Login login = new Login();
FromAdmin fromAdmin = new FromAdmin();
Login.codingKey((Socket_data) null);

Test 138: 
Login login = new Login();
Socket_data socket_data = new Socket_data((Socket) login);

Test 139: 

Test 140: 
Login login = new Login();

Test 141: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "EGGGIRL", (String) null);
Login login = new Login();
((Login) appendStringToFile).do_initTXT();

Test 142: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
Login login = new Login();
Login.mmo_auth_syncXML();

Test 143: 
Login login = new Login();


* Minimizing test suite
* test suite isTestSuite: 76
Test 0: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
Test 1: 
Login login = new Login();
login.getLog_fp();
Test 2: 
Login login = new Login();
login.setOut((PrintWriter) null);
Test 3: 
Login login = new Login();
login.getAuth_num();
Test 4: 
Login login = new Login();
login.getServer_fd();
Test 5: 
Login login = new Login();
login.check_ip((InetAddress) null);
Test 6: 
Login login = new Login();
login.check_ipmask(255, "255.255.255.255");
Test 7: 
Login.logUnknownPackets((Socket_data) null);
Test 8: 
Login login = new Login();
login.setAuth_max((-4576));
Test 9: 
Login login = new Login();
login.getOut();
Test 10: 
Login.getPASSWORDENC();
Test 11: 
// Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 12: 
Login.display_title();
Test 13: 
Login.getDbManagemtType();
Test 14: 
Login login = new Login();
login.do_initXML();
Test 15: 
Login.setPASSWORDENC(50);
Test 16: 
Login login = new Login();
login.getAuth_max();
Test 17: 
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
Login.getMd5Data(socket_data);
Login.getMd5Data(socket_data);
Test 18: 
Login.login_log("user@example.com");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(evoSuiteFile);
Login.mmo_auth_initXML();
Test 20: 
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 22: 
UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "Ue=~q*", "Ue=~q*", 'v');
Login.mmo_auth_syncTXT();
Login login = new Login();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
Login login = new Login();
UserManagement.setAccountIdCount((-232));
UserManagement.addUserTXT("_y`Uka]{; ]", "_y`Uka]{; ]", "conf/subnet_athena.conf", '[');
Login.mmo_auth_syncTXT();
Test 26: 
Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(12345);
Login.mmo_auth_syncXML();
Test 27: 
byte[] byteArray = new byte[1];
Login.showTab(byteArray);
Test 28: 
Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(10);
login.check_auth_sync();
Test 29: 
Login login = new Login();
Login.ConnectionListener login_ConnectionListener = login.new ConnectionListener();
login_ConnectionListener.run();
Test 30: 
Login login = new Login();
MockSocket mockSocket = new MockSocket();
Socket_data socket_data = new Socket_data(mockSocket);
mockSocket.close();
login.parse_admin((-2468), socket_data, login);
Test 31: 
Login login = new Login();
login.do_initTXT();
login.parse_console("status");
Test 32: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 33: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 34: 
Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
Test 35: 
Login login = new Login();
login.do_initTXT();
login.parse_console("help");
Test 36: 
Login login = new Login();
login.do_initTXT();
login.parse_console("conf/subnet_athena.conf");
Test 37: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
Test 38: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(4);
login.save_config_in_log();
Test 39: 
Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 40: 
Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
Test 41: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
login.save_config_in_log();
Test 42: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum((-3416));
login.save_config_in_log();
Test 43: 
Login login = new Login();
ACO aCO = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();
Test 44: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();
Test 45: 
Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum(1234);
login.save_config_in_log();
Test 46: 
Login login = new Login();
ACO aCO = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(aCO);
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.setAccess_allownum(1);
login.do_initTXT();
Test 47: 
Login login = new Login();
login.yesNoOnOffToBoolean("YES");
Test 48: 
Login login = new Login();
login.yesNoOnOffToBoolean("no");
Test 49: 
Login login = new Login();
login.yesNoOnOffToBoolean("on");
Test 50: 
Login login = new Login();
login.yesNoOnOffToBoolean("off");
Test 51: 
Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}

Test 52: 
Login login = new Login();
Login.End login_End = login.new End();
login_End.run();
Test 53: 
Login login = new Login();
login.setServer_fd((int[]) null);
Test 54: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 55: 
Login.mmo_auth_initXML();
Test 56: 
Login login = new Login();
Login.mmo_auth_initTXT();
Test 57: 
Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 58: 
Login login = new Login();
Login.mmo_auth_syncXML();
Test 59: 
Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}

Test 60: 
Login login = new Login();
login.do_final();
Test 61: 
Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 62: 
Login login = new Login();
login.save_config_in_log();
Test 63: 
Login login = new Login();
login.auth_max = (-1828);
login.getAuth_max();
Test 64: 
Login login = new Login();
login.auth_max = 80;
login.getAuth_max();
Test 65: 
Login login = new Login();
Login.auth_num = (-1074);
login.getAuth_num();
Test 66: 
Login login = new Login();
Login.auth_num = 3;
login.getAuth_num();
Test 67: 
Login login = new Login();
login.do_initTXT();
login.getOut();
Test 68: 
Login login = new Login();
login.server_fd = null;
login.getServer_fd();
Test 69: 
MockSocket mockSocket = new MockSocket();
Login login = new Login();
mockSocket.close();
login.do_initTXT();
FromAdmin fromAdmin = new FromAdmin();
Socket_data socket_data = new Socket_data(mockSocket, fromAdmin);
Login.codingKey(socket_data);
Test 70: 
MockSocket mockSocket = new MockSocket();
Login login = new Login();
login.do_initTXT();
mockSocket.close();
Socket_data socket_data = new Socket_data(mockSocket);
Login.codingKeyAdministration(socket_data);
Test 71: 
Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 72: 
Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 73: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
FileSystemHandling.appendStringToFile(evoSuiteFile, "EGGGIRL");
Login login = new Login();
login.do_initTXT();
Test 74: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("save");
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Login login = new Login();
Login.mmo_auth_syncXML();
Test 75: 
Login login = new Login();
login.do_initTXT();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = login.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 255
* Number of covered goals: 163
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 433
* Number of covered goals: 306
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 29%
* Total number of goals: 78
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 43
* Number of covered goals: 43
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 255
* Number of covered goals: 159
* Generated 76 tests with total length 219
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 24%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg0 = new Login();
Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener();
login_ConnectionListener.close();
login_ConnectionListener.run();
assertEquals(0, arg0.getAuth_max());


** It was a parseable test case! 
refined test name is: testCloseConnectionAndRunConnectionListener
* Compiling Tests
refined test name is: testCloseConnection
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.getLog_fp();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetAuthMaxNoAuthenticationRequired
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.setOut((PrintWriter) null);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSetOutToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int auth_num = login.getAuth_num();
assertEquals(0, auth_num);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testInstantiationAndInitialValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int[] server_fd = login.getServer_fd();
assertNotNull(server_fd);
assertEquals(30, server_fd.length);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetServerFileDescriptors
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.check_ip((InetAddress) null);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testCheckIpWithNullIpAddress
* Compiling Tests
refined test name is: testCheckIpWithNullIpAddress
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int check_ipmask = login.check_ipmask(255, "255.255.255.255");
assertEquals(0, check_ipmask);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testValidIpAddressAndAuthenticationMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.logUnknownPackets((Socket_data) null);

** It was a parseable test case! 
refined test name is: testLogUnknownPacketsWithNullData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.setAuth_max((-4576));
assertEquals((-4576), login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetAuthMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.getOut();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testLogout
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int pASSWORDENC = Login.getPASSWORDENC();
assertEquals(2, pASSWORDENC);


** It was a parseable test case! 
refined test name is: testUserReceivesResetLinkByEmail
* Compiling Tests
refined test name is: testForgotPasswordWithValidPassword
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Login.version((Socket_data) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}


** It was a parseable test case! 
refined test name is: testVersionWithNullSocketDataThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.display_title();

** It was a parseable test case! 
refined test name is: testDisplayTitle
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: IDBManagementLogin dbManagemtType = Login.getDbManagemtType();
assertNull(dbManagemtType);


** It was a parseable test case! 
refined test name is: testGetDbManagementTypereturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initXML();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetAuthMaxWhenNoXMLData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.setPASSWORDENC(50);

** It was a parseable test case! 
refined test name is: testSetPasswordEncryptionAlgorithm
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int auth_max = login.getAuth_max();
assertEquals(0, auth_max);


** It was a parseable test case! 
refined test name is: testLoginGetAuthMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login.login_log("user@example.com");

** It was a parseable test case! 
refined test name is: testLoginLog
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("save/account.xml");
FileSystemHandling.createFolder(arg0);
int mmo_auth_initXML = Login.mmo_auth_initXML();
assertEquals(0, mmo_auth_initXML);


** It was a parseable test case! 
refined test name is: testInitializeXMLFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testMmoAuthInitTXTWithNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("shutdown");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testShutdownCommandThrowsSystemExitException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'I');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testUserManagementAddUserTXTWithValidInputs
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: UserManagement.addUserTXT("- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", "- to ALLOW new users (with _F/_M).", 'S');
Login login = new Login();
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  login.do_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testAddUserWithValidCredentials
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
UserManagement.setAccountIdCount((-232));
UserManagement.addUserTXT("_y`Uka]{; ]", "_y`Uka]{; ]", "conf/subnet_athena.conf", '[');
Login.mmo_auth_syncTXT();

** It was a parseable test case! 
refined test name is: testLoginSyncTxt
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(12345);
Login.mmo_auth_syncXML();

** It was a parseable test case! 
refined test name is: testMMOAuthSyncXMLSetsAuthBeforeSaveFileCorrectly
* Compiling Tests
refined test name is: testMmoAuthSyncXmlSetsAuthBeforeSaveFileCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[1];
Login.showTab(arg0);
assertEquals(1, arg0.length);


** It was a parseable test case! 
refined test name is: testShowTabWithEmptyInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAuth_before_save_file(10);
int check_auth_sync = login.check_auth_sync();
assertEquals(0, login.getAuth_max());
assertEquals(0, check_auth_sync);


** It was a parseable test case! 
refined test name is: testCheckAuthSyncWhenMaxLimitIsReached
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg0 = new Login();
Login.ConnectionListener login_ConnectionListener = arg0.new ConnectionListener();
login_ConnectionListener.run();
assertEquals(0, arg0.getAuth_max());


** It was a parseable test case! 
refined test name is: testConnectionListener
* Compiling Tests
refined test name is: testLoginAnonymousInnerClassConnectionListener
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg2 = new Login();
MockSocket arg0 = new MockSocket();
Socket_data arg1 = new Socket_data(arg0);
arg0.close();
arg2.parse_admin((-2468), arg1, arg2);
assertEquals(0, arg2.getAuth_max());


** It was a parseable test case! 
refined test name is: testParseAdminWithNegativeValueAndClosedSocket
* Compiling Tests
refined test name is: testParseAdminWithNegativeValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
login.parse_console("status");
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testInitTxtSetsAuthMaxToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("quit");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testLoginquitCommand
* Compiling Tests
refined test name is: testParseConsoleQuit
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.parse_console("end");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testParseConsoleEndCommandThrowsException
* Compiling Tests
refined test name is: testParseConsoleEndCommandThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
login.parse_console("alive");
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testInitTXTAndParseConsoleSetsAuthMaxToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
int parse_console = login.parse_console("help");
assertEquals(0, login.getAuth_max());
assertEquals(0, parse_console);


** It was a parseable test case! 
refined test name is: testParseConsoleHelpReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
int parse_console = login.parse_console("conf/subnet_athena.conf");
assertEquals(0, parse_console);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testParseSubnetConfigFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSaveConfigInLogWithNullAccessOrder
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(4);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testUpdateConfigParamsAndVerifyAuthMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSaveConfigInLogWithAccessDenynumOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
ConfigurationManagement.setAccess_denynum(1);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testValidCredentials
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ACO arg0 = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(arg0);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSetAccessOrderCorrectlySetsAccessOrder
* Compiling Tests
refined test name is: testSetAccessOrderSavesAccessOrderInLogFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ACO arg0 = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(arg0);
ConfigurationManagement.setAccess_allownum((-3416));
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSaveConfigInLogAndGetAuthMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ACO arg0 = ACO.ALLOW_DENY;
ConfigurationManagement.setAccess_order(arg0);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSetAllowDenyACO
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum(1);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSaveConfigInLog
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ConfigurationManagement.setAccess_order((ACO) null);
ConfigurationManagement.setAccess_allownum(1234);
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testShouldSetAuthMaxToZeroWhenAccessAllownumIsSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
ACO arg0 = ACO.STRSIZE;
ConfigurationManagement.setAccess_order(arg0);
ConfigurationManagement.setAccess_denynum(30);
ConfigurationManagement.setAccess_allownum(1);
login.do_initTXT();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testDoInitTXTWithACOSTRSIZE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("YES");
assertTrue(yesNoOnOffToBoolean);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testYesNoOnOffToBoolean
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("no");
assertEquals(0, login.getAuth_max());
assertFalse(yesNoOnOffToBoolean);


** It was a parseable test case! 
refined test name is: testYesNoOnOffToBooleanConversion
* Compiling Tests
refined test name is: testYesNoOnOffToBooleanConversion
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("on");
assertEquals(0, login.getAuth_max());
assertTrue(yesNoOnOffToBoolean);


** It was a parseable test case! 
refined test name is: testYesNoOnOffToBooleanWithStringOn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
boolean yesNoOnOffToBoolean = login.yesNoOnOffToBoolean("off");
assertFalse(yesNoOnOffToBoolean);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testYesNoOnOffToBoolean
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
// Undeclared exception!
try { 
  login.yesNoOnOffToBoolean("conf/subnet_athena.conf");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // anw doit etre egale a yes/no/on/off
   //
   verifyException("org.javathena.login.Login", e);
}


** It was a parseable test case! 
refined test name is: testYesNoOnOffToBooleanWithInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg0 = new Login();
Login.End login_End = arg0.new End();
login_End.run();
assertEquals(0, arg0.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginEndReturnsZeroWhenNotLoggedIn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.setServer_fd((int[]) null);
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetAuthMaxWithNullServerFD
* Compiling Tests
refined test name is: testGetAuthMaxNullServerFd
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
// Undeclared exception!
try { 
  Login.login_log("conf/subnet_athena.conf");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testLoginloginLogWithInvalidConfigFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int mmo_auth_initXML = Login.mmo_auth_initXML();
assertEquals(0, mmo_auth_initXML);


** It was a parseable test case! 
refined test name is: testInitXMLWithNoComments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
int mmo_auth_initTXT = Login.mmo_auth_initTXT();
assertEquals(0, mmo_auth_initTXT);


** It was a parseable test case! 
refined test name is: testMmoAuthInitTxtReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
UserManagement.addUserTXT("conf/subnet_athena.conf", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '>');
Login.mmo_auth_syncTXT();
// Undeclared exception!
try { 
  Login.mmo_auth_initTXT();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testMmoAuthInitTxtThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
refined test name is: testSyncXMLLogin
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
// Undeclared exception!
try { 
  login.check_auth_sync();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}


** It was a parseable test case! 
refined test name is: testCheckAuthSyncWithNullArgument
* Compiling Tests
refined test name is: testNullArgumentThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_final();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testLoginDoFinal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
// Undeclared exception!
try { 
  login.do_final();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.javathena.login.Login", e);
}


** It was a parseable test case! 
refined test name is: testDoFinalWithoutInitTXT
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.save_config_in_log();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSaveConfigInLog
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.auth_max = (-1828);
int auth_max = login.getAuth_max();
assertEquals((-1828), auth_max);


** It was a parseable test case! 
refined test name is: testGetAuthMaxReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.auth_max = 80;
int auth_max = login.getAuth_max();
assertEquals(80, auth_max);


** It was a parseable test case! 
refined test name is: testGetAuthMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.auth_num = (-1074);
int auth_num = login.getAuth_num();
assertEquals((-1074), auth_num);


** It was a parseable test case! 
refined test name is: testGetAuthNumReturnsCorrectValue
* Compiling Tests
refined test name is: testGetAuthNumReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
Login.auth_num = 3;
int auth_num = login.getAuth_num();
assertEquals(3, auth_num);


** It was a parseable test case! 
refined test name is: testGetAuthNum
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.do_initTXT();
PrintWriter out = login.getOut();
assertNotNull(out);


** It was a parseable test case! 
refined test name is: testInitTXTWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
login.server_fd = null;
login.getServer_fd();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testGetServerfdWhenLoginObjectIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
// Undeclared exception!
try { 
  login.do_init();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testDoInitThrowsSystemExitException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login login = new Login();
// Undeclared exception!
try { 
  Login.do_initSQL();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testInitSQLExpectException
* Compiling Tests
refined test name is: testInitSQLExpectSystemExitException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("save");
FileSystemHandling.appendStringToFile(arg0, "EGGGIRL");
Login login = new Login();
login.do_initTXT();
assertEquals(0, login.getAuth_max());


** It was a parseable test case! 
refined test name is: testSaveFileAndVerifyAuthorizationMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("save");
byte[] arg1 = new byte[9];
FileSystemHandling.appendDataToFile(arg0, arg1);
Login login = new Login();
Login.mmo_auth_syncXML();

** It was a parseable test case! 
refined test name is: testAppendingDataToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Login arg0 = new Login();
arg0.do_initTXT();
Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync = arg0.new Timer_interval_check_auth_sync();
login_Timer_interval_check_auth_sync.run();
assertEquals(0, arg0.getAuth_max());


** It was a parseable test case! 
refined test name is: testAuthMax
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:19.652 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:19.677 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:19.753 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:19.754 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:19.825 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:19.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:19.897 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:19.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:19.969 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:19.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:20.044 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:20.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:20.220 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:20.225 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:20.293 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:20.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:20.362 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:20.363 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:20.431 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:20.432 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:20.500 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:20.501 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:20.662 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:20.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:20.786 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:20.788 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:20.971 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:20.973 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:21.119 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:21.122 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:21.235 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:21.242 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:21.441 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:21.447 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:21.569 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:21.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:21.776 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:21.782 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:22.065 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:22.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:22.224 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:22.226 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:22.353 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:22.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:22.482 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:22.484 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:22.601 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:22.603 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:22.738 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:22.743 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:22.907 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:22.909 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
[MASTER] 07:25:23.155 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:23.157 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:23.347 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:23.352 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:23.536 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:23.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:23.710 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:23.712 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:23.844 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:23.847 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:23.969 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:23.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:24.089 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:24.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:24.214 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:24.216 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:24.423 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:24.427 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:24.545 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:24.550 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:24.693 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:24.695 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:24.900 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:24.906 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:25.066 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:25.068 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:25.320 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:25.330 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:25.474 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:25.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:25.660 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:25.665 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:25.885 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:25.892 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:26.105 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:26.111 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:26.408 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:26.414 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:26.543 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:26.545 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:26.725 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:26.730 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:27.017 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:27.020 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:27.150 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:27.153 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:27.371 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:27.373 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:27.637 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:27.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:27.869 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:27.872 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:28.143 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:28.145 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:28.430 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:28.437 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:28.594 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:28.598 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:28.830 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:28.835 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:29.117 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:29.122 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:29.401 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:29.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:29.606 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:29.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:29.903 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:29.909 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:30.127 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:30.129 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:30.360 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:30.367 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:30.641 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:30.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:30.926 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:30.931 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:31.101 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:31.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:31.257 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:31.264 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:31.527 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:31.533 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:31.861 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:31.867 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 07:25:32.188 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:32.194 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:32.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:32.533 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:32.880 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:32.887 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 07:25:33.176 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:33.179 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 10 called: 2 to improve: false
** Write a test suite: 24 called: 3 to improve: false
** Write a test suite: 27 called: 4 to improve: false
** Write a test suite: 28 called: 5 to improve: false
** Write a test suite: 30 called: 6 to improve: false
** Write a test suite: 31 called: 7 to improve: false
** Write a test suite: 39 called: 8 to improve: false
** Write a test suite: 46 called: 9 to improve: false
** Write a test suite: 51 called: 10 to improve: false
** Write a test suite: 57 called: 11 to improve: false
** Write a test suite: 63 called: 12 to improve: false
** Write a test suite: 68 called: 13 to improve: false
[MASTER] 07:25:35.107 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:35.109 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
** Write a test suite: 14 called: 2 to improve: false
** Write a test suite: 20 called: 3 to improve: false
** Write a test suite: 25 called: 4 to improve: false
** Write a test suite: 32 called: 5 to improve: false
** Write a test suite: 40 called: 6 to improve: false
** Write a test suite: 41 called: 7 to improve: false
** Write a test suite: 43 called: 8 to improve: false
** Write a test suite: 44 called: 9 to improve: false
** Write a test suite: 47 called: 10 to improve: false
** Write a test suite: 61 called: 11 to improve: false
** Write a test suite: 66 called: 12 to improve: false
** Write a test suite: 71 called: 13 to improve: false
[MASTER] 07:25:35.637 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar7036541862638358302.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 07:25:35.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7036541862638358302.jar
* Writing tests to file
* Writing JUnit test case 'Login_ESTest' to evosuite-tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
** Write a test suite: 14 called: 2 to improve: false
** Write a test suite: 20 called: 3 to improve: false
** Write a test suite: 25 called: 4 to improve: false
** Write a test suite: 32 called: 5 to improve: false
** Write a test suite: 40 called: 6 to improve: false
** Write a test suite: 41 called: 7 to improve: false
** Write a test suite: 43 called: 8 to improve: false
** Write a test suite: 44 called: 9 to improve: false
** Write a test suite: 47 called: 10 to improve: false
** Write a test suite: 61 called: 11 to improve: false
** Write a test suite: 66 called: 12 to improve: false
** Write a test suite: 71 called: 13 to improve: false
* Done!

* Computation finished
