/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 11 16:15:50 GMT 2024
 */

package com.imsmart.servlet;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import com.imsmart.servlet.HTMLFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HTMLFilter_Original_ESTest extends HTMLFilter_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFilterReturningEmptyString() throws Throwable  {
      String filter = HTMLFilter.filter("");
      assertEquals("", filter);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFilterReturningNonEmptyString() throws Throwable  {
      String filter = HTMLFilter.filter(",>VcL%cn~9D");
      assertEquals(",&gt;VcL%cn~9D", filter);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFilterWithNonEmptyString() throws Throwable  {
      String filter = HTMLFilter.filter("n<=g`?6b9,cZ\"a]kbs`");
      assertEquals("n&lt;=g`?6b9,cZ&quot;a]kbs`", filter);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFilterReturningNull() throws Throwable  {
      String filter = HTMLFilter.filter((String) null);
      assertNull(filter);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFilter() throws Throwable  {
      String filter = HTMLFilter.filter("&gt;");
      assertNotNull(filter);
      assertEquals("&amp;gt;", filter);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesHTMLFilter() throws Throwable  {
      HTMLFilter hTMLFilter = new HTMLFilter();
  }
}
