* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: org.jcvi.jillion.assembly.ca.frg.Distance
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 15270
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.ca.frg.Distance
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 187
* Using seed 1709290355825
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 118 / 187
[Progress:>                             1%] [Cov:==============================>    87%][Progress:>                             2%] [Cov:=================================> 96%][Progress:>                             3%] [Cov:=================================> 96%][Progress:=>                            4%] [Cov:=================================> 96%][Progress:=>                            4%] [Cov:=================================> 96%][Progress:=>                            4%] [Cov:=================================> 96%][Progress:=>                            5%] [Cov:=================================> 96%][Progress:=>                            6%] [Cov:=================================> 96%][Progress:=>                            6%] [Cov:=================================> 96%][Progress:=>                            6%] [Cov:=================================> 96%][Progress:==>                           7%] [Cov:=================================> 96%][Progress:==>                           7%] [Cov:=================================> 96%][Progress:==>                           7%] [Cov:=================================> 96%][Progress:==>                           8%] [Cov:=================================> 96%][Progress:==>                           8%] [Cov:==================================>98%][Progress:==>                           9%] [Cov:==================================>98%][Progress:==>                           9%] [Cov:==================================>98%][Progress:==>                           9%] [Cov:==================================>98%][Progress:===>                          10%] [Cov:==================================>98%][Progress:===>                          10%] [Cov:==================================>98%][Progress:===>                          10%] [Cov:==================================>98%][Progress:===>                          11%] [Cov:==================================>98%][Progress:===>                          11%] [Cov:==================================>98%][Progress:===>                          11%] [Cov:==================================>98%][Progress:===>                          12%] [Cov:==================================>98%][Progress:===>                          12%] [Cov:==================================>98%][Progress:===>                          12%] [Cov:==================================>98%][Progress:===>                          13%] [Cov:==================================>98%][Progress:===>                          13%] [Cov:==================================>98%][Progress:===>                          13%] [Cov:==================================>98%][Progress:====>                         14%] [Cov:==================================>98%][Progress:====>                         14%] [Cov:==================================>98%][Progress:====>                         14%] [Cov:==================================>98%][Progress:====>                         15%] [Cov:==================================>98%][Progress:====>                         15%] [Cov:==================================>98%][Progress:====>                         15%] [Cov:==================================>98%][Progress:====>                         16%] [Cov:==================================>98%][Progress:====>                         16%] [Cov:==================================>98%][Progress:====>                         16%] [Cov:==================================>98%][Progress:====>                         16%] [Cov:==================================>98%][Progress:=====>                        17%] [Cov:==================================>98%][Progress:=====>                        17%] [Cov:==================================>98%][Progress:=====>                        17%] [Cov:==================================>98%][Progress:=====>                        17%] [Cov:==================================>98%][Progress:=====>                        18%] [Cov:==================================>98%][Progress:=====>                        18%] [Cov:==================================>98%][Progress:=====>                        18%] [Cov:==================================>98%][Progress:=====>                        19%] [Cov:==================================>98%][Progress:=====>                        19%] [Cov:==================================>98%][Progress:=====>                        19%] [Cov:==================================>98%][Progress:=====>                        19%] [Cov:==================================>98%][Progress:======>                       20%] [Cov:==================================>98%][Progress:======>                       20%] [Cov:==================================>98%][Progress:======>                       20%] [Cov:==================================>98%][Progress:======>                       20%] [Cov:==================================>98%][Progress:======>                       21%] [Cov:==================================>98%][Progress:======>                       21%] [Cov:==================================>98%][Progress:======>                       21%] [Cov:==================================>98%][Progress:======>                       22%] [Cov:==================================>98%][Progress:======>                       22%] [Cov:==================================>98%][Progress:======>                       22%] [Cov:==================================>98%][Progress:======>                       22%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  39%] [Cov:==================================>98%][Progress:===========>                  39%] [Cov:==================================>98%][Progress:===========>                  39%] [Cov:==================================>98%][Progress:============>                 40%] [Cov:==================================>98%][Progress:============>                 40%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                45%] [Cov:==================================>98%][Progress:=============>                46%] [Cov:==================================>98%][Progress:==============>               47%] [Cov:==================================>98%][Progress:==============>               48%] [Cov:==================================>98%][Progress:==============>               48%] [Cov:==================================>98%][Progress:==============>               49%] [Cov:==================================>98%][Progress:==============>               49%] [Cov:==================================>98%][Progress:==============>               49%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             55%] [Cov:==================================>98%][Progress:================>             56%] [Cov:==================================>98%][Progress:=================>            57%] [Cov:==================================>98%][Progress:=================>            58%] [Cov:==================================>98%][Progress:=================>            58%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:==================>           60%] [Cov:==================================>98%][Progress:==================>           60%] [Cov:==================================>98%][Progress:==================>           61%] [Cov:==================================>98%][Progress:==================>           61%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          65%] [Cov:==================================>98%][Progress:===================>          65%] [Cov:==================================>98%][Progress:===================>          65%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      77%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     82%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:========================>     83%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    84%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    85%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:=========================>    86%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   87%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   88%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:==========================>   89%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  90%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  91%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  92%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:===========================>  93%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 94%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 95%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:============================> 96%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>97%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>98%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:=============================>99%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%][Progress:==============================100%] [Cov:==================================>98%]
* Search finished after 101s and 1327 generations, 358857 statements, best individual has fitness: 6.0
* Generated before the refinement 27 tests with total length 59
statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1, 1)
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = distance.toString()
test data is: Distance buildDistance = Distance.buildDistance(1, 1);
buildDistance.toString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for Distance class
        Distance buildDistance = Distance.buildDistance(5, 6);
        String expectedResult = "The distance is: 5.83";
    }
}
statement is: // Improved test data for Distance class
Distance buildDistance = Distance.buildDistance(5, 6), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(5, 6) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: String expectedResult = "The distance is: 5.83", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "The distance is: 5.83"
TestCase is: int _int = 5;
int _int = 6;
Distance.buildDistance(_int, _int);
String string = "The distance is: 5.83";

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F)
statement is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(arg0)
test data is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(100, 100, ((float) (100)), 200.6858F);
        Distance.transformIntoCeleraAssemblerDistance(buildDistance);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(100, 100, ((float) (100)), 200.6858F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(100, 100, ((float) (100)), 200.6858F) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: Distance.transformIntoCeleraAssemblerDistance(buildDistance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.transformIntoCeleraAssemblerDistance(buildDistance) target is: Distance method is: transformIntoCeleraAssemblerDistance(Distance)
Matched Method is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
TestCase is: int _int = 100;
int _int = 100;
int _int = 100;
float _float = 200.6858F;
Distance buildDistance = Distance.buildDistance(_int, _int, (float) _int, _float);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F)
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = distance.hashCode()
test data is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(1333, 1333, ((float) (1333)), 2699.6858F);
        buildDistance.hashCode();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(1333, 1333, ((float) (1333)), 2699.6858F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(1333, 1333, ((float) (1333)), 2699.6858F) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.hashCode() target is: buildDistance method is: hashCode()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: hashCode()I
TestCase is: int _int = 1333;
int _int = 1333;
int _int = 1333;
float _float = 2699.6858F;
Distance.buildDistance(_int, _int, (float) _int, _float);
((Distance) _int).hashCode();

statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1333, 0)
statement is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(arg0)
test data is: Distance buildDistance = Distance.buildDistance(1333, 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(1337, 0);
        Distance.transformIntoCeleraAssemblerDistance(buildDistance);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(1337, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(1337, 0) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: Distance.transformIntoCeleraAssemblerDistance(buildDistance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.transformIntoCeleraAssemblerDistance(buildDistance) target is: Distance method is: transformIntoCeleraAssemblerDistance(Distance)
Matched Method is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
TestCase is: int _int = 1337;
int _int = 0;
Distance buildDistance = Distance.buildDistance(_int, _int);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F)
statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1333, 0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = distance.equals(arg0)
test data is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(1333, 0);
buildDistance.equals(buildDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(1333, 1333, ((float) (1333)), 2699.6858F);
        Distance buildDistance = Distance.buildDistance(1333, 0);
        buildDistance.equals(buildDistance);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(1333, 1333, ((float) (1333)), 2699.6858F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(1333, 1333, ((float) (1333)), 2699.6858F) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: Distance buildDistance = Distance.buildDistance(1333, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(1333, 0) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.equals(buildDistance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.equals(buildDistance) target is: buildDistance method is: equals(Distance)
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 1333;
int _int = 1333;
int _int = 1333;
float _float = 2699.6858F;
Distance.buildDistance(_int, _int, (float) _int, _float);
int _int = 1333;
int _int = 0;
Distance buildDistance = Distance.buildDistance(_int, _int);
((Distance) _int).equals(buildDistance);

statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1, 1)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: Distance buildDistance = Distance.buildDistance(1, 1);
buildDistance.equals(buildDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(20, 20);
        buildDistance.equals(buildDistance);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(20, 20), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(20, 20) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.equals(buildDistance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.equals(buildDistance) target is: buildDistance method is: equals(Distance)
source statement: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 2
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 20;
int _int = 20;
Distance buildDistance = Distance.buildDistance(_int, _int);
((Distance) _int).equals(buildDistance);

statement is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(93.0F, 1.0F)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = distance.equals((Object) null)
test data is: Distance buildDistance = Distance.buildDistance(93.0F, 1.0F);
buildDistance.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Distance buildDistance = Distance.buildDistance(100.0F, 2.0F);
        buildDistance.equals(((Object) (null)));
    }
}
statement is: // Improved test data
Distance buildDistance = Distance.buildDistance(100.0F, 2.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(100.0F, 2.0F) target is: Distance method is: buildDistance(float,float)
Matched Method is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.equals(((Object) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.equals(((Object) (null))) target is: buildDistance method is: equals(java.lang.Object)
source statement: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 2
Matched Method is: equals(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: float _float = 100.0F;
float _float = 2.0F;
Distance.buildDistance(_float, _float);
Object object = null;
((Distance) _float).equals(object);

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434)
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = distance.equals(arg0)
test data is: Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
Object object = new Object();
buildDistance.equals(object);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for testing the equality method of the Distance class
        Distance buildDistance = Distance.buildDistance(((float) (3.14)), ((float) (2.78)), ((float) (1.0)), ((float) (3.14)));
        Object object = new Object();
        boolean expectedResult = false;
        boolean actualResult = buildDistance.equals(object);
        assertEquals(expectedResult, actualResult);
    }
}
statement is: // Test data for testing the equality method of the Distance class
Distance buildDistance = Distance.buildDistance(((float) (3.14)), ((float) (2.78)), ((float) (1.0)), ((float) (3.14))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(((float) (3.14)), ((float) (2.78)), ((float) (1.0)), ((float) (3.14))) target is: Distance method is: buildDistance(float,float,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: boolean expectedResult = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean actualResult = buildDistance.equals(object), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.equals(object) target is: buildDistance method is: equals(java.lang.Object)
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: assertEquals(expectedResult, actualResult), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedResult, actualResult) target is:  method is: assertEquals(boolean,boolean)
* this is vulnerable: boolean _boolean = false
TestCase is: double _double = 3.14;
double _double = 2.78;
double _double = 1.0;
double _double = 3.14;
Distance.buildDistance((int) _double, (int) _double, (float) _double, (float) _double);
Object object = new Object();
boolean _boolean = false;
((Distance) _double).equals(object);

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F)
statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0, 1333)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = distance.equals(arg0)
test data is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(0, 1333);
buildDistance.equals(buildDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(13, 13);// meters

        Distance buildDistance = Distance.buildDistance(0, 13, ((float) (0.5678)), 2699.6858);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(13, 13)// meters
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(13, 13) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: Distance buildDistance = Distance.buildDistance(0, 13, ((float) (0.5678)), 2699.6858), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(0, 13, ((float) (0.5678)), 2699.6858) target is: Distance method is: buildDistance(int,int,float,double)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
TestCase is: int _int = 13;
int _int = 13;
Distance.buildDistance(_int, _int);
int _int = 0;
int _int = 13;
double _double = 0.5678;
double _double = 2699.6858;
Distance.buildDistance(_int, _int, (float) _double, (float) _double);

statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0, 0)
statement is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0.0F, (float) 0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = distance.equals(arg0)
test data is: Distance buildDistance = Distance.buildDistance(0, 0);
Distance buildDistance = Distance.buildDistance(0.0F, (float) 0);
buildDistance.equals(buildDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(5, 10);
        Distance buildDistance = Distance.buildDistance(5.0F, ((float) (10)));
        buildDistance.equals(buildDistance);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(5, 10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(5, 10) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: Distance buildDistance = Distance.buildDistance(5.0F, ((float) (10))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(5.0F, ((float) (10))) target is: Distance method is: buildDistance(float,float)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.equals(buildDistance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.equals(buildDistance) target is: buildDistance method is: equals(Distance)
source statement: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 5
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 5;
int _int = 10;
Distance.buildDistance(_int, _int);
float _float = 5.0F;
int _int = 10;
Distance buildDistance = Distance.buildDistance((int) _float, _int);
((Distance) _int).equals(buildDistance);

statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1, 1)
statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance((-1860), 1, 1.0F, (-1.0F))
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = distance.equals(arg0)
test data is: Distance buildDistance = Distance.buildDistance(1, 1);
Distance buildDistance = Distance.buildDistance((-1860), 1, 1.0F, (-1.0F));
buildDistance.equals(buildDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(-1860, 1, 1.0F, -1.0F);
        Distance buildDistance = Distance.buildDistance(-1860, 1, 1.0F, -1.0F);
        buildDistance.equals(buildDistance);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(-1860, 1, 1.0F, -1.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(-1860, 1, 1.0F, -1.0F) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
i 2 Parameters size() 2 Num of Method Parameters: 4
i 3 Parameters size() 2 Num of Method Parameters: 4
statement is: Distance buildDistance = Distance.buildDistance(-1860, 1, 1.0F, -1.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(-1860, 1, 1.0F, -1.0F) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
i 2 Parameters size() 2 Num of Method Parameters: 4
i 3 Parameters size() 2 Num of Method Parameters: 4
statement is: buildDistance.equals(buildDistance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.equals(buildDistance) target is: buildDistance method is: equals(Distance)
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 9
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 1;
float _float = 1.0F;
float _float = null;
float _float = null;
Distance.buildDistance(_int, (int) _float, _float, _float);
int _int = 1;
float _float = 1.0F;
float _float = null;
float _float = null;
Distance buildDistance = Distance.buildDistance(_int, (int) _float, _float, _float);
((Distance) _float).equals(buildDistance);

statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance((-52), (-52))
statement is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = distance.equals(arg0)
test data is: Distance buildDistance = Distance.buildDistance((-52), (-52));
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
buildDistance.equals(transformIntoCeleraAssemblerDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(-52, -52);
        Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
        buildDistance.equals(transformIntoCeleraAssemblerDistance);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(-52, -52), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(-52, -52) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.transformIntoCeleraAssemblerDistance(buildDistance) target is: Distance method is: transformIntoCeleraAssemblerDistance(Distance)
Matched Method is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.equals(transformIntoCeleraAssemblerDistance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.equals(transformIntoCeleraAssemblerDistance) target is: buildDistance method is: equals(Distance)
source statement: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 2
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = null;
int _int = null;
Distance buildDistance = Distance.buildDistance(_int, _int);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
((Distance) _int).equals(transformIntoCeleraAssemblerDistance);

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F)
statement is: getMean()F type is: class org.evosuite.testcase.statements.MethodStatement return type float
statement code is: float mean = distance.getMean()
test data is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.getMean();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(1000, 1000, ((float) (1000)), 2000.6858F);
        buildDistance.getMean();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(1000, 1000, ((float) (1000)), 2000.6858F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(1000, 1000, ((float) (1000)), 2000.6858F) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getMean(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getMean() target is: buildDistance method is: getMean()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: getMean()F
TestCase is: int _int = 1000;
int _int = 1000;
int _int = 1000;
float _float = 2000.6858F;
Distance.buildDistance(_int, _int, (float) _int, _float);
((Distance) _int).getMean();

statement is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0.0F, 1.0F)
statement is: getStdDev()F type is: class org.evosuite.testcase.statements.MethodStatement return type float
statement code is: float stdDev = distance.getStdDev()
test data is: Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
buildDistance.getStdDev();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(30.0F, 20.0F);
        buildDistance.getStdDev();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(30.0F, 20.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(30.0F, 20.0F) target is: Distance method is: buildDistance(float,float)
Matched Method is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getStdDev(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getStdDev() target is: buildDistance method is: getStdDev()
source statement: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 2
Matched Method is: getStdDev()F
TestCase is: float _float = 30.0F;
float _float = 20.0F;
Distance.buildDistance(_float, _float);
((Distance) _float).getStdDev();

statement is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0.0F, 1.0F)
statement is: getMin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int min = distance.getMin()
test data is: Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
buildDistance.getMin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(10.0F, 20.0F);
        buildDistance.getMin();
        // Expected output: 10.0F }}
    }
}
statement is: Distance buildDistance = Distance.buildDistance(10.0F, 20.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(10.0F, 20.0F) target is: Distance method is: buildDistance(float,float)
Matched Method is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getMin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getMin() target is: buildDistance method is: getMin()
source statement: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 2
Matched Method is: getMin()I
statement is: // Expected output: 10.0F }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: float _float = 10.0F;
float _float = 20.0F;
Distance.buildDistance(_float, _float);
((Distance) _float).getMin();

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F)
statement is: getMax()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int max = distance.getMax()
test data is: Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
buildDistance.getMax();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(-317, 2394, -820.0348F, 1.0F);
        assertEquals(buildDistance.getMax(), ((float) (156.7622)), 0.001);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(-317, 2394, -820.0348F, 1.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(-317, 2394, -820.0348F, 1.0F) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
i 2 Parameters size() 2 Num of Method Parameters: 4
i 3 Parameters size() 2 Num of Method Parameters: 4
statement is: assertEquals(buildDistance.getMax(), ((float) (156.7622)), 0.001), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(buildDistance.getMax(), ((float) (156.7622)), 0.001) target is:  method is: assertEquals(<unknown>,float,double)
TestCase is: int _int = 2394;
float _float = 1.0F;
float _float = null;
float _float = null;
Distance.buildDistance(_int, (int) _float, _float, _float);

statement is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance((-783.921F), 0.0F)
test data is: Distance.buildDistance((-783.921F), 0.0F);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance.buildDistance(-1000, 2000);
    }
}
statement is: Distance.buildDistance(-1000, 2000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(-1000, 2000) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: int _int = 2000;
float _float = null;
Distance.buildDistance((float) _int, _float);

statement is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1342.0F, (-2545.92F))
test data is: Distance.buildDistance(1342.0F, (-2545.92F));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance.buildDistance(1342.0F, -2545.92F);
        // Improved test data:
        Distance.buildDistance(1542.0F, -2585.92F);
    }
}
statement is: Distance.buildDistance(1342.0F, -2545.92F), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(1342.0F, -2545.92F) target is: Distance method is: buildDistance(float,float)
Matched Method is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: // Improved test data:
Distance.buildDistance(1542.0F, -2585.92F), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
Distance.buildDistance(1542.0F, -2585.92F) target is: Distance method is: buildDistance(float,float)
Matched Method is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: float _float = 1342.0F;
float _float = null;
Distance.buildDistance(_float, _float);
float _float = 1542.0F;
float _float = null;
Distance.buildDistance(_float, _float);

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance((-317), (-1), (float) (-317), 0.0F)
statement is: getStdDev()F type is: class org.evosuite.testcase.statements.MethodStatement return type float
statement code is: float stdDev = distance.getStdDev()
test data is: Distance buildDistance = Distance.buildDistance((-317), (-1), (float) (-317), 0.0F);
buildDistance.getStdDev();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance("New York City", "London", ((float) (456)), 0.0F);
        buildDistance.getStdDev();
    }
}
statement is: Distance buildDistance = Distance.buildDistance("New York City", "London", ((float) (456)), 0.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance("New York City", "London", ((float) (456)), 0.0F) target is: Distance method is: buildDistance(java.lang.String,java.lang.String,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getStdDev(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getStdDev() target is: buildDistance method is: getStdDev()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: getStdDev()F
TestCase is: String string = "New York City";
String string = "London";
int _int = 456;
float _float = 0.0F;
Distance.buildDistance((int) string, (int) string, (float) _int, _float);
((Distance) string).getStdDev();

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0)
statement is: getMax()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int max = distance.getMax()
test data is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMax();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(5, 10, ((float) (3.14)), ((float) (2.71)));
        buildDistance.getMax();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(5, 10, ((float) (3.14)), ((float) (2.71))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(5, 10, ((float) (3.14)), ((float) (2.71))) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getMax(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getMax() target is: buildDistance method is: getMax()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: getMax()I
TestCase is: int _int = 5;
int _int = 10;
double _double = 3.14;
double _double = 2.71;
Distance.buildDistance(_int, _int, (float) _double, (float) _double);
((Distance) _int).getMax();

statement is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance((-321), (-321))
statement is: getMax()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int max = distance.getMax()
test data is: Distance buildDistance = Distance.buildDistance((-321), (-321));
buildDistance.getMax();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(3, 4);
        buildDistance.getMax();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(3, 4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(3, 4) target is: Distance method is: buildDistance(int,int)
Matched Method is: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getMax(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getMax() target is: buildDistance method is: getMax()
source statement: buildDistance(II)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 2
Matched Method is: getMax()I
TestCase is: int _int = 3;
int _int = 4;
Distance.buildDistance(_int, _int);
((Distance) _int).getMax();

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F)
statement is: getMean()F type is: class org.evosuite.testcase.statements.MethodStatement return type float
statement code is: float mean = distance.getMean()
test data is: Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
buildDistance.getMean();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(317, -2394, 820.0348F, -1.0F);
        buildDistance.getMean();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(317, -2394, 820.0348F, -1.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(317, -2394, 820.0348F, -1.0F) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
i 2 Parameters size() 2 Num of Method Parameters: 4
i 3 Parameters size() 2 Num of Method Parameters: 4
statement is: buildDistance.getMean(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getMean() target is: buildDistance method is: getMean()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: getMean()F
TestCase is: int _int = 317;
float _float = 820.0348F;
float _float = null;
float _float = null;
Distance.buildDistance(_int, (int) _float, _float, _float);
((Distance) _int).getMean();

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0)
statement is: getMean()F type is: class org.evosuite.testcase.statements.MethodStatement return type float
statement code is: float mean = distance.getMean()
test data is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMean();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(0, 0, ((float) (15)), ((float) (25)));
        buildDistance.getMean();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(0, 0, ((float) (15)), ((float) (25))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(0, 0, ((float) (15)), ((float) (25))) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getMean(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getMean() target is: buildDistance method is: getMean()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: getMean()F
TestCase is: int _int = 0;
int _int = 0;
int _int = 15;
int _int = 25;
Distance.buildDistance(_int, _int, (float) _int, (float) _int);
((Distance) _int).getMean();

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434)
statement is: getMin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int min = distance.getMin()
test data is: Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
buildDistance.getMin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(1434, 0, ((float) (0)), ((float) (1434)));
        buildDistance.getMin();
        // Improved test data
        Distance buildDistance2 = Distance.buildDistance(1435, 0, ((float) (0)), ((float) (1434)));
        buildDistance2.getMin();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(1434, 0, ((float) (0)), ((float) (1434))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(1434, 0, ((float) (0)), ((float) (1434))) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getMin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getMin() target is: buildDistance method is: getMin()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: getMin()I
statement is: // Improved test data
Distance buildDistance2 = Distance.buildDistance(1435, 0, ((float) (0)), ((float) (1434))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(1435, 0, ((float) (0)), ((float) (1434))) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance2.getMin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance2.getMin() target is: buildDistance2 method is: getMin()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 10
Matched Method is: getMin()I
TestCase is: int _int = 1434;
int _int = 0;
int _int = 0;
int _int = 1434;
Distance.buildDistance(_int, _int, (float) _int, (float) _int);
((Distance) _int).getMin();
int _int = 1435;
int _int = 0;
int _int = 0;
int _int = 1434;
Distance.buildDistance(_int, _int, (float) _int, (float) _int);
((Distance) _int).getMin();

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0)
statement is: getMin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int min = distance.getMin()
test data is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(0, 0, ((float) (123456789)), ((float) (987654321)));
        buildDistance.getMin();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(0, 0, ((float) (123456789)), ((float) (987654321))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(0, 0, ((float) (123456789)), ((float) (987654321))) target is: Distance method is: buildDistance(int,int,float,float)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: buildDistance.getMin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: buildDistance.getMin() target is: buildDistance method is: getMin()
source statement: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 4
Matched Method is: getMin()I
TestCase is: int _int = 0;
int _int = 0;
int _int = 123456789;
int _int = 987654321;
Distance.buildDistance(_int, _int, (float) _int, (float) _int);
((Distance) _int).getMin();

statement is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0.0F, 1.0F)
statement is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(arg0)
statement is: getStdDev()F type is: class org.evosuite.testcase.statements.MethodStatement return type float
statement code is: float stdDev = distance.getStdDev()
test data is: Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
transformIntoCeleraAssemblerDistance.getStdDev();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(0.1F, 2.3F);
        Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
        transformIntoCeleraAssemblerDistance.getStdDev();
    }
}
statement is: Distance buildDistance = Distance.buildDistance(0.1F, 2.3F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(0.1F, 2.3F) target is: Distance method is: buildDistance(float,float)
Matched Method is: buildDistance(FF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.transformIntoCeleraAssemblerDistance(buildDistance) target is: Distance method is: transformIntoCeleraAssemblerDistance(Distance)
Matched Method is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: transformIntoCeleraAssemblerDistance.getStdDev(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: transformIntoCeleraAssemblerDistance.getStdDev() target is: transformIntoCeleraAssemblerDistance method is: getStdDev()
source statement: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance; callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.ca.frg.Distanceindex is: 3
Matched Method is: getStdDev()F
TestCase is: float _float = 0.1F;
float _float = 2.3F;
Distance buildDistance = Distance.buildDistance(_float, _float);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
((Distance) _float).getStdDev();

statement is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0)
statement is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.assembly.ca.frg.Distance
statement code is: Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(arg0)
test data is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Distance buildDistance = Distance.buildDistance(10, 20, ((float) (3.14)), "Hello World");
        Distance.transformIntoCeleraAssemblerDistance(buildDistance);
    }
}
statement is: Distance buildDistance = Distance.buildDistance(10, 20, ((float) (3.14)), "Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.buildDistance(10, 20, ((float) (3.14)), "Hello World") target is: Distance method is: buildDistance(int,int,float,java.lang.String)
Matched Method is: buildDistance(IIFF)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
statement is: Distance.transformIntoCeleraAssemblerDistance(buildDistance), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Distance.transformIntoCeleraAssemblerDistance(buildDistance) target is: Distance method is: transformIntoCeleraAssemblerDistance(Distance)
Matched Method is: transformIntoCeleraAssemblerDistance(Lorg/jcvi/jillion/assembly/ca/frg/Distance;)Lorg/jcvi/jillion/assembly/ca/frg/Distance;
TestCase is: int _int = 10;
int _int = 20;
double _double = 3.14;
String string = "Hello World";
Distance buildDistance = Distance.buildDistance(_int, _int, (float) _double, (float) string);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

* test suite isTestSuite: 54
Test 0: 
Distance buildDistance = Distance.buildDistance(1, 1);
buildDistance.toString();
Test 1: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
Test 2: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.hashCode();
Test 3: 
Distance buildDistance = Distance.buildDistance(1333, 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
Test 4: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(1333, 0);
buildDistance.equals(buildDistance);
Test 5: 
Distance buildDistance = Distance.buildDistance(1, 1);
buildDistance.equals(buildDistance);
Test 6: 
Distance buildDistance = Distance.buildDistance(93.0F, 1.0F);
buildDistance.equals((Object) null);
Test 7: 
Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
Object object = new Object();
buildDistance.equals(object);
Test 8: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(0, 1333);
buildDistance.equals(buildDistance);
Test 9: 
Distance buildDistance = Distance.buildDistance(0, 0);
Distance buildDistance = Distance.buildDistance(0.0F, (float) 0);
buildDistance.equals(buildDistance);
Test 10: 
Distance buildDistance = Distance.buildDistance(1, 1);
Distance buildDistance = Distance.buildDistance((-1860), 1, 1.0F, (-1.0F));
buildDistance.equals(buildDistance);
Test 11: 
Distance buildDistance = Distance.buildDistance((-52), (-52));
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
buildDistance.equals(transformIntoCeleraAssemblerDistance);
Test 12: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.getMean();
Test 13: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
buildDistance.getStdDev();
Test 14: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
buildDistance.getMin();
Test 15: 
Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
buildDistance.getMax();
Test 16: 
Distance.buildDistance((-783.921F), 0.0F);
Test 17: 
Distance.buildDistance(1342.0F, (-2545.92F));
Test 18: 
Distance buildDistance = Distance.buildDistance((-317), (-1), (float) (-317), 0.0F);
buildDistance.getStdDev();
Test 19: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMax();
Test 20: 
Distance buildDistance = Distance.buildDistance((-321), (-321));
buildDistance.getMax();
Test 21: 
Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
buildDistance.getMean();
Test 22: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMean();
Test 23: 
Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
buildDistance.getMin();
Test 24: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMin();
Test 25: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
transformIntoCeleraAssemblerDistance.getStdDev();
Test 26: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
Test 27: 
Distance.buildDistance(5, 6);

Test 28: 
Distance buildDistance = Distance.buildDistance(100, 100, (float) 100, 200.6858F);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

Test 29: 
Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
((Distance)1333).hashCode();

Test 30: 
Distance buildDistance = Distance.buildDistance(1337, 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

Test 31: 
Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(1333, 0);
((Distance)1333).equals(buildDistance);

Test 32: 
Distance buildDistance = Distance.buildDistance(20, 20);
((Distance)20).equals(buildDistance);

Test 33: 
Distance.buildDistance(100.0F, 2.0F);
((Distance)100.0F).equals((Object) null);

Test 34: 
double _double = 3.14;
Distance.buildDistance((int) 3.14, (int) 2.78, (float) 1.0, (float) 3.14);
Object object = new Object();
((Distance) _double).equals(object);

Test 35: 
Distance.buildDistance(13, 13);
Distance.buildDistance(0, 13, (float) 0.5678, (float) 2699.6858);

Test 36: 
int _int = 5;
Distance.buildDistance(5, 10);
Distance buildDistance = Distance.buildDistance((int) 5.0F, 10);
((Distance) _int).equals(buildDistance);

Test 37: 
float _float = 1.0F;
Distance.buildDistance(1, (int) 1.0F, (float) (Float) null, (float) (Float) null);
int _int = 1;
float _float = 1.0F;
float _float = null;
float _float = null;
Distance buildDistance = Distance.buildDistance(_int, (int) _float, _float, _float);
((Distance) _float).equals(buildDistance);

Test 38: 
int _int = null;
Distance buildDistance = Distance.buildDistance((int) (Integer) null, (int) (Integer) null);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
((Distance) _int).equals(transformIntoCeleraAssemblerDistance);

Test 39: 
Distance.buildDistance(1000, 1000, (float) 1000, 2000.6858F);
((Distance)1000).getMean();

Test 40: 
Distance.buildDistance(30.0F, 20.0F);
((Distance)30.0F).getStdDev();

Test 41: 
Distance.buildDistance(10.0F, 20.0F);
((Distance)10.0F).getMin();

Test 42: 
Distance.buildDistance(2394, (int) 1.0F, (float) (Float) null, (float) (Float) null);

Test 43: 
Distance.buildDistance((float) 2000, (float) (Float) null);

Test 44: 
Distance.buildDistance(1342.0F, (float) (Float) null);
float _float = 1542.0F;
float _float = null;
Distance.buildDistance(_float, _float);

Test 45: 
String string = "New York City";
Distance.buildDistance((int) "New York City", (int) "London", (float) 456, 0.0F);
((Distance) string).getStdDev();

Test 46: 
int _int = 5;
Distance.buildDistance(5, 10, (float) 3.14, (float) 2.71);
((Distance) _int).getMax();

Test 47: 
Distance.buildDistance(3, 4);
((Distance)3).getMax();

Test 48: 
int _int = 317;
Distance.buildDistance(317, (int) 820.0348F, (float) (Float) null, (float) (Float) null);
((Distance) _int).getMean();

Test 49: 
Distance.buildDistance(0, 0, (float) 15, (float) 25);
((Distance)0).getMean();

Test 50: 
int _int = 1434;
Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
((Distance)1434).getMin();
int _int = 1435;
int _int = 0;
int _int = 0;
int _int = 1434;
Distance.buildDistance(_int, _int, (float) _int, (float) _int);
((Distance) _int).getMin();

Test 51: 
Distance.buildDistance(0, 0, (float) 123456789, (float) 987654321);
((Distance)0).getMin();

Test 52: 
Distance buildDistance = Distance.buildDistance(0.1F, 2.3F);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
((Distance)2.3F).getStdDev();

Test 53: 
Distance buildDistance = Distance.buildDistance(10, 20, (float) 3.14, (float) "Hello World");
Distance.transformIntoCeleraAssemblerDistance(buildDistance);


* Generated after the refinement and before minimization 54 tests with total length 136
* test suite isTestSuite: 54
Test 0: 
Distance buildDistance = Distance.buildDistance(1, 1);
buildDistance.toString();
Test 1: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
Test 2: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.hashCode();
Test 3: 
Distance buildDistance = Distance.buildDistance(1333, 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
Test 4: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(1333, 0);
buildDistance.equals(buildDistance);
Test 5: 
Distance buildDistance = Distance.buildDistance(1, 1);
buildDistance.equals(buildDistance);
Test 6: 
Distance buildDistance = Distance.buildDistance(93.0F, 1.0F);
buildDistance.equals((Object) null);
Test 7: 
Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
Object object = new Object();
buildDistance.equals(object);
Test 8: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(0, 1333);
buildDistance.equals(buildDistance);
Test 9: 
Distance buildDistance = Distance.buildDistance(0, 0);
Distance buildDistance = Distance.buildDistance(0.0F, (float) 0);
buildDistance.equals(buildDistance);
Test 10: 
Distance buildDistance = Distance.buildDistance(1, 1);
Distance buildDistance = Distance.buildDistance((-1860), 1, 1.0F, (-1.0F));
buildDistance.equals(buildDistance);
Test 11: 
Distance buildDistance = Distance.buildDistance((-52), (-52));
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
buildDistance.equals(transformIntoCeleraAssemblerDistance);
Test 12: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.getMean();
Test 13: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
buildDistance.getStdDev();
Test 14: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
buildDistance.getMin();
Test 15: 
Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
buildDistance.getMax();
Test 16: 
Distance.buildDistance((-783.921F), 0.0F);
Test 17: 
Distance.buildDistance(1342.0F, (-2545.92F));
Test 18: 
Distance buildDistance = Distance.buildDistance((-317), (-1), (float) (-317), 0.0F);
buildDistance.getStdDev();
Test 19: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMax();
Test 20: 
Distance buildDistance = Distance.buildDistance((-321), (-321));
buildDistance.getMax();
Test 21: 
Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
buildDistance.getMean();
Test 22: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMean();
Test 23: 
Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
buildDistance.getMin();
Test 24: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMin();
Test 25: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
transformIntoCeleraAssemblerDistance.getStdDev();
Test 26: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
Test 27: 
Distance.buildDistance(5, 6);

Test 28: 
Distance buildDistance = Distance.buildDistance(100, 100, (float) 100, 200.6858F);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

Test 29: 
Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
((Distance)1333).hashCode();

Test 30: 
Distance buildDistance = Distance.buildDistance(1337, 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

Test 31: 
Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(1333, 0);
((Distance)1333).equals(buildDistance);

Test 32: 
Distance buildDistance = Distance.buildDistance(20, 20);
((Distance)20).equals(buildDistance);

Test 33: 
Distance.buildDistance(100.0F, 2.0F);
((Distance)100.0F).equals((Object) null);

Test 34: 
double _double = 3.14;
Distance.buildDistance((int) 3.14, (int) 2.78, (float) 1.0, (float) 3.14);
Object object = new Object();
((Distance) _double).equals(object);

Test 35: 
Distance.buildDistance(13, 13);
Distance.buildDistance(0, 13, (float) 0.5678, (float) 2699.6858);

Test 36: 
int _int = 5;
Distance.buildDistance(5, 10);
Distance buildDistance = Distance.buildDistance((int) 5.0F, 10);
((Distance) _int).equals(buildDistance);

Test 37: 
float _float = 1.0F;
Distance.buildDistance(1, (int) 1.0F, (float) (Float) null, (float) (Float) null);
int _int = 1;
float _float = 1.0F;
float _float = null;
float _float = null;
Distance buildDistance = Distance.buildDistance(_int, (int) _float, _float, _float);
((Distance) _float).equals(buildDistance);

Test 38: 
int _int = null;
Distance buildDistance = Distance.buildDistance((int) (Integer) null, (int) (Integer) null);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
((Distance) _int).equals(transformIntoCeleraAssemblerDistance);

Test 39: 
Distance.buildDistance(1000, 1000, (float) 1000, 2000.6858F);
((Distance)1000).getMean();

Test 40: 
Distance.buildDistance(30.0F, 20.0F);
((Distance)30.0F).getStdDev();

Test 41: 
Distance.buildDistance(10.0F, 20.0F);
((Distance)10.0F).getMin();

Test 42: 
Distance.buildDistance(2394, (int) 1.0F, (float) (Float) null, (float) (Float) null);

Test 43: 
Distance.buildDistance((float) 2000, (float) (Float) null);

Test 44: 
Distance.buildDistance(1342.0F, (float) (Float) null);
float _float = 1542.0F;
float _float = null;
Distance.buildDistance(_float, _float);

Test 45: 
String string = "New York City";
Distance.buildDistance((int) "New York City", (int) "London", (float) 456, 0.0F);
((Distance) string).getStdDev();

Test 46: 
int _int = 5;
Distance.buildDistance(5, 10, (float) 3.14, (float) 2.71);
((Distance) _int).getMax();

Test 47: 
Distance.buildDistance(3, 4);
((Distance)3).getMax();

Test 48: 
int _int = 317;
Distance.buildDistance(317, (int) 820.0348F, (float) (Float) null, (float) (Float) null);
((Distance) _int).getMean();

Test 49: 
Distance.buildDistance(0, 0, (float) 15, (float) 25);
((Distance)0).getMean();

Test 50: 
int _int = 1434;
Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
((Distance)1434).getMin();
int _int = 1435;
int _int = 0;
int _int = 0;
int _int = 1434;
Distance.buildDistance(_int, _int, (float) _int, (float) _int);
((Distance) _int).getMin();

Test 51: 
Distance.buildDistance(0, 0, (float) 123456789, (float) 987654321);
((Distance)0).getMin();

Test 52: 
Distance buildDistance = Distance.buildDistance(0.1F, 2.3F);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
((Distance)2.3F).getStdDev();

Test 53: 
Distance buildDistance = Distance.buildDistance(10, 20, (float) 3.14, (float) "Hello World");
Distance.transformIntoCeleraAssemblerDistance(buildDistance);


* Minimizing test suite
* test suite isTestSuite: 26
Test 0: 
Distance buildDistance = Distance.buildDistance(1, 1);
buildDistance.toString();
Test 1: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.hashCode();
Test 2: 
Distance buildDistance = Distance.buildDistance(93.0F, 1.0F);
buildDistance.equals((Object) null);
Test 3: 
Distance buildDistance = Distance.buildDistance(1, 1);
buildDistance.equals(buildDistance);
Test 4: 
Distance buildDistance = Distance.buildDistance((-52), (-52));
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
buildDistance.equals(transformIntoCeleraAssemblerDistance);
Test 5: 
Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
Object object = new Object();
buildDistance.equals(object);
Test 6: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(1333, 0);
buildDistance.equals(buildDistance);
Test 7: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance buildDistance = Distance.buildDistance(0, 1333);
buildDistance.equals(buildDistance);
Test 8: 
Distance buildDistance = Distance.buildDistance(1, 1);
Distance buildDistance = Distance.buildDistance((-1860), 1, 1.0F, (-1.0F));
buildDistance.equals(buildDistance);
Test 9: 
Distance buildDistance = Distance.buildDistance(0, 0);
Distance buildDistance = Distance.buildDistance(0.0F, (float) 0);
buildDistance.equals(buildDistance);
Test 10: 
Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
buildDistance.getMean();
Test 11: 
Distance buildDistance = Distance.buildDistance((-317), (-1), (float) (-317), 0.0F);
buildDistance.getStdDev();
Test 12: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMin();
Test 13: 
Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
buildDistance.getMax();
Test 14: 
Distance.buildDistance((-783.921F), 0.0F);
Test 15: 
Distance.buildDistance(1342.0F, (-2545.92F));
Test 16: 
Distance buildDistance = Distance.buildDistance((-321), (-321));
buildDistance.getMax();
Test 17: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMax();
Test 18: 
Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.getMean();
Test 19: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
buildDistance.getMean();
Test 20: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
buildDistance.getMin();
Test 21: 
Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
buildDistance.getMin();
Test 22: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(buildDistance);
transformIntoCeleraAssemblerDistance.getStdDev();
Test 23: 
Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
buildDistance.getStdDev();
Test 24: 
Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);
Test 25: 
Distance buildDistance = Distance.buildDistance(100, 100, (float) 100, 200.6858F);
Distance.transformIntoCeleraAssemblerDistance(buildDistance);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 51
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 69
* Number of covered goals: 63
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Generated 26 tests with total length 57
* Resulting test suite's coverage: 98% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 65%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(1, 1);
String string = buildDistance.toString();
assertEquals(1, buildDistance.getMax());
assertEquals(1, buildDistance.getMin());
assertEquals("1.000, std: 0.000", string);


** It was a parseable test case! 
refined test name is: testBuildDistanceToString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
buildDistance.hashCode();
assertEquals(1333.0F, buildDistance.getMean(), 0.01F);
assertEquals(1333, buildDistance.getMax());
assertEquals(1333, buildDistance.getMin());
assertEquals(2699.6858F, buildDistance.getStdDev(), 0.01F);


** It was a parseable test case! 
refined test name is: testBuildDistance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(93.0F, 1.0F);
boolean equals = buildDistance.equals((Object) null);
assertEquals(1.0F, buildDistance.getStdDev(), 0.01F);
assertFalse(equals);
assertEquals(90, buildDistance.getMin());
assertEquals(93.0F, buildDistance.getMean(), 0.01F);
assertEquals(96, buildDistance.getMax());


** It was a parseable test case! 
refined test name is: testBuildDistanceEqualsMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance arg0 = Distance.buildDistance(1, 1);
boolean equals = arg0.equals(arg0);
assertTrue(equals);
assertEquals(0.0F, arg0.getStdDev(), 0.01F);
assertEquals(1.0F, arg0.getMean(), 0.01F);
assertEquals(1, arg0.getMin());
assertEquals(1, arg0.getMax());


** It was a parseable test case! 
refined test name is: testCanCreateDistanceObjectAndSetFieldsCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
Object arg0 = new Object();
boolean equals = buildDistance.equals(arg0);
assertEquals(1434.0F, buildDistance.getStdDev(), 0.01F);
assertEquals(1434, buildDistance.getMin());
assertEquals(0, buildDistance.getMax());
assertEquals(0.0F, buildDistance.getMean(), 0.01F);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsNotADistance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance arg0 = Distance.buildDistance(1333, 0);
boolean equals = buildDistance.equals(arg0);
assertEquals(1333.0F, buildDistance.getMean(), 0.01F);
assertEquals((-222.16667F), arg0.getStdDev(), 0.01F);
assertEquals(0, arg0.getMax());
assertEquals(1333, buildDistance.getMax());
assertEquals(2699.6858F, buildDistance.getStdDev(), 0.01F);
assertEquals(1333, buildDistance.getMin());
assertEquals(666.5F, arg0.getMean(), 0.01F);
assertEquals(1333, arg0.getMin());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsAndGettersNotEqualDifferentValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
Distance arg0 = Distance.buildDistance(0, 1333);
boolean equals = buildDistance.equals(arg0);
assertEquals(666.5F, arg0.getMean(), 0.01F);
assertEquals(222.16667F, arg0.getStdDev(), 0.01F);
assertEquals(1333, buildDistance.getMin());
assertEquals(1333, arg0.getMax());
assertEquals(0, arg0.getMin());
assertFalse(equals);
assertEquals(1333.0F, buildDistance.getMean(), 0.01F);
assertEquals(2699.6858F, buildDistance.getStdDev(), 0.01F);
assertEquals(1333, buildDistance.getMax());


** It was a parseable test case! 
refined test name is: testEqualsMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance arg0 = Distance.buildDistance(1, 1);
Distance buildDistance = Distance.buildDistance((-1860), 1, 1.0F, (-1.0F));
boolean equals = buildDistance.equals(arg0);
assertFalse(equals);
assertEquals((-1.0F), buildDistance.getStdDev(), 0.01F);
assertEquals(1.0F, arg0.getMean(), 0.01F);
assertEquals(1, arg0.getMin());
assertEquals(0.0F, arg0.getStdDev(), 0.01F);
assertEquals((-1860), buildDistance.getMin());
assertEquals(1, arg0.getMax());
assertEquals(1.0F, buildDistance.getMean(), 0.01F);
assertEquals(1, buildDistance.getMax());


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentStdDev
* Compiling Tests
refined test name is: testEqualityOfDifferentObjectsWithDifferentValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(0, 0);
Distance arg0 = Distance.buildDistance(0.0F, (float) 0);
boolean equals = buildDistance.equals(arg0);
assertEquals(0.0F, arg0.getMean(), 0.01F);
assertTrue(equals);
assertEquals(0.0F, arg0.getStdDev(), 0.01F);
assertEquals(0, arg0.getMin());


** It was a parseable test case! 
refined test name is: testDistanceObjectEquality
* Compiling Tests
refined test name is: testDistanceObjectEquality
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
float mean = buildDistance.getMean();
assertEquals(1.0F, buildDistance.getStdDev(), 0.01F);
assertEquals(2394, buildDistance.getMax());
assertEquals((-317), buildDistance.getMin());
assertEquals((-820.0348F), mean, 0.01F);


** It was a parseable test case! 
refined test name is: testBuildDistanceValidParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance((-317), (-1), (float) (-317), 0.0F);
float stdDev = buildDistance.getStdDev();
assertEquals((-1), buildDistance.getMax());
assertEquals((-317), buildDistance.getMin());
assertEquals(0.0F, stdDev, 0.01F);
assertEquals((-317.0F), buildDistance.getMean(), 0.01F);


** It was a parseable test case! 
refined test name is: testBuildDistanceWithNegativeValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
int min = buildDistance.getMin();
assertEquals(0.0F, buildDistance.getMean(), 0.01F);
assertEquals(0, min);
assertEquals(0, buildDistance.getMax());
assertEquals(0.0F, buildDistance.getStdDev(), 0.01F);


** It was a parseable test case! 
refined test name is: testGetMinValueIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance((-317), 2394, (-820.0348F), 1.0F);
int max = buildDistance.getMax();
assertEquals((-317), buildDistance.getMin());
assertEquals((-820.0348F), buildDistance.getMean(), 0.01F);
assertEquals(1.0F, buildDistance.getStdDev(), 0.01F);
assertEquals(2394, max);


** It was a parseable test case! 
refined test name is: testGetMaxAndMeanAndStandardDeviation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance((-783.921F), 0.0F);
assertEquals((-783), buildDistance.getMin());
assertEquals(0.0F, buildDistance.getStdDev(), 0.01F);
assertEquals((-783), buildDistance.getMax());
assertEquals((-783.921F), buildDistance.getMean(), 0.01F);


** It was a parseable test case! 
refined test name is: testBuildDistanceWithNegativeValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(1342.0F, (-2545.92F));
assertEquals(1342.0F, buildDistance.getMean(), 0.01F);
assertEquals((-2545.92F), buildDistance.getStdDev(), 0.01F);
assertEquals(8979, buildDistance.getMax());
assertEquals((-6295), buildDistance.getMin());


** It was a parseable test case! 
refined test name is: testBuildDistanceWithValidValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance((-321), (-321));
int max = buildDistance.getMax();
assertEquals((-321), max);
assertEquals((-321.0F), buildDistance.getMean(), 0.01F);
assertEquals(0.0F, buildDistance.getStdDev(), 0.01F);
assertEquals((-321), buildDistance.getMin());


** It was a parseable test case! 
refined test name is: testBuildDistance
* Compiling Tests
refined test name is: testBuildDistance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
int max = buildDistance.getMax();
assertEquals(0, max);
assertEquals(0, buildDistance.getMin());
assertEquals(0.0F, buildDistance.getMean(), 0.01F);
assertEquals(0.0F, buildDistance.getStdDev(), 0.01F);


** It was a parseable test case! 
refined test name is: testCalculateStatisticsForZeroValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(1333, 1333, (float) 1333, 2699.6858F);
float mean = buildDistance.getMean();
assertEquals(2699.6858F, buildDistance.getStdDev(), 0.01F);
assertEquals(1333, buildDistance.getMin());
assertEquals(1333.0F, mean, 0.01F);
assertEquals(1333, buildDistance.getMax());


** It was a parseable test case! 
refined test name is: testCalculateMeanAndStandardDeviation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(0, 0, (float) 0, (float) 0);
float mean = buildDistance.getMean();
assertEquals(0, buildDistance.getMax());
assertEquals(0, buildDistance.getMin());
assertEquals(0.0F, mean, 0.01F);
assertEquals(0.0F, buildDistance.getStdDev(), 0.01F);


** It was a parseable test case! 
refined test name is: testBuildDistanceWithZeroValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
int min = buildDistance.getMin();
assertEquals(1.0F, buildDistance.getStdDev(), 0.01F);
assertEquals(0.0F, buildDistance.getMean(), 0.01F);
assertEquals((-3), min);
assertEquals(3, buildDistance.getMax());


** It was a parseable test case! 
refined test name is: testGetMinAndMax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(1434, 0, (float) 0, (float) 1434);
int min = buildDistance.getMin();
assertEquals(1434, min);
assertEquals(1434.0F, buildDistance.getStdDev(), 0.01F);
assertEquals(0, buildDistance.getMax());
assertEquals(0.0F, buildDistance.getMean(), 0.01F);


** It was a parseable test case! 
refined test name is: testBuildDistanceConversion
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance arg0 = Distance.buildDistance(0.0F, 1.0F);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(arg0);
float stdDev = transformIntoCeleraAssemblerDistance.getStdDev();
assertEquals((-3), arg0.getMin());
assertEquals(1.0F, arg0.getStdDev(), 0.01F);
assertEquals(0.0F, transformIntoCeleraAssemblerDistance.getMean(), 0.01F);
assertEquals(3, arg0.getMax());
assertEquals(0.0F, arg0.getMean(), 0.01F);
assertEquals((-0.33833334F), stdDev, 0.01F);


** It was a parseable test case! 
refined test name is: testTransformIntoCeleraAssemblerDistance
* Compiling Tests
refined test name is: testTransformIntoCeleraAssemblerDistance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance buildDistance = Distance.buildDistance(0.0F, 1.0F);
float stdDev = buildDistance.getStdDev();
assertEquals((-3), buildDistance.getMin());
assertEquals(1.0F, stdDev, 0.01F);
assertEquals(3, buildDistance.getMax());
assertEquals(0.0F, buildDistance.getMean(), 0.01F);


** It was a parseable test case! 
refined test name is: testCalculateStandardDeviationOfDistanceValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance arg0 = Distance.buildDistance(0, 0, (float) 0, (float) 0);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(arg0);
assertEquals(0, transformIntoCeleraAssemblerDistance.getMax());
assertEquals(0.0F, transformIntoCeleraAssemblerDistance.getStdDev(), 0.01F);
assertEquals(0.0F, transformIntoCeleraAssemblerDistance.getMean(), 0.01F);
assertEquals(0, transformIntoCeleraAssemblerDistance.getMin());


** It was a parseable test case! 
refined test name is: testTransformIntoCeleraAssemblerDistance
* Compiling Tests
refined test name is: testTransformZeroValuesToZeroValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Distance arg0 = Distance.buildDistance(100, 100, (float) 100, 200.6858F);
Distance transformIntoCeleraAssemblerDistance = Distance.transformIntoCeleraAssemblerDistance(arg0);
assertEquals(100, arg0.getMin());
assertEquals(100, arg0.getMax());
assertEquals(32.995F, transformIntoCeleraAssemblerDistance.getStdDev(), 0.01F);
assertEquals(200.6858F, arg0.getStdDev(), 0.01F);
assertEquals(100.0F, transformIntoCeleraAssemblerDistance.getMean(), 0.01F);


** It was a parseable test case! 
refined test name is: testTransformIntoCeleraAssemblerDistance
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:00:36.107 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:00:36.134 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:36.254 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:36.256 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:36.361 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:36.363 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
[MASTER] 11:00:36.513 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:36.522 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:36.676 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:36.678 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
[MASTER] 11:00:36.804 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:36.810 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:36.961 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:00:36.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
[MASTER] 11:00:37.135 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:37.137 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:00:37.272 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:37.274 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:37.405 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:37.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
[MASTER] 11:00:37.542 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:37.544 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:00:37.687 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:00:37.688 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
[MASTER] 11:00:37.801 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:37.825 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
[MASTER] 11:00:38.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:38.641 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:00:39.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:39.489 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:00:40.305 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:40.713 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
[MASTER] 11:00:42.029 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:42.053 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:00:42.833 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:42.857 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
[MASTER] 11:00:43.649 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:43.673 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
[MASTER] 11:00:44.513 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:44.537 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:00:45.341 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:45.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:00:46.165 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:46.189 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:00:46.981 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:47.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:00:47.689 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 11:00:47.713 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Compiling Tests
[MASTER] 11:00:48.521 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:48.545 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 7 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
** Write a test suite: 15 called: 2 to improve: false
** Write a test suite: 21 called: 3 to improve: false
** Write a test suite: 23 called: 4 to improve: false
[MASTER] 11:00:49.633 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:49.657 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 9 called: 2 to improve: false
** Write a test suite: 16 called: 3 to improve: false
** Write a test suite: 17 called: 4 to improve: false
[MASTER] 11:00:50.537 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3548987439302607638.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:00:50.561 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3548987439302607638.jar
* Writing tests to file
* Writing JUnit test case 'Distance_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 9 called: 2 to improve: false
** Write a test suite: 16 called: 3 to improve: false
** Write a test suite: 17 called: 4 to improve: false
* Done!

* Computation finished
