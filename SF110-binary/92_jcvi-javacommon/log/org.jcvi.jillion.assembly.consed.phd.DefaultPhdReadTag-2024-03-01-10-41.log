* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 5046
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:42:03.467 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:42:03.499 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:42:03.499 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:42:03.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:42:03.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:42:03.518 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:42:03.518 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:42:03.519 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:42:03.519 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:42:03.529 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:42:03.530 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:42:03.531 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:42:03.532 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:42:03.571 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:42:03.572 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 211
* Using seed 1709289721206
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 64 / 211
[Progress:>                             1%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:========================>          70%][Progress:>                             2%] [Cov:=========================>         73%][Progress:>                             2%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:=============================>     84%][Progress:=>                            4%] [Cov:=============================>     84%][Progress:=>                            4%] [Cov:=============================>     84%][Progress:=>                            4%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            5%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           8%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    87%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:===============================>   89%][Progress:===>                          12%] [Cov:===============================>   91%][Progress:===>                          13%] [Cov:===============================>   91%][Progress:===>                          13%] [Cov:===============================>   91%][Progress:===>                          13%] [Cov:===============================>   91%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:===>                          13%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         14%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         15%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:====>                         16%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 96%][Progress:=====>                        17%] [Cov:=================================> 97%][Progress:=====>                        17%] [Cov:=================================> 97%][Progress:=====>                        17%] [Cov:=================================> 97%][Progress:=====>                        17%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:=====>                        19%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       20%] [Cov:=================================> 97%][Progress:======>                       21%] [Cov:=================================> 97%][Progress:======>                       21%] [Cov:=================================> 97%][Progress:======>                       21%] [Cov:=================================> 97%][Progress:======>                       21%] [Cov:=================================> 97%][Progress:======>                       21%] [Cov:=================================> 97%][Progress:======>                       21%] [Cov:=================================> 97%][Progress:======>                       22%] [Cov:=================================> 97%][Progress:======>                       22%] [Cov:=================================> 97%][Progress:======>                       22%] [Cov:=================================> 97%][Progress:======>                       22%] [Cov:=================================> 97%][Progress:======>                       23%] [Cov:=================================> 97%][Progress:======>                       23%] [Cov:=================================> 97%][Progress:======>                       23%] [Cov:=================================> 97%][Progress:======>                       23%] [Cov:=================================> 97%][Progress:=======>                      24%] [Cov:=================================> 97%][Progress:=======>                      24%] [Cov:=================================> 97%][Progress:=======>                      24%] [Cov:=================================> 97%][Progress:=======>                      25%] [Cov:=================================> 97%][Progress:=======>                      25%] [Cov:=================================> 97%][Progress:=======>                      25%] [Cov:=================================> 97%][Progress:=======>                      25%] [Cov:=================================> 97%][Progress:=======>                      26%] [Cov:=================================> 97%][Progress:=======>                      26%] [Cov:=================================> 97%][Progress:=======>                      26%] [Cov:=================================> 97%][Progress:========>                     27%] [Cov:=================================> 97%][Progress:========>                     27%] [Cov:=================================> 97%][Progress:========>                     27%] [Cov:=================================> 97%][Progress:========>                     27%] [Cov:=================================> 97%][Progress:========>                     28%] [Cov:=================================> 97%][Progress:========>                     28%] [Cov:=================================> 97%][Progress:========>                     28%] [Cov:=================================> 97%][Progress:========>                     28%] [Cov:=================================> 97%][Progress:========>                     28%] [Cov:=================================> 97%][Progress:========>                     29%] [Cov:=================================> 97%][Progress:========>                     29%] [Cov:=================================> 97%][Progress:========>                     29%] [Cov:=================================> 97%][Progress:========>                     29%] [Cov:=================================> 97%][Progress:=========>                    30%] [Cov:=================================> 97%][Progress:=========>                    30%] [Cov:=================================> 97%][Progress:=========>                    30%] [Cov:=================================> 97%][Progress:=========>                    31%] [Cov:=================================> 97%][Progress:=========>                    31%] [Cov:=================================> 97%][Progress:=========>                    31%] [Cov:=================================> 97%][Progress:=========>                    32%] [Cov:=================================> 97%][Progress:=========>                    32%] [Cov:=================================> 97%][Progress:=========>                    33%] [Cov:=================================> 97%][Progress:=========>                    33%] [Cov:=================================> 97%][Progress:=========>                    33%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   34%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   35%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:==========>                   36%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  37%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  38%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%]
* Search finished after 101s and 762 generations, 364330 statements, best individual has fitness: 2.0
* Generated before the refinement 33 tests with total length 131
statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, (-919L), 0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", arg2, (Date) null, "N|u53Z+S4_HPO", "")
statement is: getFreeFormData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String freeFormData = defaultPhdReadTag.getFreeFormData()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getFreeFormData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, -919L, 0L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, ((Date) (null)), "N|u53Z+S4_HPO", "");
        defaultPhdReadTag.getFreeFormData();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, -919L, 0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, -919L, 0L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, ((Date) (null)), "N|u53Z+S4_HPO", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getFreeFormData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getFreeFormData() target is: defaultPhdReadTag method is: getFreeFormData()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 8
Matched Method is: getFreeFormData()Ljava/lang/String;
TestCase is: long _long = 0L;
long _long = null;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
String string = "";
String string = "N|u53Z+S4_HPO";
String string = "N|u53Z+S4_HPO";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
((DefaultPhdReadTag) _long).getFreeFormData();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, (-2038L), 2556L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(J)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-2038L))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", arg2, arg3, "", "end of file after only %d bytes read (expected %d)")
statement is: getType()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String type = defaultPhdReadTag.getType()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, (-2038L), 2556L);
MockDate mockDate = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", of, mockDate, "", "end of file after only %d bytes read (expected %d)");
defaultPhdReadTag.getType();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED;
        Range of = Range.of(range_CoordinateSystem, -2038L, 2556L);
        MockDate mockDate = new MockDate(-2038L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("test", "1234", of, mockDate, "test", "end of file after only %d bytes read (expected %d)");
        defaultPhdReadTag.getType();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.ZERO_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, -2038L, 2556L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, -2038L, 2556L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(-2038L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("test", "1234", of, mockDate, "test", "end of file after only %d bytes read (expected %d)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getType(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getType() target is: defaultPhdReadTag method is: getType()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: getType()Ljava/lang/String;
TestCase is: long _long = 2556L;
long _long = null;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
MockDate mockDate = new MockDate((-2038L));
String string = "test";
String string = "1234";
String string = "test";
String string = "end of file after only %d bytes read (expected %d)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
((DefaultPhdReadTag) of).getType();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-1138), 32767, (-1138))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y")
statement is: getSource()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String source = defaultPhdReadTag.getSource()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getSource();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, 100L, 200L);
        MockDate mockDate = new MockDate(-1138, 32767, -1138);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("START_POSITION", "ORIENTED", of, mockDate, ((String) (null)), "uPySlI|;Y");
        defaultPhdReadTag.getSource();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 100L, 200L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 100L, 200L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(-1138, 32767, -1138), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("START_POSITION", "ORIENTED", of, mockDate, ((String) (null)), "uPySlI|;Y"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getSource(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getSource() target is: defaultPhdReadTag method is: getSource()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: getSource()Ljava/lang/String;
TestCase is: long _long = 100L;
long _long = 200L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "START_POSITION";
String string = "ORIENTED";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getSource();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-1138), 32767, (-1138))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y")
statement is: getDate()Ljava/util/Date; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate date = (MockDate)defaultPhdReadTag.getDate()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getDate();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, 50L, 100L);
        MockDate mockDate = new MockDate(-1138, 32767, -1138);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read_id_1234", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, ((String) (null)), "sample_id_ABC");
        defaultPhdReadTag.getDate();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 50L, 100L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 50L, 100L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(-1138, 32767, -1138), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read_id_1234", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, ((String) (null)), "sample_id_ABC"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getDate(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getDate() target is: defaultPhdReadTag method is: getDate()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: getDate()Ljava/util/Date;
TestCase is: long _long = 50L;
long _long = 100L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "read_id_1234";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "sample_id_ABC";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getDate();

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: getUngappedRange()Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ungappedRange = defaultPhdReadTag.getUngappedRange()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, arg2, (Date) null, (String) null, "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
Range ungappedRange = defaultPhdReadTag.getUngappedRange();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, ungappedRange, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read1", "chr1", new Range(10, 20), new Date(), "sample1", "");
        Range ungappedRange = defaultPhdReadTag.getUngappedRange();
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read2", "chr1", ungappedRange, new Date(), "sample1", "");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read1", "chr1", new Range(10, 20), new Date(), "sample1", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Range ungappedRange = defaultPhdReadTag.getUngappedRange(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getUngappedRange() target is: defaultPhdReadTag method is: getUngappedRange()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 4
Matched Method is: getUngappedRange()Lorg/jcvi/jillion/core/Range;
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read2", "chr1", ungappedRange, new Date(), "sample1", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 10
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "read1";
String string = "chr1";
String string = "sample1";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
Range ungappedRange = ((DefaultPhdReadTag) string).getUngappedRange();
String string = "read2";
String string = "chr1";
String string = "sample1";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ungappedRange, (Date) string, string, (String) null);
string.equals(defaultPhdReadTag);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-1138), 32767, (-1138))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y")
statement is: getComment()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String comment = defaultPhdReadTag.getComment()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getComment();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, -1L, 0L);// Changed to a negative value to test the behavior for negative coordinates

        MockDate mockDate = new MockDate(-1138, 32767, -1138);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, ((String) (null)), "uPySlI|;Y");
        defaultPhdReadTag.getComment();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, -1L, 0L)// Changed to a negative value to test the behavior for negative coordinates
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, -1L, 0L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(-1138, 32767, -1138), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, ((String) (null)), "uPySlI|;Y"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getComment(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getComment() target is: defaultPhdReadTag method is: getComment()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: getComment()Ljava/lang/String;
TestCase is: long _long = 0L;
long _long = null;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getComment();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, (-919L), (-919L))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", arg2, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = defaultPhdReadTag.hashCode()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
defaultPhdReadTag.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, -919L, -919L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(-2023-04-17T15:03:21Z)", "(-2023-04-17T15:03:21Z)", of, ((Date) (null)), "(-2023-04-17T15:03:21Z)", "(-2023-04-17T15:03:21Z)");
        defaultPhdReadTag.hashCode();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, -919L, -919L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, -919L, -919L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 0 Parameters size() 0 Num of Method Parameters: 3
i 1 Parameters size() 0 Num of Method Parameters: 3
i 2 Parameters size() 0 Num of Method Parameters: 3
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(-2023-04-17T15:03:21Z)", "(-2023-04-17T15:03:21Z)", of, ((Date) (null)), "(-2023-04-17T15:03:21Z)", "(-2023-04-17T15:03:21Z)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.hashCode() target is: defaultPhdReadTag method is: hashCode()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 8
Matched Method is: hashCode()I
TestCase is: Range.CoordinateSystem range_CoordinateSystem = null;
long _long = null;
long _long = null;
Range of = Range.of(range_CoordinateSystem, _long, _long);
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
((DefaultPhdReadTag) _long).hashCode();

statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, arg3, (String) null, (String) null)
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = defaultPhdReadTag.hashCode()
test data is: MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate("2023-02-28T14:58:29.000+05:30");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Bearer", "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtb2NrZXQiLCJleHAiOjE2MjY4MTc5NTksImF1dGgiOiJ0ZXN0aW5nIiwiaWF0IjoxNjIzNDgwOTk1fQ.R7o9-BtZm8bT6Ly2VuEKJxvqH31U_CWc2dPzGsY7YW8", new Range("bytes=0-511"), mockDate, "https://www.example.com/path/to/resource?queryParam=value#fragment", "/path/to/resource");
        defaultPhdReadTag.hashCode();
    }
}
statement is: MockDate mockDate = new MockDate("2023-02-28T14:58:29.000+05:30"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Bearer", "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtb2NrZXQiLCJleHAiOjE2MjY4MTc5NTksImF1dGgiOiJ0ZXN0aW5nIiwiaWF0IjoxNjIzNDgwOTk1fQ.R7o9-BtZm8bT6Ly2VuEKJxvqH31U_CWc2dPzGsY7YW8", new Range("bytes=0-511"), mockDate, "https://www.example.com/path/to/resource?queryParam=value#fragment", "/path/to/resource"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.hashCode() target is: defaultPhdReadTag method is: hashCode()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 4
Matched Method is: hashCode()I
TestCase is: String string = "Bearer";
String string = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtb2NrZXQiLCJleHAiOjE2MjY4MTc5NTksImF1dGgiOiJ0ZXN0aW5nIiwiaWF0IjoxNjIzNDgwOTk1fQ.R7o9-BtZm8bT6Ly2VuEKJxvqH31U_CWc2dPzGsY7YW8";
String string = "https://www.example.com/path/to/resource?queryParam=value#fragment";
String string = "/path/to/resource";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
string.hashCode();

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
Object object = new Object();
defaultPhdReadTag.equals(object);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("title", "author", new Range(0, 10), null, null, null);
        Object object = new Object();
        defaultPhdReadTag.equals(object);
    }
}
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("title", "author", new Range(0, 10), null, null, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(object), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(object) target is: defaultPhdReadTag method is: equals(java.lang.Object)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 2
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "title";
String string = "author";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) null, (Date) null, (String) null, (String) null);
Object object = new Object();
string.equals(object);

statement is: of(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0, 404, 1836)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, "MHZdNR5wgB", "MHZdNR5wgB")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: Range of = Range.of(0L);
MockDate mockDate = new MockDate(0, 404, 1836);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "MHZdNR5wgB", "MHZdNR5wgB");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range of = Range.of(0L, 100L);
        MockDate mockDate = new MockDate(2018, 4, 15);
        DefaultPhdReadTag defaultPhdReadTag1 = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "MHZdNR5wgB", "MHZdNR5wgB");
        defaultPhdReadTag1.equals(defaultPhdReadTag1);
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "MHZdNR5wgB", "MHZdNR5wgB");
        defaultPhdReadTag2.equals(defaultPhdReadTag2);
        defaultPhdReadTag1.equals(defaultPhdReadTag2);
    }
}
statement is: Range of = Range.of(0L, 100L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(0L, 100L) target is: Range method is: of(long,long)
statement is: MockDate mockDate = new MockDate(2018, 4, 15), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag1 = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "MHZdNR5wgB", "MHZdNR5wgB"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag1.equals(defaultPhdReadTag1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag1.equals(defaultPhdReadTag1) target is: defaultPhdReadTag1 method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 8
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "MHZdNR5wgB", "MHZdNR5wgB"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag2.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag2.equals(defaultPhdReadTag2) target is: defaultPhdReadTag2 method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 14
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: defaultPhdReadTag1.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag1.equals(defaultPhdReadTag2) target is: defaultPhdReadTag1 method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 14
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 2018;
int _int = 4;
int _int = 15;
MockDate mockDate = new MockDate(_int, _int, _int);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "MHZdNR5wgB";
String string = "MHZdNR5wgB";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "MHZdNR5wgB");
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "MHZdNR5wgB";
String string = "MHZdNR5wgB";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "MHZdNR5wgB");
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals((Object) null)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("123456", "John Doe", Range.of(0, 5), new Date(), "ABC-1234", "Jane Smith");
        defaultPhdReadTag.equals(((Object) (null)));
    }
}
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("123456", "John Doe", Range.of(0, 5), new Date(), "ABC-1234", "Jane Smith"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(((Object) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(((Object) (null))) target is: defaultPhdReadTag method is: equals(java.lang.Object)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "123456";
String string = "John Doe";
String string = "ABC-1234";
String string = "Jane Smith";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
Date date = null;
string.equals(date);

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals()
statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, (-919L), (-919L))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", arg2, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", arg2, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, -919L, -919L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(-82354987607890321L),(-82354987607890321L)", "(-82354987607890321L),(-82354987607890321L)", of, ((Date) (null)), "(-82354987607890321L),(-82354987607890321L)", "(-82354987607890321L),(-82354987607890321L)");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(-82354987607890321L),(-82354987607890321L)", "(-82354987607890321L),(-82354987607890321L)", of, ((Date) (null)), "(-82354987607890321L),(-82354987607890321L)", "(-82354987607890321L),(-82354987607890321L)");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, -919L, -919L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, -919L, -919L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 0 Parameters size() 0 Num of Method Parameters: 3
i 1 Parameters size() 0 Num of Method Parameters: 3
i 2 Parameters size() 0 Num of Method Parameters: 3
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(-82354987607890321L),(-82354987607890321L)", "(-82354987607890321L),(-82354987607890321L)", of, ((Date) (null)), "(-82354987607890321L),(-82354987607890321L)", "(-82354987607890321L),(-82354987607890321L)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(-82354987607890321L),(-82354987607890321L)", "(-82354987607890321L),(-82354987607890321L)", of, ((Date) (null)), "(-82354987607890321L),(-82354987607890321L)", "(-82354987607890321L),(-82354987607890321L)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 13
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: Range.CoordinateSystem range_CoordinateSystem = null;
long _long = null;
long _long = null;
Range of = Range.of(range_CoordinateSystem, _long, _long);
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-1138), 32767, (-1138))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("V{@{", "Ik@]q", arg2, arg3, (String) null, "<-v@d.vUK\"l6@k")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("V{@{", "Ik@]q", of, mockDate, (String) null, "<-v@d.vUK\"l6@k");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, 1L, 20000L);
        MockDate mockDate = new MockDate(-1138, 32767, -1138);
        DefaultPhdReadTag defaultPhdReadTag1 = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, ((String) (null)), "uPySlI|;Y");
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("V{@{", "Ik@]q", of, mockDate, ((String) (null)), "<-v@d.vUK\"l6\u007f@k");
        defaultPhdReadTag1.equals(defaultPhdReadTag2);
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 1L, 20000L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 1L, 20000L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(-1138, 32767, -1138), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag1 = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, ((String) (null)), "uPySlI|;Y"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("V{@{", "Ik@]q", of, mockDate, ((String) (null)), "<-v@d.vUK\"l6\u007f@k"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag1.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag1.equals(defaultPhdReadTag2) target is: defaultPhdReadTag1 method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 13
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = 1L;
long _long = 20000L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
String string = "V{@{";
String string = "Ik@]q";
String string = "<-v@d.vUK\"l6@k";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
of.equals(defaultPhdReadTag);

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, (Date) null, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag")
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, arg3, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, (Date) null, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, mockDate, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", ((Range) (null)), ((Date) (null)), "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", ((Range) (null)), mockDate, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
        defaultPhdReadTag.equals(defaultPhdReadTag2);
    }
}
statement is: // Improved test data
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", ((Range) (null)), ((Date) (null)), "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", ((Range) (null)), mockDate, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag2) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 10
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
MockDate mockDate = new MockDate();
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
string.equals(defaultPhdReadTag);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, (-2038L), 2556L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(J)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-2038L))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", arg2, arg3, "", "end of file after only %d bytes read (expected %d)")
statement is: org.evosuite.runtime.mock.java.util.MockDate(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-502672523), (-2069276138), (-502672523))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("l'&+pKlY_#Wu<1Z~", "Rk8FG", arg2, arg3, "", "!}BuB^{?rNE~)u ")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, (-2038L), 2556L);
MockDate mockDate = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", of, mockDate, "", "end of file after only %d bytes read (expected %d)");
MockDate mockDate = new MockDate((-502672523), (-2069276138), (-502672523));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("l'&+pKlY_#Wu<1Z~", "Rk8FG", of, mockDate, "", "!}BuB^{?rNE~)u ");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED;
        Range of = Range.of(range_CoordinateSystem, Long - 2038L, 2556L);
        MockDate mockDate1 = new MockDate(Long - 2038L);
        DefaultPhdReadTag defaultPhdReadTag1 = new DefaultPhdReadTag("", "", of, mockDate1, "");
        MockDate mockDate2 = new MockDate(1969L, 9L, 24L);
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("l'&+pKlY_#Wu<1Z~", "Rk8FG", of, mockDate2, "!");
        defaultPhdReadTag1.equals(defaultPhdReadTag2);
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.ZERO_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, Long - 2038L, 2556L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, Long - 2038L, 2556L) target is: Range method is: of(Range.CoordinateSystem,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
statement is: MockDate mockDate1 = new MockDate(Long - 2038L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag1 = new DefaultPhdReadTag("", "", of, mockDate1, ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockDate mockDate2 = new MockDate(1969L, 9L, 24L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("l'&+pKlY_#Wu<1Z~", "Rk8FG", of, mockDate2, "!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag1.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag1.equals(defaultPhdReadTag2) target is: defaultPhdReadTag1 method is: equals(DefaultPhdReadTag)
TestCase is: long _long = 2556L;
long _long = null;
long _long = null;
Range.of((Range.CoordinateSystem) _long, _long, _long);
MockDate mockDate = new MockDate((-2038L));
long _long = 1969L;
long _long = 9L;
long _long = 24L;
MockDate mockDate = new MockDate((int) _long, (int) _long, (int) _long);

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("doctoral thesis", "1234567890", new Range(1, 10), new Date(1990, 12, 15), "John Smith", "University of California");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("doctoral thesis", "9876543210", new Range(1, 10), new Date(1990, 12, 15), "Jane Doe", "University of California");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("doctoral thesis", "1234567890", new Range(1, 10), new Date(1990, 12, 15), "John Smith", "University of California"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("doctoral thesis", "9876543210", new Range(1, 10), new Date(1990, 12, 15), "Jane Doe", "University of California"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "doctoral thesis";
String string = "1234567890";
String string = "John Smith";
String string = "University of California";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
String string = "doctoral thesis";
String string = "9876543210";
String string = "Jane Doe";
String string = "University of California";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
string.equals(defaultPhdReadTag);

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "", (Range) null, (Date) null, (String) null, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "", (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", ((Range) (null)), ((Date) (null)), "USA", "CA");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jane Doe", "456 Elm St.", ((Range) (null)), ((Date) (null)), "Canada", "ON");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", ((Range) (null)), ((Date) (null)), "USA", "CA"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jane Doe", "456 Elm St.", ((Range) (null)), ((Date) (null)), "Canada", "ON"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "John Doe";
String string = "123 Main St.";
String string = "USA";
String string = "CA";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
String string = "Jane Doe";
String string = "456 Elm St.";
String string = "Canada";
String string = "ON";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
string.equals(defaultPhdReadTag);

statement is: of(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of((-919L))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("x_2%P30bf[cS/m6", "(9d+)s*,s*(d+)", arg2, (Date) null, (String) null, (String) null)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(":9PBc^D&P", "", arg2, (Date) null, (String) null, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range of = Range.of((-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("x_2%P30bf[cS/m6", "(9d+)s*,s*(d+)", of, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(":9PBc^D&P", "", of, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range of = Range.of(-10L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("x_2%P30bf[cS/m6", "(9d+)s*,s*(d+)", of, ((Date) (null)), ((String) (null)), ((String) (null)));
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(":9PBc^D&P", "", of, ((Date) (null)), ((String) (null)), ((String) (null)));
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: Range of = Range.of(-10L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(-10L) target is: Range method is: of(long)
Matched Method is: of(J)Lorg/jcvi/jillion/core/Range;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("x_2%P30bf[cS/m6", "(9d+)s*,s*(d+)", of, ((Date) (null)), ((String) (null)), ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(":9PBc^D&P", "", of, ((Date) (null)), ((String) (null)), ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 7
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = null;
Range of = Range.of(_long);
String string = "x_2%P30bf[cS/m6";
String string = "(9d+)s*,s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) null, (String) null, (String) null);
String string = ":9PBc^D&P";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) null, (String) null, (String) null);
of.equals(defaultPhdReadTag);

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", (String) null, (Range) null, (Date) null, (String) null, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "RfFUuX1@^_=G?nv8", ((Range) (null)), new Date(2023, 4, 7), "2870188652", "e");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "RfFUuX1@^_=G?nv8", ((Range) (null)), new Date(2023, 4, 7), "2870188652", "e"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = ";smDk\"%0.t<LZw)NI";
String string = "RfFUuX1@^_=G?nv8";
String string = "2870188652";
String string = "e";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
string.equals(defaultPhdReadTag);

statement is: of(JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(32L, 32L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s1@*,8s*(d+)", "(9d+)s1@*,8s*(d+)", arg2, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("tPCU^;k(4T[owd*3", "(9d+)s1@*,8s*(d+)", arg2, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range of = Range.of(32L, 32L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s1@*,8s*(d+)", "(9d+)s1@*,8s*(d+)", of, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("tPCU^;k(4T[owd*3", "(9d+)s1@*,8s*(d+)", of, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range of = Range.of(32L, 32L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("9d+s1@*,8s*(d+)", "9d+s1@*,8s*(d+)", of, ((Date) (null)), ((String) (null)), "9d+s1@*,8s*(d+)");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("tPCU^;k(4T[owd*3", "9d+s1@*,8s*(d+)", of, ((Date) (null)), ((String) (null)), "9d+s1@*,8s*(d+)");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: Range of = Range.of(32L, 32L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(32L, 32L) target is: Range method is: of(long,long)
Matched Method is: of(JJ)Lorg/jcvi/jillion/core/Range;
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("9d+s1@*,8s*(d+)", "9d+s1@*,8s*(d+)", of, ((Date) (null)), ((String) (null)), "9d+s1@*,8s*(d+)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("tPCU^;k(4T[owd*3", "9d+s1@*,8s*(d+)", of, ((Date) (null)), ((String) (null)), "9d+s1@*,8s*(d+)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 10
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = 32L;
long _long = 32L;
Range of = Range.of(_long, _long);
String string = "9d+s1@*,8s*(d+)";
String string = "9d+s1@*,8s*(d+)";
String string = "9d+s1@*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, (String) null, "(9d+)s1@*,8s*(d+)");
String string = "tPCU^;k(4T[owd*3";
String string = "9d+s1@*,8s*(d+)";
String string = "9d+s1@*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, (String) null, "(9d+)s1@*,8s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "")
statement is: of(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(147L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, arg2, (Date) null, (String) null, "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
Range of = Range.of(147L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, of, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", Range.of(147L), Date.from(Instant.now()), "JD-001", "");
        Range of = Range.of(147L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", of, Date.from(Instant.now()), "JD-001", "");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: // Improved test data
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", Range.of(147L), Date.from(Instant.now()), "JD-001", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Range of = Range.of(147L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(147L) target is: Range method is: of(long)
Matched Method is: of(J)Lorg/jcvi/jillion/core/Range;
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", of, Date.from(Instant.now()), "JD-001", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 11
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "John Doe";
String string = "123 Main St.";
String string = "JD-001";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, "");
long _long = 147L;
Range of = Range.of(_long);
String string = "John Doe";
String string = "123 Main St.";
String string = "JD-001";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
string.equals(defaultPhdReadTag);

statement is: of(JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of((-919L), (-919L))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", arg2, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)")
statement is: ofLength(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ofLength = Range.ofLength(3689L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", arg2, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range of = Range.of((-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", of, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
Range ofLength = Range.ofLength(3689L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", ofLength, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range of = Range.of(-1000L, -1000L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", of, null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
        Range ofLength = Range.ofLength(3689L);
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", ofLength, null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
        defaultPhdReadTag.equals(defaultPhdReadTag2);
    }
}
statement is: Range of = Range.of(-1000L, -1000L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(-1000L, -1000L) target is: Range method is: of(long,long)
Matched Method is: of(JJ)Lorg/jcvi/jillion/core/Range;
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", of, null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Range ofLength = Range.ofLength(3689L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.ofLength(3689L) target is: Range method is: ofLength(long)
Matched Method is: ofLength(J)Lorg/jcvi/jillion/core/Range;
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", ofLength, null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag2) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 14
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = null;
long _long = null;
Range of = Range.of(_long, _long);
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(9d+)s*,8s*(d+)");
long _long = 3689L;
Range ofLength = Range.ofLength(_long);
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ofLength, (Date) string, string, "(9d+)s*,8s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

statement is: org.evosuite.runtime.mock.java.util.MockDate(J)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, arg3, "", "")
statement is: getComment()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String comment = defaultPhdReadTag.getComment()
test data is: MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getComment();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate(1632574093L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Amazon", "RDS", new Range(1632574093L, 1632574093L), mockDate, "", "This is a comment.");
        defaultPhdReadTag.getComment();
    }
}
statement is: MockDate mockDate = new MockDate(1632574093L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Amazon", "RDS", new Range(1632574093L, 1632574093L), mockDate, "", "This is a comment."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getComment(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getComment() target is: defaultPhdReadTag method is: getComment()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 6
Matched Method is: getComment()Ljava/lang/String;
TestCase is: long _long = 1632574093L;
MockDate mockDate = new MockDate(_long);
String string = "Amazon";
String string = "RDS";
String string = "";
String string = "This is a comment.";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "");
((DefaultPhdReadTag) mockDate).getComment();

statement is: of(JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(1554L, 2302L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(1, 1, 1)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", arg2, arg3, "d", "E5^")
statement is: getComment()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String comment = defaultPhdReadTag.getComment()
test data is: Range of = Range.of(1554L, 2302L);
MockDate mockDate = new MockDate(1, 1, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", of, mockDate, "d", "E5^");
defaultPhdReadTag.getComment();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range of = Range.of(1554L, 2302L);
        MockDate mockDate = new MockDate(1, 1, 1);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", of, mockDate, "d", "E5^");
        // Improved test data:
        defaultPhdReadTag.getComment();
    }
}
statement is: Range of = Range.of(1554L, 2302L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(1554L, 2302L) target is: Range method is: of(long,long)
Matched Method is: of(JJ)Lorg/jcvi/jillion/core/Range;
statement is: MockDate mockDate = new MockDate(1, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", of, mockDate, "d", "E5^"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
defaultPhdReadTag.getComment(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
defaultPhdReadTag.getComment() target is: defaultPhdReadTag method is: getComment()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 11
Matched Method is: getComment()Ljava/lang/String;
TestCase is: long _long = 1554L;
long _long = 2302L;
Range of = Range.of(_long, _long);
int _int = 1;
int _int = 1;
int _int = 1;
MockDate mockDate = new MockDate(_int, _int, _int);
String string = "E5^";
String string = "d";
String string = "d";
String string = "E5^";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
((DefaultPhdReadTag) of).getComment();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, (-919L), 0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", arg2, (Date) null, "N|u53Z+S4_HPO", "")
statement is: getDate()Ljava/util/Date; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.util.Date
statement code is: Date date = defaultPhdReadTag.getDate()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getDate();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, -1024L, 0L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, ((Date) (null)), "N|u53Z+S4_HPO", "");
        defaultPhdReadTag.getDate();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, -1024L, 0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, -1024L, 0L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, ((Date) (null)), "N|u53Z+S4_HPO", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getDate(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getDate() target is: defaultPhdReadTag method is: getDate()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 8
Matched Method is: getDate()Ljava/util/Date;
TestCase is: long _long = 0L;
long _long = null;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
String string = "";
String string = "N|u53Z+S4_HPO";
String string = "N|u53Z+S4_HPO";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
((DefaultPhdReadTag) _long).getDate();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-1138), 32767, (-1138))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y")
statement is: getFreeFormData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String freeFormData = defaultPhdReadTag.getFreeFormData()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getFreeFormData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, 0L, 100L);
        MockDate mockDate = new MockDate(2022, 1, 0);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, ((String) (null)), "Test Data");
        defaultPhdReadTag.getFreeFormData();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 0L, 100L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 0L, 100L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(2022, 1, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, ((String) (null)), "Test Data"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getFreeFormData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getFreeFormData() target is: defaultPhdReadTag method is: getFreeFormData()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 11
Matched Method is: getFreeFormData()Ljava/lang/String;
TestCase is: long _long = 0L;
long _long = 100L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
int _int = 2022;
int _int = 1;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int);
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "Test Data";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getFreeFormData();

statement is: org.evosuite.runtime.mock.java.util.MockDate(J)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, arg3, (String) null, (String) null)
statement is: getFreeFormData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String freeFormData = defaultPhdReadTag.getFreeFormData()
test data is: MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.getFreeFormData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate(1627059200000L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("testString", "testString", new Range(0, 10), mockDate, "testString", "testString");
        defaultPhdReadTag.getFreeFormData();
    }
}
statement is: MockDate mockDate = new MockDate(1627059200000L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("testString", "testString", new Range(0, 10), mockDate, "testString", "testString"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getFreeFormData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getFreeFormData() target is: defaultPhdReadTag method is: getFreeFormData()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 6
Matched Method is: getFreeFormData()Ljava/lang/String;
TestCase is: long _long = 1627059200000L;
MockDate mockDate = new MockDate(_long);
String string = "testString";
String string = "testString";
String string = "testString";
String string = "testString";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, (String) null);
((DefaultPhdReadTag) mockDate).getFreeFormData();

statement is: of(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of((-2992L))
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate((-4682), 0, (-1264), (-1264), 1, 0)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "", arg2, arg3, (String) null, "")
statement is: getSource()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String source = defaultPhdReadTag.getSource()
test data is: Range of = Range.of((-2992L));
MockDate mockDate = new MockDate((-4682), 0, (-1264), (-1264), 1, 0);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "", of, mockDate, (String) null, "");
defaultPhdReadTag.getSource();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range of = Range.of(-2992L);
        MockDate mockDate = new MockDate(-4682, 0, -1264, -1264, 1, 0);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "", of, mockDate, ((String) (null)), "");
        defaultPhdReadTag.getSource();
    }
}
statement is: Range of = Range.of(-2992L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(-2992L) target is: Range method is: of(long)
Matched Method is: of(J)Lorg/jcvi/jillion/core/Range;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: MockDate mockDate = new MockDate(-4682, 0, -1264, -1264, 1, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "", of, mockDate, ((String) (null)), ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getSource(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getSource() target is: defaultPhdReadTag method is: getSource()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: getSource()Ljava/lang/String;
TestCase is: long _long = null;
Range of = Range.of(_long);
int _int = 0;
int _int = 1;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int, (-1264), 1, 0);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "");
((DefaultPhdReadTag) _int).getSource();

statement is: org.evosuite.runtime.mock.java.util.MockDate(J)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, arg3, "", "")
statement is: getSource()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String source = defaultPhdReadTag.getSource()
test data is: MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getSource();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate(1643750289L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("My Tag", "My Description", Range.of(1, 5), mockDate, "My Source", "My Type");
        defaultPhdReadTag.getSource();
    }
}
statement is: MockDate mockDate = new MockDate(1643750289L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("My Tag", "My Description", Range.of(1, 5), mockDate, "My Source", "My Type"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getSource(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getSource() target is: defaultPhdReadTag method is: getSource()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 6
Matched Method is: getSource()Ljava/lang/String;
TestCase is: long _long = 1643750289L;
MockDate mockDate = new MockDate(_long);
String string = "My Tag";
String string = "My Description";
String string = "My Source";
String string = "My Type";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "");
((DefaultPhdReadTag) mockDate).getSource();

statement is: org.evosuite.runtime.mock.java.util.MockDate(J)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, arg3, "", "")
statement is: getType()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String type = defaultPhdReadTag.getType()
test data is: MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getType();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate(0L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("2023-02-28", "Human Resources", null, mockDate, "Employee ID: 123456", "Department: HR");
        defaultPhdReadTag.getType();
    }
}
statement is: MockDate mockDate = new MockDate(0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("2023-02-28", "Human Resources", null, mockDate, "Employee ID: 123456", "Department: HR"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getType(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getType() target is: defaultPhdReadTag method is: getType()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 6
Matched Method is: getType()Ljava/lang/String;
TestCase is: long _long = 0L;
MockDate mockDate = new MockDate(_long);
String string = "2023-02-28";
String string = "Human Resources";
String string = "Employee ID: 123456";
String string = "Department: HR";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "");
((DefaultPhdReadTag) mockDate).getType();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, (-919L), 0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "Rk8FG", arg2, (Date) null, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag")
statement is: getType()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String type = defaultPhdReadTag.getType()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "Rk8FG", of, (Date) null, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
defaultPhdReadTag.getType();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, -919L, 0L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "Rk8FG", of, ((Date) (null)), "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
        defaultPhdReadTag.getType();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, -919L, 0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, -919L, 0L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "Rk8FG", of, ((Date) (null)), "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getType(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getType() target is: defaultPhdReadTag method is: getType()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 8
Matched Method is: getType()Ljava/lang/String;
TestCase is: long _long = 0L;
long _long = null;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "Rk8FG";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
((DefaultPhdReadTag) _long).getType();

* test suite isTestSuite: 64
Test 0: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getFreeFormData();
Test 1: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, (-2038L), 2556L);
MockDate mockDate = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", of, mockDate, "", "end of file after only %d bytes read (expected %d)");
defaultPhdReadTag.getType();
Test 2: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getSource();
Test 3: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getDate();
Test 4: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.getUngappedRange();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 5: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getComment();
Test 6: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
defaultPhdReadTag.hashCode();
Test 7: 
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.hashCode();
Test 8: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
Object object = new Object();
defaultPhdReadTag.equals(object);
Test 9: 
Range of = Range.of(0L);
MockDate mockDate = new MockDate(0, 404, 1836);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "MHZdNR5wgB", "MHZdNR5wgB");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 10: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals((Object) null);
Test 11: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 12: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 13: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 14: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("V{@{", "Ik@]q", of, mockDate, (String) null, "<-v@d.vUK\"l6@k");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 15: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, (Date) null, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, mockDate, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 16: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, (-2038L), 2556L);
MockDate mockDate = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", of, mockDate, "", "end of file after only %d bytes read (expected %d)");
MockDate mockDate = new MockDate((-502672523), (-2069276138), (-502672523));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("l'&+pKlY_#Wu<1Z~", "Rk8FG", of, mockDate, "", "!}BuB^{?rNE~)u ");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 17: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 18: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "", (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 19: 
Range of = Range.of((-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("x_2%P30bf[cS/m6", "(9d+)s*,s*(d+)", of, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(":9PBc^D&P", "", of, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 20: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 21: 
Range of = Range.of(32L, 32L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s1@*,8s*(d+)", "(9d+)s1@*,8s*(d+)", of, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("tPCU^;k(4T[owd*3", "(9d+)s1@*,8s*(d+)", of, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 22: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
Range of = Range.of(147L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, of, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 23: 
Range of = Range.of((-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", of, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
Range ofLength = Range.ofLength(3689L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", ofLength, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 24: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getComment();
Test 25: 
Range of = Range.of(1554L, 2302L);
MockDate mockDate = new MockDate(1, 1, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", of, mockDate, "d", "E5^");
defaultPhdReadTag.getComment();
Test 26: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getDate();
Test 27: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getFreeFormData();
Test 28: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.getFreeFormData();
Test 29: 
Range of = Range.of((-2992L));
MockDate mockDate = new MockDate((-4682), 0, (-1264), (-1264), 1, 0);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "", of, mockDate, (String) null, "");
defaultPhdReadTag.getSource();
Test 30: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getSource();
Test 31: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getType();
Test 32: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "Rk8FG", of, (Date) null, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
defaultPhdReadTag.getType();
Test 33: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) 0L, (long) (Long) null, (long) (Long) null);
String string = "";
String string = "N|u53Z+S4_HPO";
String string = "N|u53Z+S4_HPO";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
((DefaultPhdReadTag) _long).getFreeFormData();

Test 34: 
Range of = Range.of((Range.CoordinateSystem) 2556L, (long) (Long) null, (long) (Long) null);
MockDate mockDate = new MockDate((-2038L));
String string = "test";
String string = "1234";
String string = "test";
String string = "end of file after only %d bytes read (expected %d)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
((DefaultPhdReadTag) of).getType();

Test 35: 
Range of = Range.of((Range.CoordinateSystem) 100L, 200L, (long) (Long) null);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "START_POSITION";
String string = "ORIENTED";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getSource();

Test 36: 
Range of = Range.of((Range.CoordinateSystem) 50L, 100L, (long) (Long) null);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "read_id_1234";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "sample_id_ABC";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getDate();

Test 37: 
String string = "read1";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read1", "chr1", (Range) "sample1", (Date) "", (String) null, (String) null);
Range ungappedRange = ((DefaultPhdReadTag) string).getUngappedRange();
String string = "read2";
String string = "chr1";
String string = "sample1";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ungappedRange, (Date) string, string, (String) null);
string.equals(defaultPhdReadTag);

Test 38: 
Range of = Range.of((Range.CoordinateSystem) 0L, (long) (Long) null, (long) (Long) null);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getComment();

Test 39: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) null, (long) (Long) null, (long) (Long) null);
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
((DefaultPhdReadTag) _long).hashCode();

Test 40: 
String string = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtb2NrZXQiLCJleHAiOjE2MjY4MTc5NTksImF1dGgiOiJ0ZXN0aW5nIiwiaWF0IjoxNjIzNDgwOTk1fQ.R7o9-BtZm8bT6Ly2VuEKJxvqH31U_CWc2dPzGsY7YW8";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Bearer", "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtb2NrZXQiLCJleHAiOjE2MjY4MTc5NTksImF1dGgiOiJ0ZXN0aW5nIiwiaWF0IjoxNjIzNDgwOTk1fQ.R7o9-BtZm8bT6Ly2VuEKJxvqH31U_CWc2dPzGsY7YW8", (Range) "https://www.example.com/path/to/resource?queryParam=value#fragment", (Date) "/path/to/resource", (String) null, (String) null);
string.hashCode();

Test 41: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("title", "author", (Range) null, (Date) null, (String) null, (String) null);
Object object = new Object();
((DefaultPhdReadTag)"title").equals(object);

Test 42: 
int _int = 15;
MockDate mockDate = new MockDate(2018, 4, 15);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", (Range) mockDate, (Date) "MHZdNR5wgB", "MHZdNR5wgB", "MHZdNR5wgB");
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "MHZdNR5wgB";
String string = "MHZdNR5wgB";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "MHZdNR5wgB");
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);

Test 43: 
String string = "123456";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("123456", "John Doe", (Range) "ABC-1234", (Date) "Jane Smith", (String) null, (String) null);
Date date = null;
string.equals(date);

Test 44: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) null, (long) (Long) null, (long) (Long) null);
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

Test 45: 
Range of = Range.of((Range.CoordinateSystem) 1L, 20000L, (long) (Long) null);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
String string = "V{@{";
String string = "Ik@]q";
String string = "<-v@d.vUK\"l6@k";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
of.equals(defaultPhdReadTag);

Test 46: 
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Date) "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
MockDate mockDate = new MockDate();
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
string.equals(defaultPhdReadTag);

Test 47: 
Range.of((Range.CoordinateSystem) 2556L, (long) (Long) null, (long) (Long) null);
MockDate mockDate = new MockDate((-2038L));
long _long = 1969L;
long _long = 9L;
long _long = 24L;
MockDate mockDate = new MockDate((int) _long, (int) _long, (int) _long);

Test 48: 
String string = "doctoral thesis";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("doctoral thesis", "1234567890", (Range) "John Smith", (Date) "University of California", (String) null, (String) null);
String string = "doctoral thesis";
String string = "9876543210";
String string = "Jane Doe";
String string = "University of California";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
string.equals(defaultPhdReadTag);

Test 49: 
String string = "John Doe";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", (Range) "USA", (Date) "CA", (String) null, (String) null);
String string = "Jane Doe";
String string = "456 Elm St.";
String string = "Canada";
String string = "ON";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
string.equals(defaultPhdReadTag);

Test 50: 
Range of = Range.of((long) (Long) null);
String string = "x_2%P30bf[cS/m6";
String string = "(9d+)s*,s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) null, (String) null, (String) null);
String string = ":9PBc^D&P";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) null, (String) null, (String) null);
of.equals(defaultPhdReadTag);

Test 51: 
String string = ";smDk\"%0.t<LZw)NI";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "RfFUuX1@^_=G?nv8", (Range) "2870188652", (Date) "e", (String) null, (String) null);
string.equals(defaultPhdReadTag);

Test 52: 
long _long = 32L;
Range of = Range.of(32L, 32L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("9d+s1@*,8s*(d+)", "9d+s1@*,8s*(d+)", of, (Date) "9d+s1@*,8s*(d+)", (String) null, "(9d+)s1@*,8s*(d+)");
String string = "tPCU^;k(4T[owd*3";
String string = "9d+s1@*,8s*(d+)";
String string = "9d+s1@*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, (String) null, "(9d+)s1@*,8s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

Test 53: 
String string = "John Doe";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", (Range) "JD-001", (Date) "", (String) null, "");
long _long = 147L;
Range of = Range.of(_long);
String string = "John Doe";
String string = "123 Main St.";
String string = "JD-001";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
string.equals(defaultPhdReadTag);

Test 54: 
long _long = null;
Range of = Range.of((long) (Long) null, (long) (Long) null);
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(9d+)s*,8s*(d+)");
long _long = 3689L;
Range ofLength = Range.ofLength(_long);
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ofLength, (Date) string, string, "(9d+)s*,8s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

Test 55: 
MockDate mockDate = new MockDate(1632574093L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Amazon", "RDS", (Range) mockDate, (Date) "", "This is a comment.", "");
((DefaultPhdReadTag) mockDate).getComment();

Test 56: 
Range of = Range.of(1554L, 2302L);
MockDate mockDate = new MockDate(1, 1, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", of, mockDate, "d", "E5^");
((DefaultPhdReadTag) of).getComment();

Test 57: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) 0L, (long) (Long) null, (long) (Long) null);
String string = "";
String string = "N|u53Z+S4_HPO";
String string = "N|u53Z+S4_HPO";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
((DefaultPhdReadTag) _long).getDate();

Test 58: 
Range of = Range.of((Range.CoordinateSystem) 0L, 100L, (long) (Long) null);
int _int = 2022;
int _int = 1;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int);
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "Test Data";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getFreeFormData();

Test 59: 
MockDate mockDate = new MockDate(1627059200000L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("testString", "testString", (Range) mockDate, (Date) "testString", "testString", (String) null);
((DefaultPhdReadTag) mockDate).getFreeFormData();

Test 60: 
Range of = Range.of((long) (Long) null);
int _int = 0;
int _int = 1;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int, (-1264), 1, 0);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "");
((DefaultPhdReadTag) _int).getSource();

Test 61: 
MockDate mockDate = new MockDate(1643750289L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("My Tag", "My Description", (Range) mockDate, (Date) "My Source", "My Type", "");
((DefaultPhdReadTag) mockDate).getSource();

Test 62: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("2023-02-28", "Human Resources", (Range) mockDate, (Date) "Employee ID: 123456", "Department: HR", "");
((DefaultPhdReadTag) mockDate).getType();

Test 63: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) 0L, (long) (Long) null, (long) (Long) null);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "Rk8FG";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
((DefaultPhdReadTag) _long).getType();


* Generated after the refinement and before minimization 64 tests with total length 361
* test suite isTestSuite: 64
Test 0: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getFreeFormData();
Test 1: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, (-2038L), 2556L);
MockDate mockDate = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", of, mockDate, "", "end of file after only %d bytes read (expected %d)");
defaultPhdReadTag.getType();
Test 2: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getSource();
Test 3: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getDate();
Test 4: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.getUngappedRange();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 5: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getComment();
Test 6: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
defaultPhdReadTag.hashCode();
Test 7: 
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.hashCode();
Test 8: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
Object object = new Object();
defaultPhdReadTag.equals(object);
Test 9: 
Range of = Range.of(0L);
MockDate mockDate = new MockDate(0, 404, 1836);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "MHZdNR5wgB", "MHZdNR5wgB");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 10: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals((Object) null);
Test 11: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 12: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 13: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 14: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("V{@{", "Ik@]q", of, mockDate, (String) null, "<-v@d.vUK\"l6@k");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 15: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, (Date) null, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, mockDate, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 16: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, (-2038L), 2556L);
MockDate mockDate = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", of, mockDate, "", "end of file after only %d bytes read (expected %d)");
MockDate mockDate = new MockDate((-502672523), (-2069276138), (-502672523));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("l'&+pKlY_#Wu<1Z~", "Rk8FG", of, mockDate, "", "!}BuB^{?rNE~)u ");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 17: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 18: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "", (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 19: 
Range of = Range.of((-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("x_2%P30bf[cS/m6", "(9d+)s*,s*(d+)", of, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(":9PBc^D&P", "", of, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 20: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 21: 
Range of = Range.of(32L, 32L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s1@*,8s*(d+)", "(9d+)s1@*,8s*(d+)", of, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("tPCU^;k(4T[owd*3", "(9d+)s1@*,8s*(d+)", of, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 22: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
Range of = Range.of(147L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, of, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 23: 
Range of = Range.of((-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", of, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
Range ofLength = Range.ofLength(3689L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", ofLength, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 24: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getComment();
Test 25: 
Range of = Range.of(1554L, 2302L);
MockDate mockDate = new MockDate(1, 1, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", of, mockDate, "d", "E5^");
defaultPhdReadTag.getComment();
Test 26: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getDate();
Test 27: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getFreeFormData();
Test 28: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.getFreeFormData();
Test 29: 
Range of = Range.of((-2992L));
MockDate mockDate = new MockDate((-4682), 0, (-1264), (-1264), 1, 0);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "", of, mockDate, (String) null, "");
defaultPhdReadTag.getSource();
Test 30: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getSource();
Test 31: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getType();
Test 32: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "Rk8FG", of, (Date) null, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
defaultPhdReadTag.getType();
Test 33: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) 0L, (long) (Long) null, (long) (Long) null);
String string = "";
String string = "N|u53Z+S4_HPO";
String string = "N|u53Z+S4_HPO";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
((DefaultPhdReadTag) _long).getFreeFormData();

Test 34: 
Range of = Range.of((Range.CoordinateSystem) 2556L, (long) (Long) null, (long) (Long) null);
MockDate mockDate = new MockDate((-2038L));
String string = "test";
String string = "1234";
String string = "test";
String string = "end of file after only %d bytes read (expected %d)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
((DefaultPhdReadTag) of).getType();

Test 35: 
Range of = Range.of((Range.CoordinateSystem) 100L, 200L, (long) (Long) null);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "START_POSITION";
String string = "ORIENTED";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getSource();

Test 36: 
Range of = Range.of((Range.CoordinateSystem) 50L, 100L, (long) (Long) null);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "read_id_1234";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "sample_id_ABC";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getDate();

Test 37: 
String string = "read1";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read1", "chr1", (Range) "sample1", (Date) "", (String) null, (String) null);
Range ungappedRange = ((DefaultPhdReadTag) string).getUngappedRange();
String string = "read2";
String string = "chr1";
String string = "sample1";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ungappedRange, (Date) string, string, (String) null);
string.equals(defaultPhdReadTag);

Test 38: 
Range of = Range.of((Range.CoordinateSystem) 0L, (long) (Long) null, (long) (Long) null);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getComment();

Test 39: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) null, (long) (Long) null, (long) (Long) null);
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
String string = "(-2023-04-17T15:03:21Z)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
((DefaultPhdReadTag) _long).hashCode();

Test 40: 
String string = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtb2NrZXQiLCJleHAiOjE2MjY4MTc5NTksImF1dGgiOiJ0ZXN0aW5nIiwiaWF0IjoxNjIzNDgwOTk1fQ.R7o9-BtZm8bT6Ly2VuEKJxvqH31U_CWc2dPzGsY7YW8";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Bearer", "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtb2NrZXQiLCJleHAiOjE2MjY4MTc5NTksImF1dGgiOiJ0ZXN0aW5nIiwiaWF0IjoxNjIzNDgwOTk1fQ.R7o9-BtZm8bT6Ly2VuEKJxvqH31U_CWc2dPzGsY7YW8", (Range) "https://www.example.com/path/to/resource?queryParam=value#fragment", (Date) "/path/to/resource", (String) null, (String) null);
string.hashCode();

Test 41: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("title", "author", (Range) null, (Date) null, (String) null, (String) null);
Object object = new Object();
((DefaultPhdReadTag)"title").equals(object);

Test 42: 
int _int = 15;
MockDate mockDate = new MockDate(2018, 4, 15);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", (Range) mockDate, (Date) "MHZdNR5wgB", "MHZdNR5wgB", "MHZdNR5wgB");
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "MHZdNR5wgB";
String string = "MHZdNR5wgB";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "MHZdNR5wgB");
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);

Test 43: 
String string = "123456";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("123456", "John Doe", (Range) "ABC-1234", (Date) "Jane Smith", (String) null, (String) null);
Date date = null;
string.equals(date);

Test 44: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) null, (long) (Long) null, (long) (Long) null);
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
String string = "(-82354987607890321L),(-82354987607890321L)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(d+)s*,s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

Test 45: 
Range of = Range.of((Range.CoordinateSystem) 1L, 20000L, (long) (Long) null);
int _int = 32767;
MockDate mockDate = new MockDate(_int, 32767, (-1138));
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "uPySlI|;Y";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
String string = "V{@{";
String string = "Ik@]q";
String string = "<-v@d.vUK\"l6@k";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
of.equals(defaultPhdReadTag);

Test 46: 
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Date) "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
MockDate mockDate = new MockDate();
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
string.equals(defaultPhdReadTag);

Test 47: 
Range.of((Range.CoordinateSystem) 2556L, (long) (Long) null, (long) (Long) null);
MockDate mockDate = new MockDate((-2038L));
long _long = 1969L;
long _long = 9L;
long _long = 24L;
MockDate mockDate = new MockDate((int) _long, (int) _long, (int) _long);

Test 48: 
String string = "doctoral thesis";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("doctoral thesis", "1234567890", (Range) "John Smith", (Date) "University of California", (String) null, (String) null);
String string = "doctoral thesis";
String string = "9876543210";
String string = "Jane Doe";
String string = "University of California";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
string.equals(defaultPhdReadTag);

Test 49: 
String string = "John Doe";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", (Range) "USA", (Date) "CA", (String) null, (String) null);
String string = "Jane Doe";
String string = "456 Elm St.";
String string = "Canada";
String string = "ON";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
string.equals(defaultPhdReadTag);

Test 50: 
Range of = Range.of((long) (Long) null);
String string = "x_2%P30bf[cS/m6";
String string = "(9d+)s*,s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) null, (String) null, (String) null);
String string = ":9PBc^D&P";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) null, (String) null, (String) null);
of.equals(defaultPhdReadTag);

Test 51: 
String string = ";smDk\"%0.t<LZw)NI";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "RfFUuX1@^_=G?nv8", (Range) "2870188652", (Date) "e", (String) null, (String) null);
string.equals(defaultPhdReadTag);

Test 52: 
long _long = 32L;
Range of = Range.of(32L, 32L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("9d+s1@*,8s*(d+)", "9d+s1@*,8s*(d+)", of, (Date) "9d+s1@*,8s*(d+)", (String) null, "(9d+)s1@*,8s*(d+)");
String string = "tPCU^;k(4T[owd*3";
String string = "9d+s1@*,8s*(d+)";
String string = "9d+s1@*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, (String) null, "(9d+)s1@*,8s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

Test 53: 
String string = "John Doe";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "123 Main St.", (Range) "JD-001", (Date) "", (String) null, "");
long _long = 147L;
Range of = Range.of(_long);
String string = "John Doe";
String string = "123 Main St.";
String string = "JD-001";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
string.equals(defaultPhdReadTag);

Test 54: 
long _long = null;
Range of = Range.of((long) (Long) null, (long) (Long) null);
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "(9d+)s*,8s*(d+)");
long _long = 3689L;
Range ofLength = Range.ofLength(_long);
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
String string = "(9d+)s*,8s*(d+)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ofLength, (Date) string, string, "(9d+)s*,8s*(d+)");
((DefaultPhdReadTag) _long).equals(defaultPhdReadTag);

Test 55: 
MockDate mockDate = new MockDate(1632574093L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Amazon", "RDS", (Range) mockDate, (Date) "", "This is a comment.", "");
((DefaultPhdReadTag) mockDate).getComment();

Test 56: 
Range of = Range.of(1554L, 2302L);
MockDate mockDate = new MockDate(1, 1, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", of, mockDate, "d", "E5^");
((DefaultPhdReadTag) of).getComment();

Test 57: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) 0L, (long) (Long) null, (long) (Long) null);
String string = "";
String string = "N|u53Z+S4_HPO";
String string = "N|u53Z+S4_HPO";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "");
((DefaultPhdReadTag) _long).getDate();

Test 58: 
Range of = Range.of((Range.CoordinateSystem) 0L, 100L, (long) (Long) null);
int _int = 2022;
int _int = 1;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int);
String string = "uPySlI|;Y";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "Test Data";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "uPySlI|;Y");
((DefaultPhdReadTag) of).getFreeFormData();

Test 59: 
MockDate mockDate = new MockDate(1627059200000L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("testString", "testString", (Range) mockDate, (Date) "testString", "testString", (String) null);
((DefaultPhdReadTag) mockDate).getFreeFormData();

Test 60: 
Range of = Range.of((long) (Long) null);
int _int = 0;
int _int = 1;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int, (-1264), 1, 0);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, "");
((DefaultPhdReadTag) _int).getSource();

Test 61: 
MockDate mockDate = new MockDate(1643750289L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("My Tag", "My Description", (Range) mockDate, (Date) "My Source", "My Type", "");
((DefaultPhdReadTag) mockDate).getSource();

Test 62: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("2023-02-28", "Human Resources", (Range) mockDate, (Date) "Employee ID: 123456", "Department: HR", "");
((DefaultPhdReadTag) mockDate).getType();

Test 63: 
long _long = null;
Range of = Range.of((Range.CoordinateSystem) 0L, (long) (Long) null, (long) (Long) null);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "Rk8FG";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
((DefaultPhdReadTag) _long).getType();


* Minimizing test suite
* test suite isTestSuite: 34
Test 0: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getFreeFormData();
Test 1: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, (-2038L), 2556L);
MockDate mockDate = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", of, mockDate, "", "end of file after only %d bytes read (expected %d)");
defaultPhdReadTag.getType();
Test 2: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getSource();
Test 3: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getDate();
Test 4: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.getUngappedRange();
Test 5: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getComment();
Test 6: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", of, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
defaultPhdReadTag.hashCode();
Test 7: 
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.hashCode();
Test 8: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 9: 
Range of = Range.of(0L);
MockDate mockDate = new MockDate(0, 404, 1836);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "MHZdNR5wgB", "MHZdNR5wgB");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 10: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals((Object) null);
Test 11: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
Object object = new Object();
defaultPhdReadTag.equals(object);
Test 12: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 13: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 14: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, (Date) null, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, mockDate, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 15: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("V{@{", "Ik@]q", of, mockDate, (String) null, "<-v@d.vUK\"l6@k");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 16: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, (-2038L), 2556L);
MockDate mockDate = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", of, mockDate, "", "end of file after only %d bytes read (expected %d)");
MockDate mockDate = new MockDate((-502672523), (-2069276138), (-502672523));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("l'&+pKlY_#Wu<1Z~", "Rk8FG", of, mockDate, "", "!}BuB^{?rNE~)u ");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 17: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "", (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 18: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
Range of = Range.of(147L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, of, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 19: 
Range of = Range.of((-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("x_2%P30bf[cS/m6", "(9d+)s*,s*(d+)", of, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(":9PBc^D&P", "", of, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 20: 
Range of = Range.of(32L, 32L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s1@*,8s*(d+)", "(9d+)s1@*,8s*(d+)", of, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("tPCU^;k(4T[owd*3", "(9d+)s1@*,8s*(d+)", of, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 21: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 22: 
Range of = Range.of((-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", of, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", of, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 23: 
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 24: 
Range of = Range.of((-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", of, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
Range ofLength = Range.ofLength(3689L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", ofLength, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
defaultPhdReadTag.equals(defaultPhdReadTag);
Test 25: 
Range of = Range.of(1554L, 2302L);
MockDate mockDate = new MockDate(1, 1, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", of, mockDate, "d", "E5^");
defaultPhdReadTag.getComment();
Test 26: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getComment();
Test 27: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", of, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getDate();
Test 28: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getFreeFormData();
Test 29: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.getFreeFormData();
Test 30: 
Range of = Range.of((-2992L));
MockDate mockDate = new MockDate((-4682), 0, (-1264), (-1264), 1, 0);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "", of, mockDate, (String) null, "");
defaultPhdReadTag.getSource();
Test 31: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getSource();
Test 32: 
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, mockDate, "", "");
defaultPhdReadTag.getType();
Test 33: 
Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "Rk8FG", of, (Date) null, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
defaultPhdReadTag.getType();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 61
* Number of covered goals: 61
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 61
* Number of covered goals: 61
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 89%
* Total number of goals: 19
* Number of covered goals: 17
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 61
* Number of covered goals: 61
* Generated 34 tests with total length 131
* Resulting test suite's coverage: 98% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.SPACE_BASED;
Range arg2 = Range.of(arg0, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", arg2, (Date) null, "N|u53Z+S4_HPO", "");
String freeFormData = defaultPhdReadTag.getFreeFormData();
assertEquals("", freeFormData);
assertEquals("N|u53Z+S4_HPO", defaultPhdReadTag.getSource());
assertEquals("N|u53Z+S4_HPO", defaultPhdReadTag.getComment());
assertEquals("", defaultPhdReadTag.getType());


** It was a parseable test case! 
refined test name is: testGetFreeFormData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.ZERO_BASED;
Range arg2 = Range.of(arg0, (-2038L), 2556L);
MockDate arg3 = new MockDate((-2038L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "", arg2, arg3, "", "end of file after only %d bytes read (expected %d)");
String type = defaultPhdReadTag.getType();
assertEquals("end of file after only %d bytes read (expected %d)", defaultPhdReadTag.getFreeFormData());
assertNull(type);
assertEquals("", defaultPhdReadTag.getComment());
assertEquals("", defaultPhdReadTag.getSource());


** It was a parseable test case! 
refined test name is: testCreateDefaultPhdReadTag
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.SPACE_BASED;
Range arg2 = Range.of(arg0, 0L, 0L);
MockDate arg3 = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y");
String source = defaultPhdReadTag.getSource();
assertEquals("uPySlI|;Y", defaultPhdReadTag.getType());
assertEquals("uPySlI|;Y", defaultPhdReadTag.getFreeFormData());
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", source);
assertNotNull(source);


** It was a parseable test case! 
refined test name is: testGetSourceAndType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.SPACE_BASED;
Range arg2 = Range.of(arg0, 0L, 0L);
MockDate arg3 = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y");
defaultPhdReadTag.getDate();
assertEquals("uPySlI|;Y", defaultPhdReadTag.getType());
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", defaultPhdReadTag.getSource());
assertEquals("uPySlI|;Y", defaultPhdReadTag.getFreeFormData());


** It was a parseable test case! 
refined test name is: testGetDateReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
Range ungappedRange = defaultPhdReadTag.getUngappedRange();
assertNull(ungappedRange);


** It was a parseable test case! 
refined test name is: testGetUngappedRangeNullArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockDate arg3 = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, arg3, "", "");
String comment = defaultPhdReadTag.getComment();
assertEquals("", comment);


** It was a parseable test case! 
refined test name is: testGetCommentEmptyValuesReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.SPACE_BASED;
Range arg2 = Range.of(arg0, (-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(d+)s*,s*(d+)", "(d+)s*,s*(d+)", arg2, (Date) null, "(d+)s*,s*(d+)", "(d+)s*,s*(d+)");
defaultPhdReadTag.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeGivenSameValuesReturnsSameHashCode
* Compiling Tests
refined test name is: testDefaultPhdReadTagHashCode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockDate arg3 = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, arg3, (String) null, (String) null);
defaultPhdReadTag.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeDefaultPhdReadTag
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag arg0 = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
boolean equals = defaultPhdReadTag.equals(arg0);
assertFalse(equals);
assertFalse(arg0.equals((Object)defaultPhdReadTag));


** It was a parseable test case! 
refined test name is: testEqualsDifferentValuesForTagFieldReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range arg2 = Range.of(0L);
MockDate arg3 = new MockDate(0, 404, 1836);
DefaultPhdReadTag arg0 = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, "MHZdNR5wgB", "MHZdNR5wgB");
boolean equals = arg0.equals(arg0);
assertTrue(equals);
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg0.getSource());
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg0.getType());
assertEquals("MHZdNR5wgB", arg0.getComment());
assertEquals("MHZdNR5wgB", arg0.getFreeFormData());


** It was a parseable test case! 
refined test name is: testEqualsSelf
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
boolean equals = defaultPhdReadTag.equals((Object) null);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testDefaultPhdReadTagEqualsNullObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
Object arg0 = new Object();
boolean equals = defaultPhdReadTag.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithNonDefaultPhdReadTagReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag arg0 = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
boolean equals = defaultPhdReadTag.equals(arg0);
assertEquals("p\"c[t4I5N\"{", defaultPhdReadTag.getFreeFormData());
assertEquals("The second parameter in the comparison is null.", defaultPhdReadTag.getComment());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithNullComparisonParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag arg0 = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, "The second parameter in the comparison is null.", "p\"c[t4I5N\"{");
boolean equals = defaultPhdReadTag.equals(arg0);
assertEquals("The second parameter in the comparison is null.", arg0.getComment());
assertFalse(equals);
assertEquals("p\"c[t4I5N\"{", arg0.getFreeFormData());


** It was a parseable test case! 
refined test name is: testDefaultPhdReadTagWithNullSecondParameter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, (Date) null, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
MockDate arg3 = new MockDate();
DefaultPhdReadTag arg0 = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", (Range) null, arg3, "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consd.hd.DefaultPhdReadTag");
boolean equals = defaultPhdReadTag.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsNotEqualWithDifferentDateValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag arg0 = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", "", (Range) null, (Date) null, (String) null, (String) null);
boolean equals = defaultPhdReadTag.equals(arg0);
assertFalse(equals);
assertEquals(";smDk\"%0.t<LZw)NI", arg0.getType());
assertEquals("", arg0.getSource());


** It was a parseable test case! 
refined test name is: testEqualsDifferentValuesReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, "");
Range arg2 = Range.of(147L);
DefaultPhdReadTag arg0 = new DefaultPhdReadTag((String) null, (String) null, arg2, (Date) null, (String) null, "");
boolean equals = defaultPhdReadTag.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualityWithDifferentRangeFields
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range arg2 = Range.of((-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("x_2%P30bf[cS/m6", "(9d+)s*,s*(d+)", arg2, (Date) null, (String) null, (String) null);
DefaultPhdReadTag arg0 = new DefaultPhdReadTag(":9PBc^D&P", "", arg2, (Date) null, (String) null, (String) null);
boolean equals = defaultPhdReadTag.equals(arg0);
assertEquals(":9PBc^D&P", arg0.getType());
assertEquals("", arg0.getSource());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsSelf
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range arg2 = Range.of(32L, 32L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s1@*,8s*(d+)", "(9d+)s1@*,8s*(d+)", arg2, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
DefaultPhdReadTag arg0 = new DefaultPhdReadTag("tPCU^;k(4T[owd*3", "(9d+)s1@*,8s*(d+)", arg2, (Date) null, (String) null, "(9d+)s1@*,8s*(d+)");
boolean equals = defaultPhdReadTag.equals(arg0);
assertFalse(equals);
assertEquals("(9d+)s1@*,8s*(d+)", arg0.getSource());
assertEquals("(9d+)s1@*,8s*(d+)", arg0.getFreeFormData());


** It was a parseable test case! 
refined test name is: testEqualsSameSourceAndFreeFormData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag arg0 = new DefaultPhdReadTag(";smDk\"%0.t<LZw)NI", (String) null, (Range) null, (Date) null, (String) null, (String) null);
boolean equals = defaultPhdReadTag.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentTagsShouldReturnFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range arg2 = Range.of((-919L), (-919L));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", arg2, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
DefaultPhdReadTag arg0 = new DefaultPhdReadTag("(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)", arg2, (Date) null, "(9d+)s*,8s*(d+)", "(9d+)s*,8s*(d+)");
boolean equals = defaultPhdReadTag.equals(arg0);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testDefaultPhdReadTagEqualsMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
DefaultPhdReadTag arg0 = new DefaultPhdReadTag((String) null, (String) null, (Range) null, (Date) null, (String) null, (String) null);
boolean equals = defaultPhdReadTag.equals(arg0);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testDefaultPhdReadTagEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range arg2 = Range.of(1554L, 2302L);
MockDate arg3 = new MockDate(1, 1, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("E5^", "d", arg2, arg3, "d", "E5^");
String comment = defaultPhdReadTag.getComment();
assertEquals("E5^", defaultPhdReadTag.getFreeFormData());
assertEquals("d", comment);
assertEquals("d", defaultPhdReadTag.getSource());
assertEquals("E5^", defaultPhdReadTag.getType());


** It was a parseable test case! 
refined test name is: testGetCommentShouldReturnCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.SPACE_BASED;
Range arg2 = Range.of(arg0, 0L, 0L);
MockDate arg3 = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y");
String comment = defaultPhdReadTag.getComment();
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", defaultPhdReadTag.getSource());
assertNull(comment);
assertEquals("uPySlI|;Y", defaultPhdReadTag.getFreeFormData());
assertEquals("uPySlI|;Y", defaultPhdReadTag.getType());


** It was a parseable test case! 
refined test name is: testDefaultPhdReadTagGettersAndSetters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.SPACE_BASED;
Range arg2 = Range.of(arg0, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "N|u53Z+S4_HPO", arg2, (Date) null, "N|u53Z+S4_HPO", "");
defaultPhdReadTag.getDate();
assertEquals("", defaultPhdReadTag.getType());
assertEquals("", defaultPhdReadTag.getFreeFormData());
assertEquals("N|u53Z+S4_HPO", defaultPhdReadTag.getSource());
assertEquals("N|u53Z+S4_HPO", defaultPhdReadTag.getComment());


** It was a parseable test case! 
refined test name is: testGetDate
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.SPACE_BASED;
Range arg2 = Range.of(arg0, 0L, 0L);
MockDate arg3 = new MockDate((-1138), 32767, (-1138));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("uPySlI|;Y", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, (String) null, "uPySlI|;Y");
String freeFormData = defaultPhdReadTag.getFreeFormData();
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", defaultPhdReadTag.getSource());
assertEquals("uPySlI|;Y", freeFormData);
assertNotNull(freeFormData);
assertEquals("uPySlI|;Y", defaultPhdReadTag.getType());


** It was a parseable test case! 
refined test name is: testGetFreeFormDataReturnsNonNullAndMatchingValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockDate arg3 = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, arg3, (String) null, (String) null);
String freeFormData = defaultPhdReadTag.getFreeFormData();
assertNull(freeFormData);


** It was a parseable test case! 
refined test name is: testGetFreeFormDataWithNullInputReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range arg2 = Range.of((-2992L));
MockDate arg3 = new MockDate((-4682), 0, (-1264), (-1264), 1, 0);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "", arg2, arg3, (String) null, "");
String source = defaultPhdReadTag.getSource();
assertEquals("", source);
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", defaultPhdReadTag.getType());
assertNotNull(source);
assertEquals("", defaultPhdReadTag.getFreeFormData());


** It was a parseable test case! 
refined test name is: testGetSourcereturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockDate arg3 = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, arg3, "", "");
String source = defaultPhdReadTag.getSource();
assertNull(source);


** It was a parseable test case! 
refined test name is: testGetSourceNullSource
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MockDate arg3 = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", (String) null, (Range) null, arg3, "", "");
String type = defaultPhdReadTag.getType();
assertEquals("", type);


** It was a parseable test case! 
refined test name is: testGetTypeReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Range.CoordinateSystem arg0 = Range.CoordinateSystem.SPACE_BASED;
Range arg2 = Range.of(arg0, (-919L), 0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "Rk8FG", arg2, (Date) null, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
String type = defaultPhdReadTag.getType();
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", type);
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", defaultPhdReadTag.getFreeFormData());
assertEquals("Rk8FG", defaultPhdReadTag.getSource());
assertEquals("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", defaultPhdReadTag.getComment());


** It was a parseable test case! 
refined test name is: testDefaultPhdReadTagMethods
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:27.829 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:27.857 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
[MASTER] 10:52:27.966 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:27.976 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:28.076 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:28.079 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:28.216 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 10:52:28.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:28.333 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:28.335 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:28.461 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:28.463 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:28.605 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:28.607 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
[MASTER] 10:52:28.741 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:28.744 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:28.872 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:28.874 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:29.015 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 10:52:29.017 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:29.121 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:29.123 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
[MASTER] 10:52:29.232 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:29.234 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:29.353 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:29.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
[MASTER] 10:52:29.487 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:29.488 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:29.611 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:29.613 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:29.747 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:29.749 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
[MASTER] 10:52:29.867 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:29.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
[MASTER] 10:52:29.990 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:29.992 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:30.109 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:30.110 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
[MASTER] 10:52:30.219 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:30.222 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
[MASTER] 10:52:30.349 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:30.351 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
[MASTER] 10:52:30.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:30.468 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:30.600 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 10:52:30.604 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:30.712 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:30.715 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:30.857 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:30.859 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:30.963 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 10:52:30.964 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:31.075 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:31.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:31.202 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:31.204 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:31.306 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:31.307 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:31.397 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:31.399 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:52:31.501 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 10:52:31.503 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
** Write a test suite: 6 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:52:31.876 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:31.878 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
** Write a test suite: 24 called: 0 to improve: false
[MASTER] 10:52:32.186 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar5482141360813181347.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:52:32.189 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5482141360813181347.jar
* Writing tests to file
* Writing JUnit test case 'DefaultPhdReadTag_ESTest' to evosuite-tests
** Write a test suite: 24 called: 0 to improve: false
* Done!

* Computation finished
