* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/92_jcvi-javacommon/evosuite-files/evosuite.properties
* Connecting to master process on port 4686
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:30:00.978 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:30:01.087 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:30:01.088 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:30:01.110 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:30:01.123 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:30:01.126 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:30:01.127 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:30:01.129 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:30:01.131 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:30:01.133 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:30:01.138 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:30:01.141 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:30:01.159 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:30:01.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:30:01.286 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 211
* Using seed 1710440996937
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 64 / 211
[Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             62%][Progress:>                             2%] [Cov:=========================>         74%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             2%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:=============================>     84%][Progress:=>                            4%] [Cov:=============================>     85%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:===============================>   90%][Progress:=>                            6%] [Cov:===============================>   90%][Progress:=>                            6%] [Cov:===============================>   90%][Progress:=>                            6%] [Cov:===============================>   90%][Progress:==>                           7%] [Cov:===============================>   90%][Progress:==>                           7%] [Cov:===============================>   90%][Progress:==>                           7%] [Cov:===============================>   90%][Progress:==>                           7%] [Cov:===============================>   90%][Progress:==>                           7%] [Cov:===============================>   90%][Progress:==>                           7%] [Cov:===============================>   90%][Progress:==>                           7%] [Cov:===============================>   90%][Progress:==>                           7%] [Cov:===============================>   91%][Progress:==>                           7%] [Cov:===============================>   91%][Progress:==>                           7%] [Cov:================================>  92%][Progress:==>                           8%] [Cov:================================>  92%][Progress:==>                           8%] [Cov:================================>  92%][Progress:==>                           8%] [Cov:================================>  92%][Progress:==>                           8%] [Cov:================================>  92%][Progress:==>                           8%] [Cov:================================>  92%][Progress:==>                           8%] [Cov:================================>  92%][Progress:==>                           8%] [Cov:================================>  92%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           9%] [Cov:================================>  93%][Progress:==>                           9%] [Cov:================================>  93%][Progress:==>                           9%] [Cov:================================>  93%][Progress:==>                           9%] [Cov:================================>  93%][Progress:==>                           9%] [Cov:================================>  93%][Progress:==>                           9%] [Cov:================================>  93%][Progress:==>                           9%] [Cov:================================>  93%][Progress:==>                           9%] [Cov:================================>  93%][Progress:===>                          10%] [Cov:================================>  93%][Progress:===>                          10%] [Cov:================================>  93%][Progress:===>                          10%] [Cov:================================>  93%][Progress:===>                          10%] [Cov:================================>  93%][Progress:===>                          10%] [Cov:================================>  93%][Progress:===>                          10%] [Cov:================================>  93%][Progress:===>                          10%] [Cov:================================>  93%][Progress:===>                          10%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        17%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        18%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:=====>                        19%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       20%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       21%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       22%] [Cov:================================>  94%][Progress:======>                       23%] [Cov:================================>  94%][Progress:======>                       23%] [Cov:================================>  94%][Progress:======>                       23%] [Cov:================================>  94%][Progress:======>                       23%] [Cov:================================>  94%][Progress:======>                       23%] [Cov:================================>  94%][Progress:======>                       23%] [Cov:================================>  94%][Progress:======>                       23%] [Cov:================================>  94%][Progress:======>                       23%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      24%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      25%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:=======>                      26%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     27%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     28%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:========>                     29%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    30%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    31%] [Cov:================================>  94%][Progress:=========>                    32%] [Cov:================================>  94%][Progress:=========>                    32%] [Cov:================================>  94%][Progress:=========>                    32%] [Cov:================================>  94%][Progress:=========>                    32%] [Cov:================================>  94%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:===========>                  39%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 40%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 41%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 42%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:============>                 43%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                44%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               47%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               48%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:==============>               49%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              50%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              51%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              52%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:===============>              53%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             54%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             55%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:================>             56%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            57%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            58%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:=================>            59%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           60%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           61%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           62%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:==================>           63%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          64%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          65%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:===================>          66%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         67%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         68%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:====================>         69%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        70%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        71%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        72%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:=====================>        73%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       74%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       75%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:======================>       76%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      77%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      78%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:=======================>      79%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     80%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     81%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     82%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:========================>     83%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    84%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    85%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:=========================>    86%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   87%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   88%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:==========================>   89%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  90%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  91%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  92%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:===========================>  93%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 94%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 95%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:============================> 96%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>97%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>98%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:=============================>99%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%][Progress:==============================100%] [Cov:=================================> 97%]
* Search finished after 202s and 1307 generations, 616528 statements, best individual has fitness: 2.0
* Generated before the refinement 34 tests with total length 149
statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag")
statement is: getFreeFormData()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String freeFormData = defaultPhdReadTag.getFreeFormData()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
defaultPhdReadTag.getFreeFormData();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED;
        Range of = Range.of(range_CoordinateSystem, 10L, 20L);
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
        defaultPhdReadTag.getFreeFormData();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.ZERO_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 10L, 20L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 10L, 20L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getFreeFormData(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getFreeFormData() target is: defaultPhdReadTag method is: getFreeFormData()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: getFreeFormData()Ljava/lang/String;
TestCase is: long _long = 10L;
long _long = 20L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
MockDate mockDate = new MockDate();
String string = "";
String string = "ttQh>!";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
((DefaultPhdReadTag) of).getFreeFormData();

statement is: ofLength(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ofLength = Range.ofLength(0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0, 0, 0, 0, 0, 1)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "@rTff3 U'52", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", (String) null)
statement is: getType()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String type = defaultPhdReadTag.getType()
test data is: Range ofLength = Range.ofLength(0L);
MockDate mockDate = new MockDate(0, 0, 0, 0, 0, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "@rTff3 U'52", ofLength, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", (String) null);
defaultPhdReadTag.getType();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range ofLength = Range.ofLength(10L);
        MockDate mockDate = new MockDate(2021, 8, 27, 14, 30, 0);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "@rTff3 U'52", ofLength, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", ((String) (null)));
        defaultPhdReadTag.getType();
    }
}
statement is: Range ofLength = Range.ofLength(10L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.ofLength(10L) target is: Range method is: ofLength(long)
Matched Method is: ofLength(J)Lorg/jcvi/jillion/core/Range;
statement is: MockDate mockDate = new MockDate(2021, 8, 27, 14, 30, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "@rTff3 U'52", ofLength, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getType(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getType() target is: defaultPhdReadTag method is: getType()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 12
Matched Method is: getType()Ljava/lang/String;
TestCase is: long _long = 10L;
Range ofLength = Range.ofLength(_long);
int _int = 2021;
int _int = 8;
int _int = 27;
int _int = 14;
int _int = 30;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int, _int, _int, _int);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "@rTff3 U'52";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ofLength, mockDate, string, (String) null);
((DefaultPhdReadTag) _int).getType();

statement is: of(JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(1L, 1L)
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("1=l:k^ocS", (String) null, arg2, arg3, "1=l:k^ocS", "1=l:k^ocS")
statement is: getSource()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String source = defaultPhdReadTag.getSource()
test data is: Range of = Range.of(1L, 1L);
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("1=l:k^ocS", (String) null, of, mockDate, "1=l:k^ocS", "1=l:k^ocS");
defaultPhdReadTag.getSource();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Refined test data for the above code snippet
        Range of = Range.of(10L, 10L);
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Testing Source", ((String) (null)), of, mockDate, "Testing Source", "Testing Source");
        defaultPhdReadTag.getSource();
    }
}
statement is: // Refined test data for the above code snippet
Range of = Range.of(10L, 10L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(10L, 10L) target is: Range method is: of(long,long)
Matched Method is: of(JJ)Lorg/jcvi/jillion/core/Range;
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Testing Source", ((String) (null)), of, mockDate, "Testing Source", "Testing Source"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getSource(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getSource() target is: defaultPhdReadTag method is: getSource()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 7
Matched Method is: getSource()Ljava/lang/String;
TestCase is: long _long = 10L;
long _long = 10L;
Range of = Range.of(_long, _long);
MockDate mockDate = new MockDate();
String string = "Testing Source";
String string = "Testing Source";
String string = "Testing Source";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, (String) of, (Range) mockDate, (Date) string, string, "1=l:k^ocS");
((DefaultPhdReadTag) of).getSource();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag")
statement is: getDate()Ljava/util/Date; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate date = (MockDate)defaultPhdReadTag.getDate()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
defaultPhdReadTag.getDate();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED;
        Range of = Range.of(range_CoordinateSystem, 0L, 0L);
        MockDate mockDate = new MockDate("2023-01-01");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("ABC", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
        defaultPhdReadTag.getDate();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.ZERO_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 0L, 0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 0L, 0L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate("2023-01-01"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("ABC", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getDate(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getDate() target is: defaultPhdReadTag method is: getDate()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 8
Matched Method is: getDate()Ljava/util/Date;
TestCase is: long _long = 0L;
long _long = 0L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
String string = "ABC";
String string = "ttQh>!";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
((DefaultPhdReadTag) of).getDate();

statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, arg3, (String) null, (String) null)
statement is: getUngappedRange()Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ungappedRange = defaultPhdReadTag.getUngappedRange()
test data is: MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.getUngappedRange();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate("2023-03-15T08:40:50.52Z");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("AJ123456", "M001", new Range(1, 10), mockDate, "Pacific/Auckland", "en_NZ");
        defaultPhdReadTag.getUngappedRange();
    }
}
statement is: MockDate mockDate = new MockDate("2023-03-15T08:40:50.52Z"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("AJ123456", "M001", new Range(1, 10), mockDate, "Pacific/Auckland", "en_NZ"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getUngappedRange(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getUngappedRange() target is: defaultPhdReadTag method is: getUngappedRange()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 4
Matched Method is: getUngappedRange()Lorg/jcvi/jillion/core/Range;
TestCase is: String string = "AJ123456";
String string = "M001";
String string = "Pacific/Auckland";
String string = "en_NZ";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, (String) null, (String) null);
((DefaultPhdReadTag) string).getUngappedRange();

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag")
statement is: getComment()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String comment = defaultPhdReadTag.getComment()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
defaultPhdReadTag.getComment();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED;
        Range of = Range.of(range_CoordinateSystem, 10L, 20L);
        MockDate mockDate = new MockDate("2022-03-09T14:58:23.000");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Test Phred Score", "TTQHH", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
        defaultPhdReadTag.getComment();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.ZERO_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 10L, 20L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 10L, 20L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate("2022-03-09T14:58:23.000"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Test Phred Score", "TTQHH", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getComment(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getComment() target is: defaultPhdReadTag method is: getComment()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 8
Matched Method is: getComment()Ljava/lang/String;
TestCase is: long _long = 10L;
long _long = 20L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
String string = "Test Phred Score";
String string = "TTQHH";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
((DefaultPhdReadTag) of).getComment();

statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(31, 31, 31, 31, (-380))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, arg3, (String) null, (String) null)
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = defaultPhdReadTag.hashCode()
test data is: MockDate mockDate = new MockDate(31, 31, 31, 31, (-380));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate(31, 12, 2022, 31, -380);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(((String) (null)), ((String) (null)), ((Range) (null)), mockDate, ((String) (null)), ((String) (null)));
        defaultPhdReadTag.hashCode();
    }
}
statement is: MockDate mockDate = new MockDate(31, 12, 2022, 31, -380), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(((String) (null)), ((String) (null)), ((Range) (null)), mockDate, ((String) (null)), ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.hashCode() target is: defaultPhdReadTag method is: hashCode()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 5
Matched Method is: hashCode()I
TestCase is: int _int = 31;
int _int = 12;
int _int = 2022;
int _int = 31;
MockDate mockDate = new MockDate(_int, _int, _int, _int, (-380));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) mockDate, (String) null, (Range) null, (Date) _int, (String) null, (String) null);
((DefaultPhdReadTag) _int).hashCode();

statement is: ofLength(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ofLength = Range.ofLength(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", arg2, (Date) null, "", "$W2v*`9=JL0`%NRq>f")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = defaultPhdReadTag.hashCode()
test data is: Range ofLength = Range.ofLength(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", ofLength, (Date) null, "", "$W2v*`9=JL0`%NRq>f");
defaultPhdReadTag.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range<Long> rangeOfLength = Range.<Long>ofLength(0L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", rangeOfLength, null, "$W2v*`9=JL0`%NRq>f");
        defaultPhdReadTag.hashCode();
    }
}
statement is: Range<Long> rangeOfLength = Range.<Long>ofLength(0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.<Long>ofLength(0L) target is: Range method is: ofLength(long)
Matched Method is: ofLength(J)Lorg/jcvi/jillion/core/Range;
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", rangeOfLength, null, "$W2v*`9=JL0`%NRq>f"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.hashCode() target is: defaultPhdReadTag method is: hashCode()
TestCase is: long _long = 0L;
Range.ofLength(_long);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag")
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
Object object = new Object();
defaultPhdReadTag.equals(object);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED;
        Range of = Range.of(range_CoordinateSystem, 0L, 0L);
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("ACGT", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
        Object object = new Object();
        defaultPhdReadTag.equals(object);
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.ZERO_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 0L, 0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 0L, 0L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("ACGT", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(object), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(object) target is: defaultPhdReadTag method is: equals(java.lang.Object)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 9
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = 0L;
long _long = 0L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
MockDate mockDate = new MockDate();
String string = "ACGT";
String string = "ttQh>!";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
Object object = new Object();
of.equals(object);

statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("/Ce=m2", "/Ce=m2", (Range) null, arg3, "/Ce=m2", "/Ce=m2")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("/Ce=m2", "/Ce=m2", (Range) null, mockDate, "/Ce=m2", "/Ce=m2");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate("January 1, 2023 12:00:00");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("/Ce=m2", "/Ce=m2", ((Range) (null)), mockDate, "/Ce=m2", "/Ce=m2");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: MockDate mockDate = new MockDate("January 1, 2023 12:00:00"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("/Ce=m2", "/Ce=m2", ((Range) (null)), mockDate, "/Ce=m2", "/Ce=m2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 4
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "/Ce=m2";
String string = "/Ce=m2";
String string = "/Ce=m2";
String string = "/Ce=m2";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, "/Ce=m2", "/Ce=m2");
string.equals(defaultPhdReadTag);

statement is: ofLength(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ofLength = Range.ofLength(0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0, 0, 0, 0, 0, 1)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "@rTff3 U'52", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals((Object) null)
test data is: Range ofLength = Range.ofLength(0L);
MockDate mockDate = new MockDate(0, 0, 0, 0, 0, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "@rTff3 U'52", ofLength, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", (String) null);
defaultPhdReadTag.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range ofLength = Range.ofLength(10L);// Instead of using a value of 0, use a longer length for the read

        MockDate mockDate = new MockDate(2023, 4, 15, 10, 30, 0);// Use a more recent date for the mock date

        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "@rTff3 U'52", ofLength, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", ((String) (null)));
        defaultPhdReadTag.equals(((Object) (null)));
    }
}
statement is: Range ofLength = Range.ofLength(10L)// Instead of using a value of 0, use a longer length for the read
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.ofLength(10L) target is: Range method is: ofLength(long)
Matched Method is: ofLength(J)Lorg/jcvi/jillion/core/Range;
statement is: MockDate mockDate = new MockDate(2023, 4, 15, 10, 30, 0)// Use a more recent date for the mock date
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "@rTff3 U'52", ofLength, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(((Object) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(((Object) (null))) target is: defaultPhdReadTag method is: equals(java.lang.Object)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 12
Matched Method is: equals(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: long _long = 10L;
Range ofLength = Range.ofLength(_long);
int _int = 2023;
int _int = 4;
int _int = 15;
int _int = 10;
int _int = 30;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int, _int, _int, _int);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "@rTff3 U'52";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ofLength, mockDate, string, (String) null);
Object object = null;
((DefaultPhdReadTag) _int).equals(object);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED;
        Range of = Range.of(range_CoordinateSystem, 10L, 20L);
        MockDate mockDate = new MockDate("2023-02-28");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read1", "TTTAA", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("read2", "TTTAA", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
        defaultPhdReadTag.equals(defaultPhdReadTag2);
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.ZERO_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 10L, 20L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 10L, 20L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate("2023-02-28"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("read1", "TTTAA", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("read2", "TTTAA", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag2) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 13
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = 10L;
long _long = 20L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
String string = "read1";
String string = "TTTAA";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
String string = "read2";
String string = "TTTAA";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
of.equals(defaultPhdReadTag);

statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(31, 31, 31, 31, (-380))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, arg3, (String) null, (String) null)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("~Gz=czGCEuoXI", "$87AF`B<=;)}:)", (Range) null, arg3, (String) null, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: MockDate mockDate = new MockDate(31, 31, 31, 31, (-380));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("~Gz=czGCEuoXI", "$87AF`B<=;)}:)", (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate(31, 31, 31, 31, -380);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(((String) (null)), ((String) (null)), ((Range) (null)), mockDate, ((String) (null)), ((String) (null)));
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("~Gz=czGCEuoXI", "$87AF`B<=;)}:)", ((Range) (null)), mockDate, ((String) (null)), ((String) (null)));
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: MockDate mockDate = new MockDate(31, 31, 31, 31, -380), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(((String) (null)), ((String) (null)), ((Range) (null)), mockDate, ((String) (null)), ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("~Gz=czGCEuoXI", "$87AF`B<=;)}:)", ((Range) (null)), mockDate, ((String) (null)), ((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 8
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: int _int = 31;
int _int = 31;
int _int = 31;
int _int = 31;
MockDate mockDate = new MockDate(_int, _int, _int, _int, (-380));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) mockDate, (String) null, (Range) null, (Date) _int, (String) null, (String) null);
String string = "~Gz=czGCEuoXI";
String string = "$87AF`B<=;)}:)";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) _int, (String) null, (String) null);
((DefaultPhdReadTag) _int).equals(defaultPhdReadTag);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(2198, 2198, 2198, 2198, 1)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "bE){ea7*Ev", arg2, arg3, "bE){ea7*Ev", "bE){ea7*Ev")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "bE){ea7*Ev", arg2, arg3, (String) null, "bE){ea7*Ev")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate(2198, 2198, 2198, 2198, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "bE){ea7*Ev", of, mockDate, "bE){ea7*Ev", "bE){ea7*Ev");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "bE){ea7*Ev", of, mockDate, (String) null, "bE){ea7*Ev");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, 1L, 10L);
        MockDate mockDate = new MockDate(2022, 3, 14, 10, 30);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(((String) (null)), "bE){ea7*Ev", of, mockDate, "bE){ea7*Ev", "bE){ea7*Ev");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(((String) (null)), "bE){ea7*Ev", of, mockDate, ((String) (null)), "bE){ea7*Ev");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 1L, 10L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 1L, 10L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(2022, 3, 14, 10, 30), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(((String) (null)), "bE){ea7*Ev", of, mockDate, "bE){ea7*Ev", "bE){ea7*Ev"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(((String) (null)), "bE){ea7*Ev", of, mockDate, ((String) (null)), "bE){ea7*Ev"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
TestCase is: long _long = 1L;
long _long = 10L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
int _int = 2022;
int _int = 3;
int _int = 14;
int _int = 10;
int _int = 30;
MockDate mockDate = new MockDate(_int, _int, _int, _int, _int);
String string = "bE){ea7*Ev";
String string = "bE){ea7*Ev";
String string = "bE){ea7*Ev";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, (String) of, (Range) mockDate, (Date) string, string, "bE){ea7*Ev");
String string = "bE){ea7*Ev";
String string = "bE){ea7*Ev";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, (String) of, (Range) mockDate, (Date) string, string, "bE){ea7*Ev");

statement is: ofLength(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ofLength = Range.ofLength(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", arg2, (Date) null, "", "$W2v*`9=JL0`%NRq>f")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "l", arg2, (Date) null, (String) null, "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range ofLength = Range.ofLength(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", ofLength, (Date) null, "", "$W2v*`9=JL0`%NRq>f");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "l", ofLength, (Date) null, (String) null, "");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range ofLength = Range.ofLength(10L);// Using a length of 10 for demonstration purposes

        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "l", ofLength, ((Date) (null)), ((String) (null)), "");
        defaultPhdReadTag.equals(defaultPhdReadTag);// Using the same object to test equality with itself }}

    }
}
statement is: Range ofLength = Range.ofLength(10L)// Using a length of 10 for demonstration purposes
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.ofLength(10L) target is: Range method is: ofLength(long)
Matched Method is: ofLength(J)Lorg/jcvi/jillion/core/Range;
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "l", ofLength, ((Date) (null)), ((String) (null)), ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag)// Using the same object to test equality with itself }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag)// Using the same object to test equality with itself }}
 target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 5
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = 10L;
Range ofLength = Range.ofLength(_long);
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "l";
String string = "";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ofLength, (Date) string, "", "$W2v*`9=JL0`%NRq>f");
ofLength.equals(defaultPhdReadTag);

statement is: ofLength(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ofLength = Range.ofLength(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", arg2, (Date) null, "", "$W2v*`9=JL0`%NRq>f")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("H_v8", "SD)({h[GvDG'G/t", arg2, (Date) null, "", (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range ofLength = Range.ofLength(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", ofLength, (Date) null, "", "$W2v*`9=JL0`%NRq>f");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("H_v8", "SD)({h[GvDG'G/t", ofLength, (Date) null, "", (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range ofLength = Range.ofLength(1L);// Changed from 0L to a more descriptive value

        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("H_v8", "SD)({h[GvDG'G/t", ofLength, ((Date) (null)), "", "$W2v*`9=JL0`%NRq>f");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("H_v8", "SD)({h[GvDG'G/t", ofLength, ((Date) (null)), "", "$W2v*`9=JL0`%NRq>f");
        defaultPhdReadTag.equals(defaultPhdReadTag);// Changed from false to true since the two objects are equal }}

    }
}
statement is: Range ofLength = Range.ofLength(1L)// Changed from 0L to a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.ofLength(1L) target is: Range method is: ofLength(long)
Matched Method is: ofLength(J)Lorg/jcvi/jillion/core/Range;
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("H_v8", "SD)({h[GvDG'G/t", ofLength, ((Date) (null)), "", "$W2v*`9=JL0`%NRq>f"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("H_v8", "SD)({h[GvDG'G/t", ofLength, ((Date) (null)), "", "$W2v*`9=JL0`%NRq>f"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag)// Changed from false to true since the two objects are equal }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag)// Changed from false to true since the two objects are equal }}
 target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
TestCase is: long _long = 1L;
Range ofLength = Range.ofLength(_long);
String string = "H_v8";
String string = "SD)({h[GvDG'G/t";
String string = "";
String string = "$W2v*`9=JL0`%NRq>f";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ofLength, (Date) string, string, "$W2v*`9=JL0`%NRq>f");
String string = "H_v8";
String string = "SD)({h[GvDG'G/t";
String string = "";
String string = "$W2v*`9=JL0`%NRq>f";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, ofLength, (Date) string, string, "$W2v*`9=JL0`%NRq>f");

statement is: of(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(757L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(J)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(757L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("length must be >= 0", "length must be >= 0", arg2, arg3, "length must be >= 0", "length must be >= 0")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("length must be >= 0", "length must be >= 0", arg2, (Date) null, "length must be >= 0", "length must be >= 0")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range of = Range.of(757L);
MockDate mockDate = new MockDate(757L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("length must be >= 0", "length must be >= 0", of, mockDate, "length must be >= 0", "length must be >= 0");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("length must be >= 0", "length must be >= 0", of, (Date) null, "length must be >= 0", "length must be >= 0");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range of = Range.of("January 1st, 2023");
        MockDate mockDate = new MockDate("January 1st, 2023");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("length must be >= 0", "length must be >= 0", of, mockDate, "length must be >= 0", "length must be >= 0");
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("length must be >= 0", "length must be >= 0", of, ((Date) (null)), "length must be >= 0", "length must be >= 0");
        defaultPhdReadTag.equals(defaultPhdReadTag2);
    }
}
statement is: Range of = Range.of("January 1st, 2023"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of("January 1st, 2023") target is: Range method is: of(java.lang.String)
Matched Method is: of(J)Lorg/jcvi/jillion/core/Range;
statement is: MockDate mockDate = new MockDate("January 1st, 2023"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("length must be >= 0", "length must be >= 0", of, mockDate, "length must be >= 0", "length must be >= 0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("length must be >= 0", "length must be >= 0", of, ((Date) (null)), "length must be >= 0", "length must be >= 0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag2) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
TestCase is: String string = "January 1st, 2023";
Range of = Range.of((long) string);
String string = "January 1st, 2023";
MockDate mockDate = new MockDate((long) string);
String string = "length must be >= 0";
String string = "length must be >= 0";
String string = "length must be >= 0";
String string = "length must be >= 0";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
String string = "length must be >= 0";
String string = "length must be >= 0";
String string = "length must be >= 0";
String string = "length must be >= 0";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, (Date) string, string, string);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag")
statement is: org.evosuite.runtime.mock.java.util.MockDate(J)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.core.Range$EmptyIntRange", "ttQh>!", arg2, arg3, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "8GR<DMl$+GRvu1@H=I")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.ZERO_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
MockDate mockDate = new MockDate(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.core.Range$EmptyIntRange", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "8GR<DMl$+GRvu1@H=I");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED;
        Range of = Range.of(range_CoordinateSystem, 0L, 0L);
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag");
        MockDate mockDate = new MockDate(0L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.core.Range$EmptyIntRange", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "8GR<DMl$+GRvu1@H=I");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.ZERO_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.ZERO_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 0L, 0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 0L, 0L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockDate mockDate = new MockDate(0L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.core.Range$EmptyIntRange", "ttQh>!", of, mockDate, "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "8GR<DMl$+GRvu1@H=I"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 16
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = 0L;
long _long = 0L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
MockDate mockDate = new MockDate();
String string = "";
String string = "ttQh>!";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
long _long = 0L;
MockDate mockDate = new MockDate(_long);
String string = "org.jcvi.jillion.core.Range$EmptyIntRange";
String string = "ttQh>!";
String string = "org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag";
String string = "8GR<DMl$+GRvu1@H=I";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
of.equals(defaultPhdReadTag);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 0L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(2198, 2198, 2198, 2198, 1)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "bE){ea7*Ev", arg2, arg3, (String) null, "bE){ea7*Ev")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("&\"wGb]Kk;@rgdu)g<z", "ttQh>!", arg2, arg3, (String) null, "+")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 0L);
MockDate mockDate = new MockDate(2198, 2198, 2198, 2198, 1);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "bE){ea7*Ev", of, mockDate, (String) null, "bE){ea7*Ev");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("&\"wGb]Kk;@rgdu)g<z", "ttQh>!", of, mockDate, (String) null, "+");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, 1L, 2L);
        MockDate mockDate = new MockDate(2021, 10, 15, 12, 30);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Name", "Value", of, mockDate, "Desc", "Comment");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("&\"wGb]Kk;@rgdu)g<z", "ttQh>!", of, mockDate, ((String) (null)), "+");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 1L, 2L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 1L, 2L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(2021, 10, 15, 12, 30), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Name", "Value", of, mockDate, "Desc", "Comment"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("&\"wGb]Kk;@rgdu)g<z", "ttQh>!", of, mockDate, ((String) (null)), "+"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
TestCase is: long _long = 1L;
long _long = 2L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
int _int = 2021;
int _int = 10;
int _int = 15;
int _int = 12;
int _int = 30;
MockDate mockDate = new MockDate(_int, _int, _int, _int, _int);
String string = "Name";
String string = "Value";
String string = "Desc";
String string = "Comment";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
String string = "&\"wGb]Kk;@rgdu)g<z";
String string = "ttQh>!";
String string = "+";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);

statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, ".J*g", (Range) null, arg3, ".J*g", "i=!")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, ".J*g", (Range) null, arg3, ".J*g", "i=!")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, ".J*g", (Range) null, mockDate, ".J*g", "i=!");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, ".J*g", (Range) null, mockDate, ".J*g", "i=!");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag1 = new DefaultPhdReadTag("2019-07-15", ".J*g", new Range(1, 2), mockDate, "2019-07-15", "i=!");
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("2018-06-24", ".J*g", new Range(3, 4), mockDate, "2018-06-24", "i=!");
        defaultPhdReadTag1.equals(defaultPhdReadTag2);
    }
}
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag1 = new DefaultPhdReadTag("2019-07-15", ".J*g", new Range(1, 2), mockDate, "2019-07-15", "i=!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("2018-06-24", ".J*g", new Range(3, 4), mockDate, "2018-06-24", "i=!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag1.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag1.equals(defaultPhdReadTag2) target is: defaultPhdReadTag1 method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 10
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: MockDate mockDate = new MockDate();
String string = "2019-07-15";
String string = ".J*g";
String string = "2019-07-15";
String string = "i=!";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "i=!");
String string = "2018-06-24";
String string = ".J*g";
String string = "2018-06-24";
String string = "i=!";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "i=!");
string.equals(defaultPhdReadTag);

statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jh|(", "Jh|(", (Range) null, arg3, "Jh|(", "Jh|(")
statement is: of(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(1L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jh|(", "Jh|(", arg2, arg3, "Jh|(", "Jh|(")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jh|(", "Jh|(", (Range) null, mockDate, "Jh|(", "Jh|(");
Range of = Range.of(1L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jh|(", "Jh|(", of, mockDate, "Jh|(", "Jh|(");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jh|(", "Jh|(", ((Range) (null)), mockDate, "Jh|(", "Jh|(");
        Range of = Range.of(1L);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jh|(", "Jh|(", of, mockDate, "Jh|(", "Jh|(");
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jh|(", "Jh|(", ((Range) (null)), mockDate, "Jh|(", "Jh|("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Range of = Range.of(1L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(1L) target is: Range method is: of(long)
Matched Method is: of(J)Lorg/jcvi/jillion/core/Range;
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Jh|(", "Jh|(", of, mockDate, "Jh|(", "Jh|("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 12
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: MockDate mockDate = new MockDate();
String string = "Jh|(";
String string = "Jh|(";
String string = "Jh|(";
String string = "Jh|(";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, (Date) string, string, "Jh|(");
long _long = 1L;
Range of = Range.of(_long);
String string = "Jh|(";
String string = "Jh|(";
String string = "Jh|(";
String string = "Jh|(";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
string.equals(defaultPhdReadTag);

statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, arg3, (String) null, (String) null)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jvi.jillion.core.Rage$EmptyByteRange", (String) null, (Range) null, arg3, (String) null, (String) null)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, (String) null, (Range) null, mockDate, (String) null, (String) null);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jvi.jillion.core.Rage$EmptyByteRange", (String) null, (Range) null, mockDate, (String) null, (String) null);
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jvi.jillion.core.Rage$EmptyByteRange", "org.jvi.jillion.core.Rage$EmptyByteRange", null, mockDate, null, null);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jvi.jillion.core.Rage$EmptyByteRange", "org.jvi.jillion.core.Rage$EmptyByteRange", null, mockDate, null, null);
        defaultPhdReadTag.equals(defaultPhdReadTag);
    }
}
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jvi.jillion.core.Rage$EmptyByteRange", "org.jvi.jillion.core.Rage$EmptyByteRange", null, mockDate, null, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jvi.jillion.core.Rage$EmptyByteRange", "org.jvi.jillion.core.Rage$EmptyByteRange", null, mockDate, null, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 6
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: MockDate mockDate = new MockDate();
String string = "org.jvi.jillion.core.Rage$EmptyByteRange";
String string = "org.jvi.jillion.core.Rage$EmptyByteRange";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, mockDate, (String) null, (String) null);
String string = "org.jvi.jillion.core.Rage$EmptyByteRange";
String string = "org.jvi.jillion.core.Rage$EmptyByteRange";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) mockDate, mockDate, (String) null, (String) null);
string.equals(defaultPhdReadTag);

statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "Ce`h", (Range) null, arg3, "Ce`h", "Ce`h")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Ce`h", "Ce`h", (Range) null, arg3, "Ce`h", "Ce`h")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag((String) null, "Ce`h", (Range) null, mockDate, "Ce`h", "Ce`h");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("Ce`h", "Ce`h", (Range) null, mockDate, "Ce`h", "Ce`h");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockDate mockDate = new MockDate("2023-03-15T13:45:30.123");
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("CE01", "Ce`h", ((Range) (null)), mockDate, "CE01", "Ce`h");
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("CE02", "Ce`h", ((Range) (null)), mockDate, "CE02", "Ce`h");
        defaultPhdReadTag.equals(defaultPhdReadTag2);
    }
}
statement is: MockDate mockDate = new MockDate("2023-03-15T13:45:30.123"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("CE01", "Ce`h", ((Range) (null)), mockDate, "CE01", "Ce`h"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("CE02", "Ce`h", ((Range) (null)), mockDate, "CE02", "Ce`h"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag2) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
TestCase is: String string = "CE01";
String string = "Ce`h";
String string = "CE01";
String string = "Ce`h";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, "Ce`h", "Ce`h");
String string = "CE02";
String string = "Ce`h";
String string = "CE02";
String string = "Ce`h";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, (Range) string, (Date) string, "Ce`h", "Ce`h");

statement is: of(JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(1L, 1L)
statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("1=l:k^oc_", "1=l:k^oc_", arg2, arg3, "1=l:k^oc_", "1=l:k^oc_")
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("1=l:k^oc_", "1=l:k^oc_", arg2, arg3, "1=l:k^oc_", "1=l:k^oc_")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range of = Range.of(1L, 1L);
MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("1=l:k^oc_", "1=l:k^oc_", of, mockDate, "1=l:k^oc_", "1=l:k^oc_");
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("1=l:k^oc_", "1=l:k^oc_", of, mockDate, "1=l:k^oc_", "1=l:k^oc_");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range of = Range.of(1L, 2L);
        MockDate mockDate = new MockDate();
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("1=l:k^oc_", "1=l:k^oc_", of, mockDate, "1=l:k^oc_", "1=l:k^oc_");
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("1=l:k^oc_", "1=l:k^oc_", of, mockDate, "1=l:k^oc_", "1=l:k^oc_");
        defaultPhdReadTag.equals(defaultPhdReadTag2);
    }
}
statement is: Range of = Range.of(1L, 2L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(1L, 2L) target is: Range method is: of(long,long)
Matched Method is: of(JJ)Lorg/jcvi/jillion/core/Range;
statement is: MockDate mockDate = new MockDate(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("1=l:k^oc_", "1=l:k^oc_", of, mockDate, "1=l:k^oc_", "1=l:k^oc_"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("1=l:k^oc_", "1=l:k^oc_", of, mockDate, "1=l:k^oc_", "1=l:k^oc_"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag2) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 13
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: long _long = 1L;
long _long = 2L;
Range of = Range.of(_long, _long);
MockDate mockDate = new MockDate();
String string = "1=l:k^oc_";
String string = "1=l:k^oc_";
String string = "1=l:k^oc_";
String string = "1=l:k^oc_";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
String string = "1=l:k^oc_";
String string = "1=l:k^oc_";
String string = "1=l:k^oc_";
String string = "1=l:k^oc_";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
of.equals(defaultPhdReadTag);

statement is: ofLength(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range ofLength = Range.ofLength(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", arg2, (Date) null, "", "")
statement is: of(J)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(0L)
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", arg2, (Date) null, "", "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = defaultPhdReadTag.equals(arg0)
test data is: Range ofLength = Range.ofLength(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", ofLength, (Date) null, "", "");
Range of = Range.of(0L);
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", of, (Date) null, "", "");
defaultPhdReadTag.equals(defaultPhdReadTag);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Define a range of length 1000
        Range ofLength = Range.ofLength(1000L);
        // Define a default PhdReadTag with a name, description, and creation date
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "This is a test tag", new Date(), "", "");
        // Define another default PhdReadTag with the same values as the first one
        DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("John Doe", "This is a test tag", new Date(), "", "");
        // Compare the two instances using the equals() method
        boolean areEqual = defaultPhdReadTag.equals(defaultPhdReadTag2);
    }
}
statement is: // Define a range of length 1000
Range ofLength = Range.ofLength(1000L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.ofLength(1000L) target is: Range method is: ofLength(long)
Matched Method is: ofLength(J)Lorg/jcvi/jillion/core/Range;
statement is: // Define a default PhdReadTag with a name, description, and creation date
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("John Doe", "This is a test tag", new Date(), "", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Define another default PhdReadTag with the same values as the first one
DefaultPhdReadTag defaultPhdReadTag2 = new DefaultPhdReadTag("John Doe", "This is a test tag", new Date(), "", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Compare the two instances using the equals() method
boolean areEqual = defaultPhdReadTag.equals(defaultPhdReadTag2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.equals(defaultPhdReadTag2) target is: defaultPhdReadTag method is: equals(DefaultPhdReadTag)
TestCase is: long _long = 1000L;
Range.ofLength(_long);

statement is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class org.jcvi.jillion.core.Range$CoordinateSystem
statement code is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED
statement is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.jcvi.jillion.core.Range
statement code is: Range of = Range.of(arg0, 0L, 65535L)
statement is: org.evosuite.runtime.mock.java.util.MockDate(IIIIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate(0, 0, 4156, 4156, 0, (-1309))
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", arg2, arg3, "", "")
statement is: getComment()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String comment = defaultPhdReadTag.getComment()
test data is: Range.CoordinateSystem range_CoordinateSystem = Range.CoordinateSystem.SPACE_BASED;
Range of = Range.of(range_CoordinateSystem, 0L, 65535L);
MockDate mockDate = new MockDate(0, 0, 4156, 4156, 0, (-1309));
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("", "", of, mockDate, "", "");
defaultPhdReadTag.getComment();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED;
        Range of = Range.of(range_CoordinateSystem, 0L, 65535L);
        MockDate mockDate = new MockDate(0, 0, 4156, 4156, 0, -1309);
        DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("This is a long comment string that should be more representative of real-world data.", "", of, mockDate, "Boolean", "true");
        defaultPhdReadTag.getComment();
    }
}
statement is: Range.CoordinateSystem range_CoordinateSystem = CoordinateSystem.SPACE_BASED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: CoordinateSystem.SPACE_BASED is CoordinateSystem
statement is: Range of = Range.of(range_CoordinateSystem, 0L, 65535L), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Range.of(range_CoordinateSystem, 0L, 65535L) target is: Range method is: of(Range.CoordinateSystem,long,long)
Matched Method is: of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: MockDate mockDate = new MockDate(0, 0, 4156, 4156, 0, -1309), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("This is a long comment string that should be more representative of real-world data.", "", of, mockDate, "Boolean", "true"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultPhdReadTag.getComment(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultPhdReadTag.getComment() target is: defaultPhdReadTag method is: getComment()
source statement: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 3, type org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTagindex is: 14
Matched Method is: getComment()Ljava/lang/String;
TestCase is: long _long = 0L;
long _long = 65535L;
long _long = null;
Range of = Range.of((Range.CoordinateSystem) _long, _long, _long);
int _int = 0;
int _int = 0;
int _int = 4156;
int _int = 4156;
int _int = 0;
MockDate mockDate = new MockDate(_int, _int, _int, _int, _int, (-1309));
String string = "This is a long comment string that should be more representative of real-world data.";
String string = "";
String string = "Boolean";
String string = "true";
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag(string, string, of, mockDate, string, string);
((DefaultPhdReadTag) of).getComment();

statement is: org.evosuite.runtime.mock.java.util.MockDate()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.util.MockDate
statement code is: MockDate mockDate = new MockDate()
statement is: org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag(Ljava/lang/String;Ljava/lang/String;Lorg/jcvi/jillion/core/Range;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag
statement code is: DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.core.Range$EmptyByteRange", (Range) null, arg3, (String) null, "")
statement is: getComment()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String comment = defaultPhdReadTag.getComment()
test data is: MockDate mockDate = new MockDate();
DefaultPhdReadTag defaultPhdReadTag = new DefaultPhdReadTag("org.jcvi.jillion.assembly.consed.phd.DefaultPhdReadTag", "org.jcvi.jillion.core.Range$EmptyByteRange", (Range) null, mockDate, (String) null, "");
defaultPhdReadTag.getComment();

* Computation finished
