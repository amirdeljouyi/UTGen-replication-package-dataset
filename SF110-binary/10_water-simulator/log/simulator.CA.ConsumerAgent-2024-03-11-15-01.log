* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: simulator.CA.ConsumerAgent
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/10_water-simulator/evosuite-files/evosuite.properties
* Connecting to master process on port 11360
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:01:14.109 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:01:14.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:01:14.115 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:01:14.362 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:01:14.472 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:01:14.472 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:01:14.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:01:14.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:01:14.475 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:01:14.476 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:01:14.476 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:01:14.477 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:01:14.479 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:01:14.503 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:01:14.504 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class simulator.CA.ConsumerAgent
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 593
* Using seed 1710169271079
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 192 / 593
[Progress:>                             0%] [Cov:=====>                             15%][Progress:>                             0%] [Cov:=====>                             15%][Progress:>                             0%] [Cov:=====>                             15%][Progress:>                             1%] [Cov:=====>                             15%][Progress:>                             1%] [Cov:=====>                             15%][Progress:=>                            6%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:=====>                        17%] [Cov:=====>                             15%][Progress:=====>                        17%] [Cov:=====>                             15%][Progress:=====>                        17%] [Cov:=====>                             15%][Progress:=====>                        17%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       22%] [Cov:=====>                             15%][Progress:======>                       22%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:========>                     27%] [Cov:=====>                             15%][Progress:========>                     27%] [Cov:=====>                             15%][Progress:========>                     29%] [Cov:=====>                             15%][Progress:========>                     29%] [Cov:=====>                             15%][Progress:========>                     29%] [Cov:=====>                             15%][Progress:========>                     29%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    32%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:==========>                   35%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 40%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:==============>               48%] [Cov:=====>                             15%][Progress:==============>               48%] [Cov:=====>                             15%][Progress:==============>               48%] [Cov:=====>                             15%][Progress:==============>               48%] [Cov:=====>                             16%][Progress:==============>               48%] [Cov:=====>                             16%][Progress:==============>               48%] [Cov:=====>                             16%][Progress:==============>               48%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              52%] [Cov:=====>                             16%][Progress:===============>              52%] [Cov:=====>                             16%][Progress:===============>              52%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             16%][MASTER] 15:03:12.139 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           63%] [Cov:=====>                             16%][Progress:==================>           63%] [Cov:=====>                             16%][Progress:==================>           63%] [Cov:=====>                             16%][Progress:==================>           63%] [Cov:=====>                             16%][Progress:==================>           63%] [Cov:=====>                             16%][Progress:==================>           63%] [Cov:=====>                             16%][Progress:==================>           63%] [Cov:=====>                             16%][Progress:===================>          66%] [Cov:=====>                             16%][Progress:====================>         68%] [Cov:=====>                             16%][Progress:====================>         68%] [Cov:=====>                             16%][Progress:====================>         69%] [Cov:=====>                             16%][Progress:====================>         69%] [Cov:=====>                             16%][Progress:====================>         69%] [Cov:=====>                             16%][Progress:=====================>        71%] [Cov:=====>                             16%][Progress:=====================>        71%] [Cov:=====>                             16%][Progress:=====================>        71%] [Cov:=====>                             16%][Progress:======================>       74%] [Cov:=====>                             16%][Progress:======================>       74%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:========================>     80%] [Cov:=====>                             16%][Progress:========================>     80%] [Cov:=====>                             16%][Progress:========================>     81%] [Cov:=====>                             16%][Progress:========================>     81%] [Cov:=====>                             16%][Progress:========================>     81%] [Cov:=====>                             16%][Progress:========================>     81%] [Cov:=====>                             16%][Progress:========================>     83%] [Cov:=====>                             16%][Progress:========================>     83%] [Cov:=====>                             16%][Progress:========================>     83%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    84%] [Cov:=====>                             16%][Progress:=========================>    85%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:============================> 96%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:==============================100%] [Cov:=====>                             16%]
* Search finished after 205s and 256 generations, 85808 statements, best individual has fitness: 507.0
* Generated before the refinement 10 tests with total length 33
statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent(arg0, 100)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        GuiEvent guiEvent = new GuiEvent(consumerAgent, "100");
        consumerAgent.onGuiEvent(guiEvent);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent(consumerAgent, "100"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
String string = "100";
GuiEvent guiEvent = new GuiEvent(consumerAgent, (int) string);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage()
statement is: onFailure(Ljade/lang/acl/ACLMessage;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onFailure(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        OntoACLMessage ontoACLMessage = new OntoACLMessage("This is a test message", "test@example.com", "sender@example.com");
        consumerAgent.onFailure(ontoACLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage("This is a test message", "test@example.com", "sender@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onFailure(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onFailure(ontoACLMessage) target is: consumerAgent method is: onFailure(OntoACLMessage)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onFailure(Ljade/lang/acl/ACLMessage;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = null;
consumerAgent.onFailure(ontoACLMessage);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: consumeWater()Lsimulator/ontology/WaterConsumption; type is: class org.evosuite.testcase.statements.MethodStatement return type class simulator.ontology.WaterConsumption
statement code is: WaterConsumption consumeWater = consumerAgent.consumeWater()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.consumeWater();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent(100, 20);
        consumerAgent.consumeWater("Ice Water");
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(100, 20), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.consumeWater("Ice Water"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.consumeWater("Ice Water") target is: consumerAgent method is: consumeWater(java.lang.String)
statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage()
statement is: org.evosuite.testcase.statements.ArrayStatement@cb3a08f8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lsimulator.util.ConsumerAttributes;
statement code is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15]
statement is: simulator.CA.ConsumerAgent$MatchNeighbourhood(Lsimulator/CA/ConsumerAgent;[Lsimulator/util/ConsumerAttributes;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchNeighbourhood
statement code is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = arg0.new MatchNeighbourhood(arg1)
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchNeighbourhood.match(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
consumerAgent_MatchNeighbourhood.match(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        OntoACLMessage ontoACLMessage = new OntoACLMessage();
        // Create an array of 15 consumer attributes, each representing a different type of consumer.
        ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];
        consumerAttributesArray[0] = new ConsumerAttributes("John Doe", "johndoe@email.com", 30, "Male", "Student");
        consumerAttributesArray[1] = new ConsumerAttributes("Jane Smith", "janesmith@email.com", 25, "Female", "Employee");
        consumerAttributesArray[2] = new ConsumerAttributes("Bob Johnson", "bobjohnson@email.com", 40, "Male", "Retired");
        // Add more consumer attributes to the array as needed.
        ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
        consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Create an array of 15 consumer attributes, each representing a different type of consumer.
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [15] Ct is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15] isAssignment: false Array: new ConsumerAttributes[15] Elements: []
lengths: [15] [15]
Their type are: class [Lsimulator.util.ConsumerAttributes; ConsumerAttributes[]
statement is: consumerAttributesArray[0] = new ConsumerAttributes("John Doe", "johndoe@email.com", 30, "Male", "Student"), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : consumerAttributesArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:new ConsumerAttributes("John Doe", "johndoe@email.com", 30, "Male", "Student") Ct is: consumerAttributesArray[0] = new ConsumerAttributes("John Doe", "johndoe@email.com", 30, "Male", "Student")
target : consumerAttributesArray class spoon.support.reflect.code.CtLiteralImpl
statement is: consumerAttributesArray[1] = new ConsumerAttributes("Jane Smith", "janesmith@email.com", 25, "Female", "Employee"), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : consumerAttributesArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:new ConsumerAttributes("Jane Smith", "janesmith@email.com", 25, "Female", "Employee") Ct is: consumerAttributesArray[1] = new ConsumerAttributes("Jane Smith", "janesmith@email.com", 25, "Female", "Employee")
target : consumerAttributesArray class spoon.support.reflect.code.CtLiteralImpl
statement is: consumerAttributesArray[2] = new ConsumerAttributes("Bob Johnson", "bobjohnson@email.com", 40, "Male", "Retired"), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : consumerAttributesArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:new ConsumerAttributes("Bob Johnson", "bobjohnson@email.com", 40, "Male", "Retired") Ct is: consumerAttributesArray[2] = new ConsumerAttributes("Bob Johnson", "bobjohnson@email.com", 40, "Male", "Retired")
target : consumerAttributesArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // Add more consumer attributes to the array as needed.
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent_MatchNeighbourhood.match(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent_MatchNeighbourhood.match(ontoACLMessage) target is: consumerAgent_MatchNeighbourhood method is: match(OntoACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: org.evosuite.testcase.statements.ArrayStatement@60f1d1db type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lsimulator.util.ConsumerAttributes;
statement code is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0]
statement is: simulator.CA.ConsumerAgent$MatchNeighbourhood(Lsimulator/CA/ConsumerAgent;[Lsimulator/util/ConsumerAttributes;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchNeighbourhood
statement code is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = arg0.new MatchNeighbourhood(arg1)
statement is: jade.lang.acl.ACLMessage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.lang.acl.ACLMessage
statement code is: ACLMessage aCLMessage = new ACLMessage()
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchNeighbourhood.match(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage();
consumerAgent_MatchNeighbourhood.match(aCLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes("John", "Doe", 45, "johndoe@email.com"), new ConsumerAttributes("Jane", "Smith", 60, "janesmith@email.com") };
        ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
        ACLMessage aCLMessage = new ACLMessage();
        aCLMessage.setContent("I am looking for a provider who is a good fit for me based on my values and preferences");
        consumerAgent_MatchNeighbourhood.match(aCLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes("John", "Doe", 45, "johndoe@email.com"), new ConsumerAttributes("Jane", "Smith", 60, "janesmith@email.com") }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0] isAssignment: false Array: new ConsumerAttributes[]{ new ConsumerAttributes("John", "Doe", 45, "johndoe@email.com"), new ConsumerAttributes("Jane", "Smith", 60, "janesmith@email.com") } Elements: [new ConsumerAttributes("John", "Doe", 45, "johndoe@email.com"), new ConsumerAttributes("Jane", "Smith", 60, "janesmith@email.com")]
lengths: [0] []
statement is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ACLMessage aCLMessage = new ACLMessage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: aCLMessage.setContent("I am looking for a provider who is a good fit for me based on my values and preferences"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: aCLMessage.setContent("I am looking for a provider who is a good fit for me based on my values and preferences") target is: aCLMessage method is: setContent(java.lang.String)
statement is: consumerAgent_MatchNeighbourhood.match(aCLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent_MatchNeighbourhood.match(aCLMessage) target is: consumerAgent_MatchNeighbourhood method is: match(ACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
ACLMessage aCLMessage = new ACLMessage();

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage()
statement is: simulator.CA.ConsumerAgent$MatchRequestContent(Lsimulator/CA/ConsumerAgent;Ljade/content/AgentAction;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchRequestContent
statement code is: ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = arg0.new MatchRequestContent(arg1)
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchRequestContent.match(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        OntoACLMessage ontoACLMessage = new OntoACLMessage("This is a sample ACL message for testing purposes.", "sender", "receiver");
        ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
        consumerAgent_MatchRequestContent.match(ontoACLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage("This is a sample ACL message for testing purposes.", "sender", "receiver"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent_MatchRequestContent.match(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent_MatchRequestContent.match(ontoACLMessage) target is: consumerAgent_MatchRequestContent method is: match(OntoACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent(arg0, 0)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        GuiEvent guiEvent = new GuiEvent(consumerAgent, -1);
        consumerAgent.onGuiEvent(guiEvent);
        Amount amount = new Amount(Math.random() * 100);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent(consumerAgent, -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
statement is: Amount amount = new Amount(Math.random() * 100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent(arg0, 101)
statement is: addParameter(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: guiEvent.addParameter((Object) null)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
        guiEvent.addParameter(((Object) ("ValidInput")));
        consumerAgent.onGuiEvent(guiEvent);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent(consumerAgent, 101), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: guiEvent.addParameter(((Object) ("ValidInput"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: guiEvent.addParameter(((Object) ("ValidInput"))) target is: guiEvent method is: addParameter(java.lang.Object)
source statement: jade.gui.GuiEvent(Ljava/lang/Object;I)V callee: VariableReference: Statement 1, type jade.gui.GuiEventindex is: 2
Matched Method is: addParameter(Ljava/lang/Object;)V
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
int _int = 101;
GuiEvent guiEvent = new GuiEvent(consumerAgent, _int);
String string = "ValidInput";
((GuiEvent) _int).addParameter(string);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: createQueryMsgForNeighbourhood()Ljade/lang/acl/ACLMessage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jade.lang.acl.ACLMessage
statement code is: ACLMessage createQueryMsgForNeighbourhood = consumerAgent.createQueryMsgForNeighbourhood()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.createQueryMsgForNeighbourhood();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        consumerAgent.createQueryMsgForNeighbourhood("21", "Mumbai", "400000", "300000", "30", "5");
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.createQueryMsgForNeighbourhood("21", "Mumbai", "400000", "300000", "30", "5"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.createQueryMsgForNeighbourhood("21", "Mumbai", "400000", "300000", "30", "5") target is: consumerAgent method is: createQueryMsgForNeighbourhood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: setup()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.setup()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.setup();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        consumerAgent.setup();
        // Improved test data:
        int age = 35;
        String name = "John Doe";
        // Creating a more descriptive example of the integer and string primitive types.
        double salary = 40000.98;
        char gender = 'M';
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.setup(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.setup() target is: consumerAgent method is: setup()
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: setup()V
statement is: // Improved test data:
int age = 35, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Creating a more descriptive example of the integer and string primitive types.
double salary = 40000.98, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char gender = 'M', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 35
* this is vulnerable: String string = "John Doe"
* this is vulnerable: double _double = 40000.98
* this is vulnerable: char _char = 'M'
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.setup();
int _int = 35;
String string = "John Doe";
double _double = 40000.98;
char _char = 'M';

* test suite isTestSuite: 19
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage();
consumerAgent_MatchNeighbourhood.match(aCLMessage);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 10: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, (int) "100");
consumerAgent.onGuiEvent(guiEvent);

Test 11: 
ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.onFailure((ACLMessage) null);

Test 12: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];

Test 13: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ACLMessage aCLMessage = new ACLMessage();

Test 14: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 15: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);

Test 16: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
((GuiEvent)101).addParameter("ValidInput");
consumerAgent.onGuiEvent(guiEvent);

Test 17: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 18: 
ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.setup();


* Generated after the refinement and before minimization 19 tests with total length 54
* test suite isTestSuite: 19
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage();
consumerAgent_MatchNeighbourhood.match(aCLMessage);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 10: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, (int) "100");
consumerAgent.onGuiEvent(guiEvent);

Test 11: 
ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.onFailure((ACLMessage) null);

Test 12: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];

Test 13: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ACLMessage aCLMessage = new ACLMessage();

Test 14: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 15: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);

Test 16: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
((GuiEvent)101).addParameter("ValidInput");
consumerAgent.onGuiEvent(guiEvent);

Test 17: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 18: 
ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.setup();


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage();
consumerAgent_MatchNeighbourhood.match(aCLMessage);
Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 17%
* Total number of goals: 301
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 8
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Generated 10 tests with total length 33
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}


** It was a parseable test case! 
refined test name is: testConsumeWaterWithoutContentManager
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


** It was a parseable test case! 
refined test name is: testCreateQueryMsgForNeighbourhoodNoMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage arg0 = new OntoACLMessage();
consumerAgent.onFailure(arg0);
assertEquals(15, ACLMessage.REJECT_PROPOSAL);


** It was a parseable test case! 
refined test name is: testConsumerAgentHandlesFailureMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


** It was a parseable test case! 
refined test name is: testInvalidSetupWithoutArguments
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:07:37.146 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:37.164 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:07:37.234 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:37.235 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:07:37.294 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 15:07:37.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
* Compiling Tests
[MASTER] 15:07:37.355 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:37.356 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:07:37.442 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:37.442 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:07:37.524 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:37.525 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
[MASTER] 15:07:37.678 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 10
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);
Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage();
consumerAgent_MatchNeighbourhood.match(aCLMessage);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage();
consumerAgent_MatchNeighbourhood.match(aCLMessage);
Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[15];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 0);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


[MASTER] 15:07:39.328 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 17%
* Total number of goals: 301
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 8
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Generated 10 tests with total length 33
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:07:39.400 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
[MASTER] 15:07:40.558 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:07:41.171 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:41.172 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:07:41.219 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:41.220 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:07:41.262 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:41.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:07:41.310 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:41.311 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
[MASTER] 15:07:41.380 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:41.380 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
[MASTER] 15:07:41.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5256874279194906179.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:07:41.447 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5256874279194906179.jar
* Writing tests to file
[MASTER] 15:07:41.449 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ConsumerAgent_ESTest' to evosuite-tests
* Writing JUnit test case 'ConsumerAgent_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
* Done!

* Computation finished
