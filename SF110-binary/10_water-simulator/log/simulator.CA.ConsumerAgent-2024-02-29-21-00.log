* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: simulator.CA.ConsumerAgent
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/10_water-simulator/evosuite-files/evosuite.properties
* Connecting to master process on port 6007
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 21:00:34.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 21:00:34.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 21:00:34.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 21:00:34.448 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 21:00:34.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 21:00:34.515 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 21:00:34.516 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 21:00:34.516 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 21:00:34.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 21:00:34.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 21:00:34.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 21:00:34.518 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 21:00:34.518 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 21:00:34.533 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 21:00:34.533 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class simulator.CA.ConsumerAgent
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 593
* Using seed 1709240431837
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 192 / 593
[Progress:=>                            6%] [Cov:=====>                             15%][Progress:=>                            6%] [Cov:=====>                             15%][Progress:==>                           7%] [Cov:=====>                             15%][Progress:==>                           7%] [Cov:=====>                             15%][Progress:==>                           7%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:=======>                      25%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=======>                      26%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:===========>                  39%] [Cov:=====>                             15%][Progress:=============>                44%] [Cov:=====>                             15%][Progress:=============>                44%] [Cov:=====>                             15%][Progress:=============>                44%] [Cov:=====>                             15%][Progress:=============>                44%] [Cov:=====>                             15%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                46%] [Cov:=====>                             15%][Progress:=============>                46%] [Cov:=====>                             15%][Progress:=============>                46%] [Cov:=====>                             15%][Progress:=============>                46%] [Cov:=====>                             15%][Progress:=============>                46%] [Cov:=====>                             15%][Progress:=============>                46%] [Cov:=====>                             15%][MASTER] 21:01:21.746 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:===============>              52%] [Cov:=====>                             16%][Progress:===============>              52%] [Cov:=====>                             16%][Progress:===============>              52%] [Cov:=====>                             16%][Progress:===============>              52%] [Cov:=====>                             16%][Progress:===============>              53%] [Cov:=====>                             16%][Progress:===============>              53%] [Cov:=====>                             16%][Progress:===============>              53%] [Cov:=====>                             16%][Progress:===============>              53%] [Cov:=====>                             16%][Progress:=================>            58%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:=================>            59%] [Cov:=====>                             16%][Progress:===================>          64%] [Cov:=====>                             16%][Progress:===================>          65%] [Cov:=====>                             16%][Progress:===================>          65%] [Cov:=====>                             16%][Progress:===================>          65%] [Cov:=====>                             16%][Progress:===================>          65%] [Cov:=====>                             16%][Progress:=====================>        70%] [Cov:=====>                             16%][Progress:=====================>        71%] [Cov:=====>                             16%][Progress:========================>     81%] [Cov:=====>                             16%][Progress:=========================>    86%] [Cov:=====>                             16%][Progress:=========================>    86%] [Cov:=====>                             16%][Progress:=========================>    86%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   88%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:============================> 94%] [Cov:=====>                             16%][Progress:============================> 94%] [Cov:=====>                             16%][Progress:============================> 94%] [Cov:=====>                             16%][Progress:============================> 94%] [Cov:=====>                             16%][Progress:============================> 94%] [Cov:=====>                             16%][Progress:============================> 94%] [Cov:=====>                             16%][Progress:============================> 94%] [Cov:=====>                             16%][Progress:============================> 95%] [Cov:=====>                             16%][Progress:==============================100%] [Cov:=====>                             16%][Progress:==============================100%] [Cov:=====>                             16%][Progress:==============================100%] [Cov:=====>                             16%][Progress:==============================100%] [Cov:=====>                             16%]
* Search finished after 102s and 102 generations, 36453 statements, best individual has fitness: 507.0
* Generated before the refinement 10 tests with total length 33
statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent((Object) null, 100)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, 100);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        GuiEvent guiEvent = new GuiEvent("Button Click", 100);
        consumerAgent.onGuiEvent(guiEvent);
        // Test with a different event type
        GuiEvent guiEvent2 = new GuiEvent("Mouse Move", 100);
        consumerAgent.onGuiEvent(guiEvent2);
        // Test with a different event value
        GuiEvent guiEvent3 = new GuiEvent("Button Click", 50);
        consumerAgent.onGuiEvent(guiEvent3);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent("Button Click", 100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
statement is: // Test with a different event type
GuiEvent guiEvent2 = new GuiEvent("Mouse Move", 100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onGuiEvent(guiEvent2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent2) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
statement is: // Test with a different event value
GuiEvent guiEvent3 = new GuiEvent("Button Click", 50), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onGuiEvent(guiEvent3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent3) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
String string = "Button Click";
int _int = 100;
GuiEvent guiEvent = new GuiEvent(string, _int);
consumerAgent.onGuiEvent(guiEvent);
String string = "Mouse Move";
int _int = 100;
GuiEvent guiEvent = new GuiEvent(string, _int);
consumerAgent.onGuiEvent(guiEvent);
String string = "Button Click";
int _int = 50;
GuiEvent guiEvent = new GuiEvent(string, _int);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage()
statement is: onFailure(Ljade/lang/acl/ACLMessage;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onFailure(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        OntoACLMessage ontoACLMessage = new OntoACLMessage("FAILURE", "sender", "receiver", "Inform", ACLMessage.INFORM);
        consumerAgent.onFailure(ontoACLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage("FAILURE", "sender", "receiver", "Inform", ACLMessage.INFORM), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onFailure(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onFailure(ontoACLMessage) target is: consumerAgent method is: onFailure(OntoACLMessage)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onFailure(Ljade/lang/acl/ACLMessage;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = null;
consumerAgent.onFailure(ontoACLMessage);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: consumeWater()Lsimulator/ontology/WaterConsumption; type is: class org.evosuite.testcase.statements.MethodStatement return type class simulator.ontology.WaterConsumption
statement code is: WaterConsumption consumeWater = consumerAgent.consumeWater()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.consumeWater();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent(10, 5);
        consumerAgent.consumeWater(2, 3);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(10, 5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.consumeWater(2, 3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.consumeWater(2, 3) target is: consumerAgent method is: consumeWater(int,int)
statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage()
statement is: org.evosuite.testcase.statements.ArrayStatement@9d0f432a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lsimulator.util.ConsumerAttributes;
statement code is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[1]
statement is: simulator.CA.ConsumerAgent$MatchNeighbourhood(Lsimulator/CA/ConsumerAgent;[Lsimulator/util/ConsumerAttributes;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchNeighbourhood
statement code is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = arg0.new MatchNeighbourhood(arg1)
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchNeighbourhood.match(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[1];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
consumerAgent_MatchNeighbourhood.match(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        OntoACLMessage ontoACLMessage = new OntoACLMessage();
        // Improved test data
        consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes(30, "Male", "1970-01-01") };
        consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
        consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes(30, "Male", "1970-01-01") }, class spoon.support.reflect.code.CtAssignmentImpl
statement is: consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray), class spoon.support.reflect.code.CtAssignmentImpl
statement is: consumerAgent_MatchNeighbourhood.match(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent_MatchNeighbourhood.match(ontoACLMessage) target is: consumerAgent_MatchNeighbourhood method is: match(OntoACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: org.evosuite.testcase.statements.ArrayStatement@78ff4b7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lsimulator.util.ConsumerAttributes;
statement code is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0]
statement is: simulator.CA.ConsumerAgent$MatchNeighbourhood(Lsimulator/CA/ConsumerAgent;[Lsimulator/util/ConsumerAttributes;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchNeighbourhood
statement code is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = arg0.new MatchNeighbourhood(arg1)
statement is: jade.content.OntoACLMessage(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage(0)
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchNeighbourhood.match(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
consumerAgent_MatchNeighbourhood.match(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes("John Doe", 35, "johndoe@email.com"), new ConsumerAttributes("Jane Smith", 28, "janesmith@email.com") };
        ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
        OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
        consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes("John Doe", 35, "johndoe@email.com"), new ConsumerAttributes("Jane Smith", 28, "janesmith@email.com") }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0] isAssignment: false Array: new ConsumerAttributes[]{ new ConsumerAttributes("John Doe", 35, "johndoe@email.com"), new ConsumerAttributes("Jane Smith", 28, "janesmith@email.com") } Elements: [new ConsumerAttributes("John Doe", 35, "johndoe@email.com"), new ConsumerAttributes("Jane Smith", 28, "janesmith@email.com")]
lengths: [0] []
statement is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent_MatchNeighbourhood.match(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent_MatchNeighbourhood.match(ontoACLMessage) target is: consumerAgent_MatchNeighbourhood method is: match(OntoACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
int _int = 0;
OntoACLMessage ontoACLMessage = new OntoACLMessage(_int);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent(arg0, 1)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 1);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        GuiEvent guiEvent = new GuiEvent(consumerAgent, 2147483647);
        consumerAgent.onGuiEvent(guiEvent);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent(consumerAgent, 2147483647), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
int _int = Integer.MAX_VALUE;
GuiEvent guiEvent = new GuiEvent(consumerAgent, _int);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent((Object) null, 101)
statement is: addParameter(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: guiEvent.addParameter((Object) null)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        GuiEvent guiEvent = new GuiEvent("BUTTON_CLICKED", "LoginButtonClicked");
        guiEvent.addParameter("buttonName", "loginButton");
        consumerAgent.onGuiEvent(guiEvent);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent("BUTTON_CLICKED", "LoginButtonClicked"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: guiEvent.addParameter("buttonName", "loginButton"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: guiEvent.addParameter("buttonName", "loginButton") target is: guiEvent method is: addParameter(java.lang.String,java.lang.String)
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
String string = "BUTTON_CLICKED";
String string = "LoginButtonClicked";
GuiEvent guiEvent = new GuiEvent(string, (int) string);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: createQueryMsgForNeighbourhood()Ljade/lang/acl/ACLMessage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jade.lang.acl.ACLMessage
statement code is: ACLMessage createQueryMsgForNeighbourhood = consumerAgent.createQueryMsgForNeighbourhood()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.createQueryMsgForNeighbourhood();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        consumerAgent.createQueryMsgForNeighbourhood("Los Angeles", "USA");
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.createQueryMsgForNeighbourhood("Los Angeles", "USA"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.createQueryMsgForNeighbourhood("Los Angeles", "USA") target is: consumerAgent method is: createQueryMsgForNeighbourhood(java.lang.String,java.lang.String)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: setup()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.setup()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.setup();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        consumerAgent.setup("Test Consumer", "123 Main St.", "Anytown", "CA", "98765");
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.setup("Test Consumer", "123 Main St.", "Anytown", "CA", "98765"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.setup("Test Consumer", "123 Main St.", "Anytown", "CA", "98765") target is: consumerAgent method is: setup(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage(0)
statement is: simulator.CA.ConsumerAgent$MatchRequestContent(Lsimulator/CA/ConsumerAgent;Ljade/content/AgentAction;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchRequestContent
statement code is: ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = arg0.new MatchRequestContent(arg1)
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchRequestContent.match((ACLMessage) null)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match((ACLMessage) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
        ontoACLMessage.setContent("Hello, world!");
        consumerAgent.match(ontoACLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ontoACLMessage.setContent("Hello, world!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ontoACLMessage.setContent("Hello, world!") target is: ontoACLMessage method is: setContent(java.lang.String)
statement is: consumerAgent.match(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.match(ontoACLMessage) target is: consumerAgent method is: match(OntoACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
int _int = 0;
OntoACLMessage ontoACLMessage = new OntoACLMessage(_int);

* test suite isTestSuite: 19
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[1];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 1);
consumerAgent.onGuiEvent(guiEvent);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match((ACLMessage) null);
Test 10: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent("Button Click", 100);
consumerAgent.onGuiEvent(guiEvent);
String string = "Mouse Move";
int _int = 100;
GuiEvent guiEvent = new GuiEvent(string, _int);
consumerAgent.onGuiEvent(guiEvent);
String string = "Button Click";
int _int = 50;
GuiEvent guiEvent = new GuiEvent(string, _int);
consumerAgent.onGuiEvent(guiEvent);

Test 11: 
ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.onFailure((ACLMessage) null);

Test 12: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();

Test 13: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);

Test 14: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, Integer.MAX_VALUE);
consumerAgent.onGuiEvent(guiEvent);

Test 15: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent("BUTTON_CLICKED", (int) "LoginButtonClicked");
consumerAgent.onGuiEvent(guiEvent);

Test 16: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 17: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 18: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);


* Generated after the refinement and before minimization 19 tests with total length 60
* test suite isTestSuite: 19
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[1];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 1);
consumerAgent.onGuiEvent(guiEvent);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match((ACLMessage) null);
Test 10: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent("Button Click", 100);
consumerAgent.onGuiEvent(guiEvent);
String string = "Mouse Move";
int _int = 100;
GuiEvent guiEvent = new GuiEvent(string, _int);
consumerAgent.onGuiEvent(guiEvent);
String string = "Button Click";
int _int = 50;
GuiEvent guiEvent = new GuiEvent(string, _int);
consumerAgent.onGuiEvent(guiEvent);

Test 11: 
ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.onFailure((ACLMessage) null);

Test 12: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();

Test 13: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);

Test 14: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, Integer.MAX_VALUE);
consumerAgent.onGuiEvent(guiEvent);

Test 15: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent("BUTTON_CLICKED", (int) "LoginButtonClicked");
consumerAgent.onGuiEvent(guiEvent);

Test 16: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 17: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 18: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent("Button Click", 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[1];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(0);
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match((ACLMessage) null);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, Integer.MAX_VALUE);
consumerAgent.onGuiEvent(guiEvent);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 17%
* Total number of goals: 301
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 8
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Generated 10 tests with total length 33
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent arg0 = new GuiEvent("Button Click", 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(arg0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testHeadlessGraphicsContextException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}


** It was a parseable test case! 
refined test name is: testThrowsNullPointerExceptionWhenNoWaterAvailable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent arg0 = new ConsumerAgent();
OntoACLMessage arg1 = new OntoACLMessage(0);
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = arg0.new MatchRequestContent(arg1);
boolean match = consumerAgent_MatchRequestContent.match((ACLMessage) null);
assertFalse(match);


** It was a parseable test case! 
refined test name is: testMatchRequestContentNullValueReturnsFalse
* Compiling Tests
refined test name is: testMatchRequestContentWithNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent arg0 = new GuiEvent((Object) null, 101);
arg0.addParameter((Object) null);
consumerAgent.onGuiEvent(arg0);
assertEquals(9, Agent.D_MIN);


** It was a parseable test case! 
refined test name is: testOnGuiEventVerifyDMinValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


** It was a parseable test case! 
refined test name is: testCreateQueryMsgForNeighbourhoodWithNullInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage arg0 = new OntoACLMessage();
consumerAgent.onFailure(arg0);
assertEquals(14, ACLMessage.REFUSE);


** It was a parseable test case! 
refined test name is: testOnFailureReturnsREFUSE
* Compiling Tests
refined test name is: testOnFailureReturnsRefuse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


** It was a parseable test case! 
refined test name is: testThrowsNPEWhenCalledWithNullArguments
* Compiling Tests
refined test name is: testThrowsNPEWhenCalledWithNullArguments
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:04:04.846 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:04:04.877 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:04:04.982 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:04:04.983 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:04:05.074 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:04:05.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
[MASTER] 21:04:05.148 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:04:05.150 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
[MASTER] 21:04:05.226 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:04:05.227 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
[MASTER] 21:04:05.299 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:04:05.300 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
[MASTER] 21:04:05.378 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:04:05.379 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
[MASTER] 21:04:05.526 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:04:05.527 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
[MASTER] 21:04:05.675 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar2862145731760539613.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Writing tests to file
* Writing JUnit test case 'ConsumerAgent_ESTest' to evosuite-tests
[MASTER] 21:04:05.677 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2862145731760539613.jar
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
* Done!

* Computation finished
