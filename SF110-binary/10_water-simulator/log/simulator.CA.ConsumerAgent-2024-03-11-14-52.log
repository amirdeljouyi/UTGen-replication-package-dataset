* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: simulator.CA.ConsumerAgent
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/10_water-simulator/evosuite-files/evosuite.properties
* Connecting to master process on port 7159
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:52:14.647 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:52:14.651 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:52:14.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:52:14.877 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:52:15.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:52:15.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:52:15.011 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:52:15.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:52:15.013 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:52:15.013 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:52:15.014 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:52:15.015 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:52:15.016 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:52:15.045 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:52:15.047 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class simulator.CA.ConsumerAgent
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 593
* Using seed 1710168731819
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 192 / 593
[Progress:>                             1%] [Cov:====>                              14%][Progress:>                             2%] [Cov:====>                              14%][Progress:>                             3%] [Cov:====>                              14%][Progress:>                             3%] [Cov:====>                              14%][Progress:>                             3%] [Cov:====>                              14%][Progress:=>                            4%] [Cov:====>                              14%][Progress:=>                            4%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:====>                         16%] [Cov:=====>                             15%][Progress:====>                         16%] [Cov:=====>                             15%][Progress:====>                         16%] [Cov:=====>                             15%][Progress:====>                         16%] [Cov:=====>                             15%][Progress:=====>                        17%] [Cov:=====>                             15%][Progress:=====>                        17%] [Cov:=====>                             15%][Progress:=====>                        17%] [Cov:=====>                             15%][Progress:=====>                        17%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:======>                       23%] [Cov:=====>                             16%][Progress:========>                     29%] [Cov:=====>                             16%][Progress:========>                     29%] [Cov:=====>                             16%][Progress:========>                     29%] [Cov:=====>                             16%][Progress:========>                     29%] [Cov:=====>                             16%][Progress:==========>                   34%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  39%] [Cov:=====>                             16%][Progress:===========>                  39%] [Cov:=====>                             16%][Progress:===========>                  39%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:==============>               49%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:================>             55%] [Cov:=====>                             16%][Progress:===================>          65%] [Cov:=====>                             16%][Progress:===================>          66%] [Cov:=====>                             16%][Progress:===================>          66%] [Cov:=====>                             16%][Progress:===================>          66%] [Cov:=====>                             16%][Progress:=====================>        71%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        73%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      78%] [Cov:=====>                             16%][Progress:=======================>      79%] [Cov:=====>                             16%][Progress:=======================>      79%] [Cov:=====>                             16%][Progress:=======================>      79%] [Cov:=====>                             16%][Progress:=======================>      79%] [Cov:=====>                             16%][Progress:=======================>      79%] [Cov:=====>                             16%][Progress:=======================>      79%] [Cov:=====>                             16%][Progress:=======================>      79%] [Cov:=====>                             16%][Progress:========================>     80%] [Cov:=====>                             16%][Progress:=========================>    85%] [Cov:=====>                             16%][Progress:=========================>    85%] [Cov:=====>                             16%][Progress:=========================>    85%] [Cov:=====>                             16%][Progress:=========================>    85%] [Cov:=====>                             16%][Progress:=========================>    85%] [Cov:=====>                             16%][Progress:===========================>  90%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  91%] [Cov:=====>                             16%][Progress:===========================>  92%] [Cov:=====>                             16%][Progress:===========================>  92%] [Cov:=====>                             16%][Progress:===========================>  92%] [Cov:=====>                             16%][Progress:===========================>  92%] [Cov:=====>                             16%][Progress:===========================>  92%] [Cov:=====>                             16%][Progress:===========================>  92%] [Cov:=====>                             16%][Progress:===========================>  92%] [Cov:=====>                             16%][Progress:===========================>  92%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:=============================>98%] [Cov:=====>                             16%][Progress:=============================>98%] [Cov:=====>                             16%][Progress:=============================>98%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:==============================100%] [Cov:=====>                             16%]
* Search finished after 104s and 120 generations, 41576 statements, best individual has fitness: 504.0
* Generated before the refinement 10 tests with total length 38
statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent(arg0, 100)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        GuiEvent guiEvent = new GuiEvent(consumerAgent, "Low");
        consumerAgent.onGuiEvent(guiEvent);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent(consumerAgent, "Low"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
String string = "Low";
GuiEvent guiEvent = new GuiEvent(consumerAgent, (int) string);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage()
statement is: onFailure(Ljade/lang/acl/ACLMessage;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onFailure(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgentForTesting consumerAgent = new ConsumerAgentForTesting();
        OntoACLMessageForTesting ontoACLMessage = new OntoACLMessageForTesting();
        consumerAgent.onFailure(ontoACLMessage);
        // Test the scenario where the consumer agent fails 5 times in a row
        for (int i = 0; i < 5; i++) {
            consumerAgent.onFailure(ontoACLMessage);
        }
        // Test the scenario where the consumer agent succeeds after failing 5 times
        consumerAgent.onSuccess(ontoACLMessage);
        // Test the scenario where the consumer agent fails again after succeeding
        consumerAgent.onFailure(ontoACLMessage);
    }
}
statement is: ConsumerAgentForTesting consumerAgent = new ConsumerAgentForTesting(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessageForTesting ontoACLMessage = new OntoACLMessageForTesting(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onFailure(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onFailure(ontoACLMessage) target is: consumerAgent method is: onFailure(OntoACLMessageForTesting)
statement is: // Test the scenario where the consumer agent fails 5 times in a row
for (int i = 0; i < 5; i++) {
    consumerAgent.onFailure(ontoACLMessage);
}, class spoon.support.reflect.code.CtForImpl
statement is: // Test the scenario where the consumer agent succeeds after failing 5 times
consumerAgent.onSuccess(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test the scenario where the consumer agent succeeds after failing 5 times
consumerAgent.onSuccess(ontoACLMessage) target is: consumerAgent method is: onSuccess(OntoACLMessageForTesting)
statement is: // Test the scenario where the consumer agent fails again after succeeding
consumerAgent.onFailure(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test the scenario where the consumer agent fails again after succeeding
consumerAgent.onFailure(ontoACLMessage) target is: consumerAgent method is: onFailure(OntoACLMessageForTesting)
statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: consumeWater()Lsimulator/ontology/WaterConsumption; type is: class org.evosuite.testcase.statements.MethodStatement return type class simulator.ontology.WaterConsumption
statement code is: WaterConsumption consumeWater = consumerAgent.consumeWater()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.consumeWater();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent(6, 7);
        consumerAgent.consumeWater(2);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(6, 7), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.consumeWater(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.consumeWater(2) target is: consumerAgent method is: consumeWater(int)
statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage(41)
statement is: org.evosuite.testcase.statements.ArrayStatement@bc9f476 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lsimulator.util.ConsumerAttributes;
statement code is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[6]
statement is: simulator.CA.ConsumerAgent$MatchNeighbourhood(Lsimulator/CA/ConsumerAgent;[Lsimulator/util/ConsumerAttributes;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchNeighbourhood
statement code is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = arg0.new MatchNeighbourhood(arg1)
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchNeighbourhood.match(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(41);
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[6];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
consumerAgent_MatchNeighbourhood.match(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        OntoACLMessage ontoACLMessage = new OntoACLMessage("Sent");
        ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes(12345678, "John Doe", 50.0), // has a high income
        new ConsumerAttributes(987654321, "Jane Doe", 30.0), // has a low income
        new ConsumerAttributes(43219876, "Bob Smith", 60.0), // is in a different region than the others
        new ConsumerAttributes(678901234, "Alice Johnson", 50.0), // has a similar income to John Doe
        new ConsumerAttributes(12345678, "John Doe", 50.0)// repeated consumer ID to test duplicate removal
         };
        ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
        consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage("Sent"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes(12345678, "John Doe", 50.0), // has a high income
new ConsumerAttributes(987654321, "Jane Doe", 30.0), // has a low income
new ConsumerAttributes(43219876, "Bob Smith", 60.0), // is in a different region than the others
new ConsumerAttributes(678901234, "Alice Johnson", 50.0), // has a similar income to John Doe
new ConsumerAttributes(12345678, "John Doe", 50.0)// repeated consumer ID to test duplicate removal
 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[6] isAssignment: false Array: new ConsumerAttributes[]{ new ConsumerAttributes(12345678, "John Doe", 50.0), // has a high income
new ConsumerAttributes(987654321, "Jane Doe", 30.0), // has a low income
new ConsumerAttributes(43219876, "Bob Smith", 60.0), // is in a different region than the others
new ConsumerAttributes(678901234, "Alice Johnson", 50.0), // has a similar income to John Doe
new ConsumerAttributes(12345678, "John Doe", 50.0)// repeated consumer ID to test duplicate removal
 } Elements: [new ConsumerAttributes(12345678, "John Doe", 50.0), // has a high income
new ConsumerAttributes(987654321, "Jane Doe", 30.0), // has a low income
new ConsumerAttributes(43219876, "Bob Smith", 60.0), // is in a different region than the others
new ConsumerAttributes(678901234, "Alice Johnson", 50.0), // has a similar income to John Doe
new ConsumerAttributes(12345678, "John Doe", 50.0)// repeated consumer ID to test duplicate removal
]
lengths: [6] []
statement is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent_MatchNeighbourhood.match(ontoACLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent_MatchNeighbourhood.match(ontoACLMessage) target is: consumerAgent_MatchNeighbourhood method is: match(OntoACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
String string = "Sent";
OntoACLMessage ontoACLMessage = new OntoACLMessage((int) string);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: org.evosuite.testcase.statements.ArrayStatement@c190569e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lsimulator.util.ConsumerAttributes;
statement code is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0]
statement is: simulator.CA.ConsumerAgent$MatchNeighbourhood(Lsimulator/CA/ConsumerAgent;[Lsimulator/util/ConsumerAttributes;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchNeighbourhood
statement code is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = arg0.new MatchNeighbourhood(arg1)
statement is: jade.lang.acl.ACLMessage(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.lang.acl.ACLMessage
statement code is: ACLMessage aCLMessage = new ACLMessage((-1864))
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchNeighbourhood.match(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage((-1864));
consumerAgent_MatchNeighbourhood.match(aCLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        // Improved test data: Use more descriptive and representative values for the consumerAttributesArray
        ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes(0, "John", 25), new ConsumerAttributes(1, "Jane", 35) };
        ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
        // Improved test data: Use a more representative value for the ACLMessage
        ACLMessage aCLMessage = new ACLMessage("REQUEST");
        consumerAgent_MatchNeighbourhood.match(aCLMessage);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: Use more descriptive and representative values for the consumerAttributesArray
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[]{ new ConsumerAttributes(0, "John", 25), new ConsumerAttributes(1, "Jane", 35) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0] isAssignment: false Array: new ConsumerAttributes[]{ new ConsumerAttributes(0, "John", 25), new ConsumerAttributes(1, "Jane", 35) } Elements: [new ConsumerAttributes(0, "John", 25), new ConsumerAttributes(1, "Jane", 35)]
lengths: [0] []
statement is: ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: Use a more representative value for the ACLMessage
ACLMessage aCLMessage = new ACLMessage("REQUEST"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent_MatchNeighbourhood.match(aCLMessage), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent_MatchNeighbourhood.match(aCLMessage) target is: consumerAgent_MatchNeighbourhood method is: match(ACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
String string = "REQUEST";
ACLMessage aCLMessage = new ACLMessage((int) string);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent((Object) null, (byte)78)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, (byte)78);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        GuiEvent guiEvent = new GuiEvent("ABC123", ((byte) (78)));
        consumerAgent.onGuiEvent(guiEvent);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent("ABC123", ((byte) (78))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
String string = "ABC123";
int _int = 78;
GuiEvent guiEvent = new GuiEvent(string, _int);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: jade.gui.GuiEvent(Ljava/lang/Object;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.gui.GuiEvent
statement code is: GuiEvent guiEvent = new GuiEvent(arg0, 101)
statement is: addParameter(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: guiEvent.addParameter((Object) null)
statement is: onGuiEvent(Ljade/gui/GuiEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.onGuiEvent(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
Object object = new Object();
GuiEvent guiEvent = new GuiEvent(object, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        Object object = new Object();
        GuiEvent guiEvent = new GuiEvent(object, 101);
        guiEvent.addParameter(((Object) ("Test String")));
        consumerAgent.onGuiEvent(guiEvent);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: GuiEvent guiEvent = new GuiEvent(object, 101), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: guiEvent.addParameter(((Object) ("Test String"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: guiEvent.addParameter(((Object) ("Test String"))) target is: guiEvent method is: addParameter(java.lang.Object)
source statement: jade.gui.GuiEvent(Ljava/lang/Object;I)V callee: VariableReference: Statement 2, type jade.gui.GuiEventindex is: 3
Matched Method is: addParameter(Ljava/lang/Object;)V
statement is: consumerAgent.onGuiEvent(guiEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.onGuiEvent(guiEvent) target is: consumerAgent method is: onGuiEvent(GuiEvent)
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: onGuiEvent(Ljade/gui/GuiEvent;)V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
Object object = new Object();
int _int = 101;
GuiEvent guiEvent = new GuiEvent(object, _int);
String string = "Test String";
((GuiEvent) _int).addParameter(string);
consumerAgent.onGuiEvent(guiEvent);

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: createQueryMsgForNeighbourhood()Ljade/lang/acl/ACLMessage; type is: class org.evosuite.testcase.statements.MethodStatement return type class jade.lang.acl.ACLMessage
statement code is: ACLMessage createQueryMsgForNeighbourhood = consumerAgent.createQueryMsgForNeighbourhood()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
consumerAgent.createQueryMsgForNeighbourhood();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        consumerAgent.createQueryMsgForNeighbourhood(0, 10);
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.createQueryMsgForNeighbourhood(0, 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.createQueryMsgForNeighbourhood(0, 10) target is: consumerAgent method is: createQueryMsgForNeighbourhood(int,int)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: org.evosuite.testcase.statements.ArrayStatement@c456506b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[2]
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: org.evosuite.testcase.statements.AssignmentStatement@91c477d3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Object
statement code is: objectArray[1] = object
statement is: setArguments([Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.setArguments(arg0)
statement is: setup()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: consumerAgent.setup()
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
Object[] objectArray = new Object[2];
Object object = new Object();
objectArray[1] = object;
consumerAgent.setArguments(objectArray);
consumerAgent.setup();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        Object[] objectArray = new Object[2];
        Object object = new Object();
        objectArray[1] = "This is a test String";
        consumerAgent.setArguments(objectArray);
        consumerAgent.setup();
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object[] objectArray = new Object[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: Object[] objectArray = new Object[2] isAssignment: false Array: new Object[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.Object; Object[]
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectArray[1] = "This is a test String", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"This is a test String" Ct is: objectArray[1] = "This is a test String"
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: consumerAgent.setArguments(objectArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.setArguments(objectArray) target is: consumerAgent method is: setArguments(java.lang.Object[])
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: setArguments([Ljava/lang/Object;)V
statement is: consumerAgent.setup(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.setup() target is: consumerAgent method is: setup()
source statement: simulator.CA.ConsumerAgent()V callee: VariableReference: Statement 0, type simulator.CA.ConsumerAgentindex is: 0
Matched Method is: setup()V
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();
Object[] objectArray = new Object[2];
Object object = new Object();
String string = "This is a test String";
objectArray[1] = (Object) string;
consumerAgent.setArguments(objectArray);
consumerAgent.setup();

statement is: simulator.CA.ConsumerAgent()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent
statement code is: ConsumerAgent consumerAgent = new ConsumerAgent()
statement is: jade.content.OntoACLMessage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class jade.content.OntoACLMessage
statement code is: OntoACLMessage ontoACLMessage = new OntoACLMessage()
statement is: simulator.CA.ConsumerAgent$MatchRequestContent(Lsimulator/CA/ConsumerAgent;Ljade/content/AgentAction;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class simulator.CA.ConsumerAgent$MatchRequestContent
statement code is: ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = arg0.new MatchRequestContent(arg1)
statement is: match(Ljade/lang/acl/ACLMessage;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean match = consumerAgent_MatchRequestContent.match(arg0)
test data is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ConsumerAgent consumerAgent = new ConsumerAgent();
        OntoACLMessage ontoACLMessage = new OntoACLMessage("message1234", "This is a sample message.");
        consumerAgent.new MatchRequestContent(ontoACLMessage).match(new OntoACLMessage("Hello", "World"));
    }
}
statement is: ConsumerAgent consumerAgent = new ConsumerAgent(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: OntoACLMessage ontoACLMessage = new OntoACLMessage("message1234", "This is a sample message."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: consumerAgent.new MatchRequestContent(ontoACLMessage).match(new OntoACLMessage("Hello", "World")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: consumerAgent.new MatchRequestContent(ontoACLMessage).match(new OntoACLMessage("Hello", "World")) target is: consumerAgent.new MatchRequestContent(ontoACLMessage) method is: match(OntoACLMessage)
TestCase is: ConsumerAgent consumerAgent = new ConsumerAgent();

* test suite isTestSuite: 18
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(41);
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[6];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage((-1864));
consumerAgent_MatchNeighbourhood.match(aCLMessage);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, (byte)78);
consumerAgent.onGuiEvent(guiEvent);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object object = new Object();
GuiEvent guiEvent = new GuiEvent(object, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object[] objectArray = new Object[2];
Object object = new Object();
objectArray[1] = object;
consumerAgent.setArguments(objectArray);
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 2
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);
Test 10: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, (int) "Low");
consumerAgent.onGuiEvent(guiEvent);

Test 11: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage((int) "Sent");

Test 12: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ACLMessage aCLMessage = new ACLMessage((int) "REQUEST");

Test 13: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent("ABC123", 78);
consumerAgent.onGuiEvent(guiEvent);

Test 14: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object object = new Object();
GuiEvent guiEvent = new GuiEvent(object, 101);
((GuiEvent)101).addParameter("Test String");
consumerAgent.onGuiEvent(guiEvent);

Test 15: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 16: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object[] objectArray = new Object[2];
Object object = new Object();
objectArray[1] = (Object) "This is a test String";
consumerAgent.setArguments(objectArray);
consumerAgent.setup();

Test 17: 
ConsumerAgent consumerAgent = new ConsumerAgent();


* Generated after the refinement and before minimization 18 tests with total length 61
* test suite isTestSuite: 18
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(41);
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[6];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage((-1864));
consumerAgent_MatchNeighbourhood.match(aCLMessage);
Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent((Object) null, (byte)78);
consumerAgent.onGuiEvent(guiEvent);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object object = new Object();
GuiEvent guiEvent = new GuiEvent(object, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object[] objectArray = new Object[2];
Object object = new Object();
objectArray[1] = object;
consumerAgent.setArguments(objectArray);
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 2
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);
Test 10: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, (int) "Low");
consumerAgent.onGuiEvent(guiEvent);

Test 11: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage((int) "Sent");

Test 12: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ACLMessage aCLMessage = new ACLMessage((int) "REQUEST");

Test 13: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent("ABC123", 78);
consumerAgent.onGuiEvent(guiEvent);

Test 14: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object object = new Object();
GuiEvent guiEvent = new GuiEvent(object, 101);
((GuiEvent)101).addParameter("Test String");
consumerAgent.onGuiEvent(guiEvent);

Test 15: 
ConsumerAgent consumerAgent = new ConsumerAgent();

Test 16: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object[] objectArray = new Object[2];
Object object = new Object();
objectArray[1] = (Object) "This is a test String";
consumerAgent.setArguments(objectArray);
consumerAgent.setup();

Test 17: 
ConsumerAgent consumerAgent = new ConsumerAgent();


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
ConsumerAgent consumerAgent = new ConsumerAgent();
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[0];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
ACLMessage aCLMessage = new ACLMessage((-1864));
consumerAgent_MatchNeighbourhood.match(aCLMessage);
Test 1: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent(consumerAgent, 100);
// Undeclared exception!
try { 
  consumerAgent.onGuiEvent(guiEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 2: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
consumerAgent.onFailure(ontoACLMessage);
Test 3: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}

Test 4: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage(41);
ConsumerAttributes[] consumerAttributesArray = new ConsumerAttributes[6];
ConsumerAgent.MatchNeighbourhood consumerAgent_MatchNeighbourhood = consumerAgent.new MatchNeighbourhood(consumerAttributesArray);
// Undeclared exception!
try { 
  consumerAgent_MatchNeighbourhood.match(ontoACLMessage);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent$MatchNeighbourhood", e);
}

Test 5: 
ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage ontoACLMessage = new OntoACLMessage();
ConsumerAgent.MatchRequestContent consumerAgent_MatchRequestContent = consumerAgent.new MatchRequestContent(ontoACLMessage);
consumerAgent_MatchRequestContent.match(ontoACLMessage);
Test 6: 
ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent guiEvent = new GuiEvent("ABC123", 78);
consumerAgent.onGuiEvent(guiEvent);
Test 7: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object object = new Object();
GuiEvent guiEvent = new GuiEvent(object, 101);
guiEvent.addParameter((Object) null);
consumerAgent.onGuiEvent(guiEvent);
Test 8: 
ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}

Test 9: 
ConsumerAgent consumerAgent = new ConsumerAgent();
Object[] objectArray = new Object[2];
objectArray[1] = (Object) "This is a test String";
consumerAgent.setArguments(objectArray);
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 2
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 18%
* Total number of goals: 301
* Number of covered goals: 54
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 8
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Generated 10 tests with total length 37
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
OntoACLMessage arg0 = new OntoACLMessage();
consumerAgent.onFailure(arg0);
assertEquals(12, ACLMessage.QUERY_IF);


** It was a parseable test case! 
refined test name is: testOnFailureUpdatesStateWhenMessageFails
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.consumeWater();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("jade.content.ContentManager", e);
}


** It was a parseable test case! 
refined test name is: testConsumeWaterThrowsNPEWithNoWater
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
GuiEvent arg0 = new GuiEvent("ABC123", 78);
consumerAgent.onGuiEvent(arg0);
assertEquals(5, Agent.AP_WAITING);


** It was a parseable test case! 
refined test name is: testOnGuiEventWithValidId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
// Undeclared exception!
try { 
  consumerAgent.createQueryMsgForNeighbourhood();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


** It was a parseable test case! 
refined test name is: testCreateQueryMsgForNeighbourhoodThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ConsumerAgent consumerAgent = new ConsumerAgent();
Object[] arg0 = new Object[2];
arg0[1] = (Object) "This is a test String";
consumerAgent.setArguments(arg0);
// Undeclared exception!
try { 
  consumerAgent.setup();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 2
   //
   verifyException("simulator.CA.ConsumerAgent", e);
}


** It was a parseable test case! 
refined test name is: testSetupshouldThrowExceptionWhenArgumentIsInvalid
* Compiling Tests
refined test name is: testSetupWithArgumentsThrowsException
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:58:52.165 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:58:52.187 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:58:52.239 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:58:52.240 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
[MASTER] 14:58:52.296 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:58:52.296 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:58:52.367 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:58:52.368 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:58:52.427 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:58:52.428 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
[MASTER] 14:58:52.532 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:58:52.533 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:58:52.627 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:58:52.628 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
[MASTER] 14:58:52.783 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 1
Test 0: 
ConsumerAgent consumerAgent = null;
try {
  consumerAgent = new ConsumerAgent();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
* test suite isTestSuite: 1
Test 0: 
ConsumerAgent consumerAgent = null;
try {
  consumerAgent = new ConsumerAgent();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


[MASTER] 14:58:57.814 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 1%
* Total number of goals: 137
* Number of covered goals: 1
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 1%
* Total number of goals: 301
* Number of covered goals: 2
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 8
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 10%
* Total number of goals: 10
* Number of covered goals: 1
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 1%
* Total number of goals: 137
* Number of covered goals: 1
* Generated 1 tests with total length 1
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:58:57.851 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 14:58:58.502 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:58:58.614 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:58:58.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:58:58.659 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6501384922596766315.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:58:58.659 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6501384922596766315.jar
* Writing tests to file
[MASTER] 14:58:58.660 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ConsumerAgent_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Writing JUnit test case 'ConsumerAgent_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Done!

* Computation finished
