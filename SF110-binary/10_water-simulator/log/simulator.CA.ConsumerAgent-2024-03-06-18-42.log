* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: simulator.CA.ConsumerAgent
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/10_water-simulator/evosuite-files/evosuite.properties
* Connecting to master process on port 9203
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:42:29.553 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:42:29.556 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:42:29.557 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:42:29.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:42:29.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:42:29.805 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:42:29.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:42:29.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:42:29.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:42:29.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:42:29.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:42:29.808 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:42:29.809 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:42:29.826 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:42:29.826 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class simulator.CA.ConsumerAgent
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 593
* Using seed 1709750547998
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 192 / 593
[Progress:>                             0%] [Cov:====>                              14%][MASTER] 18:42:30.897 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:>                             1%] [Cov:====>                              14%][Progress:>                             1%] [Cov:====>                              14%][Progress:>                             1%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:====>                              14%][Progress:==>                           7%] [Cov:=====>                             15%][Progress:===>                          12%] [Cov:=====>                             15%][Progress:===>                          12%] [Cov:=====>                             15%][Progress:===>                          12%] [Cov:=====>                             15%][Progress:===>                          12%] [Cov:=====>                             15%][Progress:===>                          12%] [Cov:=====>                             15%][Progress:===>                          12%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:=====>                        19%] [Cov:=====>                             15%][Progress:=====>                        19%] [Cov:=====>                             15%][Progress:=====>                        19%] [Cov:=====>                             15%][Progress:=====>                        19%] [Cov:=====>                             15%][Progress:=====>                        19%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:==========>                   36%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             15%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  37%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  39%] [Cov:=====>                             16%][Progress:===========>                  39%] [Cov:=====>                             16%][Progress:===========>                  39%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                44%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              50%] [Cov:=====>                             16%][Progress:===============>              51%] [Cov:=====>                             16%][Progress:===============>              51%] [Cov:=====>                             16%][Progress:================>             56%] [Cov:=====>                             16%][Progress:================>             56%] [Cov:=====>                             16%][Progress:================>             56%] [Cov:=====>                             16%][Progress:==================>           61%] [Cov:=====>                             16%][Progress:===================>          66%] [Cov:=====>                             16%][Progress:===================>          66%] [Cov:=====>                             16%][Progress:===================>          66%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=====================>        72%] [Cov:=====>                             16%][Progress:=======================>      77%] [Cov:=====>                             16%][Progress:========================>     82%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   87%] [Cov:=====>                             16%][Progress:==========================>   88%] [Cov:=====>                             16%][Progress:==========================>   88%] [Cov:=====>                             16%][Progress:==========================>   88%] [Cov:=====>                             16%][Progress:==========================>   88%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:===========================>  93%] [Cov:=====>                             16%][Progress:=============================>98%] [Cov:=====>                             16%][Progress:=============================>98%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:=============================>99%] [Cov:=====>                             16%][Progress:==============================100%] [Cov:=====>                             16%]
* Search finished after 105s and 125 generations, 44640 statements, best individual has fitness: 507.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 17%
* Total number of goals: 301
* Number of covered goals: 51
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 8
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 12%
* Total number of goals: 137
* Number of covered goals: 17
* Generated 10 tests with total length 35
* Resulting test suite's coverage: 16% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.security.SecurityPermission: 
         createAccessControlContext: 1
* Writing tests to file
* Writing JUnit test case 'ConsumerAgent_ESTest' to evosuite-tests
* Done!

* Computation finished
