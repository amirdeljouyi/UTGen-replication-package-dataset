* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: org.templateit.WorkbookParser
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/5_templateit/evosuite-files/evosuite.properties
* Connecting to master process on port 19063
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:09:51.548 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:09:51.549 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:09:51.705 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:09:51.803 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:09:52.108 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:09:52.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:09:52.113 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:09:52.116 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:09:52.117 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:09:52.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:09:52.118 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:09:52.120 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:09:52.121 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:09:52.358 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 10:09:52.589 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:09:52.590 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:09:52.600 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.templateit.WorkbookParser
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 192
* Using seed 1709806190058
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 30 / 192
[Progress:>                             0%] [Cov:===============>                   44%][Progress:=>                            5%] [Cov:===============>                   44%][Progress:===>                          11%] [Cov:===============>                   44%][Progress:===>                          11%] [Cov:===============>                   45%][Progress:===>                          11%] [Cov:===============>                   45%][Progress:===>                          11%] [Cov:===============>                   45%][Progress:===>                          11%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:========>                     28%] [Cov:===============>                   45%][Progress:=========>                    33%] [Cov:===============>                   45%][Progress:=========>                    33%] [Cov:================>                  46%][Progress:=========>                    33%] [Cov:================>                  46%][Progress:=========>                    33%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:==========>                   34%] [Cov:================>                  46%][Progress:===========>                  39%] [Cov:================>                  46%][Progress:===========>                  39%] [Cov:================>                  46%][Progress:=============>                44%] [Cov:================>                  46%][Progress:===============>              50%] [Cov:================>                  46%][Progress:===============>              50%] [Cov:================>                  46%][Progress:===============>              50%] [Cov:================>                  46%][Progress:===============>              50%] [Cov:================>                  46%][Progress:==================>           60%] [Cov:================>                  46%][Progress:==================>           60%] [Cov:================>                  46%][Progress:==================>           60%] [Cov:================>                  46%][Progress:==================>           60%] [Cov:================>                  46%][Progress:==================>           60%] [Cov:================>                  46%][Progress:===================>          65%] [Cov:================>                  46%][Progress:===================>          65%] [Cov:================>                  46%][Progress:=====================>        70%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        71%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        72%] [Cov:================>                  46%][Progress:=====================>        73%] [Cov:================>                  46%][Progress:=======================>      78%] [Cov:================>                  46%][Progress:=======================>      78%] [Cov:================>                  46%][Progress:=======================>      78%] [Cov:================>                  46%][Progress:=======================>      78%] [Cov:================>                  46%][Progress:=======================>      78%] [Cov:================>                  46%][Progress:=======================>      78%] [Cov:================>                  46%][Progress:========================>     83%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:================>                  46%][Progress:==========================>   88%] [Cov:================>                  46%][Progress:===========================>  93%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][MASTER] 10:11:27.475 [logback-1] WARN  TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:============================> 94%] [Cov:================>                  46%][Progress:=============================>99%] [Cov:================>                  46%][Progress:=============================>99%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%][Progress:==============================100%] [Cov:================>                  46%]
* Search finished after 106s and 122 generations, 40853 statements, best individual has fitness: 135.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 54
* Number of covered goals: 14
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 31%
* Total number of goals: 77
* Number of covered goals: 24
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 26%
* Total number of goals: 54
* Number of covered goals: 14
* Generated 4 tests with total length 19
* Resulting test suite's coverage: 47% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'WorkbookParser_ESTest' to evosuite-tests
* Done!

* Computation finished
