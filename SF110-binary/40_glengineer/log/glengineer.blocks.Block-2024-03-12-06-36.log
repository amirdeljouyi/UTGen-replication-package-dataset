* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: glengineer.blocks.Block
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/40_glengineer/evosuite-files/evosuite.properties
* Connecting to master process on port 10356
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 06:36:16.237 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 06:36:16.240 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 06:36:16.263 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 06:36:16.270 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class glengineer.blocks.Block
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 125
* Using seed 1710225374667
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 68 / 125
[Progress:>                             0%] [Cov:====>                              12%][Progress:>                             0%] [Cov:====>                              12%][Progress:>                             0%] [Cov:====>                              13%][Progress:>                             0%] [Cov:=====>                             15%][Progress:>                             0%] [Cov:=====>                             17%][Progress:>                             0%] [Cov:======>                            18%][Progress:>                             1%] [Cov:=======>                           20%][Progress:>                             1%] [Cov:===========>                       33%][Progress:>                             1%] [Cov:=============>                     38%][Progress:>                             1%] [Cov:==============>                    42%][Progress:>                             1%] [Cov:===================>               56%][Progress:>                             1%] [Cov:====================>              58%][Progress:>                             1%] [Cov:====================>              58%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:=====================>             61%][Progress:>                             1%] [Cov:======================>            64%][Progress:>                             1%] [Cov:======================>            64%][Progress:>                             1%] [Cov:======================>            64%][Progress:>                             2%] [Cov:======================>            64%][Progress:>                             2%] [Cov:======================>            64%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=========================>         73%][Progress:>                             2%] [Cov:=========================>         73%][Progress:>                             2%] [Cov:=========================>         73%][Progress:>                             2%] [Cov:=========================>         74%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:>                             3%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       78%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%]
* Search finished after 201s and 3153 generations, 893705 statements, best individual has fitness: 19.0
* Generated before the refinement 25 tests with total length 115
statement is: org.evosuite.testcase.statements.ArrayStatement@da321a30 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@47497a7d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: extractSequentialSubblocks()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<glengineer.blocks.Block>
statement code is: List<Block> extractSequentialSubblocks = verticalBlock.extractSequentialSubblocks()
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "ABC";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.extractSequentialSubblocks();
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "ABC", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"ABC" Ct is: stringArray[0] = "ABC"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.extractSequentialSubblocks(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.extractSequentialSubblocks() target is: verticalBlock method is: extractSequentialSubblocks()
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: extractSequentialSubblocks()Ljava/util/List;
TestCase is: String[] stringArray = new String[1];
String string = "ABC";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractSequentialSubblocks();

statement is: org.evosuite.testcase.statements.ArrayStatement@cecb0605 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@82c7774 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: textAt(III)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String textAt = verticalBlock.textAt(1, 2, 0)
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(1, 2, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "Z9";// Changed the value to a more descriptive one that better represents the situation being tested.

        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.textAt(1, 2, 0);
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Z9"// Changed the value to a more descriptive one that better represents the situation being tested.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Z9" Ct is: stringArray[0] = "Z9"// Changed the value to a more descriptive one that better represents the situation being tested.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.textAt(1, 2, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.textAt(1, 2, 0) target is: verticalBlock method is: textAt(int,int,int)
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: textAt(III)Ljava/lang/String;
TestCase is: String[] stringArray = new String[1];
String string = "Z9";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 1;
int _int = 2;
int _int = 0;
scheme.textAt(_int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@74350ee7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d0136eac type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: getUpperLine()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String upperLine = verticalBlock.getUpperLine()
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.getUpperLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "ABC";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.getUpperLine();
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "ABC", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"ABC" Ct is: stringArray[0] = "ABC"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.getUpperLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.getUpperLine() target is: verticalBlock method is: getUpperLine()
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: getUpperLine()Ljava/lang/String;
TestCase is: String[] stringArray = new String[1];
String string = "ABC";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).getUpperLine();

statement is: glengineer.positions.CharPosition1(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.positions.CharPosition1
statement code is: CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803))
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;Lglengineer/positions/CharPosition;Lglengineer/positions/CharPosition;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock((Scheme) null, arg2, arg2)
test data is: CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = new VerticalBlock((Scheme) null, charPosition1_, charPosition1_);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharPosition1 charPosition1_ = new CharPosition1(-2803, -2803);
        VerticalBlock verticalBlock = new VerticalBlock("East" = "West", charPosition1_, charPosition1_);
    }
}
statement is: CharPosition1 charPosition1_ = new CharPosition1(-2803, -2803), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock("East" = "West", charPosition1_, charPosition1_), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = new VerticalBlock((Scheme) charPosition1_, charPosition1_, charPosition1_);

statement is: glengineer.blocks.HorizontalBlock(Lglengineer/blocks/Scheme;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.HorizontalBlock
statement code is: HorizontalBlock horizontalBlock = new HorizontalBlock((Scheme) null, 1785, (-4912), (-4912), 1785)
test data is: HorizontalBlock horizontalBlock = new HorizontalBlock((Scheme) null, 1785, (-4912), (-4912), 1785);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HorizontalBlock horizontalBlock = new HorizontalBlock(Scheme.NONE, -4912, -4912, 1785, 1785);
    }
}
statement is: HorizontalBlock horizontalBlock = new HorizontalBlock(Scheme.NONE, -4912, -4912, 1785, 1785), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: int _int = 1785;
int _int = 1785;
HorizontalBlock horizontalBlock = new HorizontalBlock((Scheme) _int, _int, (-4912), (-4912), 1785);

statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock((Scheme) null, 2480, 2480, 2, 2)
test data is: VerticalBlock verticalBlock = new VerticalBlock((Scheme) null, 2480, 2480, 2, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VerticalBlock verticalBlock = new VerticalBlock(new Scheme("Dark", Color.BLACK), 1280, 720, 3, 4);
    }
}
statement is: VerticalBlock verticalBlock = new VerticalBlock(new Scheme("Dark", Color.BLACK), 1280, 720, 3, 4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: int _int = 1280;
int _int = 720;
int _int = 3;
int _int = 4;
VerticalBlock verticalBlock = new VerticalBlock((Scheme) _int, _int, _int, _int, 2);

statement is: org.evosuite.testcase.statements.ArrayStatement@8e7a1718 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4c5cab63 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "."
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: glengineer.blocks.HorizontalBlock(Lglengineer/blocks/Block;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.HorizontalBlock
statement code is: HorizontalBlock horizontalBlock = new HorizontalBlock(arg0, 1, 1, 1, 0)
test data is: String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
HorizontalBlock horizontalBlock = new HorizontalBlock(verticalBlock, 1, 1, 1, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "A";
        stringArray[1] = "B";
        stringArray[2] = "C";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        HorizontalBlock horizontalBlock = new HorizontalBlock(verticalBlock, 0, 0, 1, 0);
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[3] Elements: []
lengths: [1] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "A", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A" Ct is: stringArray[0] = "A"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"B" Ct is: stringArray[1] = "B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "C", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C" Ct is: stringArray[2] = "C"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HorizontalBlock horizontalBlock = new HorizontalBlock(verticalBlock, 0, 0, 1, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String[] stringArray = new String[1];
String string = "A";
stringArray[0] = string;
String string = "B";
stringArray[0] = string;
String string = "C";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 0;
int _int = 0;
int _int = 1;
int _int = 0;
HorizontalBlock horizontalBlock = new HorizontalBlock(verticalBlock, _int, _int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@8194c5b0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@aa89f05f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0, 0, 1, 1, 1)
test data is: String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "This is a test string.";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 1);
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "This is a test string.", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This is a test string." Ct is: stringArray[0] = "This is a test string."
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String[] stringArray = new String[1];
String string = "This is a test string.";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
int _int = 0;
int _int = 1;
int _int = 1;
int _int = 1;
VerticalBlock verticalBlock = new VerticalBlock(scheme, _int, _int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@d72f0169 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7950491c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0, 0, 1, 1, 2)
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "VALID_PIN";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "VALID_PIN", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"VALID_PIN" Ct is: stringArray[0] = "VALID_PIN"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String[] stringArray = new String[1];
String string = "VALID_PIN";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
int _int = 0;
int _int = 1;
int _int = 1;
int _int = 2;
VerticalBlock verticalBlock = new VerticalBlock(scheme, _int, _int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@7487e890 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c7279c7c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: containsOnlyOneWord()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean containsOnlyOneWord = verticalBlock.containsOnlyOneWord()
test data is: String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "Hello World";// Changed the primitive value from "Z" to a more descriptive and representative String

        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.containsOnlyOneWord();
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello World"// Changed the primitive value from "Z" to a more descriptive and representative String
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello World" Ct is: stringArray[0] = "Hello World"// Changed the primitive value from "Z" to a more descriptive and representative String

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.containsOnlyOneWord(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.containsOnlyOneWord() target is: verticalBlock method is: containsOnlyOneWord()
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: containsOnlyOneWord()Z
TestCase is: String[] stringArray = new String[1];
String string = "Hello World";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).containsOnlyOneWord();

statement is: org.evosuite.testcase.statements.ArrayStatement@d3cf5f45 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e8988e85 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0, 1, 0, 2, 0)
statement is: containsOnlyOneWord()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean containsOnlyOneWord = verticalBlock.containsOnlyOneWord()
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);
verticalBlock.containsOnlyOneWord();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "9Z";
        stringArray[1] = "JKL";
        stringArray[2] = "QRS";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);
        assertTrue(verticalBlock.containsOnlyOneWord());
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[3] Elements: []
lengths: [1] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "9Z", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"9Z" Ct is: stringArray[0] = "9Z"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "JKL", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"JKL" Ct is: stringArray[1] = "JKL"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "QRS", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"QRS" Ct is: stringArray[2] = "QRS"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertTrue(verticalBlock.containsOnlyOneWord()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(verticalBlock.containsOnlyOneWord()) target is:  method is: assertTrue(<unknown>)
TestCase is: String[] stringArray = new String[1];
String string = "9Z";
stringArray[0] = string;
String string = "JKL";
stringArray[0] = string;
String string = "QRS";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
int _int = 1;
int _int = 0;
int _int = 2;
int _int = 0;
VerticalBlock verticalBlock = new VerticalBlock(scheme, _int, _int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@1b4ec95f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@97c12094 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@17b0f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = ""
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.HorizontalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.HorizontalBlock
statement code is: HorizontalBlock horizontalBlock = new HorizontalBlock(arg0)
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = horizontalBlock.toString()
test data is: String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.toString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "Hello";
        stringArray[1] = "World";
        Scheme scheme = new Scheme(stringArray);
        HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
        horizontalBlock.toString();
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World" Ct is: stringArray[1] = "World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HorizontalBlock horizontalBlock = new HorizontalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: horizontalBlock.toString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: horizontalBlock.toString() target is: horizontalBlock method is: toString()
source statement: glengineer.blocks.HorizontalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 4, type glengineer.blocks.HorizontalBlockindex is: 6
Matched Method is: toString()Ljava/lang/String;
TestCase is: String[] stringArray = new String[2];
String string = "Hello";
stringArray[0] = string;
String string = "World";
stringArray[1] = string;
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
stringArray[1].toString();

statement is: org.evosuite.testcase.statements.ArrayStatement@7d97f64d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5668b779 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: charAt(II)C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char charAt = verticalBlock.charAt(1, 0)
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(1, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "abcdefghij";
        stringArray[1] = "9Z";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.charAt(1, 0);
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[2] Elements: []
lengths: [1] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "abcdefghij", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"abcdefghij" Ct is: stringArray[0] = "abcdefghij"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "9Z", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"9Z" Ct is: stringArray[1] = "9Z"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.charAt(1, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.charAt(1, 0) target is: verticalBlock method is: charAt(int,int)
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 6
Matched Method is: charAt(II)C
TestCase is: String[] stringArray = new String[1];
String string = "abcdefghij";
stringArray[0] = string;
String string = "9Z";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 1;
int _int = 0;
((Block) string).charAt(_int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@2eaf2377 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@41ae730a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: charAt(II)C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char charAt = verticalBlock.charAt(0, 0)
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // simple characters
        // unicode characters
        // escaped characters
        // emojis
    }
}
statement is: // simple characters, class spoon.support.reflect.code.CtCommentImpl
statement is: // unicode characters, class spoon.support.reflect.code.CtCommentImpl
statement is: // escaped characters, class spoon.support.reflect.code.CtCommentImpl
statement is: // emojis, class spoon.support.reflect.code.CtCommentImpl
statement is: org.evosuite.testcase.statements.ArrayStatement@9b6abeb6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@53e0235d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "."
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: charAt(II)C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char charAt = verticalBlock.charAt(0, 0)
test data is: String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "Hello";
        stringArray[1] = "World!";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.charAt(0, 0);
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[2] Elements: []
lengths: [1] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World!", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World!" Ct is: stringArray[1] = "World!"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.charAt(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.charAt(0, 0) target is: verticalBlock method is: charAt(int,int)
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 6
Matched Method is: charAt(II)C
TestCase is: String[] stringArray = new String[1];
String string = "Hello";
stringArray[0] = string;
String string = "World!";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 0;
int _int = 0;
((Block) string).charAt(_int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@5e6d9474 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c2871090 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "A Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: containsOnlyOneWord()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean containsOnlyOneWord = verticalBlock.containsOnlyOneWord()
test data is: String[] stringArray = new String[1];
stringArray[0] = "A Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "This is a sample sentence";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.containsOnlyOneWord();
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "This is a sample sentence", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This is a sample sentence" Ct is: stringArray[0] = "This is a sample sentence"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.containsOnlyOneWord(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.containsOnlyOneWord() target is: verticalBlock method is: containsOnlyOneWord()
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: containsOnlyOneWord()Z
TestCase is: String[] stringArray = new String[1];
String string = "This is a sample sentence";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).containsOnlyOneWord();

statement is: org.evosuite.testcase.statements.ArrayStatement@59d5f7a1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e79f00da type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: extractParallelSubblocks()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<glengineer.blocks.Block>
statement code is: List<Block> extractParallelSubblocks = verticalBlock.extractParallelSubblocks()
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "9Z";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.extractParallelSubblocks();
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "9Z", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"9Z" Ct is: stringArray[0] = "9Z"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.extractParallelSubblocks(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.extractParallelSubblocks() target is: verticalBlock method is: extractParallelSubblocks()
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: extractParallelSubblocks()Ljava/util/List;
TestCase is: String[] stringArray = new String[1];
String string = "9Z";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractParallelSubblocks();

statement is: org.evosuite.testcase.statements.ArrayStatement@348b00bd type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5c4f170b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@155ef256 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = ""
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: extractParallelSubblocks()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<glengineer.blocks.Block>
statement code is: List<Block> extractParallelSubblocks = verticalBlock.extractParallelSubblocks()
test data is: String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "The quick brown fox jumps over the lazy dog.";
        stringArray[1] = "The lazy dog sleeps all day.";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.extractParallelSubblocks();
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "The quick brown fox jumps over the lazy dog.", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"The quick brown fox jumps over the lazy dog." Ct is: stringArray[0] = "The quick brown fox jumps over the lazy dog."
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "The lazy dog sleeps all day.", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"The lazy dog sleeps all day." Ct is: stringArray[1] = "The lazy dog sleeps all day."
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.extractParallelSubblocks(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.extractParallelSubblocks() target is: verticalBlock method is: extractParallelSubblocks()
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 4, type glengineer.blocks.VerticalBlockindex is: 6
Matched Method is: extractParallelSubblocks()Ljava/util/List;
TestCase is: String[] stringArray = new String[2];
String string = "The quick brown fox jumps over the lazy dog.";
stringArray[0] = string;
String string = "The lazy dog sleeps all day.";
stringArray[1] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) stringArray[1]).extractParallelSubblocks();

statement is: org.evosuite.testcase.statements.ArrayStatement@3c067321 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e2a89fff type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: extractSequentialSubblocks()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<glengineer.blocks.Block>
statement code is: List<Block> extractSequentialSubblocks = verticalBlock.extractSequentialSubblocks()
test data is: String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "Hello, World!";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.extractSequentialSubblocks();
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello, World!", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello, World!" Ct is: stringArray[0] = "Hello, World!"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.extractSequentialSubblocks(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.extractSequentialSubblocks() target is: verticalBlock method is: extractSequentialSubblocks()
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: extractSequentialSubblocks()Ljava/util/List;
TestCase is: String[] stringArray = new String[1];
String string = "Hello, World!";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractSequentialSubblocks();

statement is: org.evosuite.testcase.statements.ArrayStatement@8bcd3552 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f253176e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@692ba219 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = ""
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.HorizontalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.HorizontalBlock
statement code is: HorizontalBlock horizontalBlock = new HorizontalBlock(arg0)
statement is: getUpperLine()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String upperLine = horizontalBlock.getUpperLine()
test data is: String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.getUpperLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "hello";
        stringArray[1] = "world";
        Scheme scheme = new Scheme(stringArray);
        HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
        horizontalBlock.getUpperLine();
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"hello" Ct is: stringArray[0] = "hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "world", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"world" Ct is: stringArray[1] = "world"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HorizontalBlock horizontalBlock = new HorizontalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: horizontalBlock.getUpperLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: horizontalBlock.getUpperLine() target is: horizontalBlock method is: getUpperLine()
source statement: glengineer.blocks.HorizontalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 4, type glengineer.blocks.HorizontalBlockindex is: 6
Matched Method is: getUpperLine()Ljava/lang/String;
TestCase is: String[] stringArray = new String[2];
String string = "hello";
stringArray[0] = string;
String string = "world";
stringArray[1] = string;
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
((Block) stringArray[1]).getUpperLine();

statement is: org.evosuite.testcase.statements.ArrayStatement@7651c1b1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@bf19be2e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: subblock(IIII)Lglengineer/blocks/Block; type is: class org.evosuite.testcase.statements.MethodStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock subblock = (VerticalBlock)verticalBlock.subblock(0, 0, 2, 1)
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(0, 0, 2, 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "9Z";
        stringArray[1] = "AB";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.subblock(0, 0, 2, 1);
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[2] Elements: []
lengths: [1] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "9Z", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"9Z" Ct is: stringArray[0] = "9Z"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "AB", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"AB" Ct is: stringArray[1] = "AB"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.subblock(0, 0, 2, 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.subblock(0, 0, 2, 1) target is: verticalBlock method is: subblock(int,int,int,int)
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 6
Matched Method is: subblock(IIII)Lglengineer/blocks/Block;
TestCase is: String[] stringArray = new String[1];
String string = "9Z";
stringArray[0] = string;
String string = "AB";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 0;
int _int = 0;
int _int = 2;
int _int = 1;
((Block) string).subblock(_int, _int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@d66a54e9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ca75556d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: subblock(IIII)Lglengineer/blocks/Block; type is: class org.evosuite.testcase.statements.MethodStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock subblock = (VerticalBlock)verticalBlock.subblock(1, 0, 1, 0)
test data is: String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(1, 0, 1, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "ABC";
        stringArray[1] = "XYZ";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.subblock(1, 0, 1, 0);
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[2] Elements: []
lengths: [1] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "ABC", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"ABC" Ct is: stringArray[0] = "ABC"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "XYZ", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"XYZ" Ct is: stringArray[1] = "XYZ"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.subblock(1, 0, 1, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.subblock(1, 0, 1, 0) target is: verticalBlock method is: subblock(int,int,int,int)
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 6
Matched Method is: subblock(IIII)Lglengineer/blocks/Block;
TestCase is: String[] stringArray = new String[1];
String string = "ABC";
stringArray[0] = string;
String string = "XYZ";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 1;
int _int = 0;
int _int = 1;
int _int = 0;
((Block) string).subblock(_int, _int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@cbd983de type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f9468283 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: textAt(III)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String textAt = verticalBlock.textAt(0, 0, 0)
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(0, 0, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "ABC";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.textAt(0, 0, 0);
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "ABC", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"ABC" Ct is: stringArray[0] = "ABC"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.textAt(0, 0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.textAt(0, 0, 0) target is: verticalBlock method is: textAt(int,int,int)
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: textAt(III)Ljava/lang/String;
TestCase is: String[] stringArray = new String[1];
String string = "ABC";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 0;
int _int = 0;
int _int = 0;
scheme.textAt(_int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@192f0923 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@bb75bb6a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: charAt(II)C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char charAt = verticalBlock.charAt((-1), 1)
test data is: String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt((-1), 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Hello World" };
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.charAt(-1, 1);
    }
}
statement is: String[] stringArray = new String[]{ "Hello World" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[]{ "Hello World" } Elements: ["Hello World"]
lengths: [1] []
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: glengineer.blocks.Scheme([Ljava/lang/String;)V
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V
statement is: verticalBlock.charAt(-1, 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.charAt(-1, 1) target is: verticalBlock method is: charAt(int,int)
statement is: org.evosuite.testcase.statements.ArrayStatement@d5e70ff5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7a7beee1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "9Z"
statement is: glengineer.blocks.Scheme([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.Scheme
statement code is: Scheme scheme = new Scheme(arg0)
statement is: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class glengineer.blocks.VerticalBlock
statement code is: VerticalBlock verticalBlock = new VerticalBlock(arg0)
statement is: textAt(III)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String textAt = verticalBlock.textAt((-3148), 662, 0)
test data is: String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt((-3148), 662, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "ABC123";
        Scheme scheme = new Scheme(stringArray);
        VerticalBlock verticalBlock = new VerticalBlock(scheme);
        verticalBlock.textAt(-100, 50, 0);
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "ABC123", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"ABC123" Ct is: stringArray[0] = "ABC123"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Scheme scheme = new Scheme(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VerticalBlock verticalBlock = new VerticalBlock(scheme), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: verticalBlock.textAt(-100, 50, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: verticalBlock.textAt(-100, 50, 0) target is: verticalBlock method is: textAt(int,int,int)
source statement: glengineer.blocks.VerticalBlock(Lglengineer/blocks/Scheme;)V callee: VariableReference: Statement 3, type glengineer.blocks.VerticalBlockindex is: 4
Matched Method is: textAt(III)Ljava/lang/String;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: String[] stringArray = new String[1];
String string = "ABC123";
stringArray[0] = string;
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 50;
int _int = 0;
int _int = null;
scheme.textAt(_int, _int, _int);

* test suite isTestSuite: 48
Test 0: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 1: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(1, 2, 0);
Test 2: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.getUpperLine();
Test 3: 
CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, charPosition1_, charPosition1_);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: -2803,-2803, -2803,-2803.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 4: 
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock((Scheme) null, 1785, (-4912), (-4912), 1785);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1785,-4912, -4912,1785.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 5: 
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, 2480, 2480, 2, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 2480,2480, 2,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 6: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock(verticalBlock, 1, 1, 1, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1,1, 1,0.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 7: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,1.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 8: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 9: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 10: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);
// Undeclared exception!
try { 
  verticalBlock.containsOnlyOneWord();
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // cannot search in a trivial block
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 11: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.toString();
Test 12: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(1, 0);
Test 13: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 14: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 15: 
String[] stringArray = new String[1];
stringArray[0] = "A Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 16: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 17: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 18: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 19: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.getUpperLine();
Test 20: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(0, 0, 2, 1);
Test 21: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(1, 0, 1, 0);
Test 22: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(0, 0, 0);
Test 23: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.charAt((-1), 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // char position (-1,1) out of block.
   // Block(0,0, 0,1):
   //  ####
   //  #  #
   //  ####
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 24: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.textAt((-3148), 662, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Improper subline coodinates.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 25: 
String[] stringArray = new String[1];
stringArray[0] = "ABC";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractSequentialSubblocks();

Test 26: 
String[] stringArray = new String[1];
stringArray[0] = "Z9";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
scheme.textAt(1, 2, 0);

Test 27: 
String[] stringArray = new String[1];
stringArray[0] = "ABC";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).getUpperLine();

Test 28: 
CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = new VerticalBlock((Scheme) charPosition1_, charPosition1_, charPosition1_);

Test 29: 
HorizontalBlock horizontalBlock = new HorizontalBlock((Scheme) 1785, 1785, (-4912), (-4912), 1785);

Test 30: 
VerticalBlock verticalBlock = new VerticalBlock((Scheme) 1280, 720, 3, 4, 2);

Test 31: 
String[] stringArray = new String[1];
stringArray[0] = "A";
stringArray[0] = "B";
stringArray[0] = "C";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
HorizontalBlock horizontalBlock = new HorizontalBlock(verticalBlock, 0, 0, 1, 0);

Test 32: 
String[] stringArray = new String[1];
stringArray[0] = "This is a test string.";
Scheme scheme = new Scheme(stringArray);
int _int = 0;
int _int = 1;
int _int = 1;
int _int = 1;
VerticalBlock verticalBlock = new VerticalBlock(scheme, _int, _int, _int, _int);

Test 33: 
String[] stringArray = new String[1];
stringArray[0] = "VALID_PIN";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);

Test 34: 
String[] stringArray = new String[1];
stringArray[0] = "Hello World";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).containsOnlyOneWord();

Test 35: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
stringArray[0] = "JKL";
stringArray[0] = "QRS";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);

Test 36: 
String[] stringArray = new String[2];
stringArray[0] = "Hello";
stringArray[1] = "World";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
((Block)"World").toString();

Test 37: 
String[] stringArray = new String[1];
stringArray[0] = "abcdefghij";
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block)"9Z").charAt(1, 0);

Test 38: 
String[] stringArray = new String[1];
stringArray[0] = "Hello";
String string = "World!";
stringArray[0] = "World!";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 0;
int _int = 0;
((Block) string).charAt(_int, _int);

Test 39: 
String[] stringArray = new String[1];
stringArray[0] = "This is a sample sentence";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).containsOnlyOneWord();

Test 40: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractParallelSubblocks();

Test 41: 
String[] stringArray = new String[2];
stringArray[0] = "The quick brown fox jumps over the lazy dog.";
stringArray[1] = "The lazy dog sleeps all day.";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) stringArray[1]).extractParallelSubblocks();

Test 42: 
String[] stringArray = new String[1];
stringArray[0] = "Hello, World!";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractSequentialSubblocks();

Test 43: 
String[] stringArray = new String[2];
stringArray[0] = "hello";
stringArray[1] = "world";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
((Block)"world").getUpperLine();

Test 44: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
stringArray[0] = "AB";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block)"AB").subblock(0, 0, 2, 1);

Test 45: 
String[] stringArray = new String[1];
stringArray[0] = "ABC";
stringArray[0] = "XYZ";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block)"XYZ").subblock(1, 0, 1, 0);

Test 46: 
String[] stringArray = new String[1];
stringArray[0] = "ABC";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
scheme.textAt(0, 0, 0);

Test 47: 
String[] stringArray = new String[1];
stringArray[0] = "ABC123";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
scheme.textAt(50, 0, (int) (Integer) null);


* Generated after the refinement and before minimization 48 tests with total length 234
* test suite isTestSuite: 48
Test 0: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 1: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(1, 2, 0);
Test 2: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.getUpperLine();
Test 3: 
CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, charPosition1_, charPosition1_);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: -2803,-2803, -2803,-2803.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 4: 
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock((Scheme) null, 1785, (-4912), (-4912), 1785);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1785,-4912, -4912,1785.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 5: 
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, 2480, 2480, 2, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 2480,2480, 2,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 6: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock(verticalBlock, 1, 1, 1, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1,1, 1,0.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 7: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,1.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 8: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 9: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 10: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);
// Undeclared exception!
try { 
  verticalBlock.containsOnlyOneWord();
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // cannot search in a trivial block
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 11: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.toString();
Test 12: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(1, 0);
Test 13: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 14: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 15: 
String[] stringArray = new String[1];
stringArray[0] = "A Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 16: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 17: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 18: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 19: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.getUpperLine();
Test 20: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(0, 0, 2, 1);
Test 21: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(1, 0, 1, 0);
Test 22: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(0, 0, 0);
Test 23: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.charAt((-1), 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // char position (-1,1) out of block.
   // Block(0,0, 0,1):
   //  ####
   //  #  #
   //  ####
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 24: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.textAt((-3148), 662, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Improper subline coodinates.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 25: 
String[] stringArray = new String[1];
stringArray[0] = "ABC";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractSequentialSubblocks();

Test 26: 
String[] stringArray = new String[1];
stringArray[0] = "Z9";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
scheme.textAt(1, 2, 0);

Test 27: 
String[] stringArray = new String[1];
stringArray[0] = "ABC";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).getUpperLine();

Test 28: 
CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = new VerticalBlock((Scheme) charPosition1_, charPosition1_, charPosition1_);

Test 29: 
HorizontalBlock horizontalBlock = new HorizontalBlock((Scheme) 1785, 1785, (-4912), (-4912), 1785);

Test 30: 
VerticalBlock verticalBlock = new VerticalBlock((Scheme) 1280, 720, 3, 4, 2);

Test 31: 
String[] stringArray = new String[1];
stringArray[0] = "A";
stringArray[0] = "B";
stringArray[0] = "C";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
HorizontalBlock horizontalBlock = new HorizontalBlock(verticalBlock, 0, 0, 1, 0);

Test 32: 
String[] stringArray = new String[1];
stringArray[0] = "This is a test string.";
Scheme scheme = new Scheme(stringArray);
int _int = 0;
int _int = 1;
int _int = 1;
int _int = 1;
VerticalBlock verticalBlock = new VerticalBlock(scheme, _int, _int, _int, _int);

Test 33: 
String[] stringArray = new String[1];
stringArray[0] = "VALID_PIN";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);

Test 34: 
String[] stringArray = new String[1];
stringArray[0] = "Hello World";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).containsOnlyOneWord();

Test 35: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
stringArray[0] = "JKL";
stringArray[0] = "QRS";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);

Test 36: 
String[] stringArray = new String[2];
stringArray[0] = "Hello";
stringArray[1] = "World";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
((Block)"World").toString();

Test 37: 
String[] stringArray = new String[1];
stringArray[0] = "abcdefghij";
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block)"9Z").charAt(1, 0);

Test 38: 
String[] stringArray = new String[1];
stringArray[0] = "Hello";
String string = "World!";
stringArray[0] = "World!";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
int _int = 0;
int _int = 0;
((Block) string).charAt(_int, _int);

Test 39: 
String[] stringArray = new String[1];
stringArray[0] = "This is a sample sentence";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).containsOnlyOneWord();

Test 40: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractParallelSubblocks();

Test 41: 
String[] stringArray = new String[2];
stringArray[0] = "The quick brown fox jumps over the lazy dog.";
stringArray[1] = "The lazy dog sleeps all day.";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) stringArray[1]).extractParallelSubblocks();

Test 42: 
String[] stringArray = new String[1];
stringArray[0] = "Hello, World!";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block) scheme).extractSequentialSubblocks();

Test 43: 
String[] stringArray = new String[2];
stringArray[0] = "hello";
stringArray[1] = "world";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
((Block)"world").getUpperLine();

Test 44: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
stringArray[0] = "AB";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block)"AB").subblock(0, 0, 2, 1);

Test 45: 
String[] stringArray = new String[1];
stringArray[0] = "ABC";
stringArray[0] = "XYZ";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
((Block)"XYZ").subblock(1, 0, 1, 0);

Test 46: 
String[] stringArray = new String[1];
stringArray[0] = "ABC";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
scheme.textAt(0, 0, 0);

Test 47: 
String[] stringArray = new String[1];
stringArray[0] = "ABC123";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
scheme.textAt(50, 0, (int) (Integer) null);


* Minimizing test suite
* test suite isTestSuite: 25
Test 0: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 1: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.getUpperLine();
Test 2: 
CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, charPosition1_, charPosition1_);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: -2803,-2803, -2803,-2803.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 3: 
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock((Scheme) null, 1785, (-4912), (-4912), 1785);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1785,-4912, -4912,1785.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 4: 
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, 2480, 2480, 2, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 2480,2480, 2,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 5: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock(verticalBlock, 1, 1, 1, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1,1, 1,0.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 6: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,1.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 7: 
String[] stringArray = new String[1];
stringArray[0] = "VALID_PIN";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 8: 
String[] stringArray = new String[1];
stringArray[0] = "A Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 9: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);
// Undeclared exception!
try { 
  verticalBlock.containsOnlyOneWord();
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // cannot search in a trivial block
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 10: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.charAt((-1), 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // char position (-1,1) out of block.
   // Block(0,0, 0,1):
   //  ####
   //  #  #
   //  ####
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 11: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(1, 2, 0);
Test 12: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.toString();
Test 13: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(1, 0);
Test 14: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 15: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 16: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 17: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 18: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 19: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 20: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.getUpperLine();
Test 21: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(0, 0, 2, 1);
Test 22: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(1, 0, 1, 0);
Test 23: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(0, 0, 0);
Test 24: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.textAt((-3148), 662, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Improper subline coodinates.
   //
   verifyException("glengineer.blocks.Block", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 42
* Number of covered goals: 41
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 29
* Number of covered goals: 16
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 25 tests with total length 115
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CharPosition1 arg2 = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, arg2, arg2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: -2803,-2803, -2803,-2803.
   //
   verifyException("glengineer.blocks.Block", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCoordinates
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock((Scheme) null, 1785, (-4912), (-4912), 1785);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1785,-4912, -4912,1785.
   //
   verifyException("glengineer.blocks.Block", e);
}


** It was a parseable test case! 
refined test name is: testConstructorThrowsExceptionForImproperArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, 2480, 2480, 2, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 2480,2480, 2,2.
   //
   verifyException("glengineer.blocks.Block", e);
}


** It was a parseable test case! 
refined test name is: testIllegalArgumentExceptionForNullScheme
* Compiling Tests
refined test name is: testCreateVerticalBlockInvalidDimensionsAndSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:47:32.051 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:32.077 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:47:32.129 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:32.130 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:47:32.248 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:32.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
[MASTER] 06:47:32.343 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:32.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:47:32.394 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:32.395 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
[MASTER] 06:47:32.487 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 25
Test 0: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 1: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(1, 2, 0);
Test 2: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.getUpperLine();
Test 3: 
CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, charPosition1_, charPosition1_);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: -2803,-2803, -2803,-2803.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 4: 
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock((Scheme) null, 1785, (-4912), (-4912), 1785);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1785,-4912, -4912,1785.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 5: 
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, 2480, 2480, 2, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 2480,2480, 2,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 6: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock(verticalBlock, 1, 1, 1, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1,1, 1,0.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 7: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,1.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 8: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 9: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 10: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);
// Undeclared exception!
try { 
  verticalBlock.containsOnlyOneWord();
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // cannot search in a trivial block
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 11: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.toString();
Test 12: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(1, 0);
Test 13: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 14: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 15: 
String[] stringArray = new String[1];
stringArray[0] = "A Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 16: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 17: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 18: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 19: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.getUpperLine();
Test 20: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(0, 0, 2, 1);
Test 21: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(1, 0, 1, 0);
Test 22: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(0, 0, 0);
Test 23: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.charAt((-1), 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // char position (-1,1) out of block.
   // Block(0,0, 0,1):
   //  ####
   //  #  #
   //  ####
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 24: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.textAt((-3148), 662, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Improper subline coodinates.
   //
   verifyException("glengineer.blocks.Block", e);
}


* Minimizing test suite
[MASTER] 06:47:33.386 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 25
Test 0: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 1: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.getUpperLine();
Test 2: 
CharPosition1 charPosition1_ = new CharPosition1((-2803), (-2803));
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, charPosition1_, charPosition1_);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: -2803,-2803, -2803,-2803.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 3: 
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock((Scheme) null, 1785, (-4912), (-4912), 1785);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1785,-4912, -4912,1785.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 4: 
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock((Scheme) null, 2480, 2480, 2, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 2480,2480, 2,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 5: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
HorizontalBlock horizontalBlock = null;
try {
  horizontalBlock = new HorizontalBlock(verticalBlock, 1, 1, 1, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 1,1, 1,0.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 6: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,1.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 7: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = null;
try {
  verticalBlock = new VerticalBlock(scheme, 0, 1, 1, 2);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // improper block definition: 0,1, 1,2.
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 8: 
String[] stringArray = new String[1];
stringArray[0] = "A Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 9: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme, 1, 0, 2, 0);
// Undeclared exception!
try { 
  verticalBlock.containsOnlyOneWord();
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // cannot search in a trivial block
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 10: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.charAt((-1), 1);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // char position (-1,1) out of block.
   // Block(0,0, 0,1):
   //  ####
   //  #  #
   //  ####
   //
   verifyException("glengineer.blocks.Block", e);
}

Test 11: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(1, 2, 0);
Test 12: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.toString();
Test 13: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(1, 0);
Test 14: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 15: 
String[] stringArray = new String[1];
stringArray[0] = ".";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.charAt(0, 0);
Test 16: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.containsOnlyOneWord();
Test 17: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 18: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractParallelSubblocks();
Test 19: 
String[] stringArray = new String[1];
stringArray[0] = "";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.extractSequentialSubblocks();
Test 20: 
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "";
Scheme scheme = new Scheme(stringArray);
HorizontalBlock horizontalBlock = new HorizontalBlock(scheme);
horizontalBlock.getUpperLine();
Test 21: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(0, 0, 2, 1);
Test 22: 
String[] stringArray = new String[1];
stringArray[0] = "Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.subblock(1, 0, 1, 0);
Test 23: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
verticalBlock.textAt(0, 0, 0);
Test 24: 
String[] stringArray = new String[1];
stringArray[0] = "9Z";
Scheme scheme = new Scheme(stringArray);
VerticalBlock verticalBlock = new VerticalBlock(scheme);
// Undeclared exception!
try { 
  verticalBlock.textAt((-3148), 662, 0);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Improper subline coodinates.
   //
   verifyException("glengineer.blocks.Block", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 42
* Number of covered goals: 41
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 55%
* Total number of goals: 29
* Number of covered goals: 16
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 25 tests with total length 115
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 06:47:33.416 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
[MASTER] 06:47:39.741 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:47:40.855 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:40.856 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:47:40.908 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:40.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:47:40.958 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:40.959 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 06:47:41.043 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:41.044 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 06:47:41.125 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7396145785422413126.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:47:41.126 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7396145785422413126.jar
* Writing tests to file
[MASTER] 06:47:41.127 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'Block_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Writing JUnit test case 'Block_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
* Done!

* Computation finished
