* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: bible.util.Queue
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/68_biblestudy/evosuite-files/evosuite.properties
* Connecting to master process on port 6309
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class bible.util.Queue
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 176
* Using seed 1709266720065
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 79 / 176
[Progress:>                             0%] [Cov:===============================>   91%][Progress:>                             0%] [Cov:===============================>   91%][Progress:>                             1%] [Cov:================================>  92%][Progress:>                             1%] [Cov:================================>  93%][Progress:>                             1%] [Cov:================================>  93%][Progress:>                             1%] [Cov:================================>  93%][Progress:>                             1%] [Cov:================================>  93%][Progress:>                             1%] [Cov:================================>  93%][Progress:>                             1%] [Cov:================================>  93%][Progress:>                             3%] [Cov:================================>  93%][Progress:=>                            4%] [Cov:================================>  93%][Progress:=>                            4%] [Cov:================================>  93%][Progress:=>                            4%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:==>                           8%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          11%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          12%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:===>                          13%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         14%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:====>                         15%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        18%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:=====>                        19%] [Cov:================================>  93%][Progress:======>                       22%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:======>                       23%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:=======>                      26%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     27%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     28%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:========>                     29%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    30%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    31%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    32%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:=========>                    33%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:==========>                   34%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  37%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  38%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 40%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 41%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:=============>                46%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               47%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              51%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:===============>              52%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             55%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:================>             56%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:=================>            59%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           60%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           61%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:==================>           63%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         68%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      77%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:=======================>      79%] [Cov:================================>  93%][Progress:========================>     82%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:========================>     83%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:=========================>    84%] [Cov:================================>  93%][Progress:==========================>   87%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   88%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:==========================>   89%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  90%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  91%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:===========================>  92%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 95%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:============================> 96%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>97%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>98%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:=============================>99%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%][Progress:==============================100%] [Cov:================================>  93%]
* Search finished after 102s and 1262 generations, 209736 statements, best individual has fitness: 8.0
* Generated before the refinement 21 tests with total length 72
statement is: bible.util.Queue(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue((-1566))
statement is: getNumberItems()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int numberItems = queue.getNumberItems()
test data is: Queue queue = new Queue((-1566));
queue.getNumberItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue(10);
        queue.getNumberItems();
    }
}
statement is: Queue queue = new Queue(10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.getNumberItems(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getNumberItems() target is: queue method is: getNumberItems()
source statement: bible.util.Queue(I)V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 1
Matched Method is: getNumberItems()I
TestCase is: int _int = 10;
Queue queue = new Queue(_int);
((Queue) _int).getNumberItems();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: dequeue()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector dequeue = (Vector)queue.dequeue()
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.dequeue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        // Improved test data: Using more descriptive and representative values for the primitive types and strings.
        queue.refreshElement(new Vector(1, 2, 3));// Instead of using a single value as an example, we are now passing in a vector with three values to represent a more typical use case.

        queue.dequeue();
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: // Improved test data: Using more descriptive and representative values for the primitive types and strings.
queue.refreshElement(new Vector(1, 2, 3))// Instead of using a single value as an example, we are now passing in a vector with three values to represent a more typical use case.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data: Using more descriptive and representative values for the primitive types and strings.
queue.refreshElement(new Vector(1, 2, 3))// Instead of using a single value as an example, we are now passing in a vector with three values to represent a more typical use case.
 target is: queue method is: refreshElement(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: queue.dequeue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.dequeue() target is: queue method is: dequeue()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: dequeue()Ljava/lang/Object;
TestCase is: Queue queue = new Queue();
queue.getObjects();
Vector vector = null;
queue.refreshElement(vector);
queue.dequeue();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getPeakNumberItems()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int peakNumberItems = queue.getPeakNumberItems()
test data is: Queue queue = new Queue();
queue.getPeakNumberItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        // Add some items to the queue
        queue.add(1);
        queue.add("hello");
        queue.add(3.14);
        // Add a few more items with different types
        queue.add(true);
        queue.add('c');
        queue.add(new Date());
        // Get the peak number of items in the queue
        int peakNumberItems = queue.getPeakNumberItems();
        assertEquals(7, peakNumberItems);
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Add some items to the queue
queue.add(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add some items to the queue
queue.add(1) target is: queue method is: add(int)
statement is: queue.add("hello"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.add("hello") target is: queue method is: add(java.lang.String)
statement is: queue.add(3.14), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.add(3.14) target is: queue method is: add(double)
statement is: // Add a few more items with different types
queue.add(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add a few more items with different types
queue.add(true) target is: queue method is: add(boolean)
statement is: queue.add('c'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.add('c') target is: queue method is: add(char)
statement is: queue.add(new Date()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.add(new Date()) target is: queue method is: add(Date)
statement is: // Get the peak number of items in the queue
int peakNumberItems = queue.getPeakNumberItems(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getPeakNumberItems() target is: queue method is: getPeakNumberItems()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getPeakNumberItems()I
statement is: assertEquals(7, peakNumberItems), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(7, peakNumberItems) target is:  method is: assertEquals(int,int)
TestCase is: Queue queue = new Queue();
queue.getPeakNumberItems();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: enqueue(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]")
statement is: dequeue()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector dequeue = (Vector)queue.dequeue()
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.dequeue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        queue.refreshElement(objects);
        queue.enqueue("bible.util.Queue:[numItems=3, maxNumItems=5, maxCapacity=10, getObjects()=[\"apple\", \"banana\", \"orange\"]]");
        queue.dequeue();
    }
}
statement is: // Improved test data
Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: queue.refreshElement(objects), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(objects) target is: queue method is: refreshElement(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
statement is: queue.enqueue("bible.util.Queue:[numItems=3, maxNumItems=5, maxCapacity=10, getObjects()=[\"apple\", \"banana\", \"orange\"]]"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("bible.util.Queue:[numItems=3, maxNumItems=5, maxCapacity=10, getObjects()=[\"apple\", \"banana\", \"orange\"]]") target is: queue method is: enqueue(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: queue.dequeue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.dequeue() target is: queue method is: dequeue()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: dequeue()Ljava/lang/Object;
TestCase is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
String string = "bible.util.Queue:[numItems=3, maxNumItems=5, maxCapacity=10, getObjects()=[\"apple\", \"banana\", \"orange\"]]";
queue.enqueue(string);
queue.dequeue();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: dequeue()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object dequeue = queue.dequeue()
statement is: getNumberItems()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int numberItems = queue.getNumberItems()
test data is: Queue queue = new Queue();
queue.dequeue();
queue.getNumberItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        queue.enqueue("apple");
        queue.enqueue("banana");
        queue.dequeue();
        queue.dequeue();
        queue.getNumberItems();
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.enqueue("apple"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("apple") target is: queue method is: enqueue(java.lang.String)
statement is: queue.enqueue("banana"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("banana") target is: queue method is: enqueue(java.lang.String)
statement is: queue.dequeue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.dequeue() target is: queue method is: dequeue()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: dequeue()Ljava/lang/Object;
statement is: queue.dequeue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.dequeue() target is: queue method is: dequeue()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: dequeue()Ljava/lang/Object;
statement is: queue.getNumberItems(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getNumberItems() target is: queue method is: getNumberItems()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getNumberItems()I
TestCase is: Queue queue = new Queue();
queue.dequeue();
queue.dequeue();
queue.getNumberItems();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: enqueue(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]")
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: remove(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int remove = queue.remove("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]")
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(object);
queue.remove("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the Queue class
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        queue.refreshElement(objects);
        Object object = new Object();
        queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\"]]");
        queue.refreshElement(object);
        queue.remove("bible.util.Queue:[numItems=10, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\", \"durian\", \"elderberry\", \"fig\", \"grapefruit\", \"kiwi\", \"lemon\", \"lime\", \"mango\"]]");
    }
}
statement is: // Improved test data for the Queue class
Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: queue.refreshElement(objects), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(objects) target is: queue method is: refreshElement(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\"]]"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\"]]") target is: queue method is: enqueue(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: queue.refreshElement(object), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(object) target is: queue method is: refreshElement(java.lang.Object)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
statement is: queue.remove("bible.util.Queue:[numItems=10, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\", \"durian\", \"elderberry\", \"fig\", \"grapefruit\", \"kiwi\", \"lemon\", \"lime\", \"mango\"]]"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.remove("bible.util.Queue:[numItems=10, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\", \"durian\", \"elderberry\", \"fig\", \"grapefruit\", \"kiwi\", \"lemon\", \"lime\", \"mango\"]]") target is: queue method is: remove(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: remove(Ljava/lang/Object;)I
TestCase is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
Object object = new Object();
String string = "bible.util.Queue:[numItems=0, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\"]]";
queue.enqueue(string);
queue.refreshElement(object);
String string = "bible.util.Queue:[numItems=10, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\", \"durian\", \"elderberry\", \"fig\", \"grapefruit\", \"kiwi\", \"lemon\", \"lime\", \"mango\"]]";
queue.remove(string);

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: enqueue(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]")
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: remove(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int remove = queue.remove(arg0)
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(objects);
queue.remove(objects);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        queue.enqueue("bible");
        queue.enqueue("util");
        queue.enqueue("Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
        queue.refreshElement(objects);
        queue.remove(objects);
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: queue.enqueue("bible"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("bible") target is: queue method is: enqueue(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: queue.enqueue("util"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("util") target is: queue method is: enqueue(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: queue.enqueue("Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]") target is: queue method is: enqueue(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: queue.refreshElement(objects), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(objects) target is: queue method is: refreshElement(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
statement is: queue.remove(objects), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.remove(objects) target is: queue method is: remove(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: remove(Ljava/lang/Object;)I
TestCase is: Queue queue = new Queue();
Vector objects = queue.getObjects();
String string = "bible";
queue.enqueue(string);
String string = "util";
queue.enqueue(string);
String string = "Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]";
queue.enqueue(string);
queue.refreshElement(objects);
queue.remove(objects);

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: toString()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String string = queue.toString()
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.toString();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        objects.add("Apple");
        objects.add("Banana");
        objects.add("Orange");
        queue.refreshElement(objects);
        System.out.println(queue);
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: objects.add("Apple"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objects.add("Apple") target is: objects method is: add(java.lang.String)
statement is: objects.add("Banana"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objects.add("Banana") target is: objects method is: add(java.lang.String)
statement is: objects.add("Orange"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objects.add("Orange") target is: objects method is: add(java.lang.String)
statement is: queue.refreshElement(objects), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(objects) target is: queue method is: refreshElement(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
statement is: System.out.println(queue), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(queue) target is: System.out method is: println(char[])
TestCase is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);

statement is: bible.util.Queue(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue(711)
statement is: maxCapacityExceeded()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean maxCapacityExceeded = queue.maxCapacityExceeded()
test data is: Queue queue = new Queue(711);
queue.maxCapacityExceeded();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue(Integer.MAX_VALUE);
        queue.maxCapacityExceeded();
    }
}
statement is: Queue queue = new Queue(Integer.MAX_VALUE), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.maxCapacityExceeded(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.maxCapacityExceeded() target is: queue method is: maxCapacityExceeded()
source statement: bible.util.Queue(I)V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: maxCapacityExceeded()Z
TestCase is: Queue queue = new Queue(711);
queue.maxCapacityExceeded();

statement is: bible.util.Queue(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue((-1566))
statement is: maxCapacityExceeded()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean maxCapacityExceeded = queue.maxCapacityExceeded()
test data is: Queue queue = new Queue((-1566));
queue.maxCapacityExceeded();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue(10);
        queue.maxCapacityExceeded();
    }
}
statement is: Queue queue = new Queue(10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.maxCapacityExceeded(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.maxCapacityExceeded() target is: queue method is: maxCapacityExceeded()
source statement: bible.util.Queue(I)V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 1
Matched Method is: maxCapacityExceeded()Z
TestCase is: int _int = 10;
Queue queue = new Queue(_int);
((Queue) _int).maxCapacityExceeded();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: maxCapacityExceeded()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean maxCapacityExceeded = queue.maxCapacityExceeded()
test data is: Queue queue = new Queue();
queue.maxCapacityExceeded();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue(10);
        String name = "Jane Doe";
        int age = 60;
        boolean isMember = true;
        // Test for max capacity exceeded
        if (queue.size() == queue.getMaxCapacity()) {
            System.out.println("Max capacity exceeded");
        }
        // Test for name
        if (name.equalsIgnoreCase("Jane Doe")) {
            System.out.println("Name is Jane Doe");
        }
        // Test for age
        if (age > 50) {
            System.out.println("Age is greater than 50");
        }
        // Test for membership
        if (isMember) {
            System.out.println("User is a full-time member");
        }
    }
}
statement is: Queue queue = new Queue(10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String name = "Jane Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int age = 60, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean isMember = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Test for max capacity exceeded
if (queue.size() == queue.getMaxCapacity()) {
    System.out.println("Max capacity exceeded");
}, class spoon.support.reflect.code.CtIfImpl
statement is: // Test for name
if (name.equalsIgnoreCase("Jane Doe")) {
    System.out.println("Name is Jane Doe");
}, class spoon.support.reflect.code.CtIfImpl
statement is: // Test for age
if (age > 50) {
    System.out.println("Age is greater than 50");
}, class spoon.support.reflect.code.CtIfImpl
statement is: // Test for membership
if (isMember) {
    System.out.println("User is a full-time member");
}, class spoon.support.reflect.code.CtIfImpl
* this is vulnerable: String string = "Jane Doe"
* this is vulnerable: int _int = 60
* this is vulnerable: boolean _boolean = true
TestCase is: String string = "Jane Doe";
int _int = 60;
boolean _boolean = true;

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: bible.util.Queue$Node(Lbible/util/Queue;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue$Node
statement code is: Queue.Node queue_Node = arg1.new Node(arg1)
test data is: Queue queue = new Queue();
Queue.Node queue_Node = queue.new Node(queue);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for a queue
        Queue queue = new Queue();
        Queue.Node queue_Node = queue.new Node(queue);
        // Add some elements to the queue
        queue.enqueue(10);
        queue.enqueue(20);
        queue.enqueue("hello");
        queue.enqueue('a');
        // Check if the queue is empty
        if (queue.isEmpty()) {
            System.out.println("Queue is empty.");
        } else {
            // Dequeue some elements from the queue
            queue_Node = queue.dequeue();
            System.out.println(queue_Node.getData());
            queue_Node = queue.dequeue();
            System.out.println(queue_Node.getData());
        }
    }
}
statement is: // Improved test data for a queue
Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Queue.Node queue_Node = queue.new Node(queue), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Add some elements to the queue
queue.enqueue(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add some elements to the queue
queue.enqueue(10) target is: queue method is: enqueue(int)
statement is: queue.enqueue(20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue(20) target is: queue method is: enqueue(int)
statement is: queue.enqueue("hello"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("hello") target is: queue method is: enqueue(java.lang.String)
statement is: queue.enqueue('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue('a') target is: queue method is: enqueue(char)
statement is: // Check if the queue is empty
if (queue.isEmpty()) {
    System.out.println("Queue is empty.");
} else {
    // Dequeue some elements from the queue
    queue_Node = queue.dequeue();
    System.out.println(queue_Node.getData());
    queue_Node = queue.dequeue();
    System.out.println(queue_Node.getData());
}, class spoon.support.reflect.code.CtIfImpl
TestCase is: Queue queue = new Queue();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: isEmpty()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean empty = queue.isEmpty()
test data is: Queue queue = new Queue();
queue.isEmpty();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        // The isEmpty() method should return true if the queue is empty, and false otherwise.
        assertTrue(queue.isEmpty());
        // Testing with a non-empty queue
        queue.enqueue("apple");
        assertFalse(queue.isEmpty());
        // Testing with an empty queue again
        queue.dequeue();
        assertTrue(queue.isEmpty());
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // The isEmpty() method should return true if the queue is empty, and false otherwise.
assertTrue(queue.isEmpty()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The isEmpty() method should return true if the queue is empty, and false otherwise.
assertTrue(queue.isEmpty()) target is:  method is: assertTrue(<unknown>)
statement is: // Testing with a non-empty queue
queue.enqueue("apple"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing with a non-empty queue
queue.enqueue("apple") target is: queue method is: enqueue(java.lang.String)
statement is: assertFalse(queue.isEmpty()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(queue.isEmpty()) target is:  method is: assertFalse(<unknown>)
statement is: // Testing with an empty queue again
queue.dequeue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing with an empty queue again
queue.dequeue() target is: queue method is: dequeue()
statement is: assertTrue(queue.isEmpty()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(queue.isEmpty()) target is:  method is: assertTrue(<unknown>)
TestCase is: Queue queue = new Queue();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: enqueue(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arg0.enqueue(arg0)
statement is: isEmpty()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean empty = queue.isEmpty()
test data is: Queue queue = new Queue();
queue.enqueue(queue);
queue.isEmpty();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int[] testData = new int[]{ 1, 2, 3, 4, 5 };
        String[] stringTestData = new String[]{ "apple", "banana", "cherry" };
        char[] charTestData = new char[]{ 'a', 'b', 'c' };
        double[] doubleTestData = new double[]{ 1.0, 2.0, 3.0 };
        boolean[] booleanTestData = new boolean[]{ true, false };
    }
}
statement is: // Improved test data
int[] testData = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] stringTestData = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: char[] charTestData = new char[]{ 'a', 'b', 'c' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: double[] doubleTestData = new double[]{ 1.0, 2.0, 3.0 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: boolean[] booleanTestData = new boolean[]{ true, false }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: enqueue(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.enqueue((Object) null)
test data is: Queue queue = new Queue();
queue.enqueue((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        queue.enqueue(10);
        queue.enqueue("hello");
        queue.enqueue(true);
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.enqueue(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue(10) target is: queue method is: enqueue(int)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: queue.enqueue("hello"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("hello") target is: queue method is: enqueue(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: queue.enqueue(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue(true) target is: queue method is: enqueue(boolean)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
TestCase is: Queue queue = new Queue();
int _int = 10;
queue.enqueue(_int);
String string = "hello";
queue.enqueue(string);
boolean _boolean = true;
queue.enqueue(_boolean);

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: dequeue()Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector dequeue = (Vector)queue.dequeue()
statement is: enqueue(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]")
test data is: Queue queue = new Queue();
queue.dequeue();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        queue.dequeue();
        queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[23, 42, 12]]");
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.dequeue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.dequeue() target is: queue method is: dequeue()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: dequeue()Ljava/lang/Object;
statement is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[23, 42, 12]]"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[23, 42, 12]]") target is: queue method is: enqueue(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
TestCase is: Queue queue = new Queue();
queue.dequeue();
String string = "bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[23, 42, 12]]";
queue.enqueue(string);

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: enqueue(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.enqueue(arg0)
statement is: remove(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int remove = queue.remove(arg0)
test data is: Queue queue = new Queue();
Object object = new Object();
queue.enqueue(object);
queue.remove(object);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        Object object1 = new Object();// A generic object that can be used in any scenario.

        queue.enqueue(object1);
        Object object2 = new Object();// A specific object that is relevant to the scenario being tested.

        queue.remove(object2);
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object object1 = new Object()// A generic object that can be used in any scenario.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.enqueue(object1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue(object1) target is: queue method is: enqueue(java.lang.Object)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: Object object2 = new Object()// A specific object that is relevant to the scenario being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.remove(object2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.remove(object2) target is: queue method is: remove(java.lang.Object)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: remove(Ljava/lang/Object;)I
TestCase is: Queue queue = new Queue();
Object object = new Object();
queue.enqueue(object);
Object object = new Object();
queue.remove(object);

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: java.lang.Object()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Object
statement code is: Object object = new Object()
statement is: enqueue(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]")
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: remove(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int remove = queue.remove(arg0)
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(object);
queue.remove(objects);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        Object object = new Object();
        queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[object\r\n]");
        queue.refreshElement(object);
        queue.remove(objects);
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: Object object = new Object(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[object\r\n]"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[object\r\n]") target is: queue method is: enqueue(java.lang.String)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: enqueue(Ljava/lang/Object;)V
statement is: queue.refreshElement(object), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(object) target is: queue method is: refreshElement(java.lang.Object)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
statement is: queue.remove(objects), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.remove(objects) target is: queue method is: remove(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: remove(Ljava/lang/Object;)I
TestCase is: Queue queue = new Queue();
Vector objects = queue.getObjects();
Object object = new Object();
String string = "bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[object\r\n]";
queue.enqueue(string);
queue.refreshElement(object);
queue.remove(objects);

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getObjects();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        queue.refreshElement(new Vector<>(Arrays.asList("a", "b")));
        queue.getObjects();
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: queue.refreshElement(new Vector<>(Arrays.asList("a", "b"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(new Vector<>(Arrays.asList("a", "b"))) target is: queue method is: refreshElement(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: queue.getObjects(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
TestCase is: Queue queue = new Queue();
queue.getObjects();
Vector vector = null;
queue.refreshElement(vector);
queue.getObjects();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: getNumberItems()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int numberItems = queue.getNumberItems()
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getNumberItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        queue.refreshElement(new Vector<String>("hello", "world"));
        queue.getNumberItems();
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: queue.refreshElement(new Vector<String>("hello", "world")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(new Vector<String>("hello", "world")) target is: queue method is: refreshElement(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: queue.getNumberItems(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getNumberItems() target is: queue method is: getNumberItems()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getNumberItems()I
TestCase is: Queue queue = new Queue();
queue.getObjects();
Vector vector = null;
queue.refreshElement(vector);
queue.getNumberItems();

statement is: bible.util.Queue()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class bible.util.Queue
statement code is: Queue queue = new Queue()
statement is: getObjects()Ljava/util/Vector; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Vector<E>
statement code is: Vector objects = queue.getObjects()
statement is: refreshElement(Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: queue.refreshElement(arg0)
statement is: getPeakNumberItems()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int peakNumberItems = queue.getPeakNumberItems()
test data is: Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getPeakNumberItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Queue queue = new Queue();
        Vector objects = queue.getObjects();
        queue.refreshElement(new Vector<>(Arrays.asList(Integer.MAX_VALUE, Integer.MIN_VALUE, 0)));
        queue.getPeakNumberItems();
    }
}
statement is: Queue queue = new Queue(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Vector objects = queue.getObjects(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getObjects() target is: queue method is: getObjects()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getObjects()Ljava/util/Vector;
statement is: queue.refreshElement(new Vector<>(Arrays.asList(Integer.MAX_VALUE, Integer.MIN_VALUE, 0))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.refreshElement(new Vector<>(Arrays.asList(Integer.MAX_VALUE, Integer.MIN_VALUE, 0))) target is: queue method is: refreshElement(Vector)
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: refreshElement(Ljava/lang/Object;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: queue.getPeakNumberItems(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: queue.getPeakNumberItems() target is: queue method is: getPeakNumberItems()
source statement: bible.util.Queue()V callee: VariableReference: Statement 0, type bible.util.Queueindex is: 0
Matched Method is: getPeakNumberItems()I
TestCase is: Queue queue = new Queue();
queue.getObjects();
Vector vector = null;
queue.refreshElement(vector);
queue.getPeakNumberItems();

* test suite isTestSuite: 41
Test 0: 
Queue queue = new Queue((-1566));
queue.getNumberItems();
Test 1: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.dequeue();
Test 2: 
Queue queue = new Queue();
queue.getPeakNumberItems();
Test 3: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.dequeue();
Test 4: 
Queue queue = new Queue();
queue.dequeue();
queue.getNumberItems();
Test 5: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(object);
queue.remove("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
Test 6: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(objects);
queue.remove(objects);
Test 7: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.toString();
Test 8: 
Queue queue = new Queue(711);
queue.maxCapacityExceeded();
Test 9: 
Queue queue = new Queue((-1566));
queue.maxCapacityExceeded();
Test 10: 
Queue queue = new Queue();
queue.maxCapacityExceeded();
Test 11: 
Queue queue = new Queue();
Queue.Node queue_Node = queue.new Node(queue);
Test 12: 
Queue queue = new Queue();
queue.isEmpty();
Test 13: 
Queue queue = new Queue();
queue.enqueue(queue);
queue.isEmpty();
Test 14: 
Queue queue = new Queue();
queue.enqueue((Object) null);
Test 15: 
Queue queue = new Queue();
queue.dequeue();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
Test 16: 
Queue queue = new Queue();
Object object = new Object();
queue.enqueue(object);
queue.remove(object);
Test 17: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(object);
queue.remove(objects);
Test 18: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getObjects();
Test 19: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getNumberItems();
Test 20: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getPeakNumberItems();
Test 21: 
Queue queue = new Queue(10);
((Queue)10).getNumberItems();

Test 22: 
Queue queue = new Queue();
queue.getObjects();
queue.refreshElement((Object) null);
queue.dequeue();

Test 23: 
Queue queue = new Queue();
queue.getPeakNumberItems();

Test 24: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.enqueue("bible.util.Queue:[numItems=3, maxNumItems=5, maxCapacity=10, getObjects()=[\"apple\", \"banana\", \"orange\"]]");
queue.dequeue();

Test 25: 
Queue queue = new Queue();
queue.dequeue();
queue.dequeue();
queue.getNumberItems();

Test 26: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\"]]");
queue.refreshElement(object);
queue.remove("bible.util.Queue:[numItems=10, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\", \"durian\", \"elderberry\", \"fig\", \"grapefruit\", \"kiwi\", \"lemon\", \"lime\", \"mango\"]]");

Test 27: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.enqueue("bible");
queue.enqueue("util");
queue.enqueue("Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(objects);
queue.remove(objects);

Test 28: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);

Test 29: 
Queue queue = new Queue(711);
queue.maxCapacityExceeded();

Test 30: 
Queue queue = new Queue(10);
((Queue)10).maxCapacityExceeded();

Test 31: 

Test 32: 
Queue queue = new Queue();

Test 33: 
Queue queue = new Queue();

Test 34: 
Queue queue = new Queue();
queue.enqueue(10);
queue.enqueue("hello");
queue.enqueue(true);

Test 35: 
Queue queue = new Queue();
queue.dequeue();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[23, 42, 12]]");

Test 36: 
Queue queue = new Queue();
Object object = new Object();
queue.enqueue(object);
Object object = new Object();
queue.remove(object);

Test 37: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[object\r\n]");
queue.refreshElement(object);
queue.remove(objects);

Test 38: 
Queue queue = new Queue();
queue.getObjects();
queue.refreshElement((Object) null);
queue.getObjects();

Test 39: 
Queue queue = new Queue();
queue.getObjects();
queue.refreshElement((Object) null);
queue.getNumberItems();

Test 40: 
Queue queue = new Queue();
queue.getObjects();
queue.refreshElement((Object) null);
queue.getPeakNumberItems();


* Generated after the refinement and before minimization 41 tests with total length 142
* test suite isTestSuite: 41
Test 0: 
Queue queue = new Queue((-1566));
queue.getNumberItems();
Test 1: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.dequeue();
Test 2: 
Queue queue = new Queue();
queue.getPeakNumberItems();
Test 3: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.dequeue();
Test 4: 
Queue queue = new Queue();
queue.dequeue();
queue.getNumberItems();
Test 5: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(object);
queue.remove("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
Test 6: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(objects);
queue.remove(objects);
Test 7: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.toString();
Test 8: 
Queue queue = new Queue(711);
queue.maxCapacityExceeded();
Test 9: 
Queue queue = new Queue((-1566));
queue.maxCapacityExceeded();
Test 10: 
Queue queue = new Queue();
queue.maxCapacityExceeded();
Test 11: 
Queue queue = new Queue();
Queue.Node queue_Node = queue.new Node(queue);
Test 12: 
Queue queue = new Queue();
queue.isEmpty();
Test 13: 
Queue queue = new Queue();
queue.enqueue(queue);
queue.isEmpty();
Test 14: 
Queue queue = new Queue();
queue.enqueue((Object) null);
Test 15: 
Queue queue = new Queue();
queue.dequeue();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
Test 16: 
Queue queue = new Queue();
Object object = new Object();
queue.enqueue(object);
queue.remove(object);
Test 17: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(object);
queue.remove(objects);
Test 18: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getObjects();
Test 19: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getNumberItems();
Test 20: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getPeakNumberItems();
Test 21: 
Queue queue = new Queue(10);
((Queue)10).getNumberItems();

Test 22: 
Queue queue = new Queue();
queue.getObjects();
queue.refreshElement((Object) null);
queue.dequeue();

Test 23: 
Queue queue = new Queue();
queue.getPeakNumberItems();

Test 24: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.enqueue("bible.util.Queue:[numItems=3, maxNumItems=5, maxCapacity=10, getObjects()=[\"apple\", \"banana\", \"orange\"]]");
queue.dequeue();

Test 25: 
Queue queue = new Queue();
queue.dequeue();
queue.dequeue();
queue.getNumberItems();

Test 26: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\"]]");
queue.refreshElement(object);
queue.remove("bible.util.Queue:[numItems=10, maxNumItems=10, maxCapacity=20, getObjects()=[\"apple\", \"banana\", \"cherry\", \"durian\", \"elderberry\", \"fig\", \"grapefruit\", \"kiwi\", \"lemon\", \"lime\", \"mango\"]]");

Test 27: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.enqueue("bible");
queue.enqueue("util");
queue.enqueue("Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(objects);
queue.remove(objects);

Test 28: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);

Test 29: 
Queue queue = new Queue(711);
queue.maxCapacityExceeded();

Test 30: 
Queue queue = new Queue(10);
((Queue)10).maxCapacityExceeded();

Test 31: 

Test 32: 
Queue queue = new Queue();

Test 33: 
Queue queue = new Queue();

Test 34: 
Queue queue = new Queue();
queue.enqueue(10);
queue.enqueue("hello");
queue.enqueue(true);

Test 35: 
Queue queue = new Queue();
queue.dequeue();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[23, 42, 12]]");

Test 36: 
Queue queue = new Queue();
Object object = new Object();
queue.enqueue(object);
Object object = new Object();
queue.remove(object);

Test 37: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[object\r\n]");
queue.refreshElement(object);
queue.remove(objects);

Test 38: 
Queue queue = new Queue();
queue.getObjects();
queue.refreshElement((Object) null);
queue.getObjects();

Test 39: 
Queue queue = new Queue();
queue.getObjects();
queue.refreshElement((Object) null);
queue.getNumberItems();

Test 40: 
Queue queue = new Queue();
queue.getObjects();
queue.refreshElement((Object) null);
queue.getPeakNumberItems();


* Minimizing test suite
* test suite isTestSuite: 21
Test 0: 
Queue queue = new Queue();
queue.toString();
Test 1: 
Queue queue = new Queue();
queue.getNumberItems();
Test 2: 
Queue queue = new Queue();
queue.getPeakNumberItems();
Test 3: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.enqueue("bible.util.Queue:[numItems=3, maxNumItems=5, maxCapacity=10, getObjects()=[\"apple\", \"banana\", \"orange\"]]");
queue.dequeue();
Test 4: 
Queue queue = new Queue();
queue.dequeue();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[23, 42, 12]]");
Test 5: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.dequeue();
Test 6: 
Queue queue = new Queue();
Object object = new Object();
queue.enqueue(object);
queue.remove(object);
Test 7: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[object\r\n]");
queue.refreshElement(object);
queue.remove(objects);
Test 8: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.enqueue("bible");
queue.refreshElement(objects);
queue.remove(objects);
Test 9: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
Object object = new Object();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
queue.refreshElement(object);
queue.remove("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]");
Test 10: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getObjects();
Test 11: 
Queue queue = new Queue(711);
queue.maxCapacityExceeded();
Test 12: 
Queue queue = new Queue((-1566));
queue.maxCapacityExceeded();
Test 13: 
Queue queue = new Queue();
queue.maxCapacityExceeded();
Test 14: 
Queue queue = new Queue();
Queue.Node queue_Node = queue.new Node(queue);
Test 15: 
Queue queue = new Queue();
queue.isEmpty();
Test 16: 
Queue queue = new Queue();
queue.enqueue(queue);
queue.isEmpty();
Test 17: 
Queue queue = new Queue();
queue.enqueue((Object) null);
Test 18: 
Queue queue = new Queue();
queue.dequeue();
queue.getNumberItems();
Test 19: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getNumberItems();
Test 20: 
Queue queue = new Queue();
Vector objects = queue.getObjects();
queue.refreshElement(objects);
queue.getPeakNumberItems();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 62
* Number of covered goals: 62
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 27
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 37
* Number of covered goals: 37
* Generated 21 tests with total length 70
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
String string = queue.toString();
assertEquals("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[]\r\n]", string);


** It was a parseable test case! 
refined test name is: testToStringFormatReturnsExpectedString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
int numberItems = queue.getNumberItems();
assertEquals(0, queue.getPeakNumberItems());
assertFalse(queue.maxCapacityExceeded());
assertEquals(0, numberItems);


** It was a parseable test case! 
refined test name is: testEmptyQueue
* Compiling Tests
refined test name is: testGetNumberItemsnewQueuereturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
int peakNumberItems = queue.getPeakNumberItems();
assertEquals(0, queue.getNumberItems());
assertFalse(queue.maxCapacityExceeded());
assertEquals(0, peakNumberItems);


** It was a parseable test case! 
refined test name is: testInitializationOfQueue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
Vector arg0 = queue.getObjects();
queue.refreshElement(arg0);
queue.enqueue("bible.util.Queue:[numItems=3, maxNumItems=5, maxCapacity=10, getObjects()=[\"apple\", \"banana\", \"orange\"]]");
queue.dequeue();
assertEquals(1, queue.getNumberItems());


** It was a parseable test case! 
refined test name is: testRefreshElementAndEnqueueNewElement
* Compiling Tests
refined test name is: testRefreshElementAndEnqueueNewElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
queue.dequeue();
queue.enqueue("bible.util.Queue:[numItems=0, maxNumItems=0, maxCapacity=-1, getObjects()=[23, 42, 12]]");
assertFalse(queue.isEmpty());


** It was a parseable test case! 
refined test name is: testDequeueFromEmptyQueue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
Vector arg0 = queue.getObjects();
queue.refreshElement(arg0);
queue.dequeue();
assertEquals(0, queue.getNumberItems());


** It was a parseable test case! 
refined test name is: testRefreshAndDequeueWithElements
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
Object arg0 = new Object();
queue.enqueue(arg0);
assertFalse(queue.isEmpty());

int remove = queue.remove(arg0);
assertEquals(1, remove);


** It was a parseable test case! 
refined test name is: testRemoveFromQueue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
Vector arg0 = queue.getObjects();
queue.enqueue("bible");
queue.refreshElement(arg0);
int remove = queue.remove(arg0);
assertFalse(queue.isEmpty());
assertEquals(1, remove);


** It was a parseable test case! 
refined test name is: testEnqueueAndDequeue
* Compiling Tests
refined test name is: testEnqueueAndRemoveFromQueue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
Vector arg0 = queue.getObjects();
queue.refreshElement(arg0);
queue.getObjects();
assertFalse(queue.isEmpty());


** It was a parseable test case! 
refined test name is: testRefreshElementPreservesElementInQueue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue(711);
boolean maxCapacityExceeded = queue.maxCapacityExceeded();
assertFalse(maxCapacityExceeded);
assertEquals(0, queue.getNumberItems());
assertEquals(0, queue.getPeakNumberItems());


** It was a parseable test case! 
refined test name is: testMaxCapacityNotExceededQueueCreatedWithNoItems
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue((-1566));
boolean maxCapacityExceeded = queue.maxCapacityExceeded();
assertTrue(maxCapacityExceeded);
assertEquals(0, queue.getNumberItems());
assertEquals(0, queue.getPeakNumberItems());


** It was a parseable test case! 
refined test name is: testMaxCapacityExceededWhenQueueIsFull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
boolean maxCapacityExceeded = queue.maxCapacityExceeded();
assertFalse(maxCapacityExceeded);
assertEquals(0, queue.getPeakNumberItems());
assertEquals(0, queue.getNumberItems());


** It was a parseable test case! 
refined test name is: testAddItemToEmptyQueue
* Compiling Tests
refined test name is: testAddItemToEmptyQueue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue arg1 = new Queue();
Queue.Node queue_Node = arg1.new Node(arg1);
assertEquals(0, arg1.getNumberItems());
assertEquals(0, arg1.getPeakNumberItems());
assertFalse(arg1.maxCapacityExceeded());


** It was a parseable test case! 
refined test name is: testEnqueueNodeIncreasesQueueSizeAndMaxPeakSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
queue.isEmpty();
assertFalse(queue.maxCapacityExceeded());
assertEquals(0, queue.getNumberItems());
assertEquals(0, queue.getPeakNumberItems());


** It was a parseable test case! 
refined test name is: testIsEmptyWhenQueueCreated
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue arg0 = new Queue();
arg0.enqueue(arg0);
boolean empty = arg0.isEmpty();
assertFalse(empty);


** It was a parseable test case! 
refined test name is: testEnqueueDequeue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
queue.enqueue((Object) null);
assertEquals(0, queue.getPeakNumberItems());
assertFalse(queue.maxCapacityExceeded());
assertEquals(0, queue.getNumberItems());


** It was a parseable test case! 
refined test name is: testEnqueueNullItem
* Compiling Tests
refined test name is: testNewQueue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
assertEquals(0, queue.getNumberItems());

queue.dequeue();
int numberItems = queue.getNumberItems();
assertEquals((-1), numberItems);


** It was a parseable test case! 
refined test name is: testDequeueOnEmptyQueue
* Compiling Tests
refined test name is: testDequeueFromEmptyQueue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
Vector arg0 = queue.getObjects();
queue.refreshElement(arg0);
int numberItems = queue.getNumberItems();
assertFalse(queue.isEmpty());
assertEquals(1, numberItems);


** It was a parseable test case! 
refined test name is: testGetObjectsAndRefreshElement
* Compiling Tests
refined test name is: testGetObjectsAndRefreshElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Queue queue = new Queue();
Vector arg0 = queue.getObjects();
queue.refreshElement(arg0);
int peakNumberItems = queue.getPeakNumberItems();
assertFalse(queue.isEmpty());
assertEquals(1, peakNumberItems);


** It was a parseable test case! 
refined test name is: testRefreshElementAddsOneItemToQueue
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:46.715 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:46.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:46.805 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:46.807 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:46.881 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:23:46.883 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:46.980 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:46.987 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:47.073 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:47.075 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:47.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:47.414 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:47.531 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:47.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:23:47.660 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:47.666 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:47.810 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:47.813 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:47.910 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:47.912 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:47.985 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:23:47.987 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:48.355 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:48.358 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:48.444 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:48.446 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:48.541 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:48.546 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:48.620 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:23:48.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:48.683 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:23:48.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:48.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:23:48.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:48.835 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:48.841 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
[MASTER] 04:23:49.051 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:23:49.057 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 7 called: 2 to improve: false
** Write a test suite: 11 called: 3 to improve: false
** Write a test suite: 15 called: 4 to improve: false
** Write a test suite: 16 called: 5 to improve: false
** Write a test suite: 17 called: 6 to improve: false
[MASTER] 04:23:49.333 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:49.336 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
** Write a test suite: 11 called: 4 to improve: false
** Write a test suite: 15 called: 5 to improve: false
** Write a test suite: 17 called: 6 to improve: false
[MASTER] 04:23:49.520 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8321396015149275440.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:23:49.522 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8321396015149275440.jar
* Writing tests to file
* Writing JUnit test case 'Queue_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
** Write a test suite: 11 called: 4 to improve: false
** Write a test suite: 15 called: 5 to improve: false
** Write a test suite: 17 called: 6 to improve: false
* Done!

* Computation finished
