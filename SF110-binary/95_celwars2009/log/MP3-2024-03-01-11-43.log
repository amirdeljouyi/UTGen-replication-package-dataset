* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: MP3
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/95_celwars2009/evosuite-files/evosuite.properties
* Connecting to master process on port 14584
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:43:57.119 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:43:57.122 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:43:57.123 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class MP3
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 54
* Using seed 1709293434395
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 23 / 54
[Progress:>                             2%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            6%] [Cov:==================>                53%][Progress:==>                           8%] [Cov:==================>                53%][Progress:==>                           9%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                53%][Progress:=====>                        18%] [Cov:==================>                53%][Progress:=====>                        19%] [Cov:==================>                53%][Progress:======>                       20%] [Cov:==================>                53%][Progress:======>                       21%] [Cov:==================>                53%][Progress:======>                       21%] [Cov:==================>                53%][Progress:======>                       22%] [Cov:==================>                53%][Progress:=======>                      24%] [Cov:==================>                53%][Progress:=======>                      25%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:==================>                53%][Progress:========>                     27%] [Cov:==================>                53%][Progress:========>                     29%] [Cov:==================>                53%][Progress:=========>                    30%] [Cov:==================>                53%][Progress:=========>                    31%] [Cov:==================>                53%][Progress:=========>                    32%] [Cov:==================>                53%][Progress:=========>                    33%] [Cov:==================>                53%][Progress:==========>                   35%] [Cov:==================>                53%][Progress:==========>                   36%] [Cov:==================>                53%][Progress:===========>                  37%] [Cov:==================>                53%][Progress:===========>                  38%] [Cov:==================>                53%][Progress:===========>                  39%] [Cov:==================>                53%][Progress:============>                 41%] [Cov:==================>                53%][Progress:============>                 42%] [Cov:==================>                53%][Progress:=============>                44%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:==============>               47%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:==================>                53%][Progress:==============>               49%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              52%] [Cov:==================>                53%][Progress:================>             54%] [Cov:==================>                53%][Progress:================>             55%] [Cov:==================>                53%][Progress:================>             56%] [Cov:==================>                53%][Progress:=================>            57%] [Cov:==================>                53%][Progress:=================>            59%] [Cov:==================>                53%][Progress:==================>           61%] [Cov:==================>                53%][Progress:==================>           62%] [Cov:==================>                53%][Progress:===================>          64%] [Cov:==================>                53%][Progress:===================>          66%] [Cov:==================>                53%][Progress:====================>         67%] [Cov:==================>                53%][Progress:====================>         68%] [Cov:==================>                53%][Progress:====================>         69%] [Cov:==================>                53%][Progress:=====================>        71%] [Cov:==================>                53%][Progress:=====================>        72%] [Cov:==================>                53%][Progress:=====================>        73%] [Cov:==================>                53%][Progress:======================>       75%] [Cov:==================>                53%][Progress:======================>       76%] [Cov:==================>                53%][Progress:=======================>      78%] [Cov:==================>                53%][Progress:=======================>      79%] [Cov:==================>                53%][Progress:========================>     80%] [Cov:==================>                53%][Progress:========================>     81%] [Cov:==================>                53%][Progress:========================>     82%] [Cov:==================>                53%][Progress:========================>     82%] [Cov:==================>                53%][Progress:========================>     82%] [Cov:==================>                53%][Progress:========================>     82%] [Cov:==================>                53%][Progress:========================>     82%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:========================>     83%] [Cov:==================>                53%][Progress:=========================>    84%] [Cov:==================>                53%][Progress:=========================>    84%] [Cov:==================>                53%][Progress:=========================>    84%] [Cov:==================>                53%][Progress:=========================>    84%] [Cov:==================>                53%][Progress:=========================>    85%] [Cov:==================>                53%][Progress:=========================>    86%] [Cov:==================>                53%][Progress:=========================>    86%] [Cov:==================>                53%][Progress:==========================>   87%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:==================>                53%][Progress:==========================>   88%] [Cov:==================>                53%][Progress:==========================>   89%] [Cov:==================>                53%][Progress:==========================>   89%] [Cov:==================>                53%][Progress:===========================>  90%] [Cov:==================>                53%][Progress:===========================>  90%] [Cov:==================>                53%][Progress:===========================>  91%] [Cov:==================>                53%][Progress:===========================>  91%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  92%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:===========================>  93%] [Cov:==================>                53%][Progress:============================> 94%] [Cov:==================>                53%][Progress:============================> 94%] [Cov:==================>                53%][Progress:============================> 94%] [Cov:==================>                53%][Progress:============================> 94%] [Cov:==================>                53%][Progress:============================> 94%] [Cov:==================>                53%][Progress:============================> 94%] [Cov:==================>                53%][Progress:============================> 95%] [Cov:==================>                53%][Progress:============================> 96%] [Cov:==================>                53%][Progress:=============================>98%] [Cov:==================>                53%][Progress:=============================>99%] [Cov:==================>                53%][Progress:==============================100%] [Cov:==================>                53%][Progress:==============================100%] [Cov:==================>                53%]
* Search finished after 101s and 122 generations, 32792 statements, best individual has fitness: 38.0
* Generated before the refinement 1 tests with total length 2
statement is: MP3(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class MP3
statement code is: MP3 mP3_ = new MP3("3]]F[Q)i{1SY[iu@s:!")
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: mP3_.run()
test data is: MP3 mP3_ = new MP3("3]]F[Q)i{1SY[iu@s:!");
mP3_.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MP3 mP3_ = new MP3("song1.mp3");
        mP3_.run();
    }
}
statement is: MP3 mP3_ = new MP3("song1.mp3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mP3_.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mP3_.run() target is: mP3_ method is: run()
source statement: MP3(Ljava/lang/String;)V callee: VariableReference: Statement 0, type MP3index is: 1
Matched Method is: run()V
TestCase is: String string = "song1.mp3";
MP3 mP3_ = new MP3(string);
((MP3) string).run();

* test suite isTestSuite: 2
Test 0: 
MP3 mP3_ = new MP3("3]]F[Q)i{1SY[iu@s:!");
mP3_.run();
Test 1: 
MP3 mP3_ = new MP3("song1.mp3");
((MP3)"song1.mp3").run();


* Generated after the refinement and before minimization 2 tests with total length 4
* test suite isTestSuite: 2
Test 0: 
MP3 mP3_ = new MP3("3]]F[Q)i{1SY[iu@s:!");
mP3_.run();
Test 1: 
MP3 mP3_ = new MP3("song1.mp3");
((MP3)"song1.mp3").run();


* Minimizing test suite
* test suite isTestSuite: 1
Test 0: 
MP3 mP3_ = new MP3("3]]F[Q)i{1SY[iu@s:!");
mP3_.run();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 18%
* Total number of goals: 11
* Number of covered goals: 2
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 47%
* Total number of goals: 30
* Number of covered goals: 14
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 11
* Number of covered goals: 2
* Generated 1 tests with total length 2
* Resulting test suite's coverage: 54% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MP3 mP3_ = new MP3("3]]F[Q)i{1SY[iu@s:!");
mP3_.run();
assertFalse(mP3_.isDaemon());


** It was a parseable test case! 
refined test name is: testMP3ShouldNotBeADaemonAfterRun
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:45:53.429 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar3741752338894605490.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:45:53.484 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3741752338894605490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:45:54.277 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar3741752338894605490.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:45:54.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3741752338894605490.jar
* Writing tests to file
* Writing JUnit test case 'MP3_ESTest' to evosuite-tests
* Done!

* Computation finished
